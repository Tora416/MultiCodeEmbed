{"target":"0x03BB","func":"#include <iostream>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nint get_worng_pos(string num) {\n  int pos = -1;\n  for (auto i = num.begin(); i != num.end();) {\n    ++pos;\n    auto c = *i;\n    ++i;\n    if (c > *i && i != num.end()) {\n      return pos;\n    }\n  }\n  return -1;\n}\n\nint main() {\n  int case_num;\n  cin >> case_num;\n  for (int case_it = 0; case_it < case_num;) {\n    ++case_it;\n    string st;\n    cin >> st;\n    stringstream ss;\n    long long ans;\n    int pos = get_worng_pos(st);\n    while (pos != -1) {\n      st[pos] = st[pos] - 1;\n      for (auto i = pos + 1; i < st.length(); ++i) {\n        st[i] = '9';\n      }\n      pos = get_worng_pos(st);\n    }\n    ss << st;\n    ss >> ans;\n    cout << \"Case #\" << case_it << \": \" << ans << endl;\n  }\n}\n"}
{"target":"0x03BB","func":"#include <iostream>\n#include <queue>\nusing namespace std;\n\nint main() {\n  int nCase;\n  cin >> nCase;\n  for (int iCase = 1; iCase <= nCase; ++iCase) {\n    long long n, k;\n    cin >> n >> k;\n    priority_queue<long long> bath_len;\n    bath_len.push(n);\n    for (int i = 1; i < k; ++i) {\n      long long max_bath = bath_len.top();\n      if (max_bath == 0) {\n        break;\n      }\n      bath_len.pop();\n      --max_bath;\n      bath_len.push(max_bath >> 1);\n      bath_len.push((max_bath >> 1) + (max_bath & 1));\n    }\n    long long last_bath = bath_len.top();\n    if (last_bath > 0) {\n      --last_bath;\n    }\n    long long max_ans = (last_bath >> 1) + (last_bath & 1);\n    long long min_ans = (last_bath >> 1);\n    cout << \"Case #\" << iCase << \": \" << max_ans << \" \" << min_ans << endl;\n    while (!bath_len.empty()) {\n      bath_len.pop();\n    }\n  }\n}\n"}
{"target":"0x03BB","func":"#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  int nCase;\n  cin >> nCase;\n  for (int iCase = 0; iCase < nCase;) {\n    ++iCase;\n    cout << \"Case #\" << iCase << \": \";\n    string st;\n    int ans = 0, k;\n    cin >> st >> k;\n    for (int i = 0; i < st.length() - k + 1; ++i) {\n      if (st[i] == '-') {\n        for (int j = 0; j < k; ++j) {\n          st[i + j] = (st[i + j] == '+') ? '-' : '+';\n        }\n        ++ans;\n      }\n    }\n    bool possible = true;\n    for (auto i = st.begin(); i != st.end(); ++i) {\n      if (*i == '-') {\n        possible = false;\n        break;\n      }\n    }\n    if (possible) {\n      cout << ans << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n}\n"}
{"target":"0x03BB","func":"#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nbool inRange(int e, int d, int x) {\n  return (!(e * d * 1.1 < x || e * d * 0.9 > x));\n}\n\nint main() {\n  int T;\n  cin >> T;\n  double eps = 0.000001;\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    int ans = 0;\n    int n, p;\n    cin >> n >> p;\n    int a[100];\n    for (int i = 0; i < n; ++i) {\n      cin >> a[i];\n    }\n    int b[100][100];\n    int max_p = 0;\n    int ptr[100];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        cin >> b[i][j];\n        max_p = max(max_p, b[i][j] \/ a[i] + 1);\n      }\n      ptr[i] = 0;\n      while (ptr[i] < p && b[i][ptr[i]] < a[i] * 0.9) {\n        ++ptr[i];\n      }\n      sort(b[i], b[i] + p);\n    }\n    for (int i = 1; i <= max_p; ++i) {\n      int ptr_backup[100];\n      while (true) {\n        bool f = false, canDo = true;\n        for (int j = 0; j < n; ++j) {\n          ptr_backup[j] = ptr[j];\n          if (ptr[j] >= p) {\n            f = true;\n            break;\n          }\n          while (ptr[j] < p && b[j][ptr[j]] < a[j] * i * 0.9) {\n            ++ptr[j];\n          }\n          if (ptr[j] < p && !(b[j][ptr[j]] > a[j] * i * 1.1)) {\n            ++ptr[j];\n          } else {\n            canDo = false;\n          }\n        }\n        if (f) {\n          break;\n        }\n        if (canDo) {\n          ++ans;\n        } else {\n          for (int k = 0; k <= n; ++k) {\n            ptr[k] = ptr_backup[k];\n          }\n          break;\n        }\n      }\n    }\n    cout << \"Case #\" << iCase << \": \" << ans << endl;\n  }\n}\n"}
{"target":"0x03BB","func":"#include <iostream>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    int n, m;\n    cin >> n >> m;\n    char cake[30][30];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        cin >> cake[i][j];\n        if (cake[i][j] == '?' && j > 0 && cake[i][j - 1] != '?') {\n          cake[i][j] = cake[i][j - 1];\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = m - 1; j >= 0; --j) {\n        if (cake[i][j] == '?' && j < m - 1 && cake[i][j + 1] != '?') {\n          cake[i][j] = cake[i][j + 1];\n        }\n      }\n    }\n    for (int j = 0; j < m; ++j) {\n      for (int i = 0; i < n; ++i) {\n        if (cake[i][j] == '?' && i > 0 && cake[i - 1][j] != '?') {\n          cake[i][j] = cake[i - 1][j];\n        }\n      }\n    }\n    for (int j = 0; j < m; ++j) {\n      for (int i = n - 1; i >= 0; --i) {\n        if (cake[i][j] == '?' && i < n - 1 && cake[i + 1][j] != '?') {\n          cake[i][j] = cake[i + 1][j];\n        }\n      }\n    }\n    cout << \"Case #\" << iCase << \":\" << endl;\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        cout << cake[i][j];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"0x03BB","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int nCase;\n  cin >> nCase;\n  for (int iCase = 1; iCase <= nCase; ++iCase) {\n    int d, n;\n    cin >> d >> n;\n    double t = 0;\n    for (int i = 0; i < n; ++i) {\n      int x, y;\n      cin >> x >> y;\n      x = d - x;\n      t = max(t, (double)x \/ (double)y);\n    }\n    printf(\"Case #%d: %.6lf\\n\", iCase, (double)d \/ (double)t);\n  }\n}\n"}
{"target":"0x03BB","func":"#include <iostream>\nusing namespace std;\n\nint main() {\n  int nCase;\n  cin >> nCase;\n  for (int iCase = 1; iCase <= nCase; ++iCase) {\n    int n, r, b, y, g, o, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    r -= g;\n    y -= v;\n    b -= o;\n    if (r < 0 || y < 0 || b < 0 || (r == 0 && g > 0 && y + b > 0) ||\n        (y == 0 && v > 0 && r + b > 0) || (b == 0 && o > 0 && r + y > 0)) {\n      cout << \"Case #\" << iCase << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n    if (r + y < b || r + b < y || b + y < r) {\n      cout << \"Case #\" << iCase << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n    char c[3];\n    int cnt[3];\n    if (r > y && r > b) {\n      c[0] = 'R';\n      cnt[0] = r;\n      if (y > b) {\n        c[1] = 'Y';\n        cnt[1] = y;\n        c[2] = 'B';\n        cnt[2] = b;\n      } else {\n        c[1] = 'B';\n        cnt[1] = b;\n        c[2] = 'Y';\n        cnt[2] = y;\n      }\n    } else if (y > b) {\n      c[0] = 'Y';\n      cnt[0] = y;\n      if (r > b) {\n        c[1] = 'R';\n        cnt[1] = r;\n        c[2] = 'B';\n        cnt[2] = b;\n      } else {\n        c[1] = 'B';\n        cnt[1] = b;\n        c[2] = 'R';\n        cnt[2] = r;\n      }\n    } else {\n      c[0] = 'B';\n      cnt[0] = b;\n      if (r > y) {\n        c[1] = 'R';\n        cnt[1] = r;\n        c[2] = 'Y';\n        cnt[2] = y;\n      } else {\n        c[1] = 'Y';\n        cnt[1] = y;\n        c[2] = 'R';\n        cnt[2] = r;\n      }\n    }\n    int lc = cnt[1] + cnt[2] - cnt[0];\n    char ans[10000];\n    for (int i = 0; i < lc; ++i) {\n      ans[3 * i] = c[0];\n      ans[3 * i + 1] = c[1];\n      ans[3 * i + 2] = c[2];\n    }\n    int l = lc * 3;\n    for (int i = 0; i < cnt[1] - lc; ++i) {\n      ans[l + i * 2] = c[0];\n      ans[l + i * 2 + 1] = c[1];\n    }\n    l += (cnt[1] - lc) * 2;\n    for (int i = 0; i < cnt[2] - lc; ++i) {\n      ans[l + i * 2] = c[0];\n      ans[l + i * 2 + 1] = c[2];\n    }\n    cout << \"Case #\" << iCase << \": \";\n    for (int i = 0; i < b + y + r; ++i) {\n      if (ans[i] == 'R' && g > 0) {\n        while (g--) {\n          cout << \"RG\";\n        }\n      }\n      if (ans[i] == 'Y' && v > 0) {\n        while (v--) {\n          cout << \"YV\";\n        }\n      }\n      if (ans[i] == 'B' && o > 0) {\n        while (o--) {\n          cout << \"BO\";\n        }\n      }\n      cout << ans[i];\n    }\n    while (g-- > 0) {\n      cout << \"RG\";\n    }\n    while (v-- > 0) {\n      cout << \"YV\";\n    }\n    while (o-- > 0) {\n      cout << \"BO\";\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"0x03BB","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <queue>\nusing namespace std;\n\nconst int N = 105;\ndouble e[N], s[N], d[N][N], t[N][N], r[N][N];\nint main() {\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d:\", ca++);\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%lf%lf\", &e[i], &s[i]);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%lf\", &d[i][j]);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        for (int k = 0; k < n; k++)\n          if (i != k && i != j && k != j && d[j][i] != -1 && d[i][k] != -1) {\n            double mi = d[j][i] + d[i][k];\n            if (d[j][k] < 0 || d[j][k] > mi)\n              d[j][k] = mi;\n          }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (i != j && d[i][j] != -1 && d[i][j] <= e[i])\n          t[i][j] = d[i][j] \/ s[i];\n        else\n          t[i][j] = -1;\n      }\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        r[i][j] = t[i][j];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        for (int k = 0; k < n; k++)\n          if (i != k && i != j && k != j && r[j][i] != -1 && r[i][k] != -1) {\n            double mi = r[j][i] + r[i][k];\n            if (r[j][k] < 0 || r[j][k] > mi)\n              r[j][k] = mi;\n          }\n      }\n    }\n    for (int i = 0; i < m; i++) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      x--;\n      y--;\n      printf(\" %.9lf\", r[x][y]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long int lli;\n\nint tc;\n\nlli ctdy(string input) {\n  lli dp[18][2][10];\n  memset(dp, 0, sizeof(dp));\n  for (int i = '0'; i <= input[0]; i++) {\n    if (i != input[0]) {\n      dp[0][0][i - '0'] = 1;\n    } else {\n      dp[0][1][i - '0'] = 1;\n    }\n  };\n  for (int i = 0; i < input.size() - 1; i++) {\n    for (int j = 0; j <= 9; j++) {\n      for (int k = j; k <= 9; k++) {\n        dp[i + 1][0][k] += dp[i][0][j];\n      }\n    }\n    for (int j = 0; j <= 9; j++) {\n      if (dp[i][1][j] == 0)\n        continue;\n      for (int k = j; k <= input[i + 1] - '0'; k++) {\n        if (k != input[i + 1] - '0') {\n          dp[i + 1][0][k] += dp[i][1][j];\n        } else {\n          dp[i + 1][1][k] += dp[i][1][j];\n        }\n      }\n    }\n  }\n  lli sum = 0;\n  for (int i = 0; i <= 9; i++) {\n    sum += dp[input.size() - 1][0][i];\n    sum += dp[input.size() - 1][1][i];\n  }\n  return sum;\n}\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    char c[30];\n    lli num;\n    string s;\n    scanf(\"%s\", c);\n    sscanf(c, \"%lld\", &num);\n    s = c;\n    lli goal = ctdy(s);\n    \/\/ cout << num << \" \";\n    \/\/ cout << goal << endl;\n    lli ub = num, lb = 0, m;\n    while (ub - lb > 1) {\n      m = (ub + lb) \/ 2;\n      num = m;\n      sprintf(c, \"%lld\", num);\n      s = c;\n      if (ctdy(s) != goal) {\n        lb = m;\n      } else {\n        ub = m;\n      }\n    }\n    \/\/ cout << ub << \" \" << lb << endl;\n    printf(\"Case #%d: %lld\\n\", t, ub);\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long int lli;\ntypedef pair<lli, lli> pii;\n\nint tc;\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    int n, k;\n    cin >> n >> k;\n    priority_queue<int> pq;\n    pq.push(n);\n    int y, z;\n    for (int i = 0; i < k; i++) {\n      int t = pq.top() - 1;\n      pq.pop();\n      y = t \/ 2 + (t % 2);\n      z = t \/ 2;\n      pq.push(y);\n      pq.push(z);\n    }\n    printf(\"Case #%d: %d %d\\n\", t, y, z);\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint tc;\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    string s;\n    int k, fl = 0;\n    cin >> s >> k;\n    for (int i = 0; i < s.size() - k + 1; i++) {\n      if (s[i] == '-') {\n        \/\/ cout << \"Flip at \" << i << endl;\n        fl++;\n        for (int j = i; j < i + k; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n      }\n    }\n    int f = 1;\n    for (int i = s.size() - k + 1; i < s.size(); i++) {\n      if (s[i] == '-')\n        f = 0;\n    }\n    if (f == 1) {\n      printf(\"Case #%d: %d\\n\", t, fl);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t, fl);\n    }\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long int lli;\n\nint tc;\nint n, p;\nlli r[1009];\n\nlli eleven(lli x) { return x * 11 \/ 10; }\n\nlli ninety(lli x) {\n  lli y = x * 9 \/ 10;\n  if (x % 10 != 0) {\n    y += 1;\n  }\n  return y;\n}\n\nbool inrange(int ingredient, lli number, lli servings) {\n  lli x = r[ingredient] * servings;\n  return (ninety(x) <= number) && (number <= eleven(x));\n}\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    lli tmp;\n    priority_queue<lli, vector<lli>, greater<lli>> q[1009];\n    memset(r, -1, sizeof(r));\n    cin >> n >> p;\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> tmp;\n        q[i].push(tmp);\n      }\n    }\n    lli ans = 0;\n    lli cansendserving = 1;\n    lli curservingsize = 1;\n    lli nextservingsize = 1;\n    while (1) {\n      \/\/ if can send serving\n      bool okay = 1;\n      cansendserving = 1;\n      for (int i = 0; i < n; i++) {\n        if (q[i].empty()) {\n          okay = 0;\n          break;\n        }\n        if (!inrange(i, q[i].top(), curservingsize)) {\n          cansendserving = 0;\n        }\n      }\n\n      if (!okay) {\n        break;\n      }\n\n      if (cansendserving) {\n        \/\/ cout << \"Send\\n\";\n        ans++;\n        for (int i = 0; i < n; i++) {\n          q[i].pop();\n        }\n      } else {\n        \/\/ find next serving size to make\n        nextservingsize = 9999999999;\n        for (int i = 0; i < n; i++) {\n          if (q[i].empty())\n            break;\n          nextservingsize = min(nextservingsize, q[i].top() \/ eleven(r[i]));\n        }\n        if (nextservingsize <= curservingsize) {\n          nextservingsize = curservingsize + 1;\n        }\n        curservingsize = nextservingsize;\n        \/\/ flush\n        for (int i = 0; i < n; i++) {\n          while (!q[i].empty() && q[i].top() < ninety(r[i] * curservingsize)) {\n            q[i].pop();\n          }\n          if (q[i].empty()) {\n            okay = 0;\n            break;\n          }\n        }\n        if (!okay) {\n          break;\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint tc;\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    int r, c;\n    cin >> r >> c;\n    char cake[30][30];\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cin >> cake[i][j];\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      \/\/ sweep left to right\n      for (int j = 1; j < c; j++) {\n        if (cake[i][j - 1] != '?' && cake[i][j] == '?') {\n          cake[i][j] = cake[i][j - 1];\n        }\n      }\n      \/\/ sweep right to left\n      for (int j = c - 2; j >= 0; j--) {\n        if (cake[i][j + 1] != '?' && cake[i][j] == '?') {\n          cake[i][j] = cake[i][j + 1];\n        }\n      }\n    }\n    for (int i = 1; i < r; i++) {\n      \/\/ sweep up to down\n      if (cake[i - 1][0] != '?' && cake[i][0] == '?') {\n        for (int j = 0; j < c; j++) {\n          cake[i][j] = cake[i - 1][j];\n        }\n      }\n    }\n    for (int i = r - 1; i >= 0; i--) {\n      \/\/ sweep down to up\n      if (cake[i + 1][0] != '?' && cake[i][0] == '?') {\n        for (int j = 0; j < c; j++) {\n          cake[i][j] = cake[i + 1][j];\n        }\n      }\n    }\n    cout << \"Case #\" << t << \":\\n\";\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cout << cake[i][j];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<lli, lli> pii;\ntypedef double dbl;\n\nint tc;\n\nlli d, n, a, b;\nvector<pii> ks;\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    ks.clear();\n    cin >> d >> n;\n    dbl lb, ub, ex;\n    lb = 0;\n    ub = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      ks.push_back(pii(a, b));\n      if (ub == 0) {\n        if (a != d) {\n          ub = d * b \/ (d - a + 0.0);\n        }\n      } else if (a != d) {\n        ub = min(ub, d * b \/ (d - a + 0.0));\n      }\n    }\n    while (abs(ub - lb) > 0.0000005f) {\n      ex = (ub + lb) \/ 2;\n      bool f = true;\n      \/\/ cout << \"Testing \" << ex << endl;\n      for (int i = 0; i < n; i++) {\n        \/\/ cout << \"Horse \" << i << \" speed \" << ks[i].second << endl;\n        if (ks[i].second >= ex)\n          continue;\n        \/\/ cout << \"Comparative speed: \" << ex - ks[i].second << endl;\n        \/\/ cout << \"Intersects at \" << ks[i].first \/ (ex - ks[i].second) * ex <<\n        \/\/ endl;\n        if (ks[i].first \/ (ex - ks[i].second) * ex < d) {\n          f = false;\n        }\n      }\n      if (f) {\n        lb = ex;\n      } else {\n        ub = ex;\n      }\n    }\n    cout << fixed << setprecision(7) << \"Case #\" << t << \": \" << ub << endl;\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstruct AugPath {\n  int A, B;              \/\/ size of left, right groups\n  vector<vector<int>> G; \/\/ size A\n  vector<bool> visited;  \/\/ size A\n  vector<int> P;         \/\/ size B\n\n  AugPath(int _A, int _B) : A(_A), B(_B), G(_A), P(_B, -1) {}\n\n  void AddEdge(int a, int b) { \/\/ a from left, b from right\n    G[a].push_back(b);\n  }\n  bool Aug(int x) {\n    if (visited[x])\n      return 0;\n    visited[x] = 1;\n    \/* Greedy heuristic *\/\n    for (auto it : G[x]) {\n      if (P[it] == -1) {\n        P[it] = x;\n        return 1;\n      }\n    }\n    for (auto it : G[x]) {\n      if (Aug(P[it])) {\n        P[it] = x;\n        return 1;\n      }\n    }\n    return 0;\n  }\n  int MCBM() {\n    int matchings = 0;\n    for (int i = 0; i < A; ++i) {\n      visited.resize(A, 0);\n      matchings += Aug(i);\n      visited.clear();\n    }\n    return matchings;\n  }\n  vector<pair<int, int>> GetMatchings() {\n    vector<pair<int, int>> matchings;\n    for (int i = 0; i < B; ++i) {\n      if (P[i] != -1)\n        matchings.emplace_back(P[i], i);\n    }\n    return matchings;\n  }\n};\n\nint tc;\n\nint d[7][7] = {\n    \/\/     R O Y G B V\n    {0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 0}, \/\/ R\n    {0, 0, 0, 0, 0, 1, 0},                        \/\/ O\n    {0, 1, 0, 0, 0, 1, 1},                        \/\/ Y\n    {0, 1, 0, 0, 0, 0, 0},                        \/\/ G\n    {0, 1, 1, 1, 0, 0, 0},                        \/\/ B\n    {0, 0, 0, 1, 0, 0, 0},                        \/\/ V\n};\n\nchar color_dict[7] = {\n    '-', 'R', 'O', 'Y', 'G', 'B', 'V',\n};\n\nint next_node[1009], visited[1009];\nint c[7];\nint color[1009], adj[1009][1009];\nvector<string> stables;\n\nstring dfs(int node, string cur_string) {\n  if (visited[node] == 1) {\n    return cur_string;\n  }\n  visited[node] = 1;\n  cur_string = cur_string + color_dict[color[node]];\n  return dfs(next_node[node], cur_string);\n}\n\nstring merge(string a, string b) {\n  bool found = false;\n  int x = 0, y = 0;\n  for (int i = 0; i < a.size(); i++) {\n    for (int j = 0; j < b.size(); j++) {\n      if (a[i] == b[j]) {\n        x = i;\n        y = j;\n        found = true;\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  if (!found) {\n    return \"\";\n  }\n  \/\/ a[x] == b[y];\n  string c = \"\";\n  for (int i = 0; i < b.size(); i++) {\n    c += b[(y + i) % b.size()];\n  }\n  string rt = \"\";\n  for (int i = 0; i < x; i++) {\n    rt += a[i];\n  }\n  rt += c;\n  for (int i = x; i < a.size(); i++) {\n    rt += a[i];\n  }\n  return rt;\n}\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    int n;\n    cin >> n;\n    int counter = 0;\n    c[0] = 0;\n    for (int i = 1; i < 7; i++) {\n      cin >> c[i];\n      c[i] += c[i - 1];\n      for (int j = c[i - 1]; j < c[i]; j++) {\n        color[j] = i;\n      }\n    }\n    AugPath mcbm(n, n);\n    memset(adj, 0, sizeof(adj));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        adj[i][j] = d[color[i]][color[j]];\n        if (adj[i][j] == 1) {\n          mcbm.AddEdge(i, j);\n        }\n      }\n    }\n    auto matches = mcbm.MCBM();\n    \/\/ cout << matches << \" matches out of \" << n << endl;\n    if (matches != n) {\n      cout << \"Case #\" << t << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    auto match = mcbm.GetMatchings();\n\n    memset(next_node, -1, sizeof(next_node));\n    memset(visited, -1, sizeof(visited));\n\n    for (auto i : match) {\n      next_node[i.first] = i.second;\n      \/\/ cout << i.first << \" \" << i.second << endl;\n    }\n    stables.clear();\n    for (int i = 0; i < n; i++) {\n      if (next_node[i] != -1 && visited[i] == -1) {\n        stables.push_back(dfs(i, \"\"));\n      }\n    }\n\n    for (int i = 0; i < stables.size(); i++) {\n      for (int j = 1; j < stables.size(); j++) {\n        string test = merge(stables[0], stables[j]);\n        if (test != \"\") {\n          stables[0] = test;\n          stables[j] = \"\";\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << stables[0] << endl;\n  }\n}\n"}
{"target":"4yn","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long int lli;\n\nint tc;\n\nint main() {\n  cin >> tc;\n  for (int t = 1; t <= tc; t++) {\n    int n, q;\n    cin >> n >> q;\n    int e[109], s[109];\n    for (int i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n    int adj[109][109];\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        cin >> adj[i][j];\n      }\n    }\n    int dist[109];\n    \/\/ distance to next city for small testcases\n    for (int i = 1; i < n; i++) {\n      dist[i] = adj[i][i + 1];\n    }\n    cout << \"Case #\" << t << \": \";\n    for (int nq = 0; nq < q; nq++) {\n      int u, v;\n      cin >> u >> v;\n      double time_taken[109];\n      for (int i = 1; i <= n; i++) {\n        time_taken[i] = -1;\n      }\n      time_taken[1] = 0;\n      for (int i = 1; i < n; i++) {\n        \/\/ simulate going to the next possible city with the horse at city i\n        \/\/ cout << \"Using horse from \" << i << endl;\n        int dist_left = e[i];\n        int speed = s[i];\n        double cur_time = time_taken[i];\n        for (int j = i + 1; j <= n; j++) {\n          \/\/ move dist[j-1]\n          dist_left -= dist[j - 1];\n          if (dist_left < 0)\n            break;\n          cur_time += (dist[j - 1] + 0.0) \/ s[i];\n          \/\/ cout << \"reach city \" << j << \" at \" << cur_time << endl;\n          if (time_taken[j] < 0) {\n            time_taken[j] = cur_time;\n          } else {\n            time_taken[j] = min(time_taken[j], cur_time);\n          }\n        }\n      }\n      cout << fixed << setprecision(7) << time_taken[v] << endl;\n    }\n  }\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\nlld A[23][12], B[700005], C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nlld countDig(lld n) {\n  lld ans = 0;\n  while (n > 0) {\n    ans++;\n    n \/= 10;\n  }\n  return ans;\n}\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  for (long long int i = (1); i <= (9); ++i)\n    A[1][i] = i;\n  for (long long int i = (2); i <= (18); ++i)\n    for (long long int j = (1); j <= (9); ++j)\n      A[i][j] = A[i - 1][j] * 10 + j;\n  B[0] = 1;\n  for (long long int i = (1); i <= (18); ++i)\n    B[i] = B[i - 1] * 10;\n  A[19][1] = A[18][1] * 10 + 1;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld\", &n);\n    t = countDig(n);\n    if (n < A[t][1])\n      printf(\"%lld\\n\", A[t - 1][9]);\n    else {\n      curr = 0;\n      a = 1;\n      bool flag;\n      for (long long int j = (t); j >= (1); --j) {\n        flag = false;\n        for (long long int i = (a); i <= (9); ++i) {\n          val = curr + A[j][i];\n          if (val > n) {\n            curr = curr + (i - 1) * B[j - 1];\n            a = i - 1;\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          curr = curr + 9 * B[j - 1];\n          a = 9;\n        }\n      }\n      printf(\"%lld\\n\", curr);\n    }\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\nlld A[23][12], B[700005], C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nlld countDig(lld n) {\n  lld ans = 0;\n  while (n > 0) {\n    ans++;\n    n \/= 10;\n  }\n  return ans;\n}\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld%lld\", &n, &k);\n    multiset<PA> S;\n    S.insert({-(n - 1) \/ 2, -n \/ 2});\n    PA pio;\n    for (long long int i = (1); i <= (k - 1); ++i) {\n      pio = *(S.begin());\n      S.erase(S.begin());\n      if (pio.first != 0)\n        S.insert({-(-pio.first - 1) \/ 2, pio.first \/ 2});\n      if (pio.second != 0)\n        S.insert({-(-pio.second - 1) \/ 2, pio.second \/ 2});\n    }\n    pio = *(S.begin());\n    printf(\"%lld %lld\\n\", -pio.second, -pio.first);\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\nlld A[700005], B[700005], C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    string S;\n    cin >> S;\n    scanf(\"%lld\", &k);\n    n = S.size();\n    for (long long int i = (0); i <= (n - 1); ++i)\n      A[i] = 0;\n    curr = 0;\n    ans = 0;\n    p = 1;\n    for (long long int i = (0); i <= (n - 1); ++i) {\n      curr += A[i];\n      t = (curr + (S[i] == '+')) % 2;\n      if (t != 1) {\n        if (i + k - 1 >= n)\n          p = 0;\n        A[i + k]++;\n        curr++;\n        ans++;\n      }\n    }\n    if (p == 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ndouble tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  double diff = 1.0 * (newt - oldt) \/ CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\nstring S[700005];\nlld A[700005], B[700005], Quan[1003][1003];\ndouble C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nbool valid(lld n) {\n  lld t, low, high, mid;\n  double curr, val, l = 0.9 - EPS, h = 1.10 + EPS;\n  low = 1;\n  high = Quan[1][B[1]];\n  \/\/ rep(i,1,n) Error3(i,B[i],Quan[i][B[i]]);\n  while (low <= high) {\n    mid = low + (high - low) \/ 2;\n    t = 1;\n    for (long long int i = (1); i <= (n); ++i) {\n      val = A[i] * mid;\n      curr = Quan[i][B[i]] \/ val;\n      \/\/ if(mid==1) Error4(A[i],B[i],val,curr);\n      if (curr < l)\n        t = 2;\n      if (curr > h)\n        t = 3;\n    }\n    \/\/ Error2(mid,t);\n    if (t == 1)\n      return true;\n    if (t == 3)\n      low = mid + 1;\n    if (t == 2)\n      high = mid - 1;\n  }\n  return false;\n}\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld%lld\", &n, &p);\n    for (long long int i = (1); i <= (n); ++i)\n      scanf(\"%lld\", &A[i]);\n    ans = 0;\n    for (long long int i = (1); i <= (n); ++i)\n      B[i] = 1;\n    for (long long int i = (1); i <= (n); ++i)\n      for (long long int j = (1); j <= (p); ++j)\n        scanf(\"%lld\", &Quan[i][j]);\n    for (long long int i = (1); i <= (n); ++i)\n      sort(Quan[i] + 1, Quan[i] + p + 1);\n    while (true) {\n      if (valid(n)) {\n        ans++;\n        for (long long int i = (1); i <= (n); ++i)\n          B[i]++;\n      } else {\n        for (long long int i = (1); i <= (n); ++i)\n          C[i] = Quan[i][B[i]] * 1.0 \/ A[i];\n        x = 1;\n        for (long long int i = (2); i <= (n); ++i)\n          if (C[i] < C[x])\n            x = i;\n        B[x]++;\n      }\n      t = 0;\n      for (long long int i = (1); i <= (n); ++i)\n        t += (B[i] > p);\n      if (t > 0)\n        break;\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ndouble tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  double diff = 1.0 * (newt - oldt) \/ CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\nstring S[700005];\nlld A[700005], B[700005], C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld:\\n\", testC);\n    scanf(\"%lld%lld\", &r, &c);\n    for (long long int i = (0); i <= (r - 1); ++i)\n      cin >> S[i];\n    for (long long int i = (0); i <= (r - 1); ++i)\n      A[i] = 0;\n    for (long long int i = (0); i <= (r - 1); ++i) {\n      x = -1;\n      for (long long int j = (0); j <= (c - 1); ++j) {\n        if (S[i][j] != '?') {\n          x = j;\n          break;\n        }\n      }\n      if (x != -1) {\n        A[i] = 1;\n        for (long long int j = (0); j <= (c - 1); ++j) {\n          if (S[i][j] == '?') {\n            S[i][j] = S[i][x];\n          } else\n            x = j;\n        }\n      }\n    }\n    y = -1;\n    for (long long int i = (0); i <= (r - 1); ++i) {\n      if (A[i] == 1) {\n        y = i;\n        break;\n      }\n    }\n    for (long long int i = (0); i <= (r - 1); ++i) {\n      if (A[i] == 0) {\n        for (long long int j = (0); j <= (c - 1); ++j)\n          S[i][j] = S[y][j];\n      } else\n        y = i;\n    }\n    for (long long int i = (0); i <= (r - 1); ++i)\n      cout << S[i] << endl;\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ndouble tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  double diff = 1.0 * (newt - oldt) \/ CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\n\/\/ lld A[lim],B[lim],C[lim];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, v, z, t, curr, prev,\n      sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld%lld\", &d, &n);\n    double ans = 0;\n    for (long long int i = (1); i <= (n); ++i) {\n      scanf(\"%lld%lld\", &a, &b);\n      ans = max(ans, (d - a) * 1.0 \/ b);\n    }\n    printf(\"%lf\\n\", d \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ndouble tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  double diff = 1.0 * (newt - oldt) \/ CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\nlld A[700005], B[700005], C[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\nchar S[1003];\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, u, v, z, t, curr,\n      prev, sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld\", &n);\n    for (long long int i = (1); i <= (6); ++i)\n      scanf(\"%lld\", &A[i]);\n    t = 1;\n    a = A[1];\n    b = A[3];\n    c = A[5];\n    if (a > n \/ 2 || b > n \/ 2 || c > n \/ 2)\n      t = 0;\n    \/\/ if(testC==76) Error4(a,b,c,n);\n    if (n == 1)\n      t = 1;\n    if (t == 0) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    char R, Y, B;\n    R = 'R';\n    Y = 'Y';\n    B = 'B';\n    if (a < b) {\n      swap(a, b);\n      swap(R, Y);\n    }\n    if (b < c) {\n      swap(b, c);\n      swap(Y, B);\n    }\n    if (a < b) {\n      swap(a, b);\n      swap(R, Y);\n    }\n    for (long long int i = (1); i <= (n); ++i)\n      S[i] = 'A';\n    for (lld i = 1; a > 0; i += 2) {\n      S[i] = R;\n      a--;\n    }\n    if (n % 2 == 0)\n      x = n;\n    else\n      x = n - 1;\n    while (b > 0) {\n      S[x] = Y;\n      x -= 2;\n      b--;\n    }\n    for (long long int i = (1); i <= (n); ++i)\n      if (S[i] == 'A')\n        S[i] = B;\n    for (long long int i = (1); i <= (n); ++i)\n      printf(\"%c\", S[i]);\n    \/\/ rep(i,1,n-1) if(S[i]==S[i+1]) Error4(a,b,c,\"fuck\");\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"abhisheksaini","func":"#include <bits\/stdc++.h>\n#include <stdlib.h>\n#include <time.h>\n\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\ntypedef long long int lld;\ndouble tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  double diff = 1.0 * (newt - oldt) \/ CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ntypedef pair<lld, lld> PA;\n\nlld powP(lld a, lld b) {\n  if (b == 0)\n    return 1 % mod;\n  lld k;\n  k = powP(a, b \/ 2);\n  k = k * k % mod;\n  if (b % 2 == 0)\n    return k;\n  else\n    return a * k % mod;\n}\n\nbool bitSet(lld n, lld i) {\n  if ((n & (1LL << i)) != 0)\n    return true;\n  else\n    return false;\n}\n\nlld findGcd(lld a, lld b) {\n  if (a == 0)\n    return b;\n  else\n    return findGcd(b % a, a);\n}\n\n\/\/ inline lld sqr(lld x) { return x * x; }\n\/\/ unordered_map<lld,lld>::iterator it;\n\/\/ std::ios::sync_with_stdio(false);\n\/\/ priority_queue<PA> Q;\n\/\/ lld dp[1<<18];\n\/\/ vector<lld> V[lim];\n\/\/ string S[lim];\ndouble A[700005], B[700005], C[700005], E[700005], S[700005];\n\/\/ unordered_map<lld,lld> M,X;\n\/\/ map<lld,lld> M;\ndouble Dis[103][103], dp[103][103], Query[700005], From[103][103];\n\nint main() {\n  lld T, i, n, m, p, j, l, e, r, b, c, k, q, a, d, w, x, y, u, v, z, t, curr,\n      prev, sum, ans, pos, val, countA, secondMin, indicator;\n  scanf(\"%lld\", &T);\n  for (long long int testC = (1); testC <= (T); ++testC) {\n    printf(\"Case #%lld: \", testC);\n    scanf(\"%lld%lld\", &n, &q);\n    for (long long int i = (1); i <= (n); ++i)\n      scanf(\"%lf%lf\", &E[i], &S[i]);\n    for (long long int i = (1); i <= (n); ++i) {\n      for (long long int j = (1); j <= (n); ++j) {\n        scanf(\"%lf\", &Dis[i][j]);\n        if (Dis[i][j] == -1)\n          Dis[i][j] = mod * 1000000;\n      }\n      Dis[i][i] = 0;\n    }\n    for (long long int k = (1); k <= (n); ++k)\n      for (long long int i = (1); i <= (n); ++i)\n        for (long long int j = (1); j <= (n); ++j)\n          Dis[i][j] = min(Dis[i][j], Dis[i][k] + Dis[k][j]);\n    while (q--) {\n      scanf(\"%lld%lld\", &u, &v);\n    }\n    for (long long int i = (1); i <= (n); ++i)\n      for (long long int j = (i + 1); j <= (n); ++j) {\n        double r = 0;\n        for (long long int k = (i); k <= (j - 1); ++k)\n          r += Dis[k][k + 1];\n        From[i][j] = r;\n      }\n    \/\/ if(testC!=57) continue;\n    \/\/ rep(i,1,n) rep(j,i+1,n) if(Dis[i][j]!=From[i][j]){\n    \/\/     Error3(i,j,\"fuck\");\n    \/\/     Error2(Dis[i][j],From[i][j]);\n    \/\/ }\n    Query[n] = 0;\n    for (long long int i = (n - 1); i >= (1); --i) {\n      Query[i] = mod * 1000000;\n      for (long long int j = (i + 1); j <= (n); ++j)\n        if (E[i] >= From[i][j])\n          Query[i] = min(Query[i], From[i][j] \/ S[i] + Query[j]);\n    }\n    printf(\"%lf\\n\", Query[1]);\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  vector<long long int> v;\n  ll x = 1;\n  for (int i = 1; i <= 19; i++) {\n    v.push_back(x);\n    x = x * 10 + 1;\n  }\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n\n    ll n;\n    cin >> n;\n    ll ans = 0;\n    for (int i = 1; i <= 9; i++) {\n      int sz = v.size();\n      for (int j = sz - 1; j >= 0; j--) {\n        if (v[j] <= n) {\n          n -= v[j];\n          ans += v[j];\n          break;\n        }\n      }\n    }\n    cout << ans;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    ll n, k;\n    cin >> n >> k;\n    ll c = 0, cool;\n    map<ll, ll> m;\n    m[n] = 1;\n    while (1) {\n      map<ll, ll>::iterator it = m.end();\n      it--;\n      ll no = it->first, cnt = it->second;\n      m.erase(it);\n      if (no == 1) {\n        cool = no;\n        break;\n      }\n      if (c + cnt >= k) {\n        cool = no;\n        break;\n      }\n      c += cnt;\n      if (no % 2 == 0) {\n        m[no \/ 2] += cnt;\n        m[no \/ 2 - 1] += cnt;\n      } else {\n        m[no \/ 2] += 2 * cnt;\n      }\n    }\n    cout << (cool) \/ 2 << \" \" << (cool - 1) \/ 2;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.length();\n    int a[100005] = {0};\n    for (int i = 0; i <= n - 1; i++)\n      if (s[i] == '+')\n        a[i] = 1;\n    int cnt = 0;\n    for (int i = 0; i <= n - k; i++) {\n      if (a[i] == 0) {\n        cnt++;\n        for (int j = i; j <= i + k - 1; j++)\n          a[j] = 1 - a[j];\n      }\n    }\n\n    int f = 0;\n    for (int i = 0; i <= n - 1; i++)\n      f += a[i];\n\n    if (f != n)\n      cout << \"IMPOSSIBLE\\n\";\n    else {\n      cout << cnt;\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nbool cmp(pair<int, int> a, pair<int, int> b) {\n  if (a.second != b.second)\n    return a.second < b.second;\n  return a.first < b.first;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    int n, p;\n    cin >> n >> p;\n    map<int, int> m[55];\n    long double lo = 0.9, hi = 1.1;\n    int r[55];\n    for (int i = 0; i <= n - 1; i++)\n      cin >> r[i];\n    vector<pair<int, int>> v[55];\n    for (int i = 0; i <= n - 1; i++) {\n      for (int j = 0; j <= p - 1; j++) {\n        int x;\n        cin >> x;\n        long double y = x;\n        y \/= r[i];\n        long double ri = y \/ lo, le = y \/ hi;\n        \/\/ ol(y);on;\n        long double eps = 1e-9;\n        int lli = -1, rri = -1;\n        for (int ii = max(1, (int)le); ii <= ceil(ri); ii++) {\n          long double l = lo * ii, h = hi * ii;\n          if (y + eps >= l && y - eps <= h) {\n            rri = ii;\n            if (lli == -1)\n              lli = ii;\n          }\n        }\n        \/\/ ol(i);os;o2(lli,rri);on;\n        if (lli != -1)\n          v[i].push_back(make_pair(lli, rri));\n      }\n    }\n    for (int i = 0; i <= n - 1; i++)\n      sort(v[i].begin(), v[i].end(), cmp);\n    int ans = 0;\n    int ptr[55] = {0};\n    for (int ii = 1; ii <= 1000004; ii++) {\n      for (int i = 0; i <= n - 1; i++) {\n        while (1) {\n          if (ptr[i] == v[i].size())\n            break;\n          if (v[i][ptr[i]].second < ii)\n            ptr[i]++;\n          else\n            break;\n        }\n      }\n\n      while (1) {\n        int cool = 0;\n        for (int i = 0; i <= n - 1; i++) {\n          if (ptr[i] == v[i].size())\n            break;\n          if (v[i][ptr[i]].first <= ii && v[i][ptr[i]].second >= ii)\n            cool++;\n          else\n            break;\n        }\n        if (cool != n)\n          break;\n        else {\n          ans++;\n          for (int i = 0; i <= n - 1; i++)\n            ptr[i]++;\n        }\n      }\n    }\n\n    cout << ans;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    int n, m;\n    cin >> n >> m;\n    string s[25];\n    for (int i = 0; i <= n - 1; i++)\n      cin >> s[i];\n    int mnx[26], mxx[26], mny[26], mxy[26];\n    for (int i = 0; i <= 25; i++)\n      mxx[i] = mxy[i] = -1;\n    for (int i = 0; i <= 25; i++)\n      mnx[i] = mny[i] = 1e9;\n    for (int i = 0; i <= n - 1; i++)\n      for (int j = 0; j <= m - 1; j++) {\n        mnx[s[i][j] - 'A'] = min(mnx[s[i][j] - 'A'], i);\n        mxx[s[i][j] - 'A'] = max(mxx[s[i][j] - 'A'], i);\n        mny[s[i][j] - 'A'] = min(mny[s[i][j] - 'A'], j);\n        mxy[s[i][j] - 'A'] = max(mxy[s[i][j] - 'A'], j);\n      }\n\n    for (int ii = 0; ii <= 25; ii++) {\n      if (mxx[ii] == -1)\n        continue;\n      for (int i = mnx[ii]; i <= mxx[ii]; i++)\n        for (int j = mny[ii]; j <= mxy[ii]; j++)\n          s[i][j] = (char)('A' + ii);\n    }\n\n    for (int ii = 0; ii <= 25; ii++) {\n      if (mxx[ii] == -1)\n        continue;\n      for (int j = mny[ii] - 1; j >= 0; j--) {\n        int cool = 0;\n        for (int i = mnx[ii]; i <= mxx[ii]; i++)\n          if (s[i][j] == '?')\n            cool++;\n        if (cool != mxx[ii] - mnx[ii] + 1)\n          break;\n        for (int i = mnx[ii]; i <= mxx[ii]; i++)\n          s[i][j] = (char)('A' + ii);\n        mny[ii] = j;\n      }\n      for (int j = mxy[ii] + 1; j <= m - 1; j++) {\n        int cool = 0;\n        for (int i = mnx[ii]; i <= mxx[ii]; i++)\n          if (s[i][j] == '?')\n            cool++;\n        if (cool != mxx[ii] - mnx[ii] + 1)\n          break;\n        for (int i = mnx[ii]; i <= mxx[ii]; i++)\n          s[i][j] = (char)('A' + ii);\n        mxy[ii] = j;\n      }\n    }\n\n    for (int ii = 0; ii <= 25; ii++) {\n      if (mxy[ii] == -1)\n        continue;\n      for (int i = mnx[ii] - 1; i >= 0; i--) {\n        int cool = 0;\n        for (int j = mny[ii]; j <= mxy[ii]; j++)\n          if (s[i][j] == '?')\n            cool++;\n        if (cool != mxy[ii] - mny[ii] + 1)\n          break;\n        for (int j = mny[ii]; j <= mxy[ii]; j++)\n          s[i][j] = (char)('A' + ii);\n      }\n      for (int i = mxx[ii] + 1; i <= n - 1; i++) {\n        int cool = 0;\n        for (int j = mny[ii]; j <= mxy[ii]; j++)\n          if (s[i][j] == '?')\n            cool++;\n        if (cool != mxy[ii] - mny[ii] + 1)\n          break;\n        for (int j = mny[ii]; j <= mxy[ii]; j++)\n          s[i][j] = (char)('A' + ii);\n      }\n    }\n    cout << \"\\n\";\n    for (int i = 0; i <= n - 1; i++) {\n      for (int j = 0; j <= m - 1; j++) {\n        cout << s[i][j];\n      }\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef vector<vector<ll>> mat;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    int n;\n    ld d;\n    cin >> d >> n;\n    pair<long double, long double> p[1005];\n    for (int i = 0; i <= n - 1; i++)\n      cin >> p[i].first >> p[i].second;\n    sort(p, p + n);\n    long double time[1005];\n    time[n - 1] = (d - p[n - 1].first) \/ p[n - 1].second;\n\n    for (int i = n - 2; i >= 0; i--) {\n      time[i] = max(time[i + 1], (d - p[i].first) \/ p[i].second);\n    }\n    ld ans = d \/ time[0];\n    cout << fixed << setprecision(10) << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef vector<vector<ll>> mat;\n\nconst int MAXN1 = 500000;\nconst int MAXN2 = 500000;\nconst int MAXM = 500001;\n\nint n1, n2, edges, last[MAXN1], prev1[MAXM], head[MAXM];\nint matching[MAXN2], dist[MAXN1], Q[MAXN1];\nbool used[MAXN1], vis[MAXN1];\n\nvoid init(int _n1, int _n2) {\n  n1 = _n1;\n  n2 = _n2;\n  edges = 0;\n  fill(last, last + n1, -1);\n}\n\nvoid addEdge(int u, int v) {\n  head[edges] = v;\n  prev1[edges] = last[u];\n  last[u] = edges++;\n}\n\nvoid bfs() {\n  fill(dist, dist + n1, -1);\n  int sizeQ = 0;\n  for (int u = 0; u < n1; ++u) {\n    if (!used[u]) {\n      Q[sizeQ++] = u;\n      dist[u] = 0;\n    }\n  }\n  for (int i = 0; i < sizeQ; i++) {\n    int u1 = Q[i];\n    for (int e = last[u1]; e >= 0; e = prev1[e]) {\n      int u2 = matching[head[e]];\n      if (u2 >= 0 && dist[u2] < 0) {\n        dist[u2] = dist[u1] + 1;\n        Q[sizeQ++] = u2;\n      }\n    }\n  }\n}\n\nbool dfs(int u1) {\n  vis[u1] = true;\n  for (int e = last[u1]; e >= 0; e = prev1[e]) {\n    int v = head[e];\n    int u2 = matching[v];\n    if (u2 < 0 || !vis[u2] && dist[u2] == dist[u1] + 1 && dfs(u2)) {\n      matching[v] = u1;\n      used[u1] = true;\n      return true;\n    }\n  }\n  return false;\n}\n\nint maxMatching() {\n  fill(used, used + n1, false);\n  fill(matching, matching + n2, -1);\n  for (int res = 0;;) {\n    bfs();\n    fill(vis, vis + n1, false);\n    int f = 0;\n    for (int u = 0; u < n1; ++u)\n      if (!used[u] && dfs(u))\n        ++f;\n    if (!f)\n      return res;\n    res += f;\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    for (int i = 0; i <= 1004; i++)\n      used[i] = 0, vis[i] = 0, matching[i] = 0, Q[i] = 0, last[i] = 0,\n      prev1[i] = 0, head[i] = 0, dist[i] = 0;\n    string s;\n    map<char, int> m, m1;\n    m['r'] = 1;\n    m['y'] = 2;\n    m['b'] = 4;\n    m['o'] = 3;\n    m['g'] = 6;\n    m['v'] = 5;\n\n    m1['r'] = 0;\n    m1['y'] = 1;\n    m1['b'] = 2;\n    m1['o'] = 3;\n    m1['g'] = 4;\n    m1['v'] = 5;\n    string t = \"rybogv\";\n    for (int i = 0; i <= r - 1; i++)\n      s += 'r';\n    for (int i = 0; i <= o - 1; i++)\n      s += 'o';\n    for (int i = 0; i <= y - 1; i++)\n      s += 'y';\n    for (int i = 0; i <= g - 1; i++)\n      s += 'g';\n    for (int i = 0; i <= b - 1; i++)\n      s += 'b';\n    for (int i = 0; i <= v - 1; i++)\n      s += 'v';\n    init(n, n);\n    for (int i = 0; i <= n - 1; i++)\n      for (int j = 0; j <= n - 1; j++)\n        if ((m[s[i]] & m[s[j]]) == 0)\n          addEdge(i, j);\n    int mm = maxMatching();\n    if (mm != n)\n      cout << \"IMPOSSIBLE\\n\";\n    else {\n      int c[6][6] = {0};\n      int c1[6] = {0};\n      c1[0] = r;\n      c1[1] = y;\n      c1[2] = b;\n      c1[3] = o;\n      c1[4] = g;\n      c1[5] = v;\n      for (int i = 0; i <= n - 1; i++) {\n        c[m1[s[i]]][m1[s[matching[i]]]]++;\n      }\n      string ans;\n      if (r)\n        ans = \"r\", c1[0]--;\n      else if (o)\n        ans = \"o\", c1[3]--;\n      else if (y)\n        ans = \"y\", c1[1]--;\n      else if (b)\n        ans = \"b\", c1[2]--;\n      else if (g)\n        ans = \"g\", c1[4]--;\n      else if (v)\n        ans = \"v\", c1[5]--;\n      for (int i = 0; i <= n - 2; i++) {\n        char lst = 'p';\n        if (i)\n          lst = ans[i - 1];\n        int id = -1, mx = -1;\n        for (int j = 0; j <= 5; j++) {\n          if (t[j] == lst)\n            continue;\n          if (c[m1[ans[i]]][j] && c1[j]) {\n            if (c[m1[ans[i]]][j] > mx) {\n              mx = c[m1[ans[i]]][j];\n              id = j;\n            }\n          }\n        }\n        if (id == -1) {\n          c[m1[ans[i]]][m1[lst]]--;\n          c1[m1[lst]]--;\n          ans += lst;\n        } else {\n          c[m1[ans[i]]][id]--;\n          c1[id]--;\n          ans += t[id];\n        }\n      }\n      for (int i = 0; i <= n - 1; i++)\n        ans[i] = toupper(ans[i]);\n      cout << ans;\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"abisheka","func":"#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef unsigned long long int ull;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef vector<vector<ll>> mat;\n\nld mx = 1e18 + 7;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, t1 = 0;\n  cin >> t;\n  while (t--) {\n    t1++;\n    cout << \"Case #\";\n    cout << t1;\n    cout << \": \";\n    int n, q;\n    cin >> n >> q;\n    ll e[105], s[105];\n    for (int i = 0; i <= n - 1; i++)\n      cin >> e[i] >> s[i];\n    ll d[105][105], dd[105][105];\n    for (int i = 0; i <= n - 1; i++)\n      for (int j = 0; j <= n - 1; j++) {\n        cin >> d[i][j];\n        dd[i][j] = d[i][j];\n        if (d[i][j] == -1)\n          dd[i][j] = mx;\n      }\n    for (int i = 0; i <= n - 1; i++)\n      dd[i][i] = 0;\n    for (int k = 0; k <= n - 1; k++)\n      for (int i = 0; i <= n - 1; i++)\n        for (int j = 0; j <= n - 1; j++)\n          dd[i][j] = min(dd[i][j], dd[i][k] + dd[k][j]);\n    int to[105][105] = {0};\n    for (int i = 0; i <= n - 1; i++) {\n      for (int j = 0; j <= n - 1; j++) {\n        if (dd[i][j] > e[i])\n          to[i][j] = 0;\n        else\n          to[i][j] = 1;\n      }\n    }\n\n    while (q--) {\n      int l, r;\n      cin >> l >> r;\n      l--;\n      r--;\n      priority_queue<pair<ld, pair<int, int>>> q;\n      ld dis[105][105];\n      for (int i = 0; i <= n - 1; i++)\n        for (int j = 0; j <= n - 1; j++)\n          dis[i][j] = mx;\n      dis[l][l] = 0;\n      q.push(make_pair(0, make_pair(l, l)));\n      while (!q.empty()) {\n\n        int at = q.top().second.first, hor = q.top().second.second;\n        ld d1 = -q.top().first;\n        q.pop();\n        if (d1 > dis[at][hor])\n          continue;\n        for (int i = 0; i <= n - 1; i++) {\n          if (i == at)\n            continue;\n          if (d[at][i] == -1)\n            continue;\n          if (to[hor][i] == 0)\n            continue;\n          ld time = d[at][i];\n          time \/= (ld)s[hor];\n          if (dis[at][hor] + time < dis[i][hor]) {\n            dis[i][hor] = dis[at][hor] + time;\n            q.push(make_pair(-dis[i][hor], make_pair(i, hor)));\n          }\n        }\n        ld d2 = mx;\n        for (int i = 0; i <= n - 1; i++)\n          d2 = min(d2, dis[at][i]);\n        for (int i = 0; i <= n - 1; i++) {\n          if (i == at)\n            continue;\n          if (d[at][i] == -1)\n            continue;\n          if (to[at][i] == 0)\n            continue;\n          ld time = d[at][i];\n          time \/= (ld)s[at];\n          if (d2 + time < dis[i][at]) {\n            dis[i][at] = d2 + time;\n            q.push(make_pair(-dis[i][at], make_pair(i, at)));\n          }\n        }\n      }\n      ld ans = mx;\n      for (int i = 0; i <= n - 1; i++)\n        ans = min(ans, dis[r][i]);\n      cout << fixed << setprecision(10) << ans << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem B\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nlong long get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  long long x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nint a[20];\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    long long n = get(), tmp = n;\n    int m = 0;\n    while (n) {\n      a[m++] = n % 10;\n      n \/= 10;\n    }\n    printf(\"Case #%d: \", test);\n    while (true) {\n      int p = m - 1;\n      while (p && a[p] <= a[p - 1])\n        p--;\n      if (!p)\n        break;\n      a[p]--;\n      for (int i = 0; i < p; i++)\n        a[i] = 9;\n    }\n    long long ans = 0;\n    for (int i = m - 1; i >= 0; i--)\n      ans = ans * 10 + a[i];\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem C\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nlong long get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  long long x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nmap<long long, long long> ans;\n\nlong long cnt(long long n, long long m) {\n  if (n < m)\n    return 0;\n  if (ans[n] != 0)\n    return ans[n];\n  long long a = (n + 1) \/ 2 - 1;\n  long long b = n \/ 2;\n  return ans[n] = cnt(a, m) + cnt(b, m) + 1;\n}\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    long long n = get(), k = get();\n\n    long long l = 0, r = n;\n    while (l < r) {\n      long long mid = (l + r + 1) \/ 2;\n      ans.clear();\n      if (cnt(n, mid) < k)\n        r = mid - 1;\n      else\n        l = mid;\n    }\n\n    printf(\"Case #%d: \", test);\n    cout << (l \/ 2) << ' ' << ((l + 1) \/ 2 - 1) << endl;\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem A\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    string s;\n    cin >> s;\n    int n = s.size(), k = get(), ans = 0;\n    for (int i = 0; i + k <= n; i++) {\n      if (s[i] == '+')\n        continue;\n      for (int j = i; j < i + k; j++)\n        s[j] = (s[j] == '+') ? '-' : '+';\n      ans++;\n    }\n    bool flag = true;\n    for (int i = 0; flag && i < n; i++)\n      flag = (s[i] == '+');\n    printf(\"Case #%d: \", test);\n    if (flag)\n      printf(\"%d\\n\", ans);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem B\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nint a[1000], p[1000];\ndouble x[1000][1000], lb[1000][1000], ub[1000][1000];\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    int n = get(), m = get();\n    for (int i = 0; i < n; i++)\n      a[i] = get();\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        x[i][j] = (double)get() \/ a[i];\n      }\n      sort(x[i], x[i] + m);\n      for (int j = 0; j < m; j++) {\n        lb[i][j] = ceil(x[i][j] \/ 1.1);\n        ub[i][j] = floor(x[i][j] \/ 0.9);\n      }\n    }\n    int ans = 0;\n    memset(p, 0, sizeof(p));\n    for (int i = 0; i < m; i++) {\n      if (lb[0][i] > ub[0][i])\n        continue;\n      bool flag = true;\n      for (int j = 1; j < n; j++) {\n        while (p[j] < m && ub[j][p[j]] < lb[0][i])\n          p[j]++;\n        flag = (p[j] < m) && (lb[j][p[j]] <= ub[0][i]);\n      }\n      if (flag) {\n        ans++;\n        for (int j = 1; j < n; j++)\n          p[j]++;\n      }\n    }\n    printf(\"Case #%d: %d\\n\", test, ans);\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem A\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nchar a[25][25];\n\nchar getCake() {\n  char c;\n  while (c = getchar(), c != '?' && (c < 'A' || c > 'Z'))\n    ;\n  return c;\n}\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    printf(\"Case #%d:\\n\", test);\n    int n = get(), m = get();\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++)\n        a[i][j] = getCake();\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 1; j < m; j++)\n        if (a[i][j] == '?' && a[i][j - 1] != '?')\n          a[i][j] = a[i][j - 1];\n      for (int j = m - 2; j >= 0; j--)\n        if (a[i][j] == '?' && a[i][j + 1] != '?')\n          a[i][j] = a[i][j + 1];\n    }\n\n    for (int i = 0; i < m; i++) {\n      for (int j = 1; j < n; j++)\n        if (a[j][i] == '?' && a[j - 1][i] != '?')\n          a[j][i] = a[j - 1][i];\n      for (int j = n - 2; j >= 0; j--)\n        if (a[j][i] == '?' && a[j + 1][i] != '?')\n          a[j][i] = a[j + 1][i];\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++)\n        putchar(a[i][j]);\n      putchar('\\n');\n    }\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem A\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    double l = get(), ans = 1e15;\n    int n = get();\n    for (int i = 0; i < n; i++) {\n      double x = get(), v = get();\n      ans = min(ans, l \/ ((l - x) \/ v));\n    }\n    printf(\"Case #%d: %0.10lf\\n\", test, ans);\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem B\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nint R, O, Y, G, B, V;\n\nvoid imp() { printf(\"IMPOSSIBLE\"); }\n\nvoid alt(char c1, char c2, int n) {\n  for (int i = 0; i < n; i++) {\n    putchar(c1);\n    putchar(c2);\n  }\n}\n\nvoid solve(char a, char b, char c, int A, int B, int C) {\n  string s = \"\";\n  while (B && C) {\n    s += b;\n    s += c;\n    B--;\n    C--;\n  }\n  while (B--)\n    s += b;\n  while (C--)\n    s += c;\n  for (int i = 0; i < A; i++) {\n    int len = s.size();\n    if (s[0] == s[len - 1] && s[0] != a)\n      s += a;\n    else {\n      int p = -1;\n      for (int j = 0; j + 1 < len; j++)\n        if (s[j] == s[j + 1] && s[j] != a)\n          p = j;\n      if (p == -1) {\n        for (int j = 0; j + 1 < len; j++)\n          if ((s[j] == b && s[j + 1] == c) || (s[j] == c && s[j + 1] == b))\n            p = j;\n      }\n      string t = \"\";\n      for (int j = 0; j <= p; j++)\n        t += s[j];\n      t += a;\n      for (int j = p + 1; j < len; j++)\n        t += s[j];\n      s = t;\n    }\n  }\n  bool flag[128];\n  memset(flag, 0, sizeof(flag));\n  for (int i = 0; i < s.size(); i++) {\n    char x = s[i];\n    putchar(x);\n    if (!flag[x]) {\n      flag[x] = true;\n      if (x == 'R')\n        alt('G', 'R', G);\n      else if (x == 'B')\n        alt('O', 'B', O);\n      else\n        alt('V', 'Y', V);\n    }\n  }\n}\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    printf(\"Case #%d: \", test);\n    int N = get();\n    R = get();\n    O = get();\n    Y = get();\n    G = get();\n    B = get();\n    V = get();\n    if (R == G && N == R + G)\n      alt('R', 'G', R);\n    else if (B == O && N == B + O)\n      alt('B', 'O', B);\n    else if (Y == V && N == Y + V)\n      alt('Y', 'V', Y);\n    else if ((R <= G && G > 0) || (B <= O && O > 0) || (Y <= V && V > 0))\n      imp();\n    else {\n      R -= G;\n      B -= O;\n      Y -= V;\n      int freq = max(R, max(B, Y));\n      if (freq > N \/ 2)\n        imp();\n      else {\n        if (freq == R)\n          solve('R', 'B', 'Y', R, B, Y);\n        else if (freq == 'B')\n          solve('B', 'Y', 'R', B, Y, R);\n        else\n          solve('Y', 'R', 'B', Y, R, B);\n      }\n    }\n    putchar('\\n');\n  }\n  return 0;\n}\n"}
{"target":"ACMonster","func":"\/\/ Problem C\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint get() {\n  char c;\n  while (c = getchar(), c != '-' && (c < '0' || c > '9'))\n    ;\n  bool flag = (c == '-');\n  if (flag)\n    c = getchar();\n  int x = 0;\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return flag ? -x : x;\n}\n\nconst double inf = 1e15;\n\ndouble l[100], v[100];\ndouble dist[100][100];\ndouble g[100][100];\n\nint main() {\n  int totalTest = get();\n  for (int test = 1; test <= totalTest; test++) {\n    int n = get(), q = get();\n    for (int i = 0; i < n; i++) {\n      l[i] = get();\n      v[i] = get();\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        int x = get();\n        if (i == j)\n          dist[i][j] = 0;\n        else\n          dist[i][j] = (x == -1) ? inf : x;\n      }\n    for (int k = 0; k < n; k++)\n      for (int i = 0; i < n; i++)\n        if (dist[i][k] < inf)\n          for (int j = 0; j < n; j++)\n            dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        g[i][j] = (dist[i][j] <= l[i]) ? (dist[i][j] \/ v[i]) : inf;\n    for (int k = 0; k < n; k++)\n      for (int i = 0; i < n; i++)\n        if (g[i][k] < inf)\n          for (int j = 0; j < n; j++)\n            g[i][j] = min(g[i][j], g[i][k] + g[k][j]);\n    printf(\"Case #%d:\", test);\n    for (int i = 0; i < q; i++) {\n      int u = get() - 1, v = get() - 1;\n      printf(\" %0.10lf\", g[u][v]);\n    }\n    putchar('\\n');\n  }\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nstring S;\n\nvoid solve() {\n  cin >> S;\n  int L = S.size();\n\n  int x = -1;\n  for (int i = 0; i < L - 1; i++) {\n    if (S[i] > S[i + 1]) {\n      x = i;\n      break;\n    }\n  }\n  if (x == -1) {\n    cout << S << endl;\n    return;\n  }\n  int y = 0;\n  for (int i = 1; i <= x; i++) {\n    if (S[i - 1] < S[i])\n      y = i;\n  }\n  if (y == 0 && S[y] == '1') {\n    for (int i = 0; i < L - 1; i++)\n      cout << 9;\n    cout << endl;\n    return;\n  }\n\n  cout << S.substr(0, y);\n  cout << char(S[y] - 1);\n  for (int i = y + 1; i < L; i++)\n    cout << 9;\n  cout << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cout << \"Case #\" << t + 1 << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nll N, K;\n\nvoid solve() {\n  priority_queue<ll> que;\n\n  que.push(N);\n  for (int i = 0; i < K - 1; i++) {\n    auto x = que.top();\n    que.pop();\n    x--;\n    que.push(x \/ 2);\n    que.push((x + 1) \/ 2);\n  }\n  ll x = que.top();\n  x--;\n  cout << (x + 1) \/ 2 << \" \" << x \/ 2 << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    cin >> N >> K;\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstring S;\nint K;\n\nvoid flip(int si) {\n  for (int i = 0; i < K; i++) {\n    if (S[si + i] == '-')\n      S[si + i] = '+';\n    else\n      S[si + i] = '-';\n  }\n}\n\nvoid solve() {\n  cin >> S >> K;\n  int L = S.size();\n\n  int count = 0;\n  for (int i = 0; i < L - K + 1; i++) {\n    if (S[i] == '-') {\n      flip(i);\n      count++;\n    }\n  }\n  for (int i = 0; i < L; i++) {\n    if (S[i] == '-') {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  }\n  cout << count << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cout << \"Case #\" << t + 1 << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\n\nclass Edge {\npublic:\n  int to, cap, rev;\n  Edge(int _to, int _cap, int _rev) : to(_to), cap(_cap), rev(_rev){};\n};\n\nclass FordFulkerson {\nprivate:\n  vector<vector<Edge>> G;\n  vector<bool> used;\n\npublic:\n  FordFulkerson(int n) {\n    G.resize(n);\n    used.resize(n);\n  }\n\n  void add_edge(int from, int to, int cap) {\n    G[from].push_back(Edge(to, cap, G[to].size()));\n    G[to].push_back(Edge(from, 0, G[from].size() - 1));\n  }\n\n  int dfs(int v, int t, int f) {\n    if (v == t)\n      return f;\n    used[v] = true;\n    for (int i = 0; i < G[v].size(); i++) {\n      Edge &e = G[v][i];\n      if (!used[e.to] && e.cap > 0) {\n        int d = dfs(e.to, t, min(f, e.cap));\n        if (d > 0) {\n          e.cap -= d;\n          G[e.to][e.rev].cap += d;\n          return d;\n        }\n      }\n    }\n    return 0;\n  }\n\n  int max_flow(int s, int t) {\n    int res = 0;\n    while (true) {\n      fill(used.begin(), used.end(), false);\n      int f = dfs(s, t, INF);\n      if (f == 0)\n        return res;\n      res += f;\n    }\n    return res;\n  }\n};\n\n\/\/ int M = 100100;\nint N, P;\nvector<int> R;\nvector<vector<int>> Q;\n\/\/ vector<int> lbs(M, -1);\n\/\/ vector<int> ubs(M, INF);\n\nvoid solve() {\n  cin >> N >> P;\n  R.resize(N);\n  for (auto &v : R)\n    cin >> v;\n\n  Q.clear();\n  Q.resize(N);\n  for (auto &vec : Q) {\n    for (int j = 0; j < P; j++) {\n      int q;\n      cin >> q;\n      vec.push_back(q);\n    }\n  }\n\n  vector<vector<pair<int, int>>> xQ;\n  xQ.resize(N);\n\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < P; j++) {\n      int ub = floor(Q[i][j] \/ (R[i] * 0.9) + 1e-6);\n      int lb = ceil(Q[i][j] \/ (R[i] * 1.1) - 1e-6);\n\n      xQ[i].emplace_back(lb, ub);\n    }\n  }\n\n  auto ff = FordFulkerson(N * P + 2);\n  for (int i = 0; i < N - 1; i++) {\n    for (int j = 0; j < P; j++) {\n      for (int k = 0; k < P; k++) {\n        if (xQ[i][j].first > xQ[i][j].second ||\n            xQ[i + 1][k].first > xQ[i + 1][k].second)\n          continue;\n\n        if (xQ[i][j].first <= xQ[i + 1][k].second &&\n            xQ[i + 1][k].first <= xQ[i][j].second)\n          ff.add_edge(i * P + j, (i + 1) * P + k, 1);\n      }\n    }\n  }\n  \/\/ s\n  for (int i = 0; i < P; i++) {\n    if (xQ[0][i].first > xQ[0][i].second)\n      continue;\n    ff.add_edge(N * P, i, 1);\n  }\n  \/\/ t\n  for (int i = 0; i < P; i++) {\n    if (xQ[(N - 1)][i].first > xQ[(N - 1)][i].second)\n      continue;\n\n    ff.add_edge((N - 1) * P + i, N * P + 1, 1);\n  }\n\n  cout << ff.max_flow(N * P, N * P + 1) << endl;\n}\n\nint main() {\n  \/\/    for(int i=0; i<M; i++){\n  \/\/        int lb = i*(9+10-1)\/10;\n  \/\/        int ub = i*11\/10;\n  \/\/        for(int j=lb; j<=min(ub, M-1); j++){\n  \/\/            lbs[j] = min(lbs[j], i);\n  \/\/            ubs[j] = max(ubs[j], i);\n  \/\/        }\n  \/\/    }\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cout << \"Case #\" << t + 1 << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint H, W;\nvector<string> grid;\n\nint dh[4] = {1, -1, 0, 0};\nint dw[4] = {0, 0, 1, -1};\n\nbool infield(int h, int w) { return (0 <= h && h < H && 0 <= w && w < W); }\n\nvoid solve() {\n  cin >> H >> W;\n  grid.resize(H);\n  for (auto &s : grid)\n    cin >> s;\n\n  for (int d = 0; d < 4; d++) {\n    for (int h = 0; h < H; h++) {\n      for (int w = 0; w < W; w++)\n        if (grid[h][w] != '?') {\n          int nh = h + dh[d];\n          int nw = w + dw[d];\n          while (infield(nh, nw) && grid[nh][nw] == '?') {\n            grid[nh][nw] = grid[h][w];\n            nh += dh[d];\n            nw += dw[d];\n          }\n        }\n    }\n  }\n\n  for (auto s : grid)\n    cout << s << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cout << \"Case #\" << t + 1 << \":\" << endl;\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint D, N;\nvector<double> K, S;\n\nvoid solve() {\n  double mtime = 0;\n  for (int i = 0; i < N; i++) {\n    mtime = max(mtime, (D - K[i]) \/ S[i]);\n  }\n  cout << D \/ mtime << endl;\n}\n\nint main() {\n  cout.precision(16);\n  cout.setf(ios::fixed);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    cin >> D >> N;\n    K.resize(N);\n    S.resize(N);\n\n    for (int i = 0; i < N; i++)\n      cin >> K[i] >> S[i];\n\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"aki33524","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint N;\nint R, O, Y, G, B, V;\nstring table = \"RYB\";\n\nstring solve() {\n  if (O != 0 || G != 0 || V != 0)\n    return \"invalid\";\n\n  if (R > Y + B || Y > R + B || B > R + Y)\n    return \"IMPOSSIBLE\";\n\n  bool ymax;\n  bool bmax;\n  ymax = Y > B && R < max(Y, B);\n  bmax = B > Y && R < max(Y, B);\n\n  if (ymax && bmax)\n    return \"invalid\";\n\n  if (ymax) {\n    swap(R, Y);\n    swap(table[0], table[1]);\n  }\n  if (bmax) {\n    swap(R, B);\n    swap(table[0], table[2]);\n  }\n\n  vector<int> vec;\n  for (int i = 0; i < R; i++)\n    vec.push_back(0);\n  for (int i = 0; i < Y; i++) {\n    if (i < R)\n      vec.insert(vec.begin() + i * 2 + 1, 1);\n    else\n      vec.push_back(1);\n  }\n  reverse(vec.begin(), vec.end());\n  for (int i = 0; i < B; i++) {\n    if (i < R + Y)\n      vec.insert(vec.begin() + i * 2, 2);\n    else\n      vec.insert(vec.begin(), 2);\n  }\n\n  string res = \"\";\n  for (auto v : vec)\n    res += table[v];\n\n  for (int i = 0; i < N; i++)\n    if (res[i] == res[(i + 1) % N])\n      cout << \"invalid!\" << endl;\n\n  if (ymax) {\n    swap(R, Y);\n    swap(table[0], table[1]);\n  }\n  if (bmax) {\n    swap(R, B);\n    swap(table[0], table[2]);\n  }\n\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    cin >> N;\n    cin >> R >> O >> Y >> G >> B >> V;\n\n    cout << solve() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"aki33524","func":"\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nint N, Q;\nvector<double> E, S;\nvector<vector<ll>> D;\n\nvoid solve() {\n  \/\/    cout << \"hogege\" << endl;\n\n  for (int k = 0; k < N; k++) {\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++)\n        if (D[i][k] != -1 && D[k][j] != -1) {\n          if (D[i][j] == -1)\n            D[i][j] = D[i][k] + D[k][j];\n          else\n            D[i][j] = min(D[i][j], D[i][k] + D[k][j]);\n        }\n    }\n  }\n\n  \/\/    cout << \"fugaga\" << endl;\n\n  \/\/    for(int i=0; i<N; i++){\n  \/\/        for(int j=0; j<N; j++)\n  \/\/            cout << D[i][j] << \" \";\n  \/\/        cout << endl;\n  \/\/    }\n\n  vector<vector<double>> nD(N, vector<double>(N, 1e100));\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < N; j++)\n      if (D[i][j] != -1 && D[i][j] <= E[i]) {\n        nD[i][j] = min(nD[i][j], D[i][j] \/ S[i]);\n      }\n  }\n\n  \/\/    for(int i=0; i<N; i++){\n  \/\/        for(int j=0; j<N; j++)\n  \/\/            cout << nD[i][j] << \" \";\n  \/\/        cout << endl;\n  \/\/    }\n\n  \/\/    cout << \"hoge\" << endl;\n\n  for (int k = 0; k < N; k++)\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++)\n        nD[i][j] = min(nD[i][j], nD[i][k] + nD[k][j]);\n\n  \/\/    cout << \"fuga\" << endl;\n\n  for (int i = 0; i < Q; i++) {\n    int s, t;\n    cin >> s >> t;\n    s--;\n    t--;\n    cout << \" \" << nD[s][t];\n  }\n  cout << endl;\n}\n\nint main() {\n  cout.precision(16);\n  cout.setf(ios::fixed);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \":\";\n    cin >> N >> Q;\n    E.resize(N);\n    S.resize(N);\n    for (int i = 0; i < N; i++)\n      cin >> E[i] >> S[i];\n\n    \/\/        D.resize(N, vector<ll>(N));\n    D.clear();\n\n    \/\/        cout << \"unko\" << endl;\n    for (int i = 0; i < N; i++) {\n      vector<ll> vec(N);\n      for (int j = 0; j < N; j++) {\n        cin >> vec[j];\n      }\n      D.push_back(vec);\n      \/\/    cout << D[i].size() << endl;\n    }\n    \/\/        cout << \"buri\" << endl;\n\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    string num;\n    cin >> num;\n    string ans = \"\";\n    for (int i = 0; i < num.length(); ++i) {\n      for (char digit = '9'; digit >= '0'; --digit) {\n        string temp = \"\";\n        for (int j = i; j < num.length(); ++j)\n          temp += digit;\n        temp = ans + temp;\n        if (temp <= num) {\n          ans += digit;\n          break;\n        }\n      }\n    }\n    bool printed = false;\n    cout << \"Case #\" << case_num << \": \";\n    for (int i = 0; i < ans.length(); ++i) {\n      if (printed || ans[i] != '0') {\n        printed = true;\n        cout << ans[i];\n      }\n    }\n    cout << \"\\n\";\n    assert(printed);\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    long long int n, k;\n    cin >> n >> k;\n    k--;\n    map<long long int, long long int> M;\n    M[n] = 1;\n    while (true) {\n      long long int len = M.rbegin()->first;\n      long long int ctr = M.rbegin()->second;\n      if (k >= ctr) {\n        k -= ctr;\n        M.erase(len);\n        M[len \/ 2] += ctr;\n        M[(len - 1) \/ 2] += ctr;\n      } else {\n        M[len] -= k;\n        k = 0;\n        break;\n      }\n    }\n    long long int ans_len = M.rbegin()->first;\n    cout << \"Case #\" << case_num << \": \" << ans_len \/ 2 << \" \"\n         << (ans_len - 1) \/ 2 << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  map<char, char> opposite;\n  opposite['+'] = '-';\n  opposite['-'] = '+';\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    string s;\n    int k;\n    cin >> s >> k;\n    queue<int> q;\n    int ans = 0;\n    bool flag = true;\n    for (int i = 0; i <= s.length(); ++i) {\n      while (!q.empty() && q.front() <= i - k)\n        q.pop();\n      int flips = q.size() % 2;\n      if (flips)\n        s[i] = opposite[s[i]];\n      if (s[i] == '-') {\n        if (i + k <= s.length()) {\n          q.push(i);\n          ans++;\n        } else\n          flag = false;\n      }\n    }\n    if (flag)\n      cout << \"Case #\" << case_num << \": \" << ans << \"\\n\";\n    else\n      cout << \"Case #\" << case_num << \": IMPOSSIBLE\\n\";\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int MAXN = 55;\nint req[MAXN], avbl_ctr[MAXN];\nbool avbl[MAXN][MAXN];\nstruct Event {\n  int t, type, x, y;\n  Event(int t, int type, int x, int y) {\n    this->t = t;\n    this->type = type;\n    this->x = x;\n    this->y = y;\n  }\n};\nbool sorter(const Event &a, const Event &b) {\n  return make_pair(a.t, a.type) < make_pair(b.t, b.type);\n}\nvoid inc_ctr(int &ctr, int &non_zero) {\n  ctr++;\n  if (ctr == 1)\n    non_zero++;\n}\nvoid dec_ctr(int &ctr, int &non_zero) {\n  ctr--;\n  if (ctr == 0)\n    non_zero--;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i) {\n      cin >> req[i];\n    }\n    vector<Event> events;\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        int quan;\n        cin >> quan;\n        quan *= 10;\n        int r = (quan) \/ (9 * req[i]);\n        int l = max(1, (quan + (11 * req[i] - 1)) \/ (11 * req[i]));\n        if (l <= r) {\n          Event x(l, -1, i, j);\n          Event y(r, 1, i, j);\n          events.push_back(x);\n          events.push_back(y);\n        }\n      }\n    }\n    sort(events.begin(), events.end(), sorter);\n    memset(avbl, false, sizeof avbl);\n    memset(avbl_ctr, 0, sizeof avbl_ctr);\n    int ans = 0, non_zero = 0;\n    for (int i = 0; i < events.size(); ++i) {\n      Event curr = events[i];\n      if (curr.type == -1) {\n        \/\/ opening\n        avbl[curr.x][curr.y] = true;\n        inc_ctr(avbl_ctr[curr.x], non_zero);\n        if (non_zero == n) {\n          \/\/ make a kit\n          ans++;\n          for (int ii = 0; ii < n; ++ii) {\n            for (int jj = 0; jj < p; ++jj) {\n              if (avbl[ii][jj]) {\n                avbl[ii][jj] = false;\n                dec_ctr(avbl_ctr[ii], non_zero);\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        \/\/ closing\n        if (avbl[curr.x][curr.y]) {\n          avbl[curr.x][curr.y] = false;\n          dec_ctr(avbl_ctr[curr.x], non_zero);\n        }\n      }\n    }\n    cout << \"Case #\" << case_num << \": \" << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nvoid dnc(int r1, int r2, int c1, int c2, string inp[]) {\n  int ctr = 0;\n  char ch;\n  for (int i = r1; i <= r2; ++i) {\n    for (int j = c1; j <= c2; ++j) {\n      if (inp[i][j] != '?') {\n        ctr++;\n        ch = inp[i][j];\n      }\n    }\n  }\n  if (ctr == 1) {\n    for (int i = r1; i <= r2; ++i) {\n      for (int j = c1; j <= c2; ++j) {\n        inp[i][j] = ch;\n      }\n    }\n    return;\n  }\n  int tctr = 0;\n  for (int i = r1; i <= r2; ++i) {\n    for (int j = c1; j <= c2; ++j) {\n      if (inp[i][j] != '?')\n        tctr++;\n    }\n    if (tctr > 0 && (ctr - tctr) > 0) {\n      dnc(r1, i, c1, c2, inp);\n      dnc(i + 1, r2, c1, c2, inp);\n      return;\n    }\n  }\n  tctr = 0;\n  for (int j = c1; j <= c2; ++j) {\n    for (int i = r1; i <= r2; ++i) {\n      if (inp[i][j] != '?')\n        tctr++;\n    }\n    if (tctr > 0 && (ctr - tctr) > 0) {\n      dnc(r1, r2, c1, j, inp);\n      dnc(r1, r2, j + 1, c2, inp);\n      return;\n    }\n  }\n  assert(false);\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    int r, c;\n    cin >> r >> c;\n    string inp[r];\n    for (int i = 0; i < r; ++i) {\n      cin >> inp[i];\n    }\n    dnc(0, r - 1, 0, c - 1, inp);\n    cout << \"Case #\" << case_num << \":\\n\";\n    for (int i = 0; i < r; ++i) {\n      cout << inp[i] << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    int d, n;\n    cin >> d >> n;\n    double ans_time = 0;\n    for (int i = 0; i < n; ++i) {\n      int init_pos, speed;\n      cin >> init_pos >> speed;\n      ans_time = max(ans_time, (d - init_pos) \/ (speed * 1.0));\n    }\n    double ans = d \/ ans_time;\n    cout.precision(10);\n    cout << fixed << \"Case #\" << case_num << \": \" << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    \/\/ TODO: edge cases for large case\n    vector<pair<int, char>> A;\n    A.push_back(make_pair(r, 'R'));\n    A.push_back(make_pair(y, 'Y'));\n    A.push_back(make_pair(b, 'B'));\n    sort(A.begin(), A.end());\n    vector<char> ans;\n    for (int i = 0; i < 3; ++i) {\n      vector<char> temp;\n      int ctr = A[i].first;\n      while (ctr || !ans.empty()) {\n        if (ctr) {\n          ctr--;\n          temp.push_back(A[i].second);\n        }\n        if (!ans.empty()) {\n          temp.push_back(ans.back());\n          ans.pop_back();\n        }\n      }\n      ans = temp;\n    }\n    bool exists = true;\n    for (int i = 0; i < ans.size(); ++i) {\n      if (ans[i] == ans[(i + 1) % ans.size()])\n        exists = false;\n    }\n    cout << \"Case #\" << case_num << \": \";\n    if (!exists) {\n      cout << \"IMPOSSIBLE\\n\";\n    } else {\n      for (int i = 0; i < ans.size(); ++i) {\n        cout << ans[i];\n      }\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"akulsareen","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int MAXN = 105;\nconst double INF = 1e18;\nint maxd[MAXN], vel[MAXN];\nlong long int dist[MAXN][MAXN];\ndouble min_time[MAXN][MAXN];\nbool vis[MAXN];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int case_num = 1; case_num <= t; ++case_num) {\n    int n, q;\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 1; i <= n; ++i) {\n      scanf(\"%d %d\", &maxd[i], &vel[i]);\n    }\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        scanf(\"%lld\", &dist[i][j]);\n        if (dist[i][j] == -1)\n          dist[i][j] = INF;\n      }\n      dist[i][i] = 0;\n    }\n    for (int k = 1; k <= n; ++k) {\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n          dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n        }\n      }\n    }\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        min_time[i][j] = INF;\n        vis[j] = false;\n      }\n      min_time[i][i] = 0;\n      vis[i] = true;\n      int curr_pos = i;\n      for (int j = 1; j < n; ++j) {\n        if (min_time[i][curr_pos] >= INF)\n          break;\n        for (int k = 1; k <= n; ++k) {\n          if (dist[curr_pos][k] > maxd[curr_pos])\n            continue;\n          double curr_time =\n              min_time[i][curr_pos] + (dist[curr_pos][k] * 1.0 \/ vel[curr_pos]);\n          min_time[i][k] = min(min_time[i][k], curr_time);\n        }\n        curr_pos = -1;\n        for (int k = 1; k <= n; ++k) {\n          if (vis[k])\n            continue;\n          if (curr_pos == -1 || min_time[i][k] < min_time[i][curr_pos])\n            curr_pos = k;\n        }\n        vis[curr_pos] = true;\n      }\n    }\n    printf(\"Case #%d: \", case_num);\n    for (int i = 0; i < q; ++i) {\n      int u, v;\n      scanf(\"%d %d\", &u, &v);\n      assert(min_time[u][v] < INF);\n      printf(\"%.10lf \", min_time[u][v]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 1001 * 1001, MOD = 1e9 + 7;\n\nlong long n;\n\nvector<long long> a, b;\n\nvoid f(long long x, vector<long long> &a) {\n  a.clear();\n  while (x) {\n    a.push_back(x % 10);\n    x \/= 10;\n  }\n  reverse(a.begin(), a.end());\n}\n\nbool check(long long X) {\n  f(X, a);\n  if (a.size() < b.size())\n    return 1;\n  long long x = 0;\n  for (auto &u : a) {\n    u = max(u, x);\n    x = u;\n  }\n  reverse(a.begin(), a.end());\n  x = 0;\n  long long t = 1;\n  for (auto u : a) {\n    x += u * t;\n    t *= 10;\n  }\n  return x <= n;\n}\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  long long t;\n  cin >> t;\n  for (long long _ = 1; _ <= t; _++) {\n    cin >> n;\n    f(n, b);\n    long long l = 1, r = n + 1;\n    while (r - l > 1) {\n      long long mid = (l + r) \/ 2;\n      if (check(mid))\n        l = mid;\n      else\n        r = mid;\n    }\n    cout << \"Case #\" << _ << \": \" << l << '\\n';\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 1001 * 1001, MOD = 1e9 + 7;\n\nset<pair<pair<long long, long long>, long long>> s;\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  long long t;\n  cin >> t;\n  for (long long _ = 1; _ <= t; _++) {\n    long long n, k;\n    cin >> n >> k;\n    s.clear();\n    s.insert({{-((n - 1) \/ 2), -n}, 0});\n    for (long long i = 0; i < k - 1; i++) {\n      \/\/\t\tif(!s.size())\n      \/\/\t\t\tcout << i << endl ;\n      long long t = -s.begin()->first.second;\n      long long j = s.begin()->second;\n      s.erase(s.begin());\n      \/\/\t\tif(n==1000) cout << t << ' ' << j << endl ;\n      if (t == 1)\n        continue;\n      long long l = (t - 1) \/ 2, r = t \/ 2;\n      if (l)\n        s.insert({{-((l - 1) \/ 2), -l}, j});\n      s.insert({{-((r - 1) \/ 2), -r}, j + l + 1});\n    }\n    long long x = -s.begin()->first.second;\n    cout << \"Case #\" << _ << \": \" << (x) \/ 2 << ' ' << (x - 1) \/ 2 << '\\n';\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\n\n\/\/#define int long long\n\nusing namespace std;\n\nconst int MAXN = 1001 * 1001, MOD = 1e9 + 7;\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  int t;\n  cin >> t;\n  for (int _ = 1; _ <= t; _++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.size();\n    int x = 0;\n    for (int i = 0; i + k <= n; i++) {\n      if (s[i] == '-') {\n        x++;\n        \/\/\t\t\tcout << i << '\\n' ;\n        for (int j = i; j < i + k; j++)\n          s[j] = (s[j] == '-' ? '+' : '-');\n      }\n    }\n    bool f = 0;\n    for (int i = 0; i < n; i++)\n      if (s[i] != '+')\n        f = 1;\n    \/\/\tcout << s << '\\n' ;\n    \/\/\tprintf(\"Case #%d: %d\\n\",_,x) ;\n    cout << \"Case #\" << _ << \": \";\n    if (f)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << x << '\\n';\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 55, MOD = 1e9 + 7;\n\nlong long need[MAXN];\n\ndeque<long long> a[MAXN];\n\nvoid solve() {\n  long long n, m;\n  cin >> n >> m;\n  for (long long i = 0; i < n; i++)\n    cin >> need[i];\n  for (long long i = 0; i < MAXN; i++)\n    a[i].clear();\n  for (long long i = 0; i < n; i++)\n    for (long long j = 0; j < m; j++) {\n      long long x;\n      cin >> x;\n      a[i].push_back(x);\n    }\n  for (long long i = 0; i < n; i++)\n    sort(a[i].begin(), a[i].end());\n  long long ans = 0;\n  while (1) {\n    bool f = 0;\n    for (long long i = 0; i < n; i++)\n      if (!a[i].size())\n        f = 1;\n    if (f)\n      break;\n    pair<long long, long long> mnR = {1e9, 1};\n    for (long long i = 0; i < n; i++) {\n      long long y = a[i].front();\n      long long x = 9 * need[i] \/ 10;\n      if (!x)\n        continue;\n      long long r = (y) \/ x;\n      if (!i)\n        mnR = {r, i};\n      mnR = min(mnR, {r, i});\n      \/\/\t\tcout << '*' << i << ' ' << r << ' ' << x * r << '\\n' ;\n    }\n    long long mxL = -1;\n    for (long long i = 0; i < n; i++) {\n      long long y = a[i].front();\n      long long x = 11 * need[i] \/ 10;\n      if (!x)\n        continue;\n      long long l = (y + x - 1) \/ x;\n      mxL = max(mxL, l);\n    }\n    \/\/\tcout << mxL << ' ' << mnR.F << '\\n' ;\n    if (mxL <= mnR.first) {\n      ans++;\n      for (long long i = 0; i < n; i++)\n        a[i].pop_front();\n    } else\n      a[mnR.second].pop_front();\n  }\n  cout << ans << '\\n';\n}\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  long long t;\n  cin >> t;\n  for (long long _ = 1; _ <= t; _++) {\n    cout << \"Case #\" << _ << \": \";\n    solve();\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 33, MOD = 1e9 + 7;\n\nchar s[MAXN][MAXN], t[MAXN][MAXN];\n\nchar prv[MAXN];\n\nvoid solve() {\n  long long n, m;\n  cin >> n >> m;\n  memset(t, 0, sizeof t);\n  memset(prv, 0, sizeof prv);\n  for (long long i = 0; i < n; i++)\n    for (long long j = 0; j < m; j++)\n      cin >> s[i][j], prv[i] = (s[i][j] == '?' ? prv[i] : s[i][j]);\n  for (long long i = 0; i < n; i++) {\n    if (!prv[i])\n      continue;\n    char ch = prv[i];\n    for (long long j = m - 1; j > -1; j--) {\n      if (s[i][j] != '?')\n        ch = s[i][j];\n      t[i][j] = ch;\n    }\n  }\n  for (long long x = 0; x < 100; x++) {\n    for (long long i = 0; i < n - 1; i++) {\n      if (!(t[i][0] == 0 && t[i + 1][0] != 0))\n        continue;\n      for (long long j = 0; j < m; j++)\n        t[i][j] = t[i + 1][j];\n    }\n\n    for (long long i = n - 1; i; i--) {\n      if (!(t[i][0] == 0 && t[i - 1][0] != 0))\n        continue;\n      for (long long j = 0; j < m; j++)\n        t[i][j] = t[i - 1][j];\n    }\n  }\n  \/\/ acout << m  << endl ;\n  for (long long i = 0; i < n; i++, cout << '\\n')\n    for (long long j = 0; j < m; j++)\n      cout << t[i][j];\n}\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  long long t;\n  cin >> t;\n  for (long long _ = 1; _ <= t; _++) {\n    cout << \"Case #\" << _ << \":\" << '\\n';\n    solve();\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 101 * 1001;\n\nifstream fin(\"in.in\");\nofstream fout(\"out.out\");\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  fin.tie(0);\n  long long t;\n  fin >> t;\n  fout << fixed << setprecision(6);\n  for (long long _ = 1; _ <= t; _++) {\n    long long n;\n    long double d;\n    fin >> d >> n;\n    long double lst = 0.;\n    for (long long i = 0; i < n; i++) {\n      long double x, v;\n      fin >> x >> v;\n      lst = max(lst, (d - x) \/ v);\n    }\n    fout << \"Case #\" << _ << \": \" << d \/ lst << '\\n';\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 101 * 1001;\n\nifstream fin(\"in.in\");\nofstream fout(\"out.out\");\n\n\/\/\/ R O Y G B V\n\n\/\/\/ R Y B RY YB RB\n\nlong long n;\n\nlong long a[6];\n\nvector<char> v[MAXN];\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  fin.tie(0);\n  long long t;\n  fin >> t;\n  fout << fixed << setprecision(6);\n  for (long long _ = 1; _ <= t; _++) {\n    long long n;\n    fin >> n;\n    fin >> a[0] >> a[3] >> a[1] >> a[4] >> a[2] >> a[5];\n    char ch;\n    long long m;\n    bool f = 0;\n    if (a[0] > a[1] && a[0] > a[2]) {\n      if (a[0] > a[1] + a[2])\n        f = 1;\n      m = a[0];\n      ch = 'R';\n      for (long long i = 0; i < m; i++)\n        v[i].clear();\n      long long j = 0;\n      for (long long k = 0; k < a[1]; k++)\n        v[j++].push_back('Y');\n      for (long long k = 0; k < a[2]; k++) {\n        j %= m;\n        v[j++].push_back('B');\n      }\n    } else if (a[1] > a[2]) {\n      if (a[1] > a[0] + a[2])\n        f = 1;\n      m = a[1];\n      ch = 'Y';\n      for (long long i = 0; i < m; i++)\n        v[i].clear();\n      long long j = 0;\n      for (long long k = 0; k < a[0]; k++)\n        v[j++].push_back('R');\n      for (long long k = 0; k < a[2]; k++) {\n        j %= m;\n        v[j++].push_back('B');\n      }\n    } else {\n      if (a[2] > a[0] + a[1])\n        f = 1;\n      ch = 'B';\n      m = a[2];\n      for (long long i = 0; i < m; i++)\n        v[i].clear();\n      long long j = 0;\n      for (long long k = 0; k < a[1]; k++)\n        v[j++].push_back('Y');\n      for (long long k = 0; k < a[0]; k++) {\n        j %= m;\n        v[j++].push_back('R');\n      }\n    }\n    fout << \"Case #\" << _ << \": \";\n    if (f)\n      fout << \"IMPOSSIBLE\";\n    else {\n      for (long long i = 0; i < m; i++) {\n        fout << ch;\n        for (auto u : v[i])\n          fout << u;\n      }\n    }\n    fout << '\\n';\n  }\n}\n"}
{"target":"Ali.Sh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MAXN = 111;\n\nifstream fin(\"in.in\");\nofstream fout(\"out.out\");\n\nlong long d[MAXN][MAXN];\n\nlong double dis[MAXN][MAXN];\n\nlong long l[MAXN], v[MAXN];\n\nint32_t main() {\n  ios::sync_with_stdio(0);\n  fin.tie(0);\n  long long t;\n  fin >> t;\n  fout << fixed << setprecision(6);\n  for (long long _ = 1; _ <= t; _++) {\n    long long n, q;\n    fin >> n >> q;\n    for (long long i = 0; i < n; i++)\n      fin >> l[i] >> v[i];\n    for (long long i = 0; i < n; i++)\n      for (long long j = 0; j < n; j++) {\n        fin >> d[i][j];\n        if (d[i][j] == -1)\n          d[i][j] = 1e18;\n        if (i == j)\n          d[i][j] = 0;\n      }\n    for (long long k = 0; k < n; k++)\n      for (long long i = 0; i < n; i++)\n        for (long long j = 0; j < n; j++)\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n\n    for (long long i = 0; i < n; i++)\n      for (long long j = 0; j < n; j++) {\n        dis[i][j] = 1e18;\n        if (d[i][j] <= l[i])\n          dis[i][j] = (long double)d[i][j] \/ (long double)v[i];\n      }\n    for (long long k = 0; k < n; k++)\n      for (long long i = 0; i < n; i++)\n        for (long long j = 0; j < n; j++)\n          dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n\n    fout << \"Case #\" << _ << \": \";\n    for (long long i = 0; i < q; i++) {\n      long long s, t;\n      fin >> s >> t;\n      fout << dis[s - 1][t - 1] << ' ';\n    }\n    fout << '\\n';\n  }\n}\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nint A[20];\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    cout << \"Case #\" << ca << \": \";\n    string s;\n    cin >> s;\n    int n = s.size();\n    for (int i = 0; i < n; i++)\n      A[i] = s[i] - '0';\n    int last = 0;\n    for (int i = 1; i < n; i++) {\n      if (A[i] > A[i - 1])\n        last = i;\n      else\n        break;\n    }\n    bool tidy = true;\n    for (int i = 1; i < n; i++)\n      if (A[i] < A[i - 1])\n        tidy = false;\n    if (!tidy) {\n      A[last]--;\n      for (int i = last + 1; i < n; i++)\n        A[i] = 9;\n    }\n    bool started = false;\n    for (int i = 0; i < n; i++) {\n      if (A[i] != 0) {\n        started = true;\n        cout << A[i];\n      } else if (started) {\n        cout << A[i];\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nmap<ll, ll> freq;\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    cout << \"Case #\" << ca << \": \";\n    ll n, k;\n    cin >> n >> k;\n    freq.clear();\n    set<ll> q;\n    q.insert(-n);\n    freq[n] = 1;\n    vector<pair<ll, ll>> vals;\n    while (q.size()) {\n      ll now = -(*q.begin());\n      q.erase(q.begin());\n      ll val = freq[now];\n      \/\/ cout<<now<<\" \"<<val<<endl;\n      vals.push_back({-now, val});\n      ll l = (now - 1) \/ 2;\n      ll r = now - 1 - l;\n      if (l != 0) {\n        if (freq.count(l))\n          freq[l] += val;\n        else {\n          freq[l] = val;\n          q.insert(-l);\n        }\n      }\n      if (r != 0) {\n        if (freq.count(r))\n          freq[r] += val;\n        else {\n          freq[r] = val;\n          q.insert(-r);\n        }\n      }\n    }\n    sort(vals.begin(), vals.end());\n    ll tot = 0;\n    for (pair<ll, ll> p : vals) {\n      tot += p.second;\n      if (tot >= k) {\n        ll l = (-p.first - 1) \/ 2;\n        ll r = -p.first - 1 - l;\n        cout << r << \" \" << l << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nchar A[1005];\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    string s;\n    cin >> s;\n    for (int i = 0; i < s.size(); i++)\n      A[i + 1] = s[i];\n    int k;\n    cin >> k;\n    int ans = 0;\n    for (int i = 1; i <= s.size() - k + 1; i++)\n      if (A[i] == '-') {\n        ans++;\n        for (int j = 0; j < k; j++) {\n          if (A[i + j] == '-')\n            A[i + j] = '+';\n          else\n            A[i + j] = '-';\n        }\n      }\n    int good = true;\n    for (int i = s.size() - k + 2; i <= s.size(); i++)\n      if (A[i] == '-')\n        good = false;\n    cout << \"Case #\" << ca << \": \";\n    if (good)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pii;\n\nll need[1005];\nvector<pii> segs[1005];\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    cout << \"Case #\" << ca << \": \";\n    int n, p;\n    cin >> n >> p;\n    for (int i = 1; i <= n; i++) {\n      cin >> need[i];\n      segs[i].clear();\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        ll x;\n        cin >> x;\n        ll l = (10 * x + 11 * need[i] - 1) \/ (11 * need[i]);\n        ll r = (10 * x) \/ (9 * need[i]);\n        if (l <= r)\n          segs[i].push_back({l, r});\n      }\n      if (segs[i].size())\n        sort(segs[i].begin(), segs[i].end());\n    }\n    \/*for (int i=1;i<=n;i++){\n        for (pii p:segs[i]) cout<<p.first<<' '<<p.second<<','; cout<<endl;\n    }*\/\n    int ans = 0;\n    for (int i = 0; i < segs[1].size(); i++) {\n      ll l = segs[1][i].first, r = segs[1][i].second;\n      int ch = -1;\n      for (int j = 0; j < segs[2].size(); j++) {\n        if ((segs[2][j].second < l) || (segs[2][j].first > r))\n          1;\n        else {\n          ch = j;\n          break;\n        }\n      }\n      if (ch != -1) {\n        ans++;\n        segs[2].erase(segs[2].begin() + ch);\n      }\n    }\n    if (n == 1)\n      ans = segs[1].size();\n    cout << ans << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nchar G[27][27];\nint l[27], r[27], u[27], d[27];\nchar ans[27][27];\nint row, col;\nbool valid(int a, int b, int c, int e, int cc) {\n  if (a <= 0)\n    return false;\n  if (b > col)\n    return false;\n  if (c <= 0)\n    return false;\n  if (e > row)\n    return false;\n  for (int i = c; i <= e; i++)\n    for (int j = a; j <= b; j++) {\n      if ((ans[i][j] != ('A' + cc)) && (ans[i][j] != '?'))\n        return false;\n    }\n  return true;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    cout << \"Case #\" << ca << \": \" << endl;\n    cin >> row >> col;\n    for (int i = 1; i <= row; i++)\n      for (int j = 1; j <= col; j++) {\n        cin >> G[i][j];\n        ans[i][j] = G[i][j];\n      }\n    memset(r, 0, sizeof r);\n    memset(d, 0, sizeof d);\n    for (int i = 0; i < 27; i++)\n      l[i] = 100, u[i] = 100;\n    for (int i = 1; i <= row; i++)\n      for (int j = 1; j <= col; j++)\n        if (G[i][j] != '?') {\n          int x = G[i][j] - 'A';\n          l[x] = min(l[x], j);\n          r[x] = max(r[x], j);\n          u[x] = min(u[x], i);\n          d[x] = max(d[x], i);\n        }\n    for (int i = 0; i < 26; i++)\n      if (l[i] != 100) {\n        while (valid(l[i] - 1, r[i], u[i], d[i], i))\n          l[i]--;\n        while (valid(l[i], r[i] + 1, u[i], d[i], i))\n          r[i]++;\n        while (valid(l[i], r[i], u[i] - 1, d[i], i))\n          u[i]--;\n        while (valid(l[i], r[i], u[i], d[i] + 1, i))\n          d[i]++;\n        \/\/ cout<<l[i]<<\" \"<<r[i]<<\" \"<<u[i]<<\" \"<<d[i]<<endl;\n        for (int a = u[i]; a <= d[i]; a++)\n          for (int b = l[i]; b <= r[i]; b++) {\n            ans[a][b] = 'A' + i;\n          }\n      }\n    for (int i = 1; i <= row; i++) {\n      for (int j = 1; j <= col; j++)\n        cout << ans[i][j];\n      cout << endl;\n    }\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    int n;\n    ld d;\n    cin >> d >> n;\n    ld ans = 0;\n    while (n--) {\n      ld k, s;\n      cin >> k >> s;\n      ans = max(ans, (d - k) \/ s);\n    }\n    cout << \"Case #\" << ca << \": \" << fixed << setprecision(10) << (d \/ ans)\n         << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nstring simple(int r, int yy, int b) {\n  vector<pair<int, string>> v;\n  v.push_back({r, \"R\"});\n  v.push_back({yy, \"Y\"});\n  v.push_back({b, \"B\"});\n  sort(v.begin(), v.end());\n  string x = v[0].second;\n  string y = v[1].second;\n  string z = v[2].second;\n  int t1 = v[0].first, t2 = v[1].first, t3 = v[2].first;\n  string s = \"\";\n  if (t1 == 0) {\n    if (t3 - t2 > 1)\n      return \"IMPOSSIBLE\";\n    if (t3 - t2 == 1)\n      s += z;\n    for (int i = 0; i < t2; i++)\n      s += y + z;\n    return s;\n  }\n  for (int i = 0; (t3 > t2) && (t1 > 0); i++) {\n    s += z + x;\n    t1--;\n    t3--;\n  }\n  for (int i = 0; i < t1; i++) {\n    s += y + z + x;\n    t2--, t3--;\n  }\n  if (t3 > t2 + 1)\n    return \"IMPOSSIBLE\";\n  for (int i = 0; i < t2; i++)\n    s += z + y;\n  if (t3 == t2 + 1)\n    s += z;\n  return s;\n}\nstring solve(int r, int o, int y, int g, int b, int v) {\n  string s = \"\";\n  int n = r + o + y + g + b + v;\n  if (r + g == n) {\n    if (r == g) {\n      for (int i = 0; i < r; i++)\n        s += \"RG\";\n      return s;\n    }\n    return \"IMPOSSIBLE\";\n  }\n  if (b + o == n) {\n    if (b == o) {\n      for (int i = 0; i < o; i++)\n        s += \"BO\";\n      return s;\n    }\n    return \"IMPOSSIBLE\";\n  }\n  if (y + v == n) {\n    if (y == v) {\n      for (int i = 0; i < v; i++)\n        s += \"YV\";\n      return s;\n    }\n    return \"IMPOSSIBLE\";\n  }\n  if ((g != 0) && (g + 1 > r))\n    return \"IMPOSSIBLE\";\n  if ((v != 0) && (v + 1 > y))\n    return \"IMPOSSIBLE\";\n  if ((o != 0) && (o + 1 > b))\n    return \"IMPOSSIBLE\";\n\n  if (r == 0) {\n    s = simple(r, y - (v + 1), b - (o + 1));\n    if (s.size()) {\n      if (s[0] == 'I')\n        return s;\n      if (s[0] == s[s.size() - 1])\n        return \"IMPOSSIBLE\";\n    }\n    s += 'B';\n    for (int i = 0; i < o; i++)\n      s += \"OB\";\n    s += 'Y';\n    for (int i = 0; i < v; i++)\n      s += \"VY\";\n    return s;\n  }\n  if (y == 0) {\n    s = simple(r - (g + 1), y, b - (o + 1));\n    if (s.size()) {\n      if (s[0] == 'I')\n        return s;\n      if (s[0] == s[s.size() - 1])\n        return \"IMPOSSIBLE\";\n    }\n    s += 'B';\n    for (int i = 0; i < o; i++)\n      s += \"OB\";\n    s += 'R';\n    for (int i = 0; i < v; i++)\n      s += \"GR\";\n    return s;\n  }\n  if (b == 0) {\n    s = simple(r - (g + 1), y - (v + 1), b);\n    if (s.size()) {\n      if (s[0] == 'I')\n        return s;\n      if (s[0] == s[s.size() - 1])\n        return \"IMPOSSIBLE\";\n    }\n    s += 'R';\n    for (int i = 0; i < g; i++)\n      s += \"GR\";\n    s += 'Y';\n    for (int i = 0; i < v; i++)\n      s += \"VY\";\n    return s;\n  }\n  \/\/ now we're equiped with all three.\n  string part = simple(r - (g + 1), y - (v + 1), b - (o + 1));\n  if (part[0] == 'I')\n    return part;\n  s += \"R\";\n  for (int i = 0; i < g; i++)\n    s += \"GR\";\n  if (part[0] == 'Y') {\n    if (part[part.size() - 1] == 'B') {\n      reverse(part.begin(), part.end());\n      s += part;\n      reverse(part.begin(), part.end());\n    } else\n      s += part;\n  }\n  s += \"B\";\n  for (int i = 0; i < o; i++)\n    s += \"OB\";\n  if (part[0] == 'R') {\n    if (part[part.size() - 1] == 'Y') {\n      reverse(part.begin(), part.end());\n      s += part;\n      reverse(part.begin(), part.end());\n    } else\n      s += part;\n  }\n  s += \"Y\";\n  for (int i = 0; i < v; i++)\n    s += \"VY\";\n  if (part[0] == 'B') {\n    if (part[part.size() - 1] == 'R') {\n      reverse(part.begin(), part.end());\n      s += part;\n      reverse(part.begin(), part.end());\n    } else\n      s += part;\n  }\n  return s;\n}\nbool check(string s, int n, int r, int o, int y, int g, int b, int v) {\n  if (s[0] == 'I')\n    return true;\n  if (s.size() != n)\n    return 0;\n  int i = 0, j = 0, k = 0;\n  for (int x = 0; x < n; x++) {\n    if (s[x] == 'R')\n      i++;\n    if (s[x] == 'Y')\n      j++;\n    if (s[x] == 'B')\n      k++;\n  }\n  if (i != r)\n    return false;\n  if (j != y)\n    return false;\n  if (k != b)\n    return false;\n  return true;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    string s = solve(r, o, y, g, b, v);\n    cout << \"Case #\" << ca << \": \" << s << endl;\n    if (check(s, n, r, o, y, g, b, v) == 0)\n      cout << \"AHH\"\n           << \" \" << r << \" \" << o << \" \" << y << \" \" << g << \" \" << b << \" \"\n           << v << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"alin42","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long double ld;\n\nld d[105];\nld e[105], v[105];\nbool vis[105];\nld DP[105];\nint n;\nld dp(int i) {\n  if (vis[i])\n    return DP[i];\n  if (i == n)\n    return 0;\n  ld ans = 1e12;\n  ld tot = 0;\n  for (int k = i + 1; k <= n; k++) {\n    tot += d[k - 1];\n    if (tot > e[i])\n      break;\n    ans = min(ans, dp(k) + tot \/ v[i]);\n  }\n  vis[i] = true;\n  return DP[i] = ans;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"readable.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int ca = 1; ca <= t; ca++) {\n    memset(vis, 0, sizeof vis);\n    cin >> n;\n    int q;\n    cin >> q;\n    for (int i = 1; i <= n; i++)\n      cin >> e[i] >> v[i];\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        ld x;\n        cin >> x;\n        if (j == i + 1)\n          d[i] = x;\n      }\n    }\n    int x, y;\n    cin >> x >> y;\n    cout << \"Case #\" << ca << \": \" << fixed << setprecision(10) << dp(1)\n         << endl;\n  }\n  return 0;\n}\n\n\/\/ g++ -std=c++11 -O2 -Wfatal-errors -Im -Wall -Wextra -o \"output.txt\"\n\/\/ \"code.cpp\"\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    string s;\n    cin >> s;\n    string res = s;\n    for (int(i) = 0; (i) < (s.size() - 1); (i)++) {\n      string temp(s.size() - i - 1, s[i]);\n      if (temp <= s.substr(i + 1))\n        continue;\n      res[i]--;\n      for (int(j) = (i + 1); (j) < (s.size()); (j)++)\n        res[j] = '9';\n      break;\n    }\n    while (res[0] == '0')\n      res = res.substr(1);\n    cout << res << endl;\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nPLL divideme(ll n) {\n  n--;\n  ll k1 = n \/ 2;\n  ll k2 = n - k1;\n  return PLL(min(k1, k2), max(k1, k2));\n}\nbool comp(const pair<PLL, ll> &a, const pair<PLL, ll> &b) {\n  return (a.first.first < b.first.first ||\n          a.first.first == b.first.first && a.first.second > b.first.second);\n}\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    ll n, k;\n    cin >> n >> k;\n    ll two = 1;\n    map<PLL, ll> mp;\n    mp[divideme(n)] = 1;\n    vector<pair<PLL, ll>> res;\n    ll freeSlot = 1;\n    while (freeSlot < k) {\n      two <<= 1;\n      freeSlot += two;\n      map<PLL, ll> temp;\n      for (map<PLL, ll>::iterator it = mp.begin(); it != mp.end(); ++it) {\n        PLL p1 = divideme(it->first.first);\n        PLL p2 = divideme(it->first.second);\n        if (temp.find(p1) == temp.end())\n          temp[p1] = 0;\n        if (temp.find(p2) == temp.end())\n          temp[p2] = 0;\n        temp[p1] += it->second;\n        temp[p2] += it->second;\n      }\n      mp = temp;\n      if (freeSlot >= k) {\n        k = k - (freeSlot - two);\n        break;\n      }\n    }\n    for (map<PLL, ll>::iterator it = mp.begin(); it != mp.end(); ++it)\n      res.push_back(*it);\n    sort((res).begin(), (res).end());\n    reverse((res).begin(), (res).end());\n    for (int(i) = 0; (i) < (res.size()); (i)++) {\n      if (k <= res[i].second) {\n        cout << res[i].first.second << \" \" << res[i].first.first << endl;\n        break;\n      } else\n        k -= res[i].second;\n    }\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    string s;\n    int k;\n    cin >> s >> k;\n    int res = 0;\n    for (int(i) = 0; (i) < (s.size() - k + 1); (i)++) {\n      if (s[i] == '+')\n        continue;\n      for (int(j) = (i); (j) < (i + k); (j)++)\n        s[j] = (s[j] == '+' ? '-' : '+');\n      res++;\n    }\n    bool ok = true;\n    for (int(i) = 0; (i) < (s.size()); (i)++)\n      if (s[i] == '-')\n        ok = false;\n    if (ok)\n      cout << res << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nint findmini(int x, int s) {\n  int res = (x * 10) \/ (11 * s);\n  if ((x * 10) % (11 * s) == 0)\n    return res;\n  return res + 1;\n}\nint findmaxi(int x, int s) {\n  int res = (x * 10) \/ (9 * s);\n  return res;\n}\n\nbool graph[128][128];\nbool seen[128];\nint matchL[128], matchR[128];\nint n, p;\n\nbool bpm(int u) {\n  for (int v = 0; v < p; v++)\n    if (graph[u][v]) {\n      if (seen[v])\n        continue;\n      seen[v] = true;\n\n      if (matchR[v] < 0 || bpm(matchR[v])) {\n        matchL[u] = v;\n        matchR[v] = u;\n        return true;\n      }\n    }\n  return false;\n}\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    cin >> n >> p;\n    vector<int> ingredients;\n    for (int(i) = 0; (i) < (n); (i)++) {\n      int x;\n      cin >> x;\n      ingredients.push_back(x);\n    }\n    int mini[100][100] = {0};\n    int maxi[100][100] = {0};\n    memset((mini), (0), sizeof(mini));\n    memset((maxi), (0), sizeof(maxi));\n    for (int(i) = 0; (i) < (n); (i)++) {\n      vector<int> temp;\n      for (int(j) = 0; (j) < (p); (j)++) {\n        int x;\n        cin >> x;\n        temp.push_back(x);\n      }\n      sort((temp).begin(), (temp).end());\n      for (int(j) = 0; (j) < (p); (j)++) {\n        mini[i][j] = findmini(temp[j], ingredients[i]);\n        maxi[i][j] = findmaxi(temp[j], ingredients[i]);\n        if (mini[i][j] > maxi[i][j])\n          mini[i][j] = maxi[i][j] = -1;\n      }\n    }\n    memset((graph), (false), sizeof(graph));\n    for (int(i) = 0; (i) < (p); (i)++)\n      for (int(j) = 0; (j) < (p); (j)++) {\n        if (mini[0][i] <= 0 || mini[1][j] <= 0)\n          continue;\n        if (max(mini[0][i], mini[1][j]) <= min(maxi[0][i], maxi[1][j]))\n          graph[i][j] = true;\n      }\n    if (n == 2) {\n      memset(matchL, -1, sizeof(matchL));\n      memset(matchR, -1, sizeof(matchR));\n      int cnt = 0;\n      for (int i = 0; i < p; i++) {\n        memset(seen, 0, sizeof(seen));\n        if (bpm(i))\n          cnt++;\n      }\n      cout << cnt << endl;\n    } else {\n      int sum = 0;\n      for (int(i) = 0; (i) < (p); (i)++)\n        if (mini[0][i] != -1 && mini[0][i] <= maxi[0][i])\n          sum++;\n      cout << sum << endl;\n    }\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    string s[30];\n    int n, m;\n    cin >> n >> m;\n    for (int(i) = 0; (i) < (n); (i)++)\n      cin >> s[i];\n    for (int(i) = 0; (i) < (n); (i)++) {\n      char lastchar = '?';\n      for (int(j) = 0; (j) < (m); (j)++) {\n        if (s[i][j] != '?') {\n          lastchar = s[i][j];\n          continue;\n        }\n        if (lastchar != '?')\n          s[i][j] = lastchar;\n      }\n      lastchar = '?';\n      for (int j = m - 1; j >= 0; j--) {\n        if (s[i][j] != '?') {\n          lastchar = s[i][j];\n          continue;\n        }\n        if (lastchar != '?')\n          s[i][j] = lastchar;\n      }\n    }\n    for (int(j) = 0; (j) < (m); (j)++) {\n      char lastchar = '?';\n      for (int(i) = 0; (i) < (n); (i)++) {\n        if (s[i][j] != '?') {\n          lastchar = s[i][j];\n          continue;\n        }\n        if (lastchar != '?')\n          s[i][j] = lastchar;\n      }\n      lastchar = '?';\n      for (int i = n - 1; i >= 0; i--) {\n        if (s[i][j] != '?') {\n          lastchar = s[i][j];\n          continue;\n        }\n        if (lastchar != '?')\n          s[i][j] = lastchar;\n      }\n    }\n    cout << endl;\n    for (int(i) = 0; (i) < (n); (i)++)\n      cout << s[i] << endl;\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    int D, N;\n    cin >> D >> N;\n    vector<PII> v;\n    for (int(i) = 0; (i) < (N); (i)++) {\n      PII p;\n      cin >> p.first >> p.second;\n      v.push_back(p);\n    }\n    sort((v).begin(), (v).end());\n    reverse((v).begin(), (v).end());\n    double res = 0;\n    for (int(i) = 0; (i) < (N); (i)++)\n      res = max(res, ((double)D - v[i].first) \/ v[i].second);\n    cout << fixed << setprecision(9) << D \/ res << endl;\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nstring imposible = \"IMPOSSIBLE\";\n\nstring f2(string s, int N, int R, int B, int Y) {\n  char Front = 'A';\n  char Back = 'A';\n  if (!s.empty()) {\n    Front = s[0];\n    Back = s.back();\n  }\n  for (int(i) = 0; (i) < (N); (i)++) {\n    if (Back == 'R') {\n      if (B > Y) {\n        s += \"B\";\n        B--;\n      } else if (Y > B) {\n        s += \"Y\";\n        Y--;\n      } else {\n        if (B == 0 && Y == 0)\n          return imposible;\n        if (Front == 'B') {\n          s += 'B';\n          B--;\n        } else {\n          s += 'Y';\n          Y--;\n        }\n      }\n    } else if (Back == 'B') {\n      if (R > Y) {\n        s += \"R\";\n        R--;\n      } else if (Y > R) {\n        s += \"Y\";\n        Y--;\n      } else {\n        if (R == 0 && Y == 0)\n          return imposible;\n        if (Front == 'R') {\n          s += 'R';\n          R--;\n        } else {\n          s += 'Y';\n          Y--;\n        }\n      }\n    } else if (Back == 'Y') {\n      if (R > B) {\n        s += \"R\";\n        R--;\n      } else if (B > R) {\n        s += \"B\";\n        B--;\n      } else {\n        if (R == 0 && B == 0)\n          return imposible;\n        if (Front == 'R') {\n          s += \"R\";\n          R--;\n        } else {\n          s += \"B\";\n          B--;\n        }\n      }\n    } else {\n      if (R != 0) {\n        s += \"R\";\n        R--;\n      } else if (B != 0) {\n        s += \"B\";\n        B--;\n      } else if (Y != 0) {\n        s += \"Y\";\n        Y--;\n      } else\n        return imposible;\n    }\n    Back = s.back();\n    Front = s.front();\n  }\n  if (s.size() > 1 && s.back() == s.front())\n    return imposible;\n  return s;\n}\n\nstring f(int N, int R, int O, int Y, int G, int B, int V) {\n  if (G > R)\n    return imposible;\n  if (O > B)\n    return imposible;\n  if (V > Y)\n    return imposible;\n\n  if (G == R && G != 0) {\n    if (O == 0 && B == 0 && V == 0 && Y == 0) {\n      string res;\n      for (int(i) = 0; (i) < (N \/ 2); (i)++)\n        res += \"GR\";\n      return res;\n    } else\n      return imposible;\n  }\n  if (O == B && O != 0) {\n    if (R == 0 && G == 0 && V == 0 && Y == 0) {\n      string res;\n      for (int(i) = 0; (i) < (N \/ 2); (i)++)\n        res += \"OB\";\n      return res;\n    } else\n      return imposible;\n  }\n  if (V == Y && V != 0) {\n    if (O == 0 && B == 0 && G == 0 && R == 0) {\n      string res;\n      for (int(i) = 0; (i) < (N \/ 2); (i)++)\n        res += \"VY\";\n      return res;\n    } else\n      return imposible;\n  }\n  string res[3];\n\n  string RG;\n  for (int(i) = 0; (i) < (G); (i)++)\n    RG += \"RG\";\n  if (!RG.empty())\n    RG += \"R\";\n  string BO;\n  for (int(i) = 0; (i) < (O); (i)++)\n    BO += \"BO\";\n  if (!BO.empty())\n    BO += \"B\";\n  string YV;\n  for (int(i) = 0; (i) < (V); (i)++)\n    YV += \"YV\";\n  if (!YV.empty())\n    YV += \"Y\";\n  if (G != 0)\n    R -= (G + 1);\n  if (O != 0)\n    B -= (O + 1);\n  if (V != 0)\n    Y -= (V + 1);\n  res[0] = f2(RG + BO + YV, R + B + Y, R, B, Y);\n  res[1] = f2(RG + YV + BO, R + B + Y, R, B, Y);\n  res[2] = f2(YV + RG + BO, R + B + Y, R, B, Y);\n\n  for (int(i) = 0; (i) < (3); (i)++)\n    if (res[i] != imposible)\n      return res[i];\n  return imposible;\n}\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    cout << f(N, R, O, Y, G, B, V) << endl;\n  }\n}\n"}
{"target":"Alireza.bh","func":"\n#pragma comment(linker, \"\/STACK:100000000000\")\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\n\nvector<PII> horse;\nvector<int> dis;\ndouble memo[110][110];\ndouble f(int ind, int curHorse) {\n  ll sum = 0;\n  for (int(i) = (curHorse); (i) < (ind); (i)++)\n    sum += dis[i];\n  if (sum > horse[curHorse].first)\n    return 1e100;\n\n  if (ind == dis.size())\n    return 0;\n\n  double res = 1e100;\n  double &ret = memo[ind][curHorse];\n  if (ret < 0)\n    return ret;\n\n  res = min(res,\n            (double)dis[ind] \/ horse[curHorse].second + f(ind + 1, curHorse));\n  res = min(res, (double)dis[ind] \/ horse[ind].second + f(ind + 1, ind));\n\n  return ret = res;\n}\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  int Tcas;\n  cin >> Tcas;\n  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {\n    printf(\"Case #%d: \", cas + 1);\n    int n, q;\n    cin >> n >> q;\n    horse.clear();\n    dis.clear();\n    memset((memo), (-1), sizeof(memo));\n    for (int(i) = 0; (i) < (n); (i)++) {\n      PII p;\n      cin >> p.first >> p.second;\n      horse.push_back(p);\n    }\n    for (int(i) = 0; (i) < (n); (i)++)\n      for (int(j) = 0; (j) < (n); (j)++) {\n        int k;\n        cin >> k;\n        if (i + 1 == j)\n          dis.push_back(k);\n      }\n    for (int(qq) = 0; (qq) < (q); (qq)++) {\n      int st, en;\n      cin >> st >> en;\n      cout << fixed << setprecision(9) << f(0, 0) << \" \";\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nint main() {\n  int T;\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    long long N;\n    vector<int> v;\n    cin >> N;\n\n    int prev = N % 10;\n    N \/= 10;\n    v.push_back(prev);\n    while (N != 0) {\n      int now = N % 10;\n      if (prev < now) {\n        N--;\n        now = N % 10;\n        for (int i = 0; i < v.size(); i++) {\n          v[i] = 9;\n        }\n      }\n      N \/= 10;\n      v.push_back(now);\n      prev = now;\n    }\n\n    while (v.back() == 0)\n      v.pop_back();\n\n    printf(\"Case #%d: \", testCase);\n    for (int i = v.size() - 1; i >= 0; i--) {\n      printf(\"%d\", v[i]);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nint main() {\n  int T;\n  freopen(\"C-small-1-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    long long N, K, cnt, step;\n    cin >> N >> K;\n\n    cnt = 1;\n    step = 1;\n\n    while (K > step) {\n      K -= step;\n      if (N % 2 == 1) {\n        long long tmp = step - cnt;\n        cnt *= 2;\n        cnt += tmp;\n      }\n      step <<= 1;\n      N \/= 2;\n    }\n\n    printf(\"Case #%d: \", testCase);\n\n    if (K <= cnt) {\n      printf(\"%lld %lld\", N \/ 2, (N - 1) \/ 2);\n    } else {\n      printf(\"%lld %lld\", (N - 1) \/ 2, (N - 2) \/ 2);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <string>\nusing namespace std;\n\nint main() {\n  int T;\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    string str;\n    int K;\n\n    cin >> str >> K;\n\n    int res = 0;\n    for (int i = 0; i <= str.size() - K; i++) {\n      if (str[i] == '-') {\n        res++;\n        for (int j = i; j < i + K; j++) {\n          str[j] = str[j] == '-' ? '+' : '-';\n        }\n      }\n    }\n\n    bool isOK = true;\n    for (int i = str.size() - 1; i >= 0; i--) {\n      if (str[i] == '-') {\n        isOK = false;\n        break;\n      }\n    }\n    printf(\"Case #%d: \", testCase);\n\n    if (isOK) {\n      printf(\"%d\", res);\n    } else {\n      printf(\"IMPOSSIBLE\");\n    }\n\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\npair<int, int> getRange(int need, int available) {\n  available *= 10;\n\n  int maximum = available \/ (9 * need);\n  int minimum = available \/ (11 * need);\n\n  if (available % (11 * need) != 0) {\n    minimum++;\n  }\n\n  if (maximum < minimum) {\n    return make_pair(-1, -1);\n  }\n\n  return make_pair(minimum, maximum);\n}\n\nint main() {\n  int T;\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    int N, P;\n    scanf(\"%d %d\", &N, &P);\n\n    int pack[100][100];\n    int needs[100];\n\n    int idx[100] = {\n        0,\n    };\n\n    pair<int, int> rng[100][100];\n\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d\", &needs[i]);\n    }\n\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        scanf(\"%d\", &pack[i][j]);\n      }\n    }\n\n    for (int i = 0; i < N; i++) {\n      sort(pack[i], pack[i] + P);\n    }\n\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        rng[i][j] = getRange(needs[i], pack[i][j]);\n      }\n    }\n\n    int res = 0;\n\n    for (; idx[0] < P; idx[0]++) {\n      int minimum = rng[0][idx[0]].first;\n      bool ck = true;\n\n      if (minimum == -1)\n        continue;\n\n      do {\n        for (int j = 1; j < N; j++) {\n          for (; idx[j] < P; idx[j]++) {\n            if (minimum <= rng[j][idx[j]].second) {\n              minimum = max(minimum, rng[j][idx[j]].first);\n              break;\n            }\n          }\n\n          if (idx[j] >= P) {\n            goto EXIT;\n          }\n        }\n\n        for (int j = 0; j < N; j++) {\n          if (rng[j][idx[j]].first <= minimum &&\n              minimum <= rng[j][idx[j]].second) {\n            continue;\n          } else {\n            ck = false;\n            break;\n          }\n        }\n      } while (minimum <= rng[0][idx[0]].second && !ck);\n\n      if (ck) {\n        res++;\n        for (int j = 1; j < N; j++) {\n          idx[j]++;\n\n          if (idx[j] >= P) {\n            break;\n          }\n        }\n      }\n    }\n  EXIT:\n\n    printf(\"Case #%d: %d\\n\", testCase, res);\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nint main() {\n  int T;\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    int R, C;\n    scanf(\"%d %d\", &R, &C);\n\n    char board[30][30] = {\n        0,\n    };\n\n    queue<pair<pair<int, int>, char>> q;\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        scanf(\" %c\", &board[i][j]);\n\n        if (board[i][j] != '?') {\n          q.push(make_pair(make_pair(i, j), board[i][j]));\n        }\n      }\n    }\n\n    while (!q.empty()) {\n      int y = q.front().first.first;\n      int x = q.front().first.second;\n      char c = q.front().second;\n\n      q.pop();\n\n      if (y - 1 >= 0 && board[y - 1][x] == '?') {\n        board[y - 1][x] = c;\n        q.push(make_pair(make_pair(y - 1, x), c));\n      }\n\n      if (y + 1 < R && board[y + 1][x] == '?') {\n        board[y + 1][x] = c;\n        q.push(make_pair(make_pair(y + 1, x), c));\n      }\n    }\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (board[i][j] == '?') {\n          char c = 'A';\n\n          int tmpJ = j;\n          while (tmpJ >= 0 && board[i][tmpJ] == '?') {\n            tmpJ--;\n          }\n\n          if (tmpJ == -1) {\n            tmpJ = 0;\n            while (tmpJ < C && board[i][tmpJ] == '?') {\n              tmpJ++;\n            }\n          }\n\n          c = (tmpJ < C ? board[i][tmpJ] : c);\n\n          board[i][j] = c;\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", testCase);\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        printf(\"%c\", board[i][j]);\n      }\n      printf(\"\\n\");\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\nstruct State {\n  int Hd, Ad, Hk, Ak, Depth;\n};\n\nstring toS(State s) {\n  char buf[5000];\n\n  sprintf(buf, \"%d,%d,%d,%d,%d,%d\", s.Hd, s.Ad, s.Hk, s.Ak, s.Depth);\n\n  return string(buf);\n}\nint main() {\n  int T;\n  freopen(\"A-small-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    long long D;\n    int N;\n    scanf(\"%lld %d\", &D, &N);\n\n    long long K[1001], S[1001];\n\n    double res;\n\n    for (int i = 0; i < N; i++) {\n      scanf(\"%lld %lld\", &K[i], &S[i]);\n    }\n\n    pair<long long, long long> maxTime = {0, 1};\n\n    for (int i = 0; i < N; i++) {\n      if (maxTime.first * S[i] < maxTime.second * (D - K[i])) {\n        maxTime = make_pair(D - K[i], S[i]);\n      }\n    }\n\n    res = (double)maxTime.second * D \/ (double)maxTime.first;\n\n    printf(\"Case #%d: %.6lf\\n\", testCase, res);\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <assert.h>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint dim[6][6] = {{0, 0, 1, 1, 1, 0}, {0, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 1, 1},\n                 {1, 0, 0, 0, 0, 0}, {1, 1, 1, 0, 0, 0}, {0, 0, 1, 0, 0, 0}};\nint main() {\n  int T;\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    int N;\n    int R, O, Y, G, B, V;\n\n    scanf(\"%d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n\n    int total = R + O + Y + G + B + V;\n\n    string strBO;\n    string strYV;\n    string strRG;\n\n    printf(\"Case #%d: \", testCase);\n\n    while (O > 0 && B > 0) {\n      strBO += \"BO\";\n      O--;\n      B--;\n    }\n\n    if (total == strBO.size()) {\n      cout << strBO << endl;\n      continue;\n    }\n\n    if (strBO.size() > 0) {\n      if (B == 0) {\n        printf(\"IMPOSSIBLE\\n\");\n        continue;\n      } else {\n        B--;\n        strBO += \"B\";\n      }\n    }\n\n    while (V > 0 && Y > 0) {\n      strYV += \"YV\";\n      Y--;\n      V--;\n    }\n\n    if (total == strYV.size()) {\n      cout << strYV << endl;\n      continue;\n    }\n\n    if (strYV.size() > 0) {\n      if (Y == 0) {\n        printf(\"IMPOSSIBLE\\n\");\n        continue;\n      } else {\n        Y--;\n        strYV += \"Y\";\n      }\n    }\n\n    while (R > 0 && G > 0) {\n      strRG += \"RG\";\n      R--;\n      G--;\n    }\n\n    if (total == strRG.size()) {\n      cout << strRG << endl;\n      continue;\n    }\n\n    if (strRG.size() > 0) {\n      if (R == 0) {\n        printf(\"IMPOSSIBLE\\n\");\n        continue;\n      } else {\n        R--;\n        strRG += \"R\";\n      }\n    }\n\n    pair<int, string> RBY[3] = {{R + (strRG.size() > 0), \"R\"},\n                                {B + (strBO.size() > 0), \"B\"},\n                                {Y + (strYV.size() > 0), \"Y\"}};\n\n    sort(RBY, RBY + 3);\n\n    if (RBY[0].first + RBY[1].first < RBY[2].first) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n\n    string str2;\n\n    while (RBY[0].first + RBY[1].first > RBY[2].first) {\n      str2 += RBY[2].second + RBY[1].second + RBY[0].second;\n      RBY[0].first--;\n      RBY[1].first--;\n      RBY[2].first--;\n    }\n    while (RBY[1].first > 0) {\n      str2 += RBY[2].second + RBY[1].second;\n      RBY[1].first--;\n      RBY[2].first--;\n    }\n    while (RBY[0].first > 0) {\n      str2 += RBY[2].second + RBY[0].second;\n      RBY[0].first--;\n      RBY[2].first--;\n    }\n\n    string res;\n\n    bool ckR = strRG.size() == 0, ckB = strBO.size() == 0,\n         ckY = strYV.size() == 0;\n\n    for (int i = 0; i < str2.size(); i++) {\n      if (str2[i] == 'R' && !ckR) {\n        ckR = true;\n        res += strRG;\n      } else if (str2[i] == 'B' && !ckB) {\n        ckB = true;\n        res += strBO;\n      } else if (str2[i] == 'Y' && !ckY) {\n        ckY = true;\n        res += strYV;\n      } else {\n        res.push_back(str2[i]);\n      }\n    }\n\n    assert(res.size() == total);\n\n    cout << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"ALOHA.Brcps","func":"#include <algorithm>\n#include <assert.h>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int T;\n  freopen(\"C-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n\n  for (int testCase = 1; testCase <= T; testCase++) {\n    int N, Q;\n\n    scanf(\"%d %d\", &N, &Q);\n\n    pair<long long, long long> horses[101];\n\n    for (int i = 0; i < N; i++) {\n      scanf(\"%lld %lld\", &horses[i].first, &horses[i].second);\n    }\n\n    long long adj[101][101];\n\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        scanf(\"%lld\", &adj[i][j]);\n      }\n    }\n\n    int S, E;\n    scanf(\"%d %d\", &S, &E);\n    S--;\n    E--;\n\n    double dist[101];\n    fill(dist, dist + 101, 987654321654897123LL);\n\n    dist[S] = 0;\n\n    for (int s = S; s < E; s++) {\n      long long d = 0;\n      for (int e = s + 1; e <= E; e++) {\n        d += adj[e - 1][e];\n        if (d <= horses[s].first) {\n          dist[e] = min(dist[e], dist[s] + d \/ (double)horses[s].second);\n        }\n      }\n    }\n\n    printf(\"Case #%d: \", testCase);\n    printf(\"%.6lf\\n\", dist[E]);\n  }\n\n  return 0;\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nstring tidy(string s) {\n  int t = 0, pos = 0, pos2 = 0;\n  for (int i = 0; i < s.size() - 1; i++) {\n    if (s[i] > s[i + 1]) {\n      t = 1;\n      break;\n    } else if (s[i] < s[i + 1]) {\n      pos = i + 1;\n    }\n  }\n  if (t) {\n    s[pos] = s[pos] - 1;\n    for (int i = pos + 1; i < s.size(); i++)\n      s[i] = '9';\n  }\n  if (s[0] == '0') {\n    s = s.substr(1);\n  }\n  return s;\n}\nstring s;\nint main() {\n\n  int n, m;\n  cin >> n;\n  for (int j = 0; j < n; j++) {\n    cin >> s;\n    cout << \"Case #\" << j + 1 << \": \" << tidy(s) << endl;\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nint main() {\n\n  int n, m, t;\n  cin >> t;\n  for (int j = 0; j < t; j++) {\n    cin >> n >> m;\n    priority_queue<int> pq;\n    pq.push(n);\n    m--;\n    while (m--) {\n      int l = (pq.top() - 1) \/ 2, r = (pq.top()) \/ 2;\n      pq.pop();\n      if (l)\n        pq.push(l);\n      if (r)\n        pq.push(r);\n    }\n    int l = (pq.top()) \/ 2, r = (pq.top() - 1) \/ 2;\n    cout << \"Case #\" << j + 1 << \": \" << l << \" \" << r << endl;\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nint bit[1005];\nvoid upd(int x, int v) {\n  while (x < 1001) {\n    bit[x] += v;\n    x += x & -x;\n  }\n}\nint qry(int x) {\n  int ret = 0;\n  while (x) {\n    ret += bit[x];\n    x -= x & -x;\n  }\n  return ret;\n}\nstring s;\nint main() {\n\n  int n, m;\n  cin >> n;\n  for (int j = 0; j < n; j++) {\n    int k, c = 0;\n    cin >> s >> k;\n    memset(bit, 0, sizeof bit);\n    for (int i = 0; i < s.size() - k + 1; i++) {\n      if ((s[i] != '+') ^ (qry(i + 1) % 2)) {\n        c++;\n        upd(i + 1, 1);\n        upd(i + k + 1, -1);\n      }\n    }\n    for (int i = s.size() - k + 1; i < s.size(); i++) {\n      if ((s[i] != '+') ^ (qry(i + 1) % 2)) {\n        c = -1;\n      }\n    }\n    printf(\"Case #%d: \", j + 1);\n    if (c > -1)\n      printf(\"%d\\n\", c);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nvector<pair<int, int>> v[2];\nint binsh(int a, int g) {\n  int l = 0, r = 1000000;\n  while (l + 1 < r) {\n    int m = (l + r) \/ 2;\n    if (a > (g * 1.1000001) * m)\n      l = m;\n    else\n      r = m;\n  }\n  return r;\n}\nint binsl(int a, int g) {\n  int l = 0, r = 1000000;\n  while (l + 1 < r) {\n    int m = (l + r) \/ 2;\n    if (a >= (g * 0.89999) * m)\n      l = m;\n    else\n      r = m;\n  }\n  return l;\n}\nint ing[3];\nint main() {\n  int t;\n  cin >> t;\n  for (int T = 1, __ = t + 1; T < __; T++) {\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0, __ = n; i < __; i++)\n      cin >> ing[i];\n    for (int i = 0, __ = n; i < __; i++) {\n      int a;\n      v[i].clear();\n      for (int j = 0, __ = p; j < __; j++) {\n        cin >> a;\n        int qmid = a \/ ing[i];\n        if (binsl(a, ing[i]) >= binsh(a, ing[i])) {\n          v[i].push_back(make_pair(binsh(a, ing[i]), binsl(a, ing[i])));\n        }\n      }\n      sort(v[i].begin(), v[i].end());\n    }\n    cout << \"Case #\" << T << \": \";\n    if (v[0].size() < v[1].size())\n      swap(v[0], v[1]);\n    if (n == 1)\n      cout << v[0].size();\n    else {\n      int mxm = 0;\n      do {\n        int cnt = 0;\n        for (int i = 0, __ = min(v[1].size(), v[0].size()); i < __; i++) {\n          if (v[1][i].first >= v[0][i].first && v[1][i].first <= v[0][i].second)\n            cnt++;\n          else if (v[1][i].second >= v[0][i].first &&\n                   v[1][i].second <= v[0][i].second)\n            cnt++;\n          else if (v[1][i].first <= v[0][i].first &&\n                   v[1][i].second >= v[0][i].first)\n            cnt++;\n          else if (v[1][i].first <= v[0][i].second &&\n                   v[1][i].second >= v[0][i].second)\n            cnt++;\n        }\n        mxm = max(mxm, cnt);\n      } while (next_permutation(v[0].begin(), v[0].end()));\n      cout << mxm;\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nstring brd[27];\nint rep[27];\nint r, c, t;\nint main() {\n  cin >> t;\n  for (int T = 0, __ = t; T < __; T++) {\n    cin >> r >> c;\n    int fir = -1, ls = -1;\n    memset(rep, -1, sizeof rep);\n    for (int i = 0, __ = r; i < __; i++) {\n      cin >> brd[i];\n      int grow = 0;\n      char k = '?';\n      for (int j = 0, __ = c; j < __; j++)\n        if (brd[i][j] != '?') {\n          grow = 1;\n          k = brd[i][j];\n          break;\n        }\n      for (int j = 0, __ = c; j < __; j++) {\n        if (brd[i][j] != '?')\n          k = brd[i][j];\n        else\n          brd[i][j] = k;\n      }\n      if (grow && fir == -1)\n        fir = i;\n      if (!grow)\n        rep[i] = ls;\n      else\n        ls = i;\n    }\n    cout << \"Case #\" << T + 1 << \":\" << endl;\n    for (int i = 0, __ = r; i < __; i++) {\n      if (i < fir)\n        cout << brd[fir] << endl;\n      else if (~rep[i])\n        cout << brd[rep[i]] << endl;\n      else\n        cout << brd[i] << endl;\n    }\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  int t;\n  cin >> t;\n  for (int T = 1; T < t + 1; T++) {\n    double mxs = 0;\n    double dist;\n    int n;\n    cin >> dist >> n;\n    for (int i = 0; i < n; i++) {\n      double stt, spd;\n      cin >> stt >> spd;\n      mxs = max(mxs, (dist - stt) \/ spd);\n    }\n    cout.precision(6);\n    cout << \"Case #\" << T << \": \" << fixed << dist \/ mxs << endl;\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nint arr[1006];\nint n, r, o, y, g, b, v;\nmap<int, char> mapaw;\nint main() {\n\n  mapaw[1] = 'R';\n  mapaw[2] = 'Y';\n  mapaw[4] = 'B';\n  mapaw[3] = 'O';\n  mapaw[5] = 'V';\n  mapaw[6] = 'G';\n  int t;\n  cin >> t;\n  for (int T = 1; T < t + 1; T++) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (n == 1) {\n      if (r)\n        cout << \"R\" << endl;\n      if (o)\n        cout << \"O\" << endl;\n      if (y)\n        cout << \"Y\" << endl;\n      if (g)\n        cout << \"G\" << endl;\n      if (b)\n        cout << \"B\" << endl;\n      if (v)\n        cout << \"V\" << endl;\n      continue;\n    }\n    cout << \"Case #\" << T << \": \";\n    int ps = 1;\n    if (r + y + b < o + g + v) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    if (r) {\n      r--;\n      arr[0] = 1;\n    } else if (y) {\n      y--;\n      arr[0] = 2;\n    } else {\n      b--;\n      arr[0] = 4;\n    }\n    for (int i = 1; i < n; i++) {\n      int proxmsk = ((~arr[i - 1]) & 7);\n      if (proxmsk == 3) {\n        if (o) {\n          o--;\n          arr[i] = 3;\n        } else if (y > r) {\n          y--;\n          arr[i] = 2;\n        } else if (r) {\n          r--;\n          arr[i] = 1;\n        } else\n          ps = 0;\n      } else if (proxmsk == 6) {\n        if (g) {\n          g--;\n          arr[i] = 6;\n        } else if (y > b) {\n          y--;\n          arr[i] = 2;\n        } else if (b) {\n          b--;\n          arr[i] = 4;\n        } else\n          ps = 0;\n      } else if (proxmsk == 5) {\n        if (v) {\n          v--;\n          arr[i] = 5;\n        } else if (b > r) {\n          b--;\n          arr[i] = 4;\n        } else if (r) {\n          r--;\n          arr[i] = 1;\n        } else\n          ps = 0;\n      } else if (proxmsk == 1 && r) {\n        r--;\n        arr[i] = 1;\n      } else if (proxmsk == 2 && y) {\n        y--;\n        arr[i] = 2;\n      } else if (proxmsk == 4 && b) {\n        b--;\n        arr[i] = 4;\n      } else\n        ps = 0;\n    }\n    ps = ps && !(arr[n - 1] & arr[0]);\n    if (ps) {\n      for (int i = 0; i < n; i++)\n        cout << (mapaw[arr[i]]);\n    } else\n      cout << \"IMPOSSIBLE\";\n    cout << endl;\n  }\n}\n"}
{"target":"Alpgc","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nint arr[105][105];\nint md[105], sp[105];\ndouble mincost[105];\nll dist[105];\nint main() {\n  int t;\n  cin >> t;\n  for (int T = 1; T < t + 1; T++) {\n    int n, q;\n    cin >> n >> q;\n    mincost[0] = 0;\n    dist[0] = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> md[i] >> sp[i];\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        cin >> arr[i][j];\n      }\n    cin >> q >> q;\n    for (int i = 1; i < n; i++)\n      dist[i] = dist[i - 1] + arr[i - 1][i];\n    for (int i = 1; i < n + 1; i++)\n      mincost[i] = 1e50;\n    for (int i = 0; i < n; i++) {\n      for (int j = i + 1; j < n; j++) {\n        if (dist[j] - dist[i] <= md[i]) {\n          mincost[j] =\n              min(mincost[i] + (dist[j] - dist[i]) \/ double(sp[i]), mincost[j]);\n        }\n      }\n    }\n    cout.precision(6);\n    cout << \"Case #\" << T << \": \" << fixed << mincost[n - 1] << endl;\n  }\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nbool func(string &cur, string &orig, long long index) {\n  long long n = orig.length();\n  if (index >= n)\n    return true;\n  for (char i = '9'; i >= cur[index - 1]; --i) {\n    cur[index] = i;\n    if (cur.substr(0, index + 1) > orig.substr(0, index + 1))\n      continue;\n    bool tmp = func(cur, orig, index + 1);\n    if (tmp)\n      return true;\n  }\n  cur[index] = orig[index];\n  return false;\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  cin.ignore(256, '\\n');\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n    string inp, orig;\n    cin >> inp;\n    inp = \"0\" + inp;\n    orig = inp;\n\n    bool poss = func(inp, orig, 1);\n    long long n = inp.length();\n    if (poss) {\n      long long i = 0;\n      while (i < n - 1 && inp[i] == '0')\n        ++i;\n      inp = inp.substr(i);\n      cout << \"Case #\" << ccr << \": \" << inp << \"\\n\";\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n\n    long long n, k, val1, val2;\n    cin >> n >> k;\n    priority_queue<long long, vector<long long>, less<long long>> pq;\n    pq.push(n);\n    while (k--) {\n      long long val = pq.top();\n      pq.pop();\n      val1 = val2 = val \/ 2;\n      if (val % 2 == 0) {\n        --val2;\n      }\n      pq.push(val1);\n      pq.push(val2);\n    }\n\n    cout << \"Case #\" << ccr << \": \" << val1 << \" \" << val2 << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n    long long flip1 = 0, flip2 = 0;\n    bool poss1 = true, poss2 = true;\n    string inp;\n    cin.ignore(256, '\\n');\n    cin >> inp;\n    long long k;\n    cin >> k;\n    long long n = inp.length();\n\n    queue<long long> over;\n    char problem = '-';\n    for (long long i = 0; i < n; ++i) {\n      if (!over.empty() && over.front() == i) {\n        over.pop();\n        if (problem == '+')\n          problem = '-';\n        else\n          problem = '+';\n      }\n      if (inp[i] != problem)\n        continue;\n\n      over.push(i + k);\n      if ((i + k) > n) {\n        poss1 = false;\n        break;\n      }\n      ++flip1;\n      if (problem == '+')\n        problem = '-';\n      else\n        problem = '+';\n    }\n\n    while (!over.empty())\n      over.pop();\n\n    problem = '-';\n    for (long long i = n - 1; i >= 0; --i) {\n      if (!over.empty() && over.front() == i) {\n        over.pop();\n        if (problem == '+')\n          problem = '-';\n        else\n          problem = '+';\n      }\n      if (inp[i] != problem)\n        continue;\n\n      over.push(i - k);\n      if ((i - k) < -1) {\n        poss2 = false;\n        break;\n      }\n      ++flip2;\n      if (problem == '+')\n        problem = '-';\n      else\n        problem = '+';\n    }\n\n    if (!poss1 && !poss2) {\n      cout << \"Case #\" << ccr << \": IMPOSSIBLE\\n\";\n    } else if (poss1 && poss2) {\n      cout << \"Case #\" << ccr << \": \" << min(flip1, flip2) << \"\\n\";\n    } else if (poss1) {\n      cout << \"Case #\" << ccr << \": \" << flip1 << \"\\n\";\n    } else {\n      cout << \"Case #\" << ccr << \": \" << flip2 << \"\\n\";\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nbool func(string &cur, string &orig, double index) {\n  double n = orig.length();\n  if (index >= n)\n    return true;\n  for (char i = '9'; i >= cur[index - 1]; --i) {\n    cur[index] = i;\n    if (cur.substr(0, index + 1) > orig.substr(0, index + 1))\n      continue;\n    bool tmp = func(cur, orig, index + 1);\n    if (tmp)\n      return true;\n  }\n  cur[index] = orig[index];\n  return false;\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  double t;\n  cin >> t;\n  cin.ignore(256, '\\n');\n  for (double ccr = 1; ccr <= t; ++ccr) {\n    double numIng, numPack;\n    cin >> numIng >> numPack;\n    vector<double> reqQ(numIng, 0);\n    for (double i = 0; i < numIng; ++i) {\n      cin >> reqQ[i];\n    }\n    double val, ans = 0;\n    multiset<double> in;\n    vector<multiset<double>> pack(numIng, in);\n    for (double i = 0; i < numIng; ++i) {\n      for (double j = 0; j < numPack; ++j) {\n        cin >> val;\n        pack[i].insert(val);\n      }\n    }\n    double lim = 1000000;\n\n    for (double i = 0; i < numIng; ++i) {\n      multiset<double>::iterator it = pack[i].end();\n      --it;\n      val = *it;\n      val \/= reqQ[i];\n      lim = min(lim, 4 * val);\n    }\n\n    for (double dish = 1; dish <= lim; ++dish) {\n      vector<double> less(numIng, 0), more(numIng, 0);\n      for (double i = 0; i < numIng; ++i) {\n        less[i] = 0.9 * reqQ[i] * dish;\n        more[i] = 1.1 * reqQ[i] * dish;\n      }\n      bool poss = true;\n      vector<multiset<double>::iterator> deleteIts(numIng);\n      for (double i = 0; i < numIng; ++i) {\n        auto it = pack[i].lower_bound(less[i]);\n        if (it == pack[i].end() || *it > more[i]) {\n          poss = false;\n          break;\n        }\n        deleteIts[i] = it;\n      }\n      if (poss) {\n        ++ans;\n        for (double i = 0; i < numIng; ++i) {\n          pack[i].erase(deleteIts[i]);\n        }\n        --dish;\n      }\n    }\n    cout << \"Case #\" << ccr << \": \" << ans << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n\n    long long rows, cols;\n    cin >> rows >> cols;\n    cin.ignore(256, '\\n');\n    vector<string> vec(rows, \"\");\n    for (long long i = 0; i < rows; ++i)\n      cin >> vec[i];\n    for (long long i = 0; i < rows; ++i) {\n      for (long long j = 1; j < cols; ++j) {\n        if (vec[i][j] == '?' && vec[i][j - 1] != '?')\n          vec[i][j] = vec[i][j - 1];\n      }\n    }\n    for (long long i = 0; i < rows; ++i) {\n      for (long long j = cols - 2; j >= 0; --j) {\n        if (vec[i][j] == '?' && vec[i][j + 1] != '?')\n          vec[i][j] = vec[i][j + 1];\n      }\n    }\n    for (long long j = 0; j < cols; ++j) {\n      for (long long i = 1; i < rows; ++i) {\n        if (vec[i][j] == '?' && vec[i - 1][j] != '?')\n          vec[i][j] = vec[i - 1][j];\n      }\n    }\n    for (long long j = 0; j < cols; ++j) {\n      for (long long i = rows - 2; i >= 0; --i) {\n        if (vec[i][j] == '?' && vec[i + 1][j] != '?')\n          vec[i][j] = vec[i + 1][j];\n      }\n    }\n\n    cout << \"Case #\" << ccr << \":\\n\";\n    for (long long i = 0; i < rows; ++i) {\n      cout << vec[i] << \"\\n\";\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp1.txt\", \"r\", stdin);\n  freopen(\"out1.txt\", \"w\", stdout);\n  double t;\n  cin >> t;\n  cout << std::fixed;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n    double d, n, ans = INT_MIN;\n    cin >> d >> n;\n    for (double i = 0; i < n; ++i) {\n      double k, s;\n      cin >> k >> s;\n      k = d - k;\n      double tme = k \/ s;\n      ans = max(ans, tme);\n    }\n    ans = d \/ ans;\n    cout << \"Case #\" << ccr << \": \" << setprecision(7) << ans << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp2.txt\", \"r\", stdin);\n  freopen(\"out2.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n    long long n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    string ans(n, 'a');\n    if (r >= b && r >= y) {\n      ans[0] = 'R';\n      --r;\n    } else if (b >= r && b >= y) {\n      ans[0] = 'B';\n      --b;\n    } else {\n      ans[0] = 'Y';\n      --y;\n    }\n\n    for (int i = 1; i < n; ++i) {\n      if (ans[i - 1] == 'R') {\n        if (b > y || (b == y && ans[0] == 'B' && b > 0)) {\n          ans[i] = 'B';\n          --b;\n        } else {\n          if (y <= 0) {\n            ans = \"IMPOSSIBLE\";\n            break;\n          }\n          ans[i] = 'Y';\n          --y;\n        }\n      } else if (ans[i - 1] == 'B') {\n        if (r > y || (r == y && ans[0] == 'R' && r > 0)) {\n          ans[i] = 'R';\n          --r;\n        } else {\n          if (y <= 0) {\n            ans = \"IMPOSSIBLE\";\n            break;\n          }\n          ans[i] = 'Y';\n          --y;\n        }\n      } else {\n        if (r > b || (b == r && ans[0] == 'R' && r > 0)) {\n          ans[i] = 'R';\n          --r;\n        } else {\n          if (b <= 0) {\n            ans = \"IMPOSSIBLE\";\n            break;\n          }\n          ans[i] = 'B';\n          --b;\n        }\n      }\n    }\n    if (ans != \"IMPOSSIBLE\" && ans[n - 1] == ans[0]) {\n      ans = \"IMPOSSIBLE\";\n    }\n    cout << \"Case #\" << ccr << \": \" << ans << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"aman.chandna","func":"\n\n#include <bits\/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  freopen(\"inp3.txt\", \"r\", stdin);\n  freopen(\"out3.txt\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  cout << std::fixed;\n  for (long long ccr = 1; ccr <= t; ++ccr) {\n    double n, q;\n    cin >> n >> q;\n    pair<double, double> in;\n    vector<pair<double, double>> hinfo(n, in);\n    for (double i = 0; i < n; ++i)\n      cin >> hinfo[i].first >> hinfo[i].second;\n    vector<vector<double>> graph(n, vector<double>(n, 0));\n    for (double i = 0; i < n; ++i) {\n      for (double j = 0; j < n; ++j) {\n        cin >> graph[i][j];\n      }\n    }\n    vector<double> ans(n, 0.0);\n    for (double i = n - 2; i >= 0; --i) {\n      double opt = DBL_MAX;\n      double dist = 0.0;\n      for (double j = i + 1; j < n; ++j) {\n        dist += graph[j - 1][j];\n        if (dist <= hinfo[i].first) {\n          opt = min(opt, dist \/ hinfo[i].second + ans[j]);\n        } else {\n          break;\n        }\n      }\n      ans[i] = opt;\n    }\n    for (double i = 0; i < q; ++i) {\n      double aa;\n      cin >> aa >> aa;\n    }\n    cout << \"Case #\" << ccr << \": \" << setprecision(7) << ans[0] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 100;\n\nint n;\nint a[MAXN];\n\nlong long max(long long x, long long y) { return x > y ? x : y; }\n\nvoid init() {\n  char tmp[50];\n  scanf(\"%s\", tmp);\n  n = strlen(tmp);\n  memset(a, 0, sizeof(a));\n  for (int i = 0; i < n; ++i)\n    a[n - i] = tmp[i] - '0';\n}\n\nvoid sub(int k) {\n  if (a[k] > 0)\n    --a[k];\n  else {\n    a[k] == 9;\n    sub(k + 1);\n  }\n}\n\nvoid solve() {\n  int k = -1;\n  while (k != 0) {\n    k = 0;\n    for (int i = n; i > 0; --i)\n      if (a[i] < a[i + 1]) {\n        k = i + 1;\n        break;\n      }\n    if (k == 0)\n      break;\n    sub(k);\n    for (int i = k - 1; i > 0; --i)\n      a[i] = 9;\n    while (n > 1 && a[n] == 0)\n      --n;\n  }\n  for (int i = n; i > 0; --i)\n    printf(\"%d\", a[i]);\n  printf(\"\\n\");\n}\n\nint main() {\n  \/\/ freopen(\"b.in\", \"r\", stdin);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <cstdio>\n#include <cstring>\n#include <queue>\n\nstd::priority_queue<int> heap;\n\nint n, k;\n\nvoid init() { scanf(\"%d %d\", &n, &k); }\n\nvoid solve() {\n  while (heap.size() > 0)\n    heap.pop();\n  heap.push(n);\n  for (int i = 1; i < k; ++i) {\n    int t = heap.top();\n    heap.pop();\n    int t1 = (t - 1) \/ 2;\n    int t2 = t - 1 - t1;\n    heap.push(t1);\n    heap.push(t2);\n  }\n  int t = heap.top();\n  heap.pop();\n  int t1 = (t - 1) \/ 2;\n  int t2 = t - 1 - t1;\n  printf(\"%d %d\\n\", t2, t1);\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 1100;\n\nint n, s;\nchar a[MAXN];\n\nvoid solve() {\n  scanf(\"%s %d\", a + 1, &s);\n  n = strlen(a + 1);\n  int ans = 0;\n  for (int i = 1; i <= n - s + 1; ++i)\n    if (a[i] == '-') {\n      ++ans;\n      for (int j = i; j <= i + s - 1; ++j)\n        a[j] ^= ('-' ^ '+');\n    }\n  for (int i = 1; i <= n; ++i)\n    if (a[i] == '-') {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 60;\n\nstruct Tseg {\n  int l, r;\n};\n\nbool cmp(Tseg a, Tseg b) { return a.l < b.l; }\n\nint n, p;\nint a[MAXN];\nTseg s[MAXN][MAXN];\nint h[MAXN];\n\nbool merge() {\n  int l = 0;\n  int r = 0x7FFFFFFF;\n  for (int i = 1; i <= n; ++i) {\n    if (s[i][h[i]].l > l)\n      l = s[i][h[i]].l;\n    if (s[i][h[i]].r < r)\n      r = s[i][h[i]].r;\n  }\n  return l <= r;\n}\n\nbool mov() {\n  for (int i = 1; i <= n; ++i) {\n    ++h[i];\n    if (h[i] > p)\n      return false;\n  }\n  return true;\n}\n\nvoid init() {\n  scanf(\"%d %d\", &n, &p);\n  for (int i = 1; i <= n; ++i)\n    scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= p; ++j) {\n      int q;\n      scanf(\"%d\", &q);\n      s[i][j].l = (int)(q \/ 1.1 \/ (double)a[i] - 1E-8) + 1;\n      s[i][j].r = (int)(q \/ 0.9 \/ (double)a[i]);\n    }\n  }\n  for (int i = 1; i <= n; ++i)\n    std::sort(s[i] + 1, s[i] + p + 1, cmp);\n}\n\nvoid solve() {\n  int t = 0;\n  for (int i = 1; i <= n; ++i)\n    h[i] = 1;\n  while (1) {\n    if (merge()) {\n      ++t;\n      if (!mov())\n        break;\n    } else {\n      int k = 1;\n      for (int i = 2; i <= n; ++i)\n        if (s[i][h[i]].l < s[k][h[k]].l)\n          k = i;\n      ++h[k];\n      if (h[k] > p)\n        break;\n    }\n  }\n  printf(\"%d\\n\", t);\n}\n\nint main() {\n  \/\/ freopen(\"b.in\", \"r\", stdin);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 30;\n\nint n, m;\nchar a[MAXN][MAXN];\n\nvoid init() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < n; ++i)\n    scanf(\"%s\", a[i]);\n}\n\nvoid solve() {\n  int l = -1;\n  for (int i = 0; i < n; ++i) {\n    char tmp = '?';\n    for (int j = 0; j < m; ++j)\n      if (a[i][j] != '?') {\n        tmp = a[i][j];\n        break;\n      }\n    if (tmp == '?')\n      continue;\n    else if (l == -1)\n      l = i;\n    for (int j = 0; j < m; ++j)\n      if (a[i][j] == '?')\n        a[i][j] = tmp;\n      else\n        tmp = a[i][j];\n  }\n  for (int i = 0; i < n; ++i) {\n    if (a[i][0] == '?')\n      printf(\"%s\\n\", a[l]);\n    else {\n      l = i;\n      printf(\"%s\\n\", a[i]);\n    }\n  }\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d:\\n\", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n\nusing namespace std;\n\nconst int MAXN = 1100;\n\nint d, n;\npair<int, int> a[MAXN];\n\nvoid init() {\n  scanf(\"%d %d\", &d, &n);\n  for (int i = 1; i <= n; ++i)\n    scanf(\"%d %d\", &a[i].first, &a[i].second);\n  sort(a + 1, a + n + 1);\n}\n\nvoid solve() {\n  double ans = 0;\n  for (int i = 1; i <= n; ++i) {\n    double cur = (double)(d - a[i].first) \/ (double)a[i].second;\n    if (cur > ans)\n      ans = cur;\n  }\n  printf(\"%.8lf\\n\", (double)d \/ ans);\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n\nconst int MAXN = 1100;\nconst int MAXC = 6;\n\n\/\/ Red, Orange, Yellow, Green, Blue, Violet\nconst int LINKS[6][6] = {{0, 0, 1, 1, 1, 0},  \/\/ R\n                         {0, 0, 0, 0, 1, 0},  \/\/ O\n                         {1, 0, 0, 0, 1, 1},  \/\/ Y\n                         {1, 0, 0, 0, 0, 0},  \/\/ G\n                         {1, 1, 1, 0, 0, 0},  \/\/ B\n                         {0, 0, 1, 0, 0, 0}}; \/\/ V\n\nconst char C[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nconst int L[6] = {3, -1, 5, -1, 1, -1};\n\nint n;\nint a[MAXC], b[MAXC];\nint d[MAXC];\n\nvoid init() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < 6; ++i)\n    scanf(\"%d\", &a[i]);\n}\n\nvoid arrange(int &c1, int &c2, int &c3) {\n  if (b[0] >= b[2] && b[0] >= b[4])\n    c1 = 0;\n  if (b[2] >= b[0] && b[2] >= b[4])\n    c1 = 2;\n  if (b[4] >= b[0] && b[4] >= b[2])\n    c1 = 4;\n  if (b[4] <= b[0] && b[4] <= b[2])\n    c3 = 4;\n  if (b[2] <= b[0] && b[2] <= b[4])\n    c3 = 2;\n  if (b[0] <= b[2] && b[0] <= b[4])\n    c3 = 0;\n  c2 = (c1 ^ c3 ^ 0 ^ 2 ^ 4);\n}\n\nvoid putu(int c) {\n  printf(\"%c\", C[c]);\n  --b[c];\n  while (a[L[c]] > 0) {\n    --a[L[c]];\n    printf(\"%c%c\", C[L[c]], C[c]);\n  }\n}\n\nvoid solve() {\n  b[0] = a[0] - a[3];\n  b[2] = a[2] - a[5];\n  b[4] = a[4] - a[1];\n  if (b[0] < 0 || b[2] < 0 || b[4] < 0 || b[0] + b[2] < b[4] ||\n      b[0] + b[4] < b[2] || b[2] + b[4] < b[0]) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  int c1, c2, c3;\n  arrange(c1, c2, c3);\n  if (b[c1] == 0) {\n    if ((a[1] > 0 && a[3] > 0) || (a[1] > 0 && a[5] > 0) ||\n        (a[3] > 0 && a[5] > 0)) {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    }\n    if (a[1] > 0) {\n      for (int i = 1; i <= a[1]; ++i)\n        printf(\"%c%c\", C[1], C[4]);\n    }\n    if (a[3] > 0) {\n      for (int i = 1; i <= a[3]; ++i)\n        printf(\"%c%c\", C[3], C[0]);\n    }\n    if (a[5] > 0) {\n      for (int i = 1; i <= a[5]; ++i)\n        printf(\"%c%c\", C[5], C[2]);\n    }\n    printf(\"\\n\");\n    return;\n  }\n  while (b[0] + b[2] + b[4] + a[1] + a[3] + a[5] > 0) {\n    if (b[c1] == b[c2] + b[c3]) {\n      putu(c1);\n      if (b[c3] > 0)\n        putu(c3);\n      else\n        putu(c2);\n    } else {\n      putu(c1);\n      putu(c2);\n      putu(c3);\n    }\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  \/\/ freopen(\"b.in\", \"r\", stdin);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d: \", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"angwuy","func":"#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 110;\nconst long long INF = 10000000000000000LL;\n\nint n, q;\nlong long e[MAXN], s[MAXN];\nlong long d[MAXN][MAXN];\ndouble ans[MAXN][MAXN];\n\nlong long min(long long x, long long y) { return x < y ?: y; }\n\nvoid init() {\n  scanf(\"%d %d\", &n, &q);\n  for (int i = 1; i <= n; ++i)\n    scanf(\"%I64d %I64d\", &e[i], &s[i]);\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= n; ++j) {\n      scanf(\"%I64d\", &d[i][j]);\n      if (d[i][j] < 0)\n        d[i][j] = INF;\n    }\n}\n\nvoid solve() {\n  for (int k = 1; k <= n; ++k)\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j)\n        d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= n; ++j) {\n      if (i != j)\n        ans[i][j] = (double)INF;\n      else\n        ans[i][j] = 0;\n    }\n\n  for (int k = 1; k <= n; ++k)\n    for (int l = 1; l <= n; ++l) {\n      if (d[k][l] > e[k])\n        continue;\n      double tmp = (double)d[k][l] \/ (double)s[k];\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j) {\n          double tmp2 = ans[i][k] + ans[l][j] + tmp;\n          if (tmp2 < ans[i][j])\n            ans[i][j] = tmp2;\n        }\n    }\n  for (int i = 1; i <= q; ++i) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    printf(\" %.8lf\", ans[x][y]);\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int ii = 1; ii <= tt; ++ii) {\n    init();\n    printf(\"Case #%d:\", ii);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nlong long int find(vector<int> v, int n) {\n  if (v.size() > n)\n    return -1;\n\n  for (int i = 0; i < v.size() - 1; i++) {\n    if (v[i] > v[i + 1])\n      return -1;\n  }\n\n  while (v.size() < n)\n    v.push_back(9);\n\n  long long int cur = 1LL, ans = 0LL;\n  reverse(v.begin(), v.end());\n  for (int i = 0; i < v.size(); i++) {\n    ans += 1LL * v[i] * cur;\n    cur = 1LL * 10 * cur;\n  }\n  return ans;\n}\n\nlong long int ret(vector<int> v) {\n  int ind = -1;\n  for (int i = 0; i < v.size() - 1; i++) {\n    if (v[i] > v[i + 1]) {\n      ind = i;\n      break;\n    }\n  }\n  vector<int> tmp;\n  long long int ans = 0LL;\n  for (int t = 0; t < v.size(); t++) {\n    vector<int> tt;\n    for (int i = 0; i < tmp.size(); i++)\n      tt.push_back(tmp[i]);\n    for (int i = 0; i < v[t]; i++) {\n      tt.push_back(i);\n      if (tt.empty())\n        continue;\n      ans = max(ans, find(tt, v.size()));\n      tt.pop_back();\n    }\n    tmp.push_back(v[t]);\n  }\n  ans = max(ans, find(tmp, v.size()));\n  return ans;\n}\n\nvoid solve(int tt) {\n  vector<int> t;\n  long long int n;\n  cin >> n;\n  while (n) {\n    t.push_back(n % 10);\n    n \/= 10;\n  }\n  reverse(t.begin(), t.end());\n  long long int uu = ret(t);\n  cout << \"Case #\" << tt << \": \" << uu << endl;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nset<pair<int, pair<int, int>>> s;\n\npair<int, pair<int, int>> get(int l, int r) {\n  return make_pair(l - r, make_pair(l, r));\n}\n\nvoid solve(int id) {\n  int n, k;\n  cin >> n >> k;\n  s.clear();\n  s.insert(get(1, n));\n  while (!s.empty()) {\n    k--;\n    pair<int, pair<int, int>> cur = *s.begin();\n    s.erase(s.begin());\n    int l = cur.second.first, r = cur.second.second;\n    int mid = (l + r) \/ 2;\n    int ld = mid - l, rd = r - mid;\n    if (k == 0) {\n      cout << \"Case #\" << id << \": \" << max(ld, rd) << \" \" << min(ld, rd)\n           << endl;\n      return;\n    }\n    if (mid - 1 >= l)\n      s.insert(get(l, mid - 1));\n    if (mid + 1 <= r)\n      s.insert(get(mid + 1, r));\n  }\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvoid solve(int tt) {\n  string s;\n  int k;\n  cin >> s;\n  cin >> k;\n  int ans = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '+')\n      continue;\n    if (i + k - 1 >= s.size()) {\n      cout << \"Case #\" << tt << \": IMPOSSIBLE\" << endl;\n      return;\n    }\n    for (int j = i; j < i + k; j++) {\n      if (s[j] == '+')\n        s[j] = '-';\n      else\n        s[j] = '+';\n    }\n    ans++;\n  }\n  cout << \"Case #\" << tt << \": \" << ans << endl;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\n\nint a[60][60];\nlong long int c[60];\nint cnt[60];\n\nmultiset<long long int> st[60];\n\nbool take(long long int qnt, int n) {\n\n  for (int i = 1; i <= n; i++) {\n    long long int l = 1LL * 9 * qnt * c[i];\n    l = l \/ 10;\n    long long int u = 1LL * 11 * qnt * c[i];\n    u = u \/ 10;\n\n    if (st[i].empty())\n      return 0;\n    if (*(--st[i].end()) < l)\n      return 0;\n    if ((*st[i].begin()) > u)\n      return 0;\n  }\n  for (int i = 1; i <= n; i++) {\n    long long int u = 1LL * 9 * qnt * c[i];\n    u = u \/ 10;\n    multiset<long long int>::iterator it = st[i].lower_bound(u);\n    st[i].erase(it);\n  }\n  return 1;\n}\n\nvoid solve(int ind) {\n  int n, p;\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++) {\n    cin >> c[i];\n  }\n  for (int i = 1; i <= n; i++)\n    st[i].clear();\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= p; j++) {\n      cin >> a[i][j];\n      st[i].insert(a[i][j]);\n    }\n  }\n  int ans = 0;\n  for (int i = 1; i <= 1000500; i++) {\n    while (1) {\n      if (take(i, n))\n        ans++;\n      else\n        break;\n    }\n  }\n  cout << \"Case #\" << ind << \": \" << ans << endl;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  return 0;\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\n\nchar a[30][30];\nint done[30][30];\nint R, C;\nvoid fix(int tt, int l, int r, char c) {\n  for (int i = tt; i >= 1; i--) {\n    if (a[i][l] != '?')\n      break;\n    for (int j = l; j <= r; j++)\n      a[i][j] = c;\n  }\n}\n\nvoid fixdown(int tt) {\n  for (int i = tt; i < R; i++) {\n    for (int j = 1; j <= C; j++)\n      a[i + 1][j] = a[i][j];\n  }\n}\n\nvoid solve(int ind) {\n  int r, c;\n  cin >> r >> c;\n  R = r;\n  C = c;\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++) {\n      cin >> a[i][j];\n      done[i][j] = 0;\n    }\n  }\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++) {\n      if (a[i][j] == '?')\n        continue;\n      int lt = j, rt = j;\n      for (int k = j - 1; k >= 1; k--) {\n        if (a[i][k] == '?') {\n          a[i][k] = a[i][j];\n          lt = k;\n        } else\n          break;\n      }\n      for (int k = j + 1; k <= C; k++) {\n        if (a[i][k] == '?') {\n          a[i][k] = a[i][j];\n          rt = k;\n        } else\n          break;\n      }\n      fix(i - 1, lt, rt, a[i][j]);\n    }\n  }\n  for (int i = r; i >= 1; i--) {\n    if (a[i][1] != '?') {\n      fixdown(i);\n      break;\n    }\n  }\n  cout << \"Case #\" << ind << \": \" << endl;\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++)\n      cout << a[i][j];\n    cout << endl;\n  }\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  return 0;\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\n\nint k[1020], s[1020];\n\nbool check(int n, double sp, int d) {\n  for (int i = 1; i <= n; i++) {\n    if ((double)d \/ sp < (double)(d - k[i]) \/ (double)s[i])\n      return 0;\n  }\n  return 1;\n}\n\nvoid solve(int ind) {\n  int d, n;\n  cin >> d >> n;\n  for (int i = 1; i <= n; i++)\n    cin >> k[i] >> s[i];\n  double lo = 0, hi = 1e16;\n  for (int i = 0; i < 100; i++) {\n    double mid = (lo + hi) \/ 2.000;\n    if (check(n, mid, d)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  cout << \"Case #\" << ind << \": \";\n  double mid = (lo + hi) \/ 2.000;\n  printf(\"%.6f \\n\", mid);\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  return 0;\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\nint a[1020][1020];\n\nint e[1020], s[1020];\n\nvoid solve(int ind) {\n  int n, r, o, y, g, b, V;\n  cin >> n >> r >> o >> y >> g >> b >> V;\n  assert(r + o + y + g + b + V == n);\n  vector<pair<int, char>> v;\n  v.push_back(make_pair(r, 'r'));\n  v.push_back(make_pair(y, 'y'));\n  v.push_back(make_pair(b, 'b'));\n  sort(v.begin(), v.end());\n  if (v[2].first > v[0].first + v[1].first) {\n    cout << \"Case #\" << ind << \": IMPOSSIBLE\" << endl;\n    return;\n  }\n  string s = \"\";\n  while (v[1].first) {\n    s += v[2].second;\n    s += v[1].second;\n    v[1].first--;\n    v[2].first--;\n  }\n  while (v[2].first) {\n    s += v[2].second;\n    s += v[0].second;\n    v[0].first--;\n    v[2].first--;\n  }\n  cout << \"Case #\" << ind << \": \";\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != v[1].second)\n      cout << s[i];\n    else {\n      if (v[0].first) {\n        cout << s[i];\n        cout << v[0].second;\n        v[0].first--;\n      } else {\n        cout << s[i];\n      }\n    }\n  }\n  cout << endl;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  return 0;\n}\n"}
{"target":"AnonymousBunny","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\n\nint a[1020][1020];\n\nint e[1020], s[1020];\n\nlong long int dp[1020][1020];\nlong double _ist[1020][1020];\nlong double res[1020][1020];\nlong double act[1020][1020];\nlong double en[1020], sp[1020];\nvoid solve(int ind) {\n  int n, q;\n  cin >> n >> q;\n  for (int i = 1; i <= n; i++) {\n    cin >> e[i] >> s[i];\n    en[i] = (long double)e[i];\n    sp[i] = (long double)s[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++)\n      cin >> a[i][j];\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      if (i != j) {\n        dp[i][j] = a[i][j];\n        if (dp[i][j] == -1)\n          dp[i][j] = 100000000000000LL;\n      } else\n        dp[i][j] = 0;\n    }\n  }\n  for (int k = 1; k <= n; k++) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      _ist[i][j] = (long double)dp[i][j];\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      if (_ist[i][j] > e[i])\n        res[i][j] = (long double)100000000000000LL;\n      else\n        res[i][j] = _ist[i][j] \/ sp[i];\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++)\n      act[i][j] = res[i][j];\n  }\n  for (int k = 1; k <= n; k++) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++)\n        act[i][j] = min(act[i][j], act[i][k] + act[k][j]);\n    }\n  }\n  cout << \"Case #\" << ind << \": \";\n  for (int i = 1; i <= q; i++) {\n    int u, v;\n    cin >> u >> v;\n    printf(\"%.6f \", (double)act[u][v]);\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  return 0;\n}\n"}
{"target":"Astein","func":"\n\n#include <cstdio>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\nchar s[1000];\n\nstring solve(string s) {\n  for (int i = 1; i < s.size(); ++i) {\n    if (s[i - 1] > s[i]) {\n      s[i - 1]--;\n      for (int j = i; j < s.size(); ++j)\n        s[j] = '9';\n      return solve(s);\n    }\n  }\n\n  if (s[0] == '0') {\n    return s.substr(1);\n  }\n  return s;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n\n  for (int cn = 1; cn <= T; ++cn) {\n    scanf(\"%s\", s);\n    printf(\"Case #%d: %s\\n\", cn, solve(s).c_str());\n  }\n}\n"}
{"target":"Astein","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1.out\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cn = 1; cn <= T; ++cn) {\n    long long N, K;\n    cin >> N >> K;\n\n    map<long long, long long> cnt_map;\n    priority_queue<long long> Q;\n    Q.push(N);\n    cnt_map[N] = 1;\n\n    while (K > 0) {\n      long long maxv = Q.top();\n      Q.pop();\n\n      if (K <= cnt_map[maxv]) {\n        cout << \"Case #\" << cn << \": \" << maxv \/ 2 << \" \" << (maxv - 1) \/ 2\n             << endl;\n        break;\n      }\n\n      K -= cnt_map[maxv];\n\n      if (cnt_map.count(maxv \/ 2) == 0) {\n        Q.push(maxv \/ 2);\n      }\n      cnt_map[maxv \/ 2] += cnt_map[maxv];\n\n      if (cnt_map.count((maxv - 1) \/ 2) == 0) {\n        Q.push((maxv - 1) \/ 2);\n      }\n      cnt_map[(maxv - 1) \/ 2] += cnt_map[maxv];\n    }\n  }\n}\n"}
{"target":"Astein","func":"#include <cstdio>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\nchar s[105];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n\n  int N, K;\n\n  for (int cn = 1; cn <= T; ++cn) {\n    scanf(\"%s %d\", s, &K);\n    N = strlen(s);\n    int ret = 0;\n\n    for (int i = 0; i <= N - K; ++i) {\n      if (s[i] == '-') {\n        ret++;\n        for (int j = 0; j < K; ++j)\n          s[i + j] = '-' + '+' - s[i + j];\n      }\n    }\n\n    bool ispos = true;\n    for (int i = 0; i < N; ++i)\n      if (s[i] == '-')\n        ispos = false;\n\n    if (ispos)\n      printf(\"Case #%d: %d\\n\", cn, ret);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cn);\n  }\n}\n"}
{"target":"Astein","func":"\n\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int cn = 1; cn <= T; ++cn) {\n    int N, P;\n    scanf(\"%d%d\", &N, &P);\n    vector<int> R(N);\n    vector<vector<int>> Q(N, vector<int>(P, 0));\n\n    for (int i = 0; i < N; ++i)\n      scanf(\"%d\", &R[i]);\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j)\n        scanf(\"%d\", &Q[i][j]);\n      sort(Q[i].begin(), Q[i].end());\n    }\n\n    vector<pair<int, int>> ret;\n    for (int i = 0; i < N; ++i) {\n      vector<pair<int, int>> cret, pret;\n      for (int j = 0; j < P; ++j) {\n        int l = Q[i][j] \/ (R[i] * 1.1);\n        if ((Q[i][j] * 10) % (R[i] * 11) != 0)\n          l++;\n        int r = Q[i][j] \/ (R[i] * 0.9);\n\n        if (l <= r)\n          cret.push_back({l, r});\n      }\n      if (i == 0) {\n        ret = cret;\n      } else {\n        pret = ret;\n        ret.clear();\n        int c = 0, p = 0;\n        while (true) {\n          if (cret.size() <= c)\n            break;\n          if (pret.size() <= p)\n            break;\n\n          if (max(cret[c].first, pret[p].first) <=\n              min(cret[c].second, pret[p].second)) {\n            ret.push_back({max(cret[c].first, pret[p].first),\n                           min(cret[c].second, pret[p].second)});\n            c++;\n            p++;\n          } else if (cret[c].second > pret[p].second) {\n            p++;\n          } else {\n            c++;\n          }\n        }\n      }\n    }\n    printf(\"Case #%d: %d\\n\", cn, ret.size());\n  }\n}\n"}
{"target":"Astein","func":"\n\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nchar a[27][27];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int cn = 1; cn <= T; ++cn) {\n    memset(a, 0, sizeof(a));\n\n    int R, C;\n    scanf(\"%d%d\", &R, &C);\n    for (int i = 0; i < R; ++i)\n      for (int j = 0; j < C; ++j)\n        scanf(\" %c\", &a[i][j]);\n\n    for (int j = 0; j < C; ++j) {\n      for (int i = 0; i < R; ++i) {\n        if (a[i][j] != '?') {\n          for (int up = i - 1; up >= 0; --up) {\n            if (a[up][j] == '?')\n              a[up][j] = a[i][j];\n            else\n              break;\n          }\n          for (int down = i + 1; down < R; ++down) {\n            if (a[down][j] == '?')\n              a[down][j] = a[i][j];\n            else\n              break;\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < C; ++i) {\n      if (a[0][i] != '?') {\n        for (int y = i - 1; y >= 0; --y) {\n          if (a[0][y] == '?') {\n            for (int x = 0; x < R; ++x)\n              a[x][y] = a[x][i];\n          } else\n            break;\n        }\n        for (int y = i + 1; y < C; ++y) {\n          if (a[0][y] == '?') {\n            for (int x = 0; x < R; ++x)\n              a[x][y] = a[x][i];\n          } else\n            break;\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", cn);\n    for (int i = 0; i < R; ++i)\n      printf(\"%s\\n\", a[i]);\n  }\n}\n"}
{"target":"Astein","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int cn = 1; cn <= T; ++cn) {\n    int D, N;\n    scanf(\"%d%d\", &D, &N);\n    double last_time = 0;\n    for (int i = 0; i < N; ++i) {\n      int K, S;\n      scanf(\"%d%d\", &K, &S);\n      double cur = (D - K) * 1.0 \/ S;\n      last_time = max(last_time, cur);\n    }\n    printf(\"Case #%d: %.10lf\\n\", cn, D * 1.0 \/ last_time);\n  }\n}\n"}
{"target":"Astein","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nstring solve(int r, int y, int b) {\n  int a[3] = {r, y, b};\n  char c[4] = \"RYB\";\n\n  int idx = 0;\n  for (int i = 0; i < 3; ++i)\n    if (a[i] > a[idx])\n      idx = i;\n\n  string ret;\n  int remain = r + y + b;\n\n  int sidx = idx;\n  while (remain) {\n    ret = ret + c[idx];\n    a[idx]--;\n    remain--;\n\n    int nidx = -1;\n    for (int i = 0; i < 3; ++i) {\n      if (i == idx)\n        continue;\n      if (nidx == -1 || a[i] > a[nidx] || a[i] == a[nidx] && i == sidx)\n        nidx = i;\n    }\n    idx = nidx;\n  }\n  return ret;\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n\n  int N, R, O, Y, G, B, V;\n  for (int cn = 1; cn <= T; ++cn) {\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n    if (2 * R > N || 2 * Y > N || 2 * B > N) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cn);\n      continue;\n    }\n    string ret = solve(R, Y, B);\n    printf(\"Case #%d: %s\\n\", cn, ret.c_str());\n    if (ret[0] == ret[ret.size() - 1]) {\n      continue;\n    }\n  }\n}\n"}
{"target":"Astein","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int cn = 1; cn <= T; ++cn) {\n    int N, Q;\n    scanf(\"%d%d\", &N, &Q);\n    vector<long long> horse_dist(N), horse_speed(N);\n    vector<vector<long long>> graph(N, vector<long long>(N, 0));\n    for (int i = 0; i < N; ++i)\n      scanf(\"%I64d%I64d\", &horse_dist[i], &horse_speed[i]);\n    for (int i = 0; i < N; ++i)\n      for (int j = 0; j < N; ++j)\n        scanf(\"%I64d\", &graph[i][j]);\n\n    for (int i = 0; i < N; ++i)\n      for (int j = 0; j < N; ++j) {\n        if (graph[j][i] == -1)\n          continue;\n        for (int k = 0; k < N; ++k) {\n          if (graph[i][k] == -1)\n            continue;\n          if (graph[j][k] == -1 || graph[j][k] > graph[j][i] + graph[i][k])\n            graph[j][k] = graph[j][i] + graph[i][k];\n        }\n      }\n\n    printf(\"Case #%d:\", cn);\n    double MAX = 1e20;\n\n    for (int i = 0; i < Q; ++i) {\n      vector<double> arrive_time(N, 2 * MAX);\n      int u, v;\n      scanf(\"%d%d\", &u, &v);\n      u--, v--;\n\n      priority_queue<pair<double, int>> PQ;\n      PQ.push({0, u});\n      while (!PQ.empty()) {\n        pair<double, int> now = PQ.top();\n        PQ.pop();\n        if (arrive_time[now.second] < MAX)\n          continue;\n\n        arrive_time[now.second] = -now.first;\n        if (now.second == v) {\n          printf(\" %.10lf\", -now.first);\n          break;\n        }\n        for (int i = 0; i < N; ++i) {\n          if (graph[now.second][i] == -1 || i == now.second)\n            continue;\n          if (graph[now.second][i] > horse_dist[now.second])\n            continue;\n\n          double time_i = -arrive_time[now.second] -\n                          graph[now.second][i] * 1.0 \/ horse_speed[now.second];\n          PQ.push({time_i, i});\n        }\n      }\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx = -1;\nconstexpr ll lim = 1000000000000000000L;\n\/\/ constexpr ll lim = 100;\n\nvector<ll> tidy;\n\nvoid gen(ll num, int d) {\n  \/\/ trace(num, d);\n  if (num > 0)\n    tidy.push_back(num);\n  if (num <= lim \/ 10) {\n    gen(num * 10 + d, d);\n  }\n  if (d < 9)\n    gen(num, d + 1);\n}\n\nvoid pre() {\n  gen(0, 1);\n  sort((tidy).begin(), (tidy).end());\n  \/\/ tidy.resize(unique(all(tidy)) - tidy.begin());\n  \/\/ trace(tidy);\n  ;\n}\n\nll solve(ll n) {\n  auto it = upper_bound((tidy).begin(), (tidy).end(), n) - 1;\n  return *it;\n}\n\nint main() {\n  pre();\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    ll n;\n    cin >> n;\n\n    cout << \"Case #\" << kase << \": \" << solve(n) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx = -1;\n\npair<ll, ll> solve(ll len, ll k) {\n  map<ll, ll> cnt;\n  cnt[len] = 1;\n  ll ck = 0;\n\n  while (ck < k) {\n    auto last = *cnt.rbegin();\n    cnt.erase(last.first);\n    ll mid = (last.first + 1) \/ 2;\n    ll s1 = mid - 1, s2 = last.first - mid;\n    \/\/ trace(last, mid, s1, s2, ck);\n    if (ck + last.second < k) {\n      ck += last.second;\n      cnt[s1] += last.second;\n      cnt[s2] += last.second;\n    } else {\n      return {min(s1, s2), max(s1, s2)};\n    }\n  }\n\n  return {0, 0};\n}\n\nint main() {\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    ll n, k;\n    cin >> n >> k;\n    auto ans = solve(n, k);\n\n    cout << \"Case #\" << kase << \": \" << ans.second << \" \" << ans.first << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx = -1;\n\nint main() {\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    string cakes;\n    int k;\n    cin >> cakes >> k;\n    \/\/ trace(cakes, k);\n\n    int ret = 0;\n    for (int i = ((0)), _i = (((int((cakes).size())) - k + 1) - 1); i <= _i;\n         ++i) {\n      if (cakes[i] == '-') {\n        ++ret;\n        for (int j = ((i)), _j = ((i + k) - 1); j <= _j; ++j)\n          cakes[j] = (cakes[j] == '-' ? '+' : '-');\n      }\n      \/\/ trace(i, cakes, ret);\n    }\n\n    for (char c : cakes)\n      if (c == '-')\n        ret = -1;\n\n    cout << \"Case #\" << kase << \": \";\n    if (ret == -1)\n      cout << \"IMPOSSIBLE\";\n    else\n      cout << ret;\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx_n = 3, mx_p = 8;\nint n, p;\nint req[mx_n];\nint avail[mx_n][mx_p];\n\nclass Range {\npublic:\n  int lo, hi;\n  Range() {\n    lo = -oo;\n    hi = oo;\n  }\n\n  Range(int l, int h) {\n    lo = l;\n    hi = h;\n  }\n\n  bool isvalid() const { return lo > 0 && lo <= hi; }\n\n  Range intersect(const Range &r) const {\n    return Range(max(lo, r.lo), min(hi, r.hi));\n  }\n} ranges[mx_n][mx_p];\n\nRange calc(int i, int j) {\n  int r = req[i], a = avail[i][j];\n  Range ret(0, 0);\n\n  ret = Range((10 * a + 11 * r - 1) \/ (11 * r), 10 * a \/ (9 * r));\n\n  \/\/ trace(i, j, r, a, ret.lo, ret.hi);\n  return ret;\n}\n\nvoid init() {\n  for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n    for (int j = ((0)), _j = ((p)-1); j <= _j; ++j)\n      ranges[i][j] = calc(i, j);\n}\n\nint dp[(1 << 16)];\nint solve() {\n  init();\n\n  for (int mask = (1 << (n * p)) - 1; mask >= 0; --mask) {\n    dp[mask] = 0;\n    for (int nxt1 = ((0)), _nxt1 = ((n * p) - 1); nxt1 <= _nxt1; ++nxt1)\n      if (!(((mask) >> nxt1) & 1)) {\n        Range r = ranges[nxt1 \/ p][nxt1 % p];\n        if (n == 1) {\n          if (r.isvalid())\n            dp[mask] = max(dp[mask], 1 + dp[mask | (1 << nxt1)]);\n        } else {\n          for (int nxt2 = ((0)), _nxt2 = ((n * p) - 1); nxt2 <= _nxt2; ++nxt2)\n            if (nxt2 \/ p != nxt1 \/ p && !(((mask) >> nxt2) & 1)) {\n              Range cur = r.intersect(ranges[nxt2 \/ p][nxt2 % p]);\n              if (cur.isvalid())\n                dp[mask] =\n                    max(dp[mask], 1 + dp[mask | (1 << nxt1) | (1 << nxt2)]);\n            }\n        }\n      }\n    \/\/ trace(mask, dp[mask]);\n  }\n\n  return dp[0];\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int kase = (1), _kase = (t); kase <= _kase; ++kase) {\n    cin >> n >> p;\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      cin >> req[i];\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      for (int j = ((0)), _j = ((p)-1); j <= _j; ++j)\n        cin >> avail[i][j];\n\n    int ans = solve();\n    cout << \"Case #\" << kase << \": \" << ans << '\\n';\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx_r = 25;\nstring cake[mx_r];\nstring ans[mx_r];\nint r, c;\n\nint dp[(1 << 25)];\nint prv[(1 << 25)];\nint prvi[(1 << 25)];\nint can[mx_r][mx_r][mx_r][mx_r];\nint pmask[mx_r][mx_r][mx_r][mx_r];\n\nvoid init() {\n  for (int i1 = ((0)), _i1 = ((r)-1); i1 <= _i1; ++i1)\n    for (int j1 = ((0)), _j1 = ((c)-1); j1 <= _j1; ++j1)\n      for (int i2 = ((i1)), _i2 = ((r)-1); i2 <= _i2; ++i2)\n        for (int j2 = ((j1)), _j2 = ((c)-1); j2 <= _j2; ++j2) {\n          can[i1][j1][i2][j2] = -1;\n          pmask[i1][j1][i2][j2] = 0;\n          for (int i = (i1), _i = (i2); i <= _i; ++i)\n            for (int j = (j1), _j = (j2); j <= _j; ++j) {\n              if (cake[i][j] != '?') {\n                if (can[i1][j1][i2][j2] == -1)\n                  can[i1][j1][i2][j2] = cake[i][j];\n                else\n                  can[i1][j1][i2][j2] = -1;\n              }\n              pmask[i1][j1][i2][j2] |= (1 << (i * c + j));\n            };\n        }\n}\n\nint solve(int mask) {\n  int &ret = dp[mask];\n  if (ret != -1)\n    return ret;\n  if (mask == (1 << (r * c)) - 1)\n    return ret = 1;\n\n  ret = 0;\n  for (int i1 = ((0)), _i1 = ((r)-1); i1 <= _i1; ++i1)\n    for (int j1 = ((0)), _j1 = ((c)-1); j1 <= _j1; ++j1) {\n      if (ret)\n        break;\n      for (int i2 = ((i1)), _i2 = ((r)-1); i2 <= _i2; ++i2)\n        for (int j2 = ((j1)), _j2 = ((c)-1); j2 <= _j2; ++j2) {\n          if (ret)\n            break;\n          if ((mask & pmask[i1][j1][i2][j2]) == 0 &&\n              can[i1][j1][i2][j2] != -1) {\n            int nmask = mask | pmask[i1][j1][i2][j2];\n            if (solve(nmask)) {\n              prv[nmask] = mask;\n              prvi[nmask] = can[i1][j1][i2][j2];\n              ;\n              ret = 1;\n              break;\n            }\n          }\n        }\n    }\n\n    ;\n  return ret;\n}\n\nvoid getAns() {\n  int cur = (1 << (r * c)) - 1;\n  for (int i = ((0)), _i = ((r)-1); i <= _i; ++i)\n    ans[i] = string(c, '?');\n  while (cur > 0) {\n    int nxt = (cur ^ prv[cur]);\n    ;\n    assert(prvi[cur]);\n    for (int k = ((0)), _k = ((r * c) - 1); k <= _k; ++k)\n      if ((((nxt) >> k) & 1)) {\n        ans[k \/ c][k % c] = prvi[cur];\n      }\n    cur ^= nxt;\n  }\n}\n\nint main() {\n  memset(can, -1, sizeof(can));\n  int t;\n  cin >> t;\n  for (int kase = (1), _kase = (t); kase <= _kase; ++kase) {\n    cin >> r >> c;\n    for (int i = ((0)), _i = ((r)-1); i <= _i; ++i)\n      cin >> cake[i];\n    \/\/ fo(i, r) trace(i, cake[i]);\n    memset(dp, -1, sizeof(dp));\n    init();\n    assert(solve(0));\n    getAns();\n\n    cout << \"Case #\" << kase << \":\\n\";\n    for (int i = ((0)), _i = ((r)-1); i <= _i; ++i)\n      cout << ans[i] << '\\n';\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx_n = 1003;\n\nint d, n;\nint k[mx_n], s[mx_n];\n\nint main() {\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    cin >> d >> n;\n    long double ans = numeric_limits<long double>::max();\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      cin >> k[i] >> s[i];\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      ans = min(ans, 1.0L * d * s[i] \/ (d - k[i]));\n\n    cout.precision(10);\n    cout << \"Case #\" << kase << \": \" << fixed << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<int>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-6;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx_n = 1003, mx_c = 6;\n\nint c[mx_c], n;\nchar col[] = \"ROYGBV\";\nmap<int, char> cache[mx_n][mx_n][3];\nmap<int, char> nxt[mx_n][mx_n][3];\nint s;\n\nchar solve(int r, int y, int b, int l) {\n  int tot = r + y + b;\n  if (tot == 0)\n    return l != s;\n  if (max(r, max(y, b)) > (tot + 1) \/ 2 + 1)\n    return 0;\n  auto it = cache[r][y][l].find(b);\n  if (it != cache[r][y][l].end())\n    return it->second;\n  char &ret = cache[r][y][l][b];\n  ret = 0;\n\n  if (l != 0 && r > 0 && solve(r - 1, y, b, 0)) {\n    ret = 1;\n    nxt[r][y][l][b] = 0;\n  } else if (l != 1 && y > 0 && solve(r, y - 1, b, 1)) {\n    ret = 1;\n    nxt[r][y][l][b] = 1;\n  } else if (l != 2 && b > 0 && solve(r, y, b - 1, 2)) {\n    ret = 1;\n    nxt[r][y][l][b] = 2;\n  }\n\n  return ret;\n}\n\nstring solve() {\n  for (int i = ((0)), _i = ((mx_n)-1); i <= _i; ++i)\n    for (int j = ((0)), _j = ((mx_n)-1); j <= _j; ++j)\n      for (int k = ((0)), _k = ((3) - 1); k <= _k; ++k)\n        cache[i][j][k].clear(), nxt[i][j][k].clear();\n  for (int i = ((0)), _i = ((3) - 1); i <= _i; ++i)\n    if (c[2 * i]) {\n      s = i;\n      break;\n    }\n\n  --c[2 * s];\n  if (!solve(c[0], c[2], c[4], s))\n    return \"IMPOSSIBLE\";\n\n  string ans;\n  ans += col[2 * s];\n  int cc[3] = {c[0], c[2], c[4]};\n  int l = s;\n  for (int i = ((1)), _i = ((n)-1); i <= _i; ++i) {\n    int nx = nxt[cc[0]][cc[1]][l][cc[2]];\n    ans += col[2 * nx];\n    l = nx;\n    --cc[nx];\n  }\n  ++c[2 * s];\n\n  return ans;\n}\n\nint main() {\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    cin >> n;\n    for (int i = ((0)), _i = ((mx_c)-1); i <= _i; ++i)\n      cin >> c[i];\n\n    string ans = \"IMPOSSIBLE\";\n    ans = solve();\n\n    cout << \"Case #\" << kase << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Balajiganapathi","func":"\/* string coder = \"Balajiganapathi S\"; \/\/ Never give up!  *\/\n\n\/\/#define LOCAL\n\n\/\/#   define FAST\n\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/* aliases *\/\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nusing ll = long long int;\nusing ld = long double;\n\n\/* shortcut macros *\/\n\/* trace macro *\/\n\/* util functions *\/\ntemplate <typename T1, typename T2, typename T3>\nT1 modpow(T1 _a, T2 p, T3 mod) {\n  assert(p >= 0);\n  ll ret = 1, a = _a;\n\n  if (a < 0) {\n    a %= mod;\n    a += mod;\n  }\n\n  if (a >= mod) {\n    a %= mod;\n  }\n\n  for (; p > 0; p \/= 2) {\n    if (p & 1)\n      ret = ret * a % mod;\n    a = a * a % mod;\n  }\n\n  return ret;\n}\n\n\/* constants *\/\nconstexpr int dx[] = {-1, 0, 1, 0, 1, 1, -1, -1};\nconstexpr int dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconstexpr auto PI = 3.14159265358979323846L;\nconstexpr auto oo = numeric_limits<ll>::max() \/ 2 - 2;\nconstexpr auto eps = 1e-7;\nconstexpr auto mod = 1000000007;\n\n\/* code *\/\nconstexpr int mx_n = 102;\n\nld mtime[mx_n][mx_n];\nint n, e[mx_n], s[mx_n], d[mx_n][mx_n];\n\nld dp[mx_n][mx_n];\n\nld rec(int i, int h) {\n  if (i == n - 1)\n    return 0;\n  ld &ret = dp[i][h];\n  if (ret > -eps)\n    return ret;\n  ret = oo;\n\n  \/\/ next switch\n  int sofar = 0;\n  for (int j = ((i + 1)), _j = ((n)-1); j <= _j; ++j) {\n    sofar += d[j - 1][j];\n    if (sofar > e[h])\n      break;\n    ret = min(ret, rec(j, j) + 1.0 * sofar \/ s[h]);\n  }\n\n  return ret;\n}\n\nld solve(int u, int v) {\n  for (int i = ((0)), _i = ((mx_n)-1); i <= _i; ++i)\n    for (int j = ((0)), _j = ((mx_n)-1); j <= _j; ++j)\n      dp[i][j] = -oo;\n  return rec(u, u);\n}\n\nint main() {\n  int _t;\n  cin >> _t;\n  for (int kase = (1), _kase = (_t); kase <= _kase; ++kase) {\n    int q;\n    cin >> n >> q;\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = ((0)), _i = ((n)-1); i <= _i; ++i)\n      for (int j = ((0)), _j = ((n)-1); j <= _j; ++j)\n        cin >> d[i][j];\n    cout << \"Case #\" << kase << \":\";\n    while (q--) {\n      int u, v;\n      cin >> u >> v;\n      --u;\n      --v;\n      cout.precision(10);\n      cout << \" \" << fixed << solve(u, v);\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nbool check(int a) {\n  string s = to_string(a);\n  vi k;\n  for (int i = (0); i < (s.size()); i++) {\n    char m = s[i];\n    k.push_back(m - '0');\n  }\n  vi ne = k;\n  sort(ne.begin(), ne.end());\n  for (int i = (0); i < (k.size()); i++)\n    if (k[i] != ne[i])\n      return false;\n  return true;\n}\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans.txt\");\n  int n;\n  cin >> n;\n  for (int i = (0); i < (n); i++) {\n    int m;\n    cin >> m;\n    for (int a = m; a >= 0; a--) {\n      if (check(a)) {\n        fout << \"Case #\" << i + 1 << \": \" << a << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans.txt\");\n  int n;\n  cin >> n;\n  for (int i = (0); i < (n); i++) {\n    priority_queue<int> k;\n    int m, q;\n    cin >> m >> q;\n    fout << \"Case #\" << i + 1 << \": \";\n    k.push(m - 1);\n    for (int a = (0); a < (q - 1); a++) {\n      if (k.empty())\n        break;\n      else {\n        int at = k.top();\n        k.pop();\n        if (at == 0)\n          continue;\n        int want = at \/ 2;\n        int first = want;\n        if (first != 0)\n          k.push(first - 1);\n        int second = at - want;\n        k.push(second - 1);\n      }\n    }\n    if (k.empty())\n      fout << \"0 0\" << endl;\n    else {\n      int at = k.top();\n      if (at == 0)\n        fout << \"0 0\" << endl;\n      else {\n        int first = at \/ 2;\n        fout << at - first << \" \" << first << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nint doit(string s, int len) {\n  int howmany = 0;\n  while (true) {\n    if (s.size() == len) {\n      int f1 = 0;\n      int f2 = 0;\n      for (int i = (0); i < (len); i++) {\n        if (s[i] == '+')\n          f1++;\n        else\n          f2++;\n      }\n      if (f1 == len) {\n\n      } else if (f2 == len) {\n        howmany++;\n      } else {\n        howmany += 1000000;\n      }\n\n      break;\n    } else {\n      if (s[0] == '+') {\n        s.erase(s.begin());\n      } else {\n        for (int i = (0); i < (len); i++) {\n          if (s[i] == '+')\n            s[i] = '-';\n          else\n            s[i] = '+';\n        }\n        howmany++;\n      }\n    }\n  }\n  return howmany;\n}\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans.txt\");\n  int n;\n  cin >> n;\n  for (int i = (0); i < (n); i++) {\n    string s;\n    cin >> s;\n    int m;\n    cin >> m;\n    int bst = INF;\n    bst = min(doit(s, m), bst);\n    reverse(s.begin(), s.end());\n    bst = min(doit(s, m), bst);\n    fout << \"Case #\" << i + 1 << \": \";\n    if (bst > 10000)\n      fout << \"IMPOSSIBLE\" << endl;\n    else\n      fout << bst << endl;\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nstruct BpGraph {\n  vvi adj;\n  vi owner;\n  vector<bool> done;\n\n  BpGraph(int n, int m) {\n    adj = vvi(n);\n    done = vector<bool>(n);\n    owner = vi(m, -1);\n  }\n  void addEdge(int a, int b) { adj[a].push_back(b); }\n  int alternating_path(int left) {\n    if (done[left])\n      return 0;\n    done[left] = true;\n    for (int i = (0); i < (adj[left].size()); i++) {\n      int right = adj[left][i];\n      if (owner[right] == -1 || alternating_path(owner[right])) {\n        owner[right] = left;\n        return 1;\n      }\n    }\n    return 0;\n  }\n  int maximum_matching(int n, int m) {\n    int res = 0;\n    for (int i = (0); i < (n); i++) {\n      for (int a = (0); a < (n); a++)\n        done[a] = 0;\n      res += alternating_path(i);\n    }\n    return res;\n  }\n};\n\nbool binary(double num, double need) {\n  int lo = 1, hi = 100000000;\n  while (lo <= hi) {\n    int mid = (lo + hi) \/ 2;\n    double ok = mid * num;\n    double res = need \/ ok;\n    if (res >= 0.90 && res <= 1.1) {\n      return true;\n    }\n    if (res > 1.1) {\n      lo = mid + 1;\n    } else\n      hi = mid - 1;\n  }\n  return false;\n}\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans.txt\");\n  int t;\n  cin >> t;\n  for (int u = (0); u < (t); u++) {\n    int n, p;\n    cin >> n >> p;\n    int bst = 0;\n    if (n == 1) {\n      int count = 0;\n      double duds = 0;\n      cin >> duds;\n      for (int i = (0); i < (p); i++) {\n        double hold;\n        cin >> hold;\n        if (binary(duds, hold))\n          count++;\n      }\n      bst = count;\n    } else {\n      BpGraph bp(p, p);\n      int count = 0;\n      vector<double> duds(n);\n      for (int i = (0); i < (n); i++)\n        cin >> duds[i];\n      vector<double> first(p);\n      vector<double> second(p);\n      for (int i = (0); i < (p); i++)\n        cin >> first[i];\n      for (int i = (0); i < (p); i++)\n        cin >> second[i];\n      for (int i = (0); i < (p); i++) {\n        for (int a = (0); a < (p); a++) {\n          bool can = false;\n          for (int z = (1); z < (1000001); z++) {\n            double ok = duds[0] * z;\n            double otherok = duds[1] * z;\n            double fin1 = first[i] \/ ok;\n            double fin2 = second[a] \/ otherok;\n            if (fin1 >= 0.9 && fin1 <= 1.1 && fin2 >= 0.9 && fin2 <= 1.1) {\n              can = true;\n              break;\n            }\n          }\n          if (can) {\n            bp.addEdge(i, a);\n          }\n        }\n      }\n      bst = bp.maximum_matching(p, p);\n    }\n    fout << \"Case #\" << u + 1 << \": \" << bst << endl;\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans.txt\");\n  int t;\n  cin >> t;\n  for (int u = (0); u < (t); u++) {\n    int n, m;\n    cin >> n >> m;\n    char at[500][500];\n    bool vis[500][500];\n    memset(vis, 0, sizeof(vis));\n    for (int i = (0); i < (n); i++)\n      for (int a = (0); a < (m); a++)\n        cin >> at[i][a];\n    for (int i = (0); i < (n); i++)\n      for (int a = (0); a < (m); a++) {\n        if (at[i][a] != '?' && !vis[i][a]) {\n          vis[i][a] = true;\n          int startx = a;\n          int endx = a;\n          char am = at[i][a];\n          for (int a2 = (a + 1); a2 < (m); a2++) {\n            if (at[i][a2] == '?') {\n              at[i][a2] = am;\n              vis[i][a2] = true;\n              endx++;\n            } else\n              break;\n          }\n          for (int a2 = a - 1; a2 >= 0; a2--) {\n            if (at[i][a2] == '?') {\n              at[i][a2] = am;\n              vis[i][a2] = true;\n              startx--;\n            } else\n              break;\n          }\n          \/\/ found startx and endx\n          for (int i2 = (i + 1); i2 < (n); i2++) {\n            bool can = true;\n            for (int a2 = (startx); a2 < (endx + 1); a2++)\n              if (at[i2][a2] != '?')\n                can = false;\n            if (can) {\n              for (int a2 = (startx); a2 < (endx + 1); a2++) {\n                at[i2][a2] = am;\n                vis[i2][a2] = true;\n              }\n            } else\n              break;\n          }\n          for (int i2 = i - 1; i2 >= 0; i2--) {\n            bool can = true;\n            for (int a2 = (startx); a2 < (endx + 1); a2++)\n              if (at[i2][a2] != '?')\n                can = false;\n            if (can) {\n              for (int a2 = (startx); a2 < (endx + 1); a2++) {\n                at[i2][a2] = am;\n                vis[i2][a2] = true;\n              }\n            } else\n              break;\n          }\n        }\n      }\n    fout << \"Case #\" << u + 1 << \":\" << endl;\n    for (int i = (0); i < (n); i++) {\n      for (int a = (0); a < (m); a++)\n        fout << at[i][a];\n      fout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ans2.txt\");\n  int t;\n  cin >> t;\n  for (int u = (0); u < (t); u++) {\n    double n, m;\n    cin >> n >> m;\n    double t2 = 0;\n    for (int i = (0); i < (m); i++) {\n      double a, b;\n      cin >> a >> b;\n      double t = (n - a) \/ b;\n      t2 = max(t, t2);\n    }\n    fout << \"Case #\" << u + 1 << \": \" << setprecision(10) << fixed << n \/ t2\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\nconst double pi = acos(-1);\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ansb2.txt\");\n  int t;\n  cin >> t;\n  string nice = \"ROYGBVXXX\";\n  for (int u = (0); u < (t); u++) {\n    int arr[8];\n    memset(arr, 0, sizeof(arr));\n    int n;\n    cin >> n;\n    for (int i = (0); i < (6); i++)\n      cin >> arr[i];\n    string s = \"\";\n    int last = 7;\n    int og = n;\n    bool can = true;\n    while (n != 0) {\n      int bst = 0;\n      int index = 0;\n      for (int i = (0); i < (6); i++)\n        if (arr[i] >= bst && nice[i] != nice[last] && arr[i] != 0) {\n          if (arr[i] == bst && arr[i] != 0) {\n            if (n != og) {\n              if (s[0] == nice[i]) {\n                bst = arr[i];\n                index = i;\n              }\n            }\n          } else if (arr[i] > bst) {\n            bst = arr[i];\n            index = i;\n          }\n        }\n      arr[index]--;\n      if (bst == -1) {\n        can = false;\n        break;\n      }\n      s += nice[index];\n      last = index;\n      n--;\n    }\n    if (s.size() != og)\n      can = false;\n    for (int i = (0); i < (s.size() - 1); i++)\n      if (s[i] == s[i + 1])\n        can = false;\n    for (int i = (1); i < (s.size()); i++)\n      if (s[i] == s[i - 1])\n        can = false;\n    fout << \"Case #\" << u + 1 << \": \";\n    if (s[0] == s[s.size() - 1] || !can)\n      fout << \"IMPOSSIBLE\" << endl;\n    else\n      fout << s << endl;\n  }\n  return 0;\n}\n"}
{"target":"bennikartefla","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst long double INF = 1000000000000;\nconst long double pi = acos(-1);\ntypedef pair<long double, int> di;\n\nint mxdist[120];\nint conspeed[120];\nlong double matrix[120][120];\nlong double matrix2[120][120];\n\nvoid fill(int at) {\n  bool vis[120];\n  memset(vis, 0, sizeof(vis));\n  vis[at] = true;\n  priority_queue<pair<long double, int>, vector<di>, greater<di>> q;\n  q.push(pair<long double, int>(0, at));\n  while (!q.empty()) {\n    int cur = q.top().second;\n    long double range = q.top().first;\n    q.pop();\n    for (int i = (0); i < (120); i++) {\n      if (matrix[cur][i] != -1 && i != cur && !vis[i]) {\n        long double thedist = matrix[cur][i];\n        range += thedist;\n        if (range > mxdist[at]) {\n          range -= thedist;\n          continue;\n        }\n        matrix2[at][i] = min(range \/ conspeed[at], matrix2[at][i]);\n        q.push(pair<long double, int>(range, i));\n        range -= thedist;\n      }\n    }\n  }\n}\n\nlong double query(int start, int end) {\n  priority_queue<di, vector<di>, greater<di>> pq;\n  pq.push(di(0, start));\n  long double dist[150];\n  bool vis[150];\n  for (int i = (0); i < (150); i++)\n    dist[i] = INF;\n  memset(vis, 0, sizeof(vis));\n  dist[start] = 0;\n  while (!pq.empty()) {\n    di cur = pq.top();\n    pq.pop();\n    for (int i = (0); i < (120); i++) {\n      if (matrix2[cur.second][i] != -1) {\n        long double ne = min(dist[i], cur.first + matrix2[cur.second][i]);\n        if (ne >= dist[i])\n          continue;\n        dist[i] = ne;\n        pq.push(di(dist[i], i));\n      }\n    }\n  }\n  return dist[end];\n}\n\nint main() {\n  cin.sync_with_stdio(false);\n  ofstream fout(\"ansc.txt\");\n  int t;\n  cin >> t;\n  for (int u = (0); u < (t); u++) {\n    int n, q;\n    memset(mxdist, 0, sizeof(mxdist));\n    memset(conspeed, 0, sizeof(conspeed));\n    for (int i = (0); i < (120); i++)\n      for (int a = (0); a < (120); a++)\n        matrix[i][a] = -1;\n    for (int i = (0); i < (120); i++)\n      for (int a = (0); a < (120); a++)\n        matrix2[i][a] = INF;\n    cin >> n >> q;\n    for (int i = (0); i < (n); i++) {\n      int dist, speed;\n      cin >> dist >> speed;\n      mxdist[i] = dist;\n      conspeed[i] = speed;\n    }\n    for (int i = (0); i < (n); i++)\n      for (int a = (0); a < (n); a++)\n        cin >> matrix[i][a];\n    for (int i = (0); i < (n); i++)\n      fill(i);\n    for (int i = (0); i < (120); i++)\n      for (int a = (0); a < (120); a++)\n        if (matrix2[i][a] == INF)\n          matrix2[i][a] = -1;\n    vector<ii> all(q);\n    for (int i = (0); i < (q); i++)\n      cin >> all[i].first >> all[i].second;\n    fout << \"Case #\" << u + 1 << \": \";\n    for (int i = (0); i < (q); i++) {\n      fout << setprecision(9) << fixed\n           << query(all[i].first - 1, all[i].second - 1) << \" \";\n    }\n    fout << endl;\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <cstdio>\nusing namespace std;\nconst int MAX = 20;\nlong long arr[MAX];\n\nbool check(long long tmp) {\n  long long last = 9;\n  while (tmp) {\n    long long now = tmp % 10;\n    if (now > last)\n      return false;\n    last = now;\n    tmp \/= 10;\n  }\n  return true;\n}\n\nlong long next(long long now) {\n  arr[0] = 9;\n  int cnt = 1;\n  while (now) {\n    arr[cnt++] = now % 10;\n    now \/= 10;\n  }\n  int high;\n  for (high = cnt - 1; high > 0; high--) {\n    if (arr[high] > arr[high - 1])\n      break;\n  }\n  long long ans = 0;\n  for (int i = cnt - 1; i > 0; i--) {\n    ans = ans * 10;\n    if (i >= high)\n      ans += arr[i];\n  }\n  if (high > 0)\n    ans--;\n  return ans;\n}\n\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    long long n;\n    scanf(\"%lld\", &n);\n    long long ans = next(n);\n    while (!check(ans)) {\n      ans = next(ans);\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <cstdio>\n#include <map>\nusing namespace std;\n\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    int n, k, ansx = -1, ansy = -1;\n    scanf(\"%d %d\", &n, &k);\n    map<int, int> mp;\n    mp[n] = 1;\n    while (k > 0) {\n      int len = mp.rbegin()->first;\n      int cnt = mp.rbegin()->second;\n      mp.erase(len);\n      k -= cnt;\n      ansx = len \/ 2, ansy = (len - 1) \/ 2;\n      mp[ansx] += cnt;\n      mp[ansy] += cnt;\n    }\n    printf(\"%d %d\\n\", ansx, ansy);\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int MAX = 1000 + 10;\nchar arr[MAX];\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    int k, cnt = 0;\n    scanf(\"%s %d\", arr, &k);\n    int len = strlen(arr);\n    for (int i = 0; i < len - k + 1; i++) {\n      if (arr[i] == '-') {\n        cnt++;\n        for (int j = 0; j < k; j++) {\n          if (arr[i + j] == '-')\n            arr[i + j] = '+';\n          else\n            arr[i + j] = '-';\n        }\n      }\n    }\n    bool check = true;\n    for (int i = 0; i < len; i++) {\n      check &= arr[i] == '+';\n    }\n    if (check)\n      printf(\"%d\\n\", cnt);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <functional>\n#include <vector>\nusing namespace std;\nconst int MAX = 50 + 10;\nconst int INF = 2147483647;\nint need[MAX];\nint rec[MAX][MAX];\nint left[MAX];\nvector<pair<int, int>> vp[MAX];\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &need[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        scanf(\"%d\", &rec[i][j]);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      sort(rec[i], rec[i] + m);\n    }\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        int tmp = (rec[i][j] + need[i] - 1) \/ need[i];\n        if (tmp == 0)\n          continue;\n        if (!(9 * tmp * need[i] <= 10 * rec[i][j] &&\n              10 * rec[i][j] <= 11 * tmp * need[i]))\n          tmp--;\n        int l = tmp;\n        int r = tmp;\n        while (l - 1 > 0 && 9 * (l - 1) * need[i] <= 10 * rec[i][j] &&\n               10 * rec[i][j] <= 11 * (l - 1) * need[i])\n          l--;\n        while (9 * (r + 1) * need[i] <= 10 * rec[i][j] &&\n               10 * rec[i][j] <= 11 * (r + 1) * need[i])\n          r++;\n        if (9 * l * need[i] <= 10 * rec[i][j] &&\n            10 * rec[i][j] <= 11 * l * need[i]) {\n          vp[i].push_back(make_pair(l, r));\n        }\n      }\n    }\n    memset(left, 0, sizeof(left));\n    while (1) {\n      int tl = -INF, tr = INF;\n      for (int i = 0; i < n; i++) {\n        tl = max(tl, vp[i][left[i]].first);\n        tr = min(tr, vp[i][left[i]].second);\n      }\n      if (tl <= tr) {\n        cnt++;\n        for (int i = 0; i < n; i++) {\n          left[i]++;\n        }\n      } else {\n        for (int i = 0; i < n; i++) {\n          if (vp[i][left[i]].second == tr) {\n            left[i]++;\n          }\n        }\n      }\n      bool get = false;\n      for (int i = 0; i < n; i++) {\n        if (left[i] >= vp[i].size()) {\n          get = true;\n          break;\n        }\n      }\n      if (get)\n        break;\n    }\n    printf(\"%d\\n\", cnt);\n    for (int i = 0; i < n; i++) {\n      vp[i].clear();\n    }\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int MAX = 25 + 10;\nchar arr[MAX][MAX];\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d:\\n\", casen);\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", arr[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      char first = '?';\n      char now = '?';\n      for (int j = 0; j < m; j++) {\n        if (first == '?' && arr[i][j] != '?')\n          first = arr[i][j];\n        else if (arr[i][j] != '?')\n          now = arr[i][j];\n        arr[i][j] = now;\n      }\n      for (int j = 0; j < m && arr[i][j] == '?'; j++) {\n        arr[i][j] = first;\n      }\n    }\n    int last = -1;\n    for (int i = 0; i < n; i++) {\n      if (arr[i][0] == '?') {\n        int pick = -1;\n        for (int j = i + 1; j < n; j++) {\n          if (arr[j][0] != '?') {\n            pick = j;\n            break;\n          }\n        }\n        if (pick == -1)\n          break;\n        strcpy(arr[i], arr[pick]);\n      } else\n        last = i;\n    }\n    for (int i = last + 1; i < n; i++) {\n      strcpy(arr[i], arr[last]);\n    }\n    for (int i = 0; i < n; i++) {\n      printf(\"%s\\n\", arr[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    double d, time = 0;\n    int n;\n    scanf(\"%lf %d\", &d, &n);\n    for (int i = 0; i < n; i++) {\n      double pos, spd;\n      scanf(\"%lf %lf\", &pos, &spd);\n      time = max(time, (d - pos) \/ spd);\n    }\n    printf(\"%.9f\\n\", d \/ time);\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <cstdio>\nusing namespace std;\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d: \", casen);\n    int n, r, o, y, g, b, v;\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    \/\/ r y b\n    if (r > y && r > b) {\n      \/\/ r is max\n      if (r > y + b)\n        printf(\"IMPOSSIBLE\");\n      else {\n        char last = -1;\n        for (int i = 0; i < r; i++) {\n          putchar('R');\n          if (y > b) {\n            y--;\n            putchar('Y');\n            last = 'Y';\n          } else {\n            b--;\n            putchar('B');\n            last = 'B';\n          }\n        }\n        while (y > 0 || b > 0) {\n          if (last == 'Y') {\n            putchar('B');\n            b--;\n            last = 'B';\n          } else {\n            putchar('Y');\n            y--;\n            last = 'Y';\n          }\n        }\n      }\n    } else if (y > b) {\n      \/\/ y is max\n      if (y > r + b)\n        printf(\"IMPOSSIBLE\");\n      else {\n        char last = -1;\n        for (int i = 0; i < y; i++) {\n          putchar('Y');\n          if (r > b) {\n            r--;\n            putchar('R');\n            last = 'R';\n          } else {\n            b--;\n            putchar('B');\n            last = 'B';\n          }\n        }\n        while (r > 0 || b > 0) {\n          if (last == 'R') {\n            putchar('B');\n            b--;\n            last = 'B';\n          } else {\n            putchar('R');\n            r--;\n            last = 'R';\n          }\n        }\n      }\n    } else {\n      \/\/ b is max\n      if (b > r + y)\n        printf(\"IMPOSSIBLE\");\n      else {\n        char last = -1;\n        for (int i = 0; i < b; i++) {\n          putchar('B');\n          if (y > r) {\n            y--;\n            putchar('Y');\n            last = 'Y';\n          } else {\n            r--;\n            putchar('R');\n            last = 'R';\n          }\n        }\n        while (y > 0 || r > 0) {\n          if (last == 'R') {\n            putchar('Y');\n            y--;\n            last = 'Y';\n          } else {\n            putchar('R');\n            r--;\n            last = 'R';\n          }\n        }\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"bigelephant29","func":"#include <algorithm>\n#include <cstdio>\n#include <queue>\n#include <tuple>\n#include <vector>\nusing namespace std;\nconst int MAX = 100 + 10;\n\nint e[MAX];\ndouble s[MAX];\ndouble ans[MAX][MAX];\nint dis[MAX][MAX];\n\nint main() {\n  int TN;\n  scanf(\"%d\", &TN);\n  for (int casen = 1; casen <= TN; casen++) {\n    printf(\"Case #%d:\", casen);\n    int n, q;\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d %lf\", &e[i], &s[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        ans[i][j] = -1;\n        if (i == j)\n          ans[i][j] = 0;\n        scanf(\"%d\", &dis[i][j]);\n      }\n    }\n\n    \/\/ solve\n    vector<pair<double, int>> v;\n    for (int i = 0; i < n; i++) {\n      v.push_back(make_pair(s[i], i));\n    }\n    sort(v.begin(), v.end());\n    reverse(v.begin(), v.end()); \/\/ fast first\n\n    for (int i = 0; i < n; i++) {\n      int now = v[i].second;\n      queue<tuple<int, int, double>> q;\n      q.push(make_tuple(now, e[now], 0.0));\n      while (!q.empty()) {\n        tuple<int, int, double> tmp = q.front();\n        q.pop();\n        int pt = get<0>(tmp);\n        int con = get<1>(tmp);\n        double nn = get<2>(tmp);\n        for (int j = 0; j < n; j++) {\n          if (dis[pt][j] != -1 && con >= dis[pt][j]) {\n            if (ans[now][j] < 0.0 || nn + dis[pt][j] \/ s[now] < ans[now][j]) {\n              ans[now][j] = nn + dis[pt][j] \/ s[now];\n              q.push(make_tuple(j, con - dis[pt][j], ans[now][j]));\n            }\n          }\n        }\n      }\n    }\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          if (ans[i][k] >= 0.0 && ans[k][j] >= 0.0 &&\n              (ans[i][j] < 0 || ans[i][k] + ans[k][j] < ans[i][j])) {\n            ans[i][j] = ans[i][k] + ans[k][j];\n          }\n        }\n      }\n    }\n    while (q--) {\n      int u, v;\n      scanf(\"%d %d\", &u, &v);\n      u--, v--;\n      printf(\" %.9f\", ans[u][v]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\nint a[20], ln;\nvoid make(long long int n) {\n  ln = 0;\n  while (n) {\n    a[ln++] = n % 10;\n    n \/= 10;\n  }\n  reverse(a, a + ln);\n}\n\nlong long int dp[20][2][10];\n\nlong long int lol(int p, int ch, int pv) {\n  if (p == ln) {\n    return 1;\n  }\n  long long int &res = dp[p][ch][pv];\n  if (res != -1)\n    return res;\n\n  res = 0;\n  int hi = a[p];\n  if (ch)\n    hi = 9;\n  for (int i = pv; i <= hi; i++) {\n    res += lol(p + 1, ch | (i < hi), i);\n  }\n  return res;\n}\n\nlong long int koto(long long int n) {\n  make(n);\n  memset(dp, -1, sizeof(dp));\n  return lol(0, 0, 0);\n}\n\nint main() {\n\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n    long long int n;\n    cin >> n;\n\n    long long int tot = koto(n);\n\n    long long int lo = 1, hi = n;\n    long long int ans;\n\n    while (lo <= hi) {\n      long long int mid = (lo + hi) \/ 2;\n      long long int k = koto(mid);\n      if (k == tot) {\n        ans = mid;\n        hi = mid - 1;\n      } else\n        lo = mid + 1;\n    }\n\n    printf(\"Case #%d: %lld\\n\", cs, ans);\n  }\n\n  return 0;\n}\n\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nint main() {\n\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n\n    priority_queue<int> q;\n    long long int n, x;\n    cin >> n >> x;\n    q.push(n);\n    x--;\n\n    while (x > 0 && q.size()) {\n      x--;\n      long long int x = q.top();\n      q.pop();\n      if (x % 2 == 0) {\n        if (x \/ 2 - 1 > 0)\n          q.push(x \/ 2 - 1);\n        if (x \/ 2)\n          q.push(x \/ 2);\n      } else {\n        if (x \/ 2)\n          q.push(x \/ 2), q.push(x \/ 2);\n      }\n    }\n    long long int a = 0, b = 0;\n    if (q.size()) {\n      n = q.top();\n      if (n % 2) {\n        a = n \/ 2;\n        b = n \/ 2;\n      } else {\n        a = max(0LL, n \/ 2 - 1);\n        b = n \/ 2;\n      }\n    }\n    printf(\"Case #%d: \", cs);\n    cout << b << \" \" << a << endl;\n    cerr << \"cs\"\n         << \": \" << cs << endl;\n  }\n\n  return 0;\n}\n\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nint main() {\n\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.size();\n    int cnt = 0;\n    for (int i = 0; i <= n - k; i++) {\n      if (s[i] == '-') {\n        for (int j = i; j < i + k; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n        cnt++;\n      }\n    }\n    int fl = 0;\n    for (int i = n - k + 1; i < n; i++) {\n      if (s[i] == '-')\n        fl = 1;\n    }\n    printf(\"Case #%d: \", cs);\n    if (fl)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << cnt << endl;\n  }\n\n  return 0;\n}\n\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nint r, c;\nlong long int a[55];\nlong long int aa[55];\nlong long int b[55][55];\nvector<long long int> x;\nbool isok(long long int m, int p) {\n  for (int i = 1; i <= r; i++)\n    aa[i] = a[i] * m;\n  for (int i = 1; i <= r; i++) {\n    if (aa[i] <= x[i - 1])\n      continue;\n    return 0;\n  }\n  return 1;\n}\n\nint ok(long long int m, int p) {\n  for (int i = 1; i <= r; i++)\n    aa[i] = a[i] * m;\n  int tot = 0;\n  for (int i = 1; i <= r; i++) {\n    long long int y = x[i - 1];\n    long long int x = aa[i];\n\n    if (x <= y) {\n      x *= 110;\n      y *= 100;\n      if (x >= y) {\n        tot++;\n      }\n    } else {\n      y *= 100;\n      x *= 90;\n      if (x > y)\n        return 2;\n      tot++;\n    }\n  }\n  if (tot == r)\n    return 1;\n  return 0;\n}\n\nint solve(int p, int q) {\n  long long int lo = 1, hi = 1e6;\n  long long int an = -1;\n  x.clear();\n  x.push_back(b[1][p]);\n  if (q != -1)\n    x.push_back(b[2][q]);\n  while (lo <= hi) {\n    int mid = (lo + hi) \/ 2;\n    if (isok(mid, p)) {\n      an = mid;\n      lo = mid + 1;\n    } else\n      hi = mid - 1;\n  }\n  if (an == -1)\n    return 0;\n  for (long long int j = an;; j++) {\n    int tp = ok(j, p);\n    \/\/ trace2(j,tp)\n    if (tp == 1)\n      return 1;\n    if (tp == 2)\n      return 0;\n  }\n  return 0;\n}\n\nint dp[9][1000];\n\nint lol(int p, int m) {\n  if (p == (c + 1))\n    return 0;\n  int &res = dp[p][m];\n  if (res != -1)\n    return res;\n\n  res = lol(p + 1, m);\n  for (int i = 0; i < c; i++) {\n    if ((m & (1 << i)))\n      continue;\n    int tp = solve(p, i + 1);\n    if (tp)\n      res = max(res, 1 + lol(p + 1, m | (1 << i)));\n  }\n  return res;\n}\n\nint main() {\n  int t;\n  freopen(\"A.in\", \"r\", stdin), freopen(\"A1.out\", \"w\", stdout);\n  cin >> t;\n\n  for (int cs = 1; cs <= t; cs++) {\n\n    cin >> r >> c;\n    for (int i = 1; i <= r; i++) {\n      cin >> a[i];\n    }\n    for (int i = 1; i <= r; i++) {\n      for (int j = 1; j <= c; j++) {\n        cin >> b[i][j];\n      }\n    }\n    int ans = 0;\n    if (r == 1) {\n      for (int i = 1; i <= c; i++) {\n        int tp = solve(i, -1);\n        ans += tp;\n      }\n    } else {\n      memset(dp, -1, sizeof(dp));\n      ans = lol(1, 0);\n    }\n\n    printf(\"Case #%d: \", cs);\n    printf(\"%d\\n\", ans);\n    cerr << \"cs\"\n         << \": \" << cs << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nchar second[55][55];\nint n, m;\n\nvoid lol(int x, int y, char ch) {\n  if (y < 1)\n    return;\n  if (second[x][y] != '?')\n    return;\n  second[x][y] = ch;\n  lol(x, y - 1, ch);\n}\n\nvoid lol1(int x, int y, char ch) {\n  if (x > n)\n    return;\n  if (second[x][y] != '?')\n    return;\n  second[x][y] = ch;\n  lol(x, y - 1, ch);\n  lol1(x + 1, y, ch);\n}\n\nvoid lol2(int x, int y, int ch) {\n  if (x < 1)\n    return;\n  if (second[x][y] != '?')\n    return;\n  second[x][y] = ch;\n  lol(x, y - 1, ch);\n  lol2(x - 1, y, ch);\n}\n\nint main() {\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int cas = 1; cas <= tc; cas++) {\n\n    cin >> n >> m;\n\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%s\", &second[i][1]);\n    }\n\n    for (int j = 1; j <= m; j++) {\n      for (int i = 1; i <= n; i++) {\n        if ((second[i][j] != '?')) {\n          lol1(i + 1, j, second[i][j]);\n          lol2(i - 1, j, second[i][j]);\n          lol(i, j - 1, second[i][j]);\n        }\n      }\n    }\n\n    for (int j = 1; j <= m; j++) {\n      for (int i = 1; i <= n; i++) {\n        if (second[i][j] == '?')\n          second[i][j] = second[i][j - 1];\n      }\n    }\n\n    printf(\"Case #%d:\\n\", cas);\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        printf(\"%c\", second[i][j]);\n      }\n      puts(\"\");\n    }\n    cerr << \"cas\"\n         << \": \" << cas << endl;\n  }\n}\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nint main() {\n  freopen(\"A.in\", \"r\", stdin), freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n    double k;\n    int n;\n    cin >> k >> n;\n    double an = 0.0;\n    for (int i = 1; i < n + 1; i++) {\n      double a, b;\n      cin >> a >> b;\n      an = max(an, (k - a) \/ b);\n    }\n    an = (k) \/ an;\n    printf(\"Case #%d: %.10lf\\n\", cs, an);\n  }\n\n  return 0;\n}\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nint ar[7];\n\nint br[1002];\nint n;\nint isok(int a, int b, int c) {\n\n  for (int i = 2; i < n && a;) {\n    if (br[i])\n      i++;\n    else if ((br[i - 1] == 1) || (br[i + 1] == 1))\n      i++;\n    else {\n      br[i] = 1;\n      i += 2;\n      a--;\n    }\n  }\n  for (int i = n - 1; i >= 1 && b;) {\n    if (br[i])\n      i--;\n    else if ((br[i - 1] == 2) || (br[i + 1] == 2))\n      i--;\n    else {\n      br[i] = 2;\n      i -= 2;\n      b--;\n    }\n  }\n\n  for (int i = 2; i < n && c;) {\n    if (br[i])\n      i++;\n    else if ((br[i - 1] == 3) || (br[i + 1] == 3))\n      i++;\n    else {\n      br[i] = 3;\n      i += 2;\n      c--;\n    }\n  }\n  for (int i = 1; i < n; i++) {\n    if (br[i] == br[i + 1])\n      return 0;\n  }\n  if ((a + b + c))\n    return 0;\n\n  for (int i = 1; i < n + 1; i++) {\n    if (br[i] == 1)\n      cout << \"R\";\n    else if (br[i] == 2)\n      cout << \"Y\";\n    else\n      cout << \"B\";\n  }\n  printf(\"\\n\");\n  return 1;\n}\n\nint main() {\n  freopen(\"A.in\", \"r\", stdin), freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n    n = in<int>();\n    for (int i = 1; i < 6 + 1; i++)\n      cin >> ar[i];\n\n    ar[2] = ar[3];\n    ar[3] = ar[5];\n    printf(\"Case #%d: \", cs);\n    int fl = 0;\n    for (int i = 1; i <= 3; i++) {\n      for (int j = i + 1; j <= 3; j++) {\n        if (ar[i] && ar[j]) {\n          memset(br, 0, sizeof(br));\n          br[1] = i;\n          br[n] = j;\n          ar[i]--;\n          ar[j]--;\n          if (isok(ar[1], ar[2], ar[3])) {\n            fl = 1;\n            break;\n          }\n          ar[i]++;\n          ar[j]++;\n        }\n      }\n      if (fl)\n        break;\n    }\n\n    if (!fl)\n      cout << \"IMPOSSIBLE\\n\";\n    cerr << \"cs\"\n         << \": \" << cs << endl;\n  }\n\n  return 0;\n}\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"Birukhatri","func":"\/********************************************\n *                                           *\n *    Solved By : Bir Bahadur Khatri(B'ru)   *\n *      Be Positive,be Happy.                *\n *                                           *\n *********************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\ntemplate <typename T> T in() {\n  char ch;\n  T n = 0;\n  bool ng = false;\n  while (1) {\n    ch = getchar();\n    if (ch == '-') {\n      ng = true;\n      ch = getchar();\n      break;\n    }\n    if (ch >= '0' && ch <= '9')\n      break;\n  }\n  while (1) {\n    n = n * 10 + (ch - '0');\n    ch = getchar();\n    if (ch < '0' || ch > '9')\n      break;\n  }\n  return (ng ? -n : n);\n}\ntemplate <typename T> inline T POW(T B, T P) {\n  if (P == 0)\n    return 1;\n  if (P & 1)\n    return B * POW(B, P - 1);\n  else\n    return (POW(B, P \/ 2) * POW(B, P \/ 2));\n}\ntemplate <typename T> inline T Gcd(T a, T b) {\n  if (a < 0)\n    return Gcd(-a, b);\n  if (b < 0)\n    return Gcd(a, -b);\n  return (b == 0) ? a : Gcd(b, a % b);\n}\ntemplate <typename T> inline T Lcm(T a, T b) {\n  if (a < 0)\n    return Lcm(-a, b);\n  if (b < 0)\n    return Lcm(a, -b);\n  return a * (b \/ Gcd(a, b));\n}\nlong long Bigmod(long long base, long long power, long long MOD) {\n  long long ret = 1;\n  while (power) {\n    if (power & 1)\n      ret = (ret * base) % MOD;\n    base = (base * base) % MOD;\n    power >>= 1;\n  }\n  return ret;\n}\nbool isVowel(char ch) {\n  ch = toupper(ch);\n  if (ch == 'A' || ch == 'U' || ch == 'I' || ch == 'O' || ch == 'E')\n    return true;\n  return false;\n}\ntemplate <typename T> long long int isLeft(T a, T b, T c) {\n  return (a.x - b.x) * (b.y - c.y) - (b.x - c.x) * (a.y - b.y);\n}\nlong long ModInverse(long long number, long long MOD) {\n  return Bigmod(number, MOD - 2, MOD);\n}\nbool isConst(char ch) {\n  if (isalpha(ch) && !isVowel(ch))\n    return true;\n  return false;\n}\nint toInt(string s) {\n  int sm;\n  stringstream second(s);\n  second >> sm;\n  return sm;\n}\n\/\/\/**********************************************************\/\/\n\/\/\/         0123456789\n\n\/\/\/ ==========================================\/\/\/\/\n\nstruct z {\n  int nd;\n  double cs;\n  z() {}\n  z(int a, double b) { nd = a, cs = b; }\n\n  bool operator<(const z &p) const { return (p.cs < cs); }\n};\n\ndouble d[105][105];\ndouble e[105];\ndouble s[105];\ndouble ds[105];\nint main() {\n  freopen(\"A.in\", \"r\", stdin), freopen(\"A1.out\", \"w\", stdout);\n  int t;\n  \/\/ priority_queue<z> q;\n  \/\/ q.push(z(1,2));\n  \/\/ q.push(z(1,3));\n  \/\/ cout<<q.top().cs<<endl;\n  t = in<int>();\n\n  for (int cs = 1; cs < t + 1; cs++) {\n\n    int n;\n    n = in<int>();\n    int q;\n    q = in<int>();\n    for (int i = 1; i < n + 1; i++)\n      cin >> e[i] >> s[i];\n\n    for (int i = 1; i < n + 1; i++)\n      for (int j = 1; j < n + 1; j++) {\n        cin >> d[i][j];\n        if (d[i][j] < 0)\n          d[i][j] = 1e18;\n      }\n    for (int k = 1; k < n + 1; k++)\n      for (int i = 1; i < n + 1; i++)\n        for (int j = 1; j < n + 1; j++)\n          d[i][j] =\n              ((d[i][j] < d[i][k] + d[k][j]) ? d[i][j] : d[i][k] + d[k][j]);\n    \/\/ NL;cout<<d[1][4]<< \" ****** \"<<d[2][1]<<endl;\n\n    printf(\"Case #%d:\", cs);\n    while (q--) {\n      int st, ed;\n      cin >> st >> ed;\n\n      for (int i = 1; i < n + 1; i++)\n        ds[i] = 1e18;\n\n      ds[st] = 0.0;\n      priority_queue<z> q;\n      q.push(z(st, 0));\n      while (q.size()) {\n        z tp = q.top();\n        q.pop();\n        int u = tp.nd;\n\n        \/\/ trace2(u,tp.cs)\n\n        for (int i = 1; i < n + 1; i++) {\n          \/\/ trace4(u,i,e[u],d[u][i])\n          if (e[u] >= d[u][i]) {\n            double cs = d[u][i] \/ s[u];\n            if (ds[i] > (ds[u] + cs)) {\n              ds[i] = (ds[u] + cs);\n              q.push(z(i, ds[i]));\n            }\n          }\n        }\n      }\n      printf(\" \");\n      printf(\"%.10lf\", ds[ed]);\n    }\n    printf(\"\\n\");\n    cerr << \"cs\"\n         << \": \" << cs << endl;\n  }\n\n  return 0;\n}\n\/\/\/============= Thank You ===================\/\/\/\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(2e5) + 10;\nconst int INF = int(1e9) + 7;\nconst ll MOD = ll(1e4) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint T;\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    ll n;\n    cin >> n;\n    vector<int> v;\n    while (n > 0) {\n      v.push_back(n % 10);\n      n \/= 10;\n    }\n    reverse((v).begin(), (v).end());\n    int bg = 0, sm = 0;\n    for (int i = 1; i < ((int)(v).size()); i++)\n      if (v[i] > v[i - 1])\n        bg = i;\n      else if (v[i] < v[i - 1]) {\n        sm = i;\n        break;\n      }\n    if (sm != 0) {\n      v[bg]--;\n      for (int i = bg + 1; i < ((int)(v).size()); i++)\n        v[i] = 9;\n    }\n    ll res = 0;\n    for (int i = 0; i < ((int)(v).size()); i++)\n      res = res * 10 + v[i];\n    printf(\"Case #%d: %lld\\n\", q, res);\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(2e5) + 10;\nconst int INF = int(1e9) + 7;\nconst ll MOD = ll(1e4) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint T;\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    ll n, k;\n    cin >> n >> k;\n    ll l = n, r = n, k1 = k;\n    while (k > 0) {\n      if (k % 2 == 0)\n        l \/= 2;\n      else\n        l = (l - 1) \/ 2;\n      k \/= 2;\n    }\n    k = k1;\n    while (k > 1) {\n      if (k % 2 == 0)\n        r \/= 2;\n      else\n        r = (r - 1) \/ 2;\n      k \/= 2;\n    }\n    r \/= 2;\n    printf(\"Case #%d: %lld %lld\\n\", q, max(l, r), min(l, r));\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(2e5) + 10;\nconst int INF = int(1e9) + 7;\nconst ll MOD = ll(1e4) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint T;\n\nint main() {\n  \/\/\tfreopen(\"key.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    string s;\n    int k, num = 0;\n    cin >> s >> k;\n    for (int i = ((int)(s).size()) - 1; i >= k - 1; i--)\n      if (s[i] == '-') {\n        for (int j = 0; j < k; j++) {\n          if (s[i - j] == '+')\n            s[i - j] = '-';\n          else\n            s[i - j] = '+';\n        }\n        num++;\n      }\n    for (int i = 0; i < k - 1; i++)\n      if (s[i] == '-')\n        num = -1;\n    if (num < 0)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", q);\n    else\n      printf(\"Case #%d: %d\\n\", q, num);\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\n\/\/#define x first\n\/\/#define y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(2e5) + 10;\nconst int INF = int(1e9) + 7;\nconst ll MOD = ll(1e4) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint T, r[100], n, p, v[100][100];\n\nint getmin(int a, int b) { return (10 * a + 11 * b - 1) \/ (11 * b); }\n\nint getmax(int a, int b) { return (10 * a) \/ (9 * b); }\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", r + i);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        scanf(\"%d\", &v[i][j]);\n    for (int i = 0; i < n; i++)\n      sort(v[i], v[i] + p);\n    vector<int> st(n, 0);\n    int res = 0;\n    bool flag = true;\n    while (flag) {\n      int pi = 0, minmax = getmax(v[0][st[0]], r[0]),\n          maxmin = getmin(v[0][st[0]], r[0]);\n      for (int i = 1; i < n; i++)\n        if (getmax(v[i][st[i]], r[i]) < minmax) {\n          pi = i;\n          minmax = getmax(v[i][st[i]], r[i]);\n        }\n      for (int i = 1; i < n; i++)\n        if (getmax(v[i][st[i]], r[i]) > maxmin)\n          maxmin = getmin(v[i][st[i]], r[i]);\n      if (minmax >= maxmin) {\n        res++;\n        for (int i = 0; i < n; i++)\n          st[i]++;\n      } else\n        st[pi]++;\n      for (int i = 0; i < n; i++)\n        if (st[i] >= p)\n          flag = false;\n    }\n    printf(\"Case #%d: %d\\n\", q, res);\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(2e5) + 10;\nconst int INF = int(1e9) + 7;\nconst ll MOD = ll(1e4) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint T, was[S];\nstring f[50];\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    int n, m;\n    memset(was, 0, S * sizeof(int));\n    cin >> n >> m;\n    for (int i = 0; i < n; i++)\n      cin >> f[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++) {\n        if (f[i][j] != '?' && !was[f[i][j]]) {\n          was[f[i][j]] = 1;\n          int u = i, d = i;\n          while (u > 0 && f[u - 1][j] == '?')\n            u--;\n          while (d < n - 1 && f[d + 1][j] == '?')\n            d++;\n          int l = j, r = j;\n          while (l > 0) {\n            bool flag = false;\n            for (int k = u; k <= d; k++)\n              if (f[k][l - 1] != '?')\n                flag = true;\n            if (flag)\n              break;\n            l--;\n          }\n          while (r < m - 1) {\n            bool flag = false;\n            for (int k = u; k <= d; k++)\n              if (f[k][r + 1] != '?')\n                flag = true;\n            if (flag)\n              break;\n            r++;\n          }\n          for (int k = u; k <= d; k++)\n            for (int jj = l; jj <= r; jj++)\n              f[k][jj] = f[i][j];\n        }\n      }\n\n    printf(\"Case #%d:\\n\", q);\n    for (int i = 0; i < n; i++)\n      cout << f[i] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(1e3) + 10;\nconst double INF = 1e15 + 7;\nconst ll MOD = ll(1e9) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint n;\nint T;\ndouble d;\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n\n    double v = INF;\n    cin >> d >> n;\n    for (int i = 0; i < n; i++) {\n      double s, k;\n      scanf(\"%lf%lf\", &k, &s);\n      v = min(v, d * s \/ (d - k));\n    }\n    printf(\"Case #%d: %lf\\n\", q, v);\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(1e3) + 10;\nconst double INF = 1e15 + 7;\nconst ll MOD = ll(1e9) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nint n, T, aa[6];\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/B-small-attempt3.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  for (int q = 1; q <= T; q++) {\n    cin >> n;\n    for (int i = 0; i < 6; i++)\n      cin >> aa[i];\n    pair<int, char> v[3] = {{aa[0], 'R'}, {aa[2], 'Y'}, {aa[4], 'B'}};\n    sort(v, v + 3);\n    int r = v[2].first, y = v[1].first, b = v[0].first;\n    char r0 = v[2].second, y0 = v[1].second, b0 = v[0].second;\n    if (!(r >= y && y >= b))\n      exit(1);\n\n    if (b + y < r)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", q);\n    else {\n      bool flag = false;\n      if ((r + y + b) % 2 == 1) {\n        flag = true;\n        r--;\n      }\n      int an = (r + y - b) \/ 2;\n      int bn = (r + b - y) \/ 2;\n      int cn = (b + y - r) \/ 2;\n      printf(\"Case #%d: \", q);\n      for (int i = 0; i < an; i++) {\n        printf(\"%c\", r0);\n        printf(\"%c\", y0);\n      }\n      for (int i = 0; i < bn; i++) {\n        printf(\"%c\", r0);\n        printf(\"%c\", b0);\n      }\n      if (flag)\n        printf(\"%c\", r0);\n      for (int i = 0; i < cn; i++) {\n        printf(\"%c\", y0);\n        printf(\"%c\", b0);\n      }\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"bogeyman","func":"#include <algorithm>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <regex>\n#include <set>\n#include <stack>\n#include <stdlib.h>\n#include <string>\n#include <time.h>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int S = int(1e2) + 10;\nconst double INF = 1e15 + 7;\nconst ll MOD = ll(1e9) + 7;\nconst double EPS = 1e-12;\nconst ll magic = ll(5e4);\n\nll e[S], s[S], dd[S], d[S], qq, f[S][S];\nint n, T;\ndouble dp[S];\n\nint main() {\n  freopen(\"\/Users\/user\/Downloads\/C-small-attempt1.in\", \"r\", stdin);\n  freopen(\"key.out\", \"w\", stdout);\n  cin >> T;\n  \/\/\tprintf(\"Case #%d: IMPOSSIBLE\\n\", q);\n  for (int q = 1; q <= T; q++) {\n    cin >> n >> qq;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lld%lld\", e + i, s + i);\n      dp[i] = INF;\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        \/\/\t\t\t\tif(j == i + 1)\n        scanf(\"%lld\", &f[i][j]);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        if (j == i + 1)\n          dd[i] = f[i][j];\n    d[1] = dd[0];\n    for (int i = 2; i < n; i++)\n      d[i] = d[i - 1] + dd[i - 1];\n\n    cin >> qq >> qq;\n    dp[n - 1] = 0;\n    for (int i = n - 2; i >= 0; i--)\n      for (int j = i + 1; j < n; j++)\n        if (d[j] - d[i] <= e[i])\n          dp[i] = min(dp[i], double(d[j] - d[i]) \/ s[i] + dp[j]);\n\n    printf(\"Case #%d: %lf\\n\", q, dp[0]);\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\n\nconst int Maxn = 50;\nint n;\nchar s[Maxn];\n\nbool Check(int t) {\n  for (int i = 2; i <= t; i++)\n    if (s[i] < s[i - 1])\n      return false;\n  return true;\n}\n\nint main() {\n  \/\/ freopen(\"b.in\",\"r\",stdin);\n  \/\/ freopen(\"b.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%s\", s + 1);\n    printf(\"Case #%d: \", ++w);\n    n = strlen(s + 1);\n    if (Check(n)) {\n      printf(\"%s\\n\", s + 1);\n      continue;\n    }\n    for (int i = n; i > 0; i--)\n      if (s[i] != '0') {\n        s[i] = s[i] - 1;\n        if (Check(i)) {\n          int k = 1;\n          while (s[k] == '0')\n            k++;\n          for (int j = k; j <= i; j++)\n            printf(\"%c\", s[j]);\n          for (int j = i + 1; j <= n; j++)\n            printf(\"9\");\n          printf(\"\\n\");\n          break;\n        }\n        s[i] = s[i] + 1;\n      }\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\n\nlong long n, k, u, v, t, ans, L, R;\npair<long long, long long> a[100][10];\n\nint main() {\n  \/\/ freopen(\"c.in\",\"r\",stdin);\n  \/\/ freopen(\"c.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%lld%lld\", &n, &k);\n    printf(\"Case #%d: \", ++w);\n\n    if (k == 1) {\n      ans = n;\n      if (ans % 2LL == 0)\n        L = ans \/ 2LL, R = L - 1;\n      else\n        L = ans \/ 2LL, R = L;\n      printf(\"%lld %lld\\n\", L, R);\n      continue;\n    }\n    for (int i = 1; i <= 90; i++)\n      for (int j = 1; j <= 5; j++)\n        a[i][j].first = 0, a[i][j].second = 0;\n    a[1][1].first = n, a[1][1].second = 1;\n    for (u = 2, v = 4;; u++, v = v * 2LL) {\n      if (a[u - 1][1].first > 0) {\n        if (a[u - 1][1].first % 2LL == 0) {\n          a[u][1].first = a[u - 1][1].first \/ 2LL,\n          a[u][1].second += a[u - 1][1].second;\n          a[u][2].first = a[u - 1][1].first \/ 2LL - 1LL,\n          a[u][2].second += a[u - 1][1].second;\n        } else {\n          a[u][1].first = a[u - 1][1].first \/ 2LL,\n          a[u][1].second += a[u - 1][1].second * 2;\n        }\n      }\n\n      if (a[u - 1][2].first > 0) {\n        if (a[u - 1][2].first % 2LL == 0) {\n          a[u][1].first = a[u - 1][2].first \/ 2LL,\n          a[u][1].second += a[u - 1][2].second;\n          a[u][2].first = a[u - 1][2].first \/ 2LL - 1LL,\n          a[u][2].second += a[u - 1][2].second;\n        } else {\n          a[u][2].first = a[u - 1][2].first \/ 2LL,\n          a[u][2].second += a[u - 1][2].second * 2;\n        }\n      }\n      \/\/ printf(\"%lld %lld %lld\n      \/\/ %lld\\n\",a[u][1].first,a[u][1].second,a[u][2].first,a[u][2].second);\n      if (v - 1LL >= k)\n        break;\n    }\n\n    v = v \/ 2LL - 1LL, t = k - v;\n    if (a[u][1].second >= t)\n      ans = a[u][1].first;\n    else\n      ans = a[u][2].first;\n\n    if (ans % 2LL == 0)\n      L = ans \/ 2LL, R = L - 1;\n    else\n      L = ans \/ 2LL, R = L;\n    printf(\"%lld %lld\\n\", L, R);\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\n\nconst int Maxn = 2000;\nint n, k;\nchar s[Maxn];\n\nint main() {\n  \/\/ freopen(\"a.in\",\"r\",stdin);\n  \/\/ freopen(\"a.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%s%d\", s + 1, &k);\n    printf(\"Case #%d: \", ++w);\n    n = strlen(s + 1);\n    int ans = 0;\n    for (int i = 1; i <= n - k + 1; i++)\n      if (s[i] == '-') {\n        for (int j = i; j <= i + k - 1; j++)\n          s[j] = (s[j] == '-') ? '+' : '-';\n        ans++;\n      }\n    bool flag = true;\n    for (int i = 1; i <= n; i++)\n      if (s[i] == '-')\n        flag = false;\n    if (flag)\n      printf(\"%d\\n\", ans);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\n\nint hk, ak, hd, ad, b, d, ans;\n\nvoid Work(int x, int y) {\n  int p = 0, hh = hd, aa = ad, h = hk, a = ak;\n  while (h > 0) {\n    if (hd - a <= 0)\n      return;\n    if (h - aa <= 0) {\n      p++;\n      break;\n    }\n    if (hh - a <= 0 && hd - a - a <= 0)\n      return;\n    if (hh - a <= 0)\n      hh = hd;\n    else if (x > 0)\n      a = max(a - d, 0), x--;\n    else if (y > 0)\n      aa += b, y--;\n    else\n      h -= aa;\n    p++;\n    hh -= a;\n    if (p > ans)\n      break;\n    \/\/ printf(\"%d %d %d %d\\n\",hh,h,a,p);\n  }\n  ans = min(ans, p);\n  \/\/ printf(\"%d\\n\",ans);\n}\n\nint main() {\n  \/\/ freopen(\"c.in\",\"r\",stdin);\n  \/\/ freopen(\"c.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%d%d%d%d%d%d\", &hd, &ad, &hk, &ak, &b, &d);\n    ans = 1e9 + 10;\n    for (int i = 0; i <= 101; i++)\n      for (int j = 0; j <= 101; j++)\n        Work(i, j);\n    Work(0, 0);\n    printf(\"Case #%d: \", ++w);\n    if (ans == 1e9 + 10)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\nint n, m;\nchar s[30][30];\nbool flag;\n\nint main() {\n  \/\/ freopen(\"a.in\",\"r\",stdin);\n  \/\/ freopen(\"a.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", s[i]);\n    int j, temp = 0;\n    for (int i = 0; i < n; i++) {\n      flag = false;\n      int p = 0;\n      for (int j = 0; j < m; j++)\n        if (s[i][j] != '?') {\n          flag = true;\n          for (int k = temp; k <= i; k++)\n            for (int x = p; x <= j; x++)\n              s[k][x] = s[i][j];\n          p = j + 1;\n        }\n      if (p < m && flag) {\n        for (int k = temp; k <= i; k++)\n          for (int x = p; x < m; x++)\n            s[k][x] = s[i][p - 1];\n      }\n      if (flag)\n        temp = i + 1;\n    }\n    if (temp < n) {\n      for (int k = temp; k < n; k++)\n        for (int x = 0; x < m; x++)\n          s[k][x] = s[temp - 1][x];\n    }\n    printf(\"Case #%d:\\n\", ++w);\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", s[i]);\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nint k[2000], s[2000], d, n;\n\nint main() {\n  \/\/ freopen(\"a.in\",\"r\",stdin);\n  \/\/ freopen(\"a.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%d%d\", &d, &n);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &k[i], &s[i]);\n    double temp = 0;\n    for (int i = 1; i <= n; i++)\n      temp = max(temp, (double)(d - k[i]) \/ (double)s[i]);\n    printf(\"Case #%d: %.6lf\\n\", ++w, (double)d \/ temp);\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nconst char s[7] = {' ', 'R', 'B', 'Y', 'G', 'O', 'V'};\nint n, m, t, a[10], ans[2000];\n\nint main() {\n  \/\/ freopen(\"b.in\",\"r\",stdin);\n  \/\/ freopen(\"b.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    \/\/ scanf(\"%d%d%d%d%d%d\",&R,&O,&Y,&G,&B,&V);\n    scanf(\"%d%d%d%d%d%d%d\", &n, &a[1], &a[5], &a[3], &a[4], &a[2], &a[6]);\n    m = 0;\n    bool flag = true;\n    if (a[1] > 0)\n      ans[++m] = s[1], a[1]--, t = 1;\n    else if (a[2] > 0)\n      ans[++m] = s[2], a[2]--, t = 2;\n    else\n      ans[++m] = s[3], a[3]--, t = 3;\n    while (a[1] > 0 || a[2] > 0 || a[3] > 0) {\n      int x = t + 1, y = t - 1;\n      if (x > 3)\n        x = 1;\n      if (y == 0)\n        y = 3;\n      if (a[x] == 0 && a[y] == 0) {\n        flag = false;\n        break;\n      }\n      if (a[x] > a[y] || a[x] == a[y] && s[x] == s[1])\n        ans[++m] = s[x], a[x]--, t = x;\n      else\n        ans[++m] = s[y], a[y]--, t = y;\n      \/\/ printf(\"%d %d %d\\n\",a[1],a[2],a[3]);\n    }\n    if (ans[1] == ans[m])\n      flag = false;\n    printf(\"Case #%d: \", ++w);\n    if (!flag)\n      printf(\"IMPOSSIBLE\\n\");\n    else {\n      for (int i = 1; i <= m; i++)\n        printf(\"%c\", ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"burden","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\nconst double DINF = (double)1e50;\nconst long long INF = (long long)1e18;\nconst int Maxn = 110;\nint n, q, E[Maxn], S[Maxn], Q[Maxn * 100];\nlong long G[Maxn][Maxn];\ndouble Time[Maxn][Maxn];\nbool boo[Maxn];\n\nvoid spfa(int st, double *Result) {\n  for (int i = 1; i <= n; i++)\n    Result[i] = DINF;\n\n  Result[st] = 0;\n  boo[st] = 1;\n  Q[1] = st;\n  for (int head = 1, tail = 1; head <= tail; head++) {\n    int u = Q[head];\n    boo[u] = 0;\n    for (int i = 1; i <= n; i++) {\n      if (G[u][i] > E[u])\n        continue;\n      double temp = (double)G[u][i] \/ S[u];\n      if (temp + Result[u] < Result[i]) {\n        Result[i] = temp + Result[u];\n        if (!boo[i]) {\n          boo[i] = true;\n          tail++;\n          Q[tail] = i;\n        }\n      }\n    }\n  }\n}\n\nint main() {\n  \/\/ freopen(\"c.in\",\"r\",stdin);\n  \/\/ freopen(\"c.out\",\"w\",stdout);\n  int T, w = 0;\n  for (scanf(\"%d\", &T); T--;) {\n    scanf(\"%d%d\", &n, &q);\n    printf(\"Case #%d: \", ++w);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &E[i], &S[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        G[i][j] = x;\n        if (x == -1)\n          G[i][j] = INF;\n      }\n\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          G[i][j] = min(G[i][j], G[i][k] + G[k][j]);\n\n    for (int i = 1; i <= n; i++)\n      spfa(i, Time[i]);\n\n    for (; q--;) {\n      int st, ed;\n      scanf(\"%d%d\", &st, &ed);\n      printf(\" %.12lf\", Time[st][ed]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nlong long n, a[20], ans;\nint T;\n\nint main() {\n  freopen(\"bl.in\", \"r\", stdin);\n  freopen(\"bl.out\", \"w\", stdout);\n  cin >> T;\n  a[0] = 1;\n  for (int i = 1; i <= 18; i++)\n    a[i] = a[i - 1] * 10 + 1;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> n;\n    printf(\"Case #%d: \", ii);\n    ans = n;\n    int cnt = 0;\n    for (int i = 18; i >= 0; i--) {\n      while (n >= a[i] && cnt < 9)\n        n -= a[i], cnt++;\n    }\n    cout << ans - n << endl;\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\npriority_queue<int> q;\nint n, k, x, y;\nint T;\n\nint main() {\n  freopen(\"cs.in\", \"r\", stdin);\n  freopen(\"cs.out\", \"w\", stdout);\n  cin >> T;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> n >> k;\n    while (!q.empty())\n      q.pop();\n    q.push(n);\n    for (int i = 0; i < k; i++) {\n      int now = q.top();\n      q.pop();\n      x = now \/ 2;\n      y = (now - 1) \/ 2;\n      q.push(x);\n      q.push(y);\n    }\n    printf(\"Case #%d: \", ii);\n    printf(\"%d %d\\n\", x, y);\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstring s;\nint k, n;\nint a[1010];\nint T;\nint ans;\n\nint main() {\n  freopen(\"as.in\", \"r\", stdin);\n  freopen(\"as.out\", \"w\", stdout);\n  cin >> T;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> s >> k;\n    n = s.length();\n    ans = 0;\n    for (int i = 0; i < n; i++)\n      if (s[i] == '-')\n        a[i] = 0;\n      else\n        a[i] = 1;\n    for (int i = 0; i < n; i++) {\n      if (!a[i]) {\n        if (i + k > n) {\n          ans = -1;\n          break;\n        }\n        ans++;\n        for (int j = i; j < i + k; j++)\n          a[j] = 1 - a[j];\n      }\n    }\n    printf(\"Case #%d: \", ii);\n    if (ans == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst double eps = 1e-6;\n\nint T;\nint n, p;\nint r[60];\nint c[60][60];\nint ans = 0;\nbool vis[60];\nint f[60];\n\nint check() {\n  int ret = 0;\n  for (int i = 1; i <= p; i++) {\n    double k1 = (double)c[1][i] \/ r[1] \/ 1.1;\n    double k2 = (double)c[1][i] \/ r[1] \/ 0.9;\n    double k3 = (double)c[2][f[i]] \/ r[2] \/ 1.1;\n    double k4 = (double)c[2][f[i]] \/ r[2] \/ 0.9;\n    int k = c[1][i] \/ r[1];\n    if ((k1 <= k && k2 >= k && k3 <= k && k4 >= k) ||\n        (k1 <= k + 1 && k2 >= k + 1 && k3 <= k + 1 && k4 >= k + 1) ||\n        (k1 <= k - 1 && k2 >= k - 1 && k3 <= k - 1 && k4 >= k - 1))\n      ret++;\n  }\n  return ret;\n}\n\nvoid dfs(int x) {\n  if (x == p + 1) {\n    ans = max(ans, check());\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    if (!vis[i]) {\n      f[x] = i;\n      vis[i] = 1;\n      dfs(x + 1);\n      vis[i] = false;\n    }\n  }\n}\n\nint main() {\n  freopen(\"b.in\", \"r\", stdin);\n  freopen(\"b.out\", \"w\", stdout);\n  cin >> T;\n\n  for (int ii = 1; ii <= T; ii++) {\n    ans = 0;\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &r[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= p; j++)\n        scanf(\"%d\", &c[i][j]);\n    if (n == 1) {\n      for (int j = 1; j <= p; j++) {\n        double k1 = (double)c[1][j] \/ r[1] \/ 1.1;\n        double k2 = (double)c[1][j] \/ r[1] \/ 0.9;\n        int k = c[1][j] \/ r[1];\n        if ((k1 <= k && k2 >= k) || (k1 <= k + 1 && k2 >= k + 1) ||\n            (k1 <= k - 1 && k2 >= k - 1))\n          ans++;\n      }\n    } else\n      dfs(1);\n    printf(\"Case #%d: %d\\n\", ii, ans);\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint r, c, T;\nchar s[30][30];\nbool vis[30];\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  cin >> T;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> r >> c;\n    memset(vis, 0, sizeof(vis));\n    for (int i = 0; i < r; i++) {\n      scanf(\"%s\", s[i]);\n      bool check = false;\n      for (int j = 0; j < c; j++)\n        if (s[i][j] != '?') {\n          check = true;\n          int k = j - 1;\n          while (k >= 0 && s[i][k] == '?')\n            s[i][k] = s[i][j], k--;\n          k = j + 1;\n          while (k < c && s[i][k] == '?')\n            s[i][k] = s[i][j], k++;\n        }\n      if (check) {\n        vis[i] = 1;\n        int k = i - 1;\n        while (k >= 0 && !vis[k]) {\n          for (int j = 0; j < c; j++)\n            s[k][j] = s[i][j];\n          vis[k] = 1;\n          k--;\n        }\n      } else {\n        if (i > 0 && vis[i - 1]) {\n          for (int j = 0; j < c; j++)\n            s[i][j] = s[i - 1][j];\n          vis[i] = 1;\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", ii);\n    for (int i = 0; i < r; i++)\n      printf(\"%s\\n\", s[i]);\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint T, n;\ndouble s[1010], d, k[1010], t, p;\nstruct node {\n  double s, k;\n  bool operator<(const node &b) const { return k < b.k; }\n} a[1010];\n\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  cin >> T;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> d >> n;\n    t = 0;\n    for (int i = 1; i <= n; i++)\n      scanf(\"%lf%lf\", &a[i].k, &a[i].s);\n    sort(a + 1, a + 1 + n);\n    p = a[1].k;\n    int i;\n    for (i = 1; i < n; i++) {\n      if (a[i].s < a[i + 1].s)\n        break;\n      double tt = (a[i + 1].k + a[i + 1].s * t - p) \/ (a[i].s - a[i + 1].s);\n      double pp = p + tt * a[i].s;\n      if (pp > d) {\n        break;\n      } else {\n        p = pp;\n        t += tt;\n      }\n    }\n    t += (d - p) \/ a[i].s;\n    printf(\"Case #%d: \", ii);\n    printf(\"%.6lf\\n\", d \/ t);\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint T, n;\nint r, o, y, g, b, v;\nint ans = 0;\nstring s;\n\nvector<int> a[7];\nint c[7];\nchar cc[7];\n\nvoid dfs(int pre, int n) {\n  if (!n)\n    return;\n  int len = a[pre].size();\n  int maxx = 0, maxp = 0;\n  for (int i = 0; i < len; i++)\n    if (c[a[pre][i]] > maxx) {\n      maxx = c[a[pre][i]];\n      maxp = a[pre][i];\n    }\n  s += cc[maxp];\n  c[maxp]--;\n  dfs(maxp, n - 1);\n}\n\nint main() {\n  freopen(\"b.in\", \"r\", stdin);\n  freopen(\"b.out\", \"w\", stdout);\n  cin >> T;\n  for (int i = 1; i < 7; i++)\n    a[0].push_back(i);\n  cc[1] = 'R';\n  cc[2] = 'O';\n  cc[3] = 'Y';\n  cc[4] = 'G';\n  cc[5] = 'B';\n  cc[6] = 'V';\n  a[1].push_back(3);\n  a[1].push_back(4);\n  a[1].push_back(5);\n  a[2].push_back(5);\n  a[3].push_back(1);\n  a[3].push_back(5);\n  a[3].push_back(6);\n  a[4].push_back(1);\n  a[5].push_back(1);\n  a[5].push_back(2);\n  a[5].push_back(3);\n  a[6].push_back(3);\n  for (int ii = 1; ii <= T; ii++) {\n    s.clear();\n    printf(\"Case #%d: \", ii);\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    c[1] = r;\n    c[2] = o;\n    c[3] = y;\n    c[4] = g;\n    c[5] = b;\n    c[6] = v;\n    if (r + o + v > n \/ 2 || y + g + o > n \/ 2 || b + v + g > n \/ 2)\n      printf(\"IMPOSSIBLE\\n\");\n    else {\n      dfs(0, n);\n      cout << s << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"cabinfever","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint T, n, q;\ndouble haha[110][110];\ndouble f[110];\ndouble sum[110];\ndouble e[110], s[110];\nint v, u;\ndouble ans[110];\n\nint main() {\n  freopen(\"c.in\", \"r\", stdin);\n  freopen(\"c.out\", \"w\", stdout);\n  cin >> T;\n  for (int ii = 1; ii <= T; ii++) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++)\n      scanf(\"%lf%lf\", &e[i], &s[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        scanf(\"%lf\", &haha[i][j]);\n    for (int i = 2; i <= n; i++)\n      sum[i] = sum[i - 1] + haha[i - 1][i];\n    for (int iii = 1; iii <= q; iii++) {\n      scanf(\"%d%d\", &u, &v);\n      for (int i = 2; i <= n; i++) {\n        f[i] = 1e12;\n        for (int j = 1; j < i; j++) {\n          if (sum[i] - sum[j] > e[j])\n            continue;\n          f[i] = min(f[j] + (sum[i] - sum[j]) \/ s[j], f[i]);\n        }\n      }\n      ans[iii] = f[n];\n    }\n    printf(\"Case #%d: \", ii);\n    for (int i = 1; i <= q; i++)\n      printf(\"%.8lf%c\", ans[i], i == q ? '\\n' : ' ');\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int ct = 1; ct <= tc; ct++) {\n    printf(\"Case #%d: \", ct);\n    char str[100];\n    scanf(\"%s\", str);\n    bool valid = true;\n    int len = strlen(str);\n    for (int i = 0; i < len - 1; i++) {\n      if (str[i] > str[i + 1]) {\n        valid = false;\n        int idx = i;\n        int carry = 1;\n        while (i >= 0 && carry) {\n          if (str[i] != '0') {\n            str[i]--;\n            carry = 0;\n          } else {\n            str[i] = '9';\n            carry = 1;\n          }\n\n          if (i > 0 && str[i - 1] > str[i]) {\n            carry = 1;\n            str[i] = '9';\n          }\n\n          i--;\n        }\n\n        for (int j = 0; j <= idx; j++) {\n          if (j == 0 && str[j] == '0')\n            continue;\n          printf(\"%c\", str[j]);\n        }\n\n        for (int j = idx + 1; j < len; j++) {\n          printf(\"9\");\n        }\n        printf(\"\\n\");\n        break;\n      }\n    }\n\n    if (valid) {\n      printf(\"%s\\n\", str);\n    }\n\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int ct = 1; ct <= tc; ct++) {\n    int n, k;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &k);\n    priority_queue<int> pq;\n    pq.push(n);\n\n    printf(\"Case #%d: \", ct);\n\n    while (k--) {\n      int top = pq.top();\n      pq.pop();\n      int mid = top - 1;\n      int l, r;\n      l = mid \/ 2;\n      r = (mid + 1) \/ 2;\n      if (k == 0) {\n        printf(\"%d %d\\n\", r, l);\n      }\n      if (l) {\n        pq.push(l);\n      }\n\n      if (r) {\n        pq.push(r);\n      }\n    }\n\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n  char str[1010];\n  int k;\n\n  for (int ct = 1; ct <= tc; ct++) {\n    scanf(\"%s\", str);\n    scanf(\"%d\", &k);\n    int ret = 0;\n    int len = strlen(str);\n\n    for (int j = 0; j < len; j++) {\n      if (str[j] == '-') {\n        if (j + k > len) {\n          ret = -1;\n          break;\n        }\n        for (int l = 0; l < k; l++) {\n          if (str[l + j] == '+')\n            str[l + j] = '-';\n          else\n            str[l + j] = '+';\n        }\n        ret++;\n        \/\/ printf(\"%s\\n\", str);\n      }\n    }\n\n    printf(\"Case #%d: \", ct);\n\n    if (ret == -1) {\n      printf(\"IMPOSSIBLE\\n\");\n    } else {\n      printf(\"%d\\n\", ret);\n    }\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nint unit[52];\nint wt[52][52];\nint mn[52][52], mx[52][52];\nint f;\nvii adjList[1010];\nint par[1010];\nint n, p;\n\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/B-small-attempt0 (1).in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nvoid augment(int x) {\n  if (par[x] != x) {\n    for (int i = 0; i < adjList[par[x]].size(); i++) {\n      if (adjList[par[x]][i].first == x) {\n        f = min(f, adjList[par[x]][i].second);\n        break;\n      }\n    }\n    augment(par[x]);\n    for (int i = 0; i < adjList[par[x]].size(); i++) {\n      if (adjList[par[x]][i].first == x) {\n        adjList[par[x]][i].second -= f;\n        break;\n      }\n    }\n\n    for (int i = 0; i < adjList[x].size(); i++) {\n      if (adjList[x][i].first == par[x]) {\n        adjList[x][i].second += f;\n        break;\n      }\n    }\n  }\n}\n\nint maxflow() {\n  int mf = 0;\n  f = 0;\n  while (true) {\n    f = 0;\n    memset(par, -1, sizeof(par));\n    queue<int> q;\n    q.push(n * p);\n    par[n * p] = n * p;\n    bool found = false;\n\n    while (!q.empty()) {\n      int node = q.front();\n      \/\/ cout <<\"cur : \" << node << endl;\n      q.pop();\n      for (int i = 0; i < adjList[node].size(); i++) {\n\n        int nx = adjList[node][i].first;\n        int cap = adjList[node][i].second;\n        \/\/ cout << nx << \" \" << cap << endl;\n        if (cap > 0 && par[nx] == -1) {\n          par[nx] = node;\n          if (nx == n * p + 1) {\n            f = 1000000000;\n            augment(nx);\n            found = true;\n\n            break;\n          }\n          q.push(nx);\n        }\n      }\n      if (found)\n        break;\n    }\n\n    if (f == 0)\n      break;\n    mf += f;\n  }\n\n  return mf;\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int ct = 1; ct <= tc; ct++) {\n    map<int, int> mp;\n\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &p);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &unit[i]);\n    }\n\n    memset(mn, -1, sizeof(mn));\n    memset(mx, -1, sizeof(mx));\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &wt[i][j]);\n        int tmp1 = floor(1.0 * wt[i][j] \/ (0.9 * unit[i]));\n        int tmp2 = ceil(1.0 * wt[i][j] \/ (1.1 * unit[i]));\n        int bawah = min(tmp1, tmp2);\n        int atas = max(tmp1, tmp2);\n        \/\/ cout << bawah << \" \" << atas << endl;\n        while (bawah <= atas) {\n          if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&\n              1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)\n            break;\n          else\n            bawah++;\n        }\n\n        \/\/ cout << bawah << \" \" << atas << endl;\n\n        if (bawah > atas)\n          continue;\n\n        while (atas >= bawah) {\n          if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&\n              1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)\n            break;\n          else\n            atas--;\n        }\n        \/\/ cout <<\"idx : \" << i << endl;\n        \/\/ cout << bawah << \" \" << atas << endl;\n        mn[i][j] = bawah;\n        mx[i][j] = atas;\n\n        \/\/ while(mx[i][j] == -1 && )\n      }\n    }\n\n    for (int i = 0; i < 1010; i++)\n      adjList[i].clear();\n\n    for (int i = 0; i < n - 1; i++) {\n      for (int j = 0; j < p; j++) {\n        if (mn[i][j] <= 0)\n          continue;\n        for (int k = 0; k < p; k++) {\n          if (mn[i + 1][k] <= 0)\n            continue;\n          \/\/ printf(\"%d %d %d %d\\n\", mn[i][j], mx[i][j], mn[i+1][k],\n          \/\/ mx[i+1][k]);\n          if ((mn[i][j] <= mn[i + 1][k] && mn[i + 1][k] <= mx[i][j]) ||\n              (mn[i + 1][k] <= mn[i][j] && mn[i][j] <= mx[i + 1][k])) {\n            \/\/ cout << (i * p + j) << \" to \" << ((i+1)*p + k) << endl;\n            adjList[i * p + j].push_back(ii((i + 1) * p + k, 1));\n            adjList[(i + 1) * p + k].push_back(ii(i * p + j, 0));\n          }\n        }\n      }\n    }\n\n    for (int j = 0; j < p; j++) {\n      \/\/ source + to sink.\n      if (mn[0][j] > 0) {\n        adjList[n * p].push_back(ii(j, 1));\n        adjList[j].push_back(ii(n * p, 0));\n      }\n\n      if (mn[n - 1][j] > 0) {\n        adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));\n        adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", ct, maxflow());\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int ct = 1; ct <= tc; ct++) {\n    int r, c;\n    scanf(\"%d\", &r);\n    scanf(\"%d\", &c);\n    string str[30];\n    string ret[30];\n    for (int i = 0; i < r; i++) {\n      cin >> str[i];\n      \/\/ if(ct == 74){\n      \/\/ \tcerr << str[i] << endl;\n      \/\/ }\n      ret[i] = str[i];\n    }\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] == '?')\n          continue;\n        int minx, maxx;\n        minx = maxx = i;\n        int miny, maxy;\n        miny = maxy = j;\n        while (miny > 0 && str[i][miny - 1] == '?' && ret[i][miny - 1] == '?')\n          miny--;\n        while (maxy < c - 1 && str[i][maxy + 1] == '?' &&\n               ret[i][maxy + 1] == '?')\n          maxy++;\n        while (minx > 0) {\n          bool valid = true;\n          for (int k = miny; k <= maxy; k++) {\n            if (str[minx - 1][k] != '?' || ret[minx - 1][k] != '?') {\n              valid = false;\n              break;\n            }\n          }\n          if (valid) {\n            minx--;\n          } else\n            break;\n        }\n        bool adabawah = false;\n        for (int k = i + 1; k < r; k++) {\n          for (int l = 0; l < c; l++) {\n            if (str[k][l] != '?') {\n              adabawah = true;\n              break;\n            }\n          }\n        }\n        if (!adabawah) {\n          maxx = r - 1;\n        }\n\n        for (int k = minx; k <= maxx; k++) {\n          for (int l = miny; l <= maxy; l++) {\n            ret[k][l] = str[i][j];\n          }\n        }\n      }\n    }\n\n    printf(\"Case #%d: \\n\", ct);\n    for (int i = 0; i < r; i++) {\n      cout << ret[i] << \"\\n\";\n    }\n\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out.txt\", \"w\", stdout);\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int ct = 1; ct <= tc; ct++) {\n    int d, n;\n    scanf(\"%d\", &d);\n    scanf(\"%d\", &n);\n    double maxi = 0.0;\n\n    for (int i = 0; i < n; i++) {\n      int st, sp;\n      scanf(\"%d\", &st);\n      scanf(\"%d\", &sp);\n      maxi = max(maxi, 1.0 * (d - st) \/ sp);\n    }\n\n    printf(\"Case #%d: %.7lf\\n\", ct, 1.0 * d \/ maxi);\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out1.txt\", \"w\", stdout);\n}\n\nvoid pr(int idx) {\n  switch (idx) {\n  case 0:\n    printf(\"R\");\n    break;\n  case 1:\n    printf(\"O\");\n    break;\n  case 2:\n    printf(\"Y\");\n    break;\n  case 3:\n    printf(\"G\");\n    break;\n  case 4:\n    printf(\"B\");\n    break;\n  case 5:\n    printf(\"V\");\n    break;\n  }\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int ct = 1; ct <= tc; ct++) {\n    int n;\n    scanf(\"%d\", &n);\n    int arr[10];\n    printf(\"Case #%d: \", ct);\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &arr[i]);\n    }\n    bool imp = false;\n    for (int i = 0; i < 6; i++) {\n      if (arr[i] * 2 > n) {\n        imp = true;\n        printf(\"IMPOSSIBLE\\n\");\n        break;\n      }\n    }\n\n    if (imp)\n      continue;\n\n    int maxidx = 0;\n    for (int i = 0; i < 6; i++) {\n      if (arr[maxidx] < arr[i])\n        maxidx = i;\n    }\n    bool palinggede = true;\n    int last = maxidx;\n    pr(maxidx);\n    arr[maxidx]--;\n    int first = last;\n\n    while (true) {\n      bool ada = false;\n      for (int i = 0; i < 6; i++) {\n        if (arr[i] > 0)\n          ada = true;\n      }\n\n      if (!ada)\n        break;\n\n      if (last == 0) {\n        if (arr[2] > arr[4]) {\n          last = 2;\n        } else if (arr[2] < arr[4]) {\n          last = 4;\n        } else {\n          if (first == 2) {\n            last = 2;\n          } else\n            last = 4;\n        }\n      } else if (last == 2) {\n        if (arr[0] > arr[4]) {\n          last = 0;\n        } else if (arr[0] < arr[4]) {\n          last = 4;\n        } else {\n          if (first == 0) {\n            last = 0;\n          } else\n            last = 4;\n        }\n      } else {\n        if (arr[0] > arr[2]) {\n          last = 0;\n        } else if (arr[0] < arr[2]) {\n          last = 2;\n        } else {\n          if (first == 0) {\n            last = 0;\n          } else\n            last = 2;\n        }\n      }\n      pr(last);\n      arr[last]--;\n    }\n    printf(\"\\n\");\n\n    cerr << \"Test \" << ct << \" done \\n\";\n    if (first == last) {\n      cerr << \"last equals first\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"ccsnoopy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long long LL;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<int> vi;\ntypedef pair<ii, int> iii;\nvoid open() {\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/C-small-attempt1 (1).in\", \"r\", stdin);\n  freopen(\"D:\/OneDrive\/Code\/GCJ\/out22.txt\", \"w\", stdout);\n}\nint n, q, fr, to;\nint energy[120];\nint spd[120];\nint dist[120][120];\nmap<iii, double> memo;\n\ndouble dp(int idx, int pony, int left) {\n  iii z = make_pair(ii(idx, pony), left);\n  if (idx == to)\n    return 0;\n  if (memo.find(z) != memo.end() && memo[z] < 1e12)\n    return memo[z];\n\n  double ans = 1e12;\n\n  if (dist[idx][idx + 1] <= left) {\n    ans = min(dp(idx + 1, pony, left - dist[idx][idx + 1]) +\n                  1.0 * dist[idx][idx + 1] \/ spd[pony],\n              ans);\n  }\n\n  if (dist[idx][idx + 1] <= energy[idx]) {\n    ans = min(ans, dp(idx + 1, idx, energy[idx] - dist[idx][idx + 1]) +\n                       1.0 * dist[idx][idx + 1] \/ spd[idx]);\n  }\n  return memo[z] = ans;\n}\n\nint main(void) {\n  open();\n  int tc;\n  scanf(\"%d\", &tc);\n\n  for (int ct = 1; ct <= tc; ct++) {\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &q);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &energy[i]);\n      scanf(\"%d\", &spd[i]);\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%d\", &dist[i][j]);\n      }\n    }\n\n    scanf(\"%d\", &fr);\n    scanf(\"%d\", &to);\n    fr--;\n    to--;\n    memo.clear();\n\n    printf(\"Case #%d: %.10lf\\n\", ct, dp(0, 0, energy[0]));\n\n    cerr << \"Test \" << ct << \" done \\n\";\n  }\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvoid p1small() {\n\n  int t, k;\n  char s[1010];\n  scanf(\"%d\", &t);\n  int c = 0;\n  while (t--) {\n    ++c;\n    scanf(\"%s%d\", s, &k);\n    int n = strlen(s);\n    if (k > n) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n      continue;\n    }\n    int i;\n    int count = 0;\n    for (i = 0; i <= n - k; ++i)\n      if (s[i] == '-') {\n        count++;\n        for (int j = 0; j < k; ++j)\n          s[i + j] = '-' + '+' - s[i + j];\n      }\n    bool b = 1;\n    for (; i < n && b; ++i)\n      if (s[i] == '-') {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n        b = 0;\n      }\n    if (b)\n      printf(\"Case #%d: %d\\n\", c, count);\n  }\n}\n\nvoid p2small() {\n  int t;\n  char n[20];\n  scanf(\"%d\", &t);\n  int c = 0;\n  while (t--) {\n    c++;\n    scanf(\"%s\", n);\n    int i = 0;\n    int len = strlen(n);\n    while (i < len - 1 && n[i] <= n[i + 1])\n      i++;\n    if (i == len - 1)\n      printf(\"Case #%d: %s\\n\", c, n);\n    else {\n      int last = i;\n      while (i >= 0 && n[i] == n[last])\n        i--;\n      i++;\n      n[i]--;\n      for (i++; i < len; ++i)\n        n[i] = '9';\n      i = 0;\n      while (n[i] == '0')\n        i++;\n      printf(\"Case #%d: %s\\n\", c, n + i);\n    }\n  }\n}\n\nint main() {\n\n  p2small();\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvoid p1small() {\n\n  int t, k;\n  char s[1010];\n  scanf(\"%d\", &t);\n  int c = 0;\n  while (t--) {\n    ++c;\n    scanf(\"%s%d\", s, &k);\n    int n = strlen(s);\n    if (k > n) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n      continue;\n    }\n    int i;\n    int count = 0;\n    for (i = 0; i <= n - k; ++i)\n      if (s[i] == '-') {\n        count++;\n        for (int j = 0; j < k; ++j)\n          s[i + j] = '-' + '+' - s[i + j];\n      }\n    bool b = 1;\n    for (; i < n && b; ++i)\n      if (s[i] == '-') {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n        b = 0;\n      }\n    if (b)\n      printf(\"Case #%d: %d\\n\", c, count);\n  }\n}\n\nvoid p2small() {\n  int t;\n  char n[20];\n  scanf(\"%d\", &t);\n  int c = 0;\n  while (t--) {\n    c++;\n    scanf(\"%s\", n);\n    int i = 0;\n    int len = strlen(n);\n    while (i < len - 1 && n[i] <= n[i + 1])\n      i++;\n    if (i == len - 1)\n      printf(\"Case #%d: %s\\n\", c, n);\n    else {\n      int last = i;\n      while (i >= 0 && n[i] == n[last])\n        i--;\n      i++;\n      n[i]--;\n      for (i++; i < len; ++i)\n        n[i] = '9';\n      i = 0;\n      while (n[i] == '0')\n        i++;\n      printf(\"Case #%d: %s\\n\", c, n + i);\n    }\n  }\n}\n\nvoid p3small() {\n  int t, c, n, k, step;\n  scanf(\"%d\", &t);\n  c = 0;\n  while (t--) {\n    c++;\n    scanf(\"%d%d\", &n, &k);\n    step = 1 << (int(log2(k)) + 1);\n    printf(\"Case #%d: %d %d\\n\", c, (n - k + step \/ 2) \/ step, (n - k) \/ step);\n  }\n}\n\nint main() {\n\n  p3small();\n\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvoid p1small() {\n\n  int t, k;\n  char s[1000];\n  scanf(\"%d\", &t);\n  int c = 0;\n  while (t--) {\n    ++c;\n    scanf(\"%s%d\", s, &k);\n    int n = strlen(s);\n    if (k > n) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n      continue;\n    }\n    int i;\n    int count = 0;\n    for (i = 0; i <= n - k; ++i)\n      if (s[i] == '-') {\n        count++;\n        for (int j = 0; j < k; ++j)\n          s[i + j] = '-' + '+' - s[i + j];\n      }\n    bool b = 1;\n    for (; i < n && b; ++i)\n      if (s[i] == '-') {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", c);\n        b = 0;\n      }\n    if (b)\n      printf(\"Case #%d: %d\\n\", c, count);\n  }\n}\n\nint main() {\n\n  p1small();\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <bits\/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid p2017_1a_a_small() {\n  int t, r, c;\n  cin >> t;\n  int emptyrows[25];\n  char s[26][26];\n  for (int cs = 1; cs <= t; ++cs) {\n    cin >> r >> c;\n    memset(emptyrows, 0, sizeof(emptyrows));\n    for (int i = 0; i < r; ++i)\n      cin >> s[i];\n    for (int i = 0; i < r; ++i) {\n      int j;\n      for (j = 0; j < c && s[i][j] == '?'; ++j)\n        ;\n      if (j == c)\n        emptyrows[i] = 1;\n      else {\n        int k;\n        for (k = 0; k < j; ++k)\n          s[i][k] = s[i][j];\n        k = j;\n        for (; j < c; ++j)\n          if (s[i][j] == '?')\n            s[i][j] = s[i][k];\n          else\n            k = j;\n      }\n    }\n    int last = 0;\n    while (emptyrows[last] == 1)\n      last++;\n    for (int i = last; i >= 0; i--)\n      for (int j = 0; j < c; ++j)\n        s[i][j] = s[last][j];\n    for (int i = last; i < r; ++i)\n      if (emptyrows[i] == 1)\n        for (int j = 0; j < c; ++j)\n          s[i][j] = s[last][j];\n      else\n        last = i;\n\n    cout << \"Case #\" << cs << \":\\n\";\n    for (int i = 0; i < r; ++i)\n      cout << s[i] << \"\\n\";\n  }\n}\n\nvoid p2017_1a_b_small() {\n  int t, n, p;\n  int r[50];\n  int q[50][50];\n  cin >> t;\n  int mins[50], maxs[50];\n  for (int c = 1; c <= t; ++c) {\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i)\n      cin >> r[i];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j)\n        cin >> q[i][j];\n      sort(q[i], q[i] + p);\n    }\n    int pkg = 0;\n    int idx[50] = {0};\n    int maxidx = 0;\n    while (maxidx < p) {\n      int lowerlimit = 0, upperlimit = 0;\n      for (int i = 0; i < n; ++i) {\n        mins[i] = ceil(10.0 * q[i][idx[i]] \/ 11 \/ r[i]);\n        maxs[i] = floor(10.0 * q[i][idx[i]] \/ 9 \/ r[i]);\n        if (mins[i] > mins[lowerlimit])\n          lowerlimit = i;\n        if (maxs[i] < maxs[upperlimit])\n          upperlimit = i;\n      }\n      if (mins[lowerlimit] <= maxs[upperlimit] && mins[lowerlimit] > 0) {\n        pkg++;\n        for (int i = 0; i < n; ++i)\n          idx[i]++;\n        maxidx++;\n      } else {\n        for (int i = 0; i < n; ++i)\n          if (maxs[i] < mins[lowerlimit])\n            idx[i]++;\n        maxidx++;\n      }\n    }\n\n    cout << \"Case #\" << c << \": \" << pkg << \"\\n\";\n  }\n}\n\nvoid p2017_1a_c_small() {\n  int t;\n  cin >> t;\n  for (int c = 1; c <= t; ++c) {\n\n    cout << \"Case #\" << c << \": \" << c << \"\\n\";\n  }\n}\n\nint main() {\n\n  p2017_1a_b_small();\n\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <bits\/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid p2017_1a_b_small() {\n  int t;\n  cin >> t;\n  for (int c = 1; c <= t; ++c) {\n\n    cout << \"Case# \" << c << \": \" << c << \"\\n\";\n  }\n}\n\nvoid p2017_1a_a_small() {\n  int t, r, c;\n  cin >> t;\n  int emptyrows[25];\n  char s[26][26];\n  for (int cs = 1; cs <= t; ++cs) {\n    cin >> r >> c;\n    memset(emptyrows, 0, sizeof(emptyrows));\n    for (int i = 0; i < r; ++i)\n      cin >> s[i];\n    for (int i = 0; i < r; ++i) {\n      int j;\n      for (j = 0; j < c && s[i][j] == '?'; ++j)\n        ;\n      if (j == c)\n        emptyrows[i] = 1;\n      else {\n        int k;\n        for (k = 0; k < j; ++k)\n          s[i][k] = s[i][j];\n        k = j;\n        for (; j < c; ++j)\n          if (s[i][j] == '?')\n            s[i][j] = s[i][k];\n          else\n            k = j;\n      }\n    }\n    int last = 0;\n    while (emptyrows[last] == 1)\n      last++;\n    for (int i = last; i >= 0; i--)\n      for (int j = 0; j < c; ++j)\n        s[i][j] = s[last][j];\n    for (int i = last; i < r; ++i)\n      if (emptyrows[i] == 1)\n        for (int j = 0; j < c; ++j)\n          s[i][j] = s[last][j];\n      else\n        last = i;\n\n    cout << \"Case #\" << cs << \":\\n\";\n    for (int i = 0; i < r; ++i)\n      cout << s[i] << \"\\n\";\n  }\n}\n\nvoid p2017_1a_c_small() {\n  int t;\n  cin >> t;\n  for (int c = 1; c <= t; ++c) {\n\n    cout << \"Case# \" << c << \": \" << c << \"\\n\";\n  }\n}\n\nint main() {\n\n  p2017_1a_a_small();\n\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <bits\/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid p2017_1b_a_small() {\n  int t, d, n;\n  int k, s;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> d >> n;\n    double t = 0.0, maxt = 0.0;\n    for (int i = 0; i < n; ++i) {\n      cin >> k >> s;\n      t = 1.0 * (d - k) \/ s;\n      if (t > maxt)\n        maxt = t;\n    }\n\n    printf(\"Case #%d: %6lf\\n\", cas, 1.0 * d \/ maxt);\n    \/\/ cout << \"Case #\" << cas << \": \" << 1.0*d\/maxt << \"\\n\";\n  }\n}\n\nvoid p2017_1b_b_small() {\n  int t;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n\n    cout << \"Case #\" << cas << \":\\n\";\n  }\n}\nvoid p2017_1b_c_small() {\n  int t;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n\n    cout << \"Case #\" << cas << \":\\n\";\n  }\n}\n\nint main() {\n\n  p2017_1b_a_small();\n\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <bits\/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid p2017_1b_a_small() {\n  int t, d, n;\n  int k, s;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> d >> n;\n    double t = 0.0, maxt = 0.0;\n    for (int i = 0; i < n; ++i) {\n      cin >> k >> s;\n      t = 1.0 * (d - k) \/ s;\n      if (t > maxt)\n        maxt = t;\n    }\n\n    printf(\"Case #%d: %6lf\\n\", cas, 1.0 * d \/ maxt);\n    \/\/ cout << \"Case #\" << cas << \": \" << 1.0*d\/maxt << \"\\n\";\n  }\n}\n\nvoid p2017_1b_b_small() {\n  int t, n, r, g, b, y, o, v;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (r + y < b || r + b < y || y + b < r)\n      cout << \"Case #\" << cas << \": IMPOSSIBLE\\n\";\n    else {\n      int x1, x2, x3;\n      char c1, c2, c3;\n      if (r > y) {\n        if (r > b) {\n          x1 = r, c1 = 'R';\n          if (y > b)\n            x2 = y, c2 = 'Y', x3 = b, c3 = 'B';\n          else\n            x3 = y, c3 = 'Y', x2 = b, c2 = 'B';\n        } else {\n          x1 = b, c1 = 'B', x2 = r, c2 = 'R', x3 = y, c3 = 'Y';\n        }\n      } else {\n        if (y > b) {\n          x1 = y, c1 = 'Y';\n          if (r > b)\n            x2 = r, c2 = 'R', x3 = b, c3 = 'B';\n          else\n            x3 = r, c3 = 'R', x2 = b, c2 = 'B';\n        } else\n          x1 = b, c1 = 'B', x2 = y, c2 = 'Y', x3 = r, c3 = 'R';\n      }\n\n      cout << \"Case #\" << cas << \": \";\n      char last = c1;\n      while (x1 || x2 || x3) {\n        cout << last;\n        if (last == c1) {\n          x1--;\n          last = x2 >= x3 ? c2 : c3;\n        } else if (last == c2) {\n          x2--;\n          last = x1 >= x3 ? c1 : c3;\n        } else {\n          x3--;\n          last = x1 >= x2 ? c1 : c2;\n        }\n      }\n      cout << \"\\n\";\n    }\n  }\n}\nvoid p2017_1b_c_small() {\n  int t;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n\n    cout << \"Case #\" << cas << \":\\n\";\n  }\n}\n\nint main() {\n\n  p2017_1b_b_small();\n\n  return 0;\n}\n"}
{"target":"chaplin","func":"\/\/============================================================================\n\/\/ Name        : jam17cpp.cpp\n\/\/ Author      : Javier Sardinas\n\/\/ Version     :\n\/\/ Copyright   :\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n\n#include <algorithm>\n#include <bits\/stdc++.h>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid p2017_1b_a_small() {\n  int t, d, n;\n  int k, s;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> d >> n;\n    double t = 0.0, maxt = 0.0;\n    for (int i = 0; i < n; ++i) {\n      cin >> k >> s;\n      t = 1.0 * (d - k) \/ s;\n      if (t > maxt)\n        maxt = t;\n    }\n\n    printf(\"Case #%d: %6lf\\n\", cas, 1.0 * d \/ maxt);\n    \/\/ cout << \"Case #\" << cas << \": \" << 1.0*d\/maxt << \"\\n\";\n  }\n}\n\nvoid p2017_1b_b_small() {\n  int t, n, r, g, b, y, o, v;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (r + y < b || r + b < y || y + b < r)\n      cout << \"Case #\" << cas << \": IMPOSSIBLE\\n\";\n    else {\n      int x1, x2, x3;\n      char c1, c2, c3;\n      if (r > y) {\n        if (r > b) {\n          x1 = r, c1 = 'R';\n          if (y > b)\n            x2 = y, c2 = 'Y', x3 = b, c3 = 'B';\n          else\n            x3 = y, c3 = 'Y', x2 = b, c2 = 'B';\n        } else {\n          x1 = b, c1 = 'B', x2 = r, c2 = 'R', x3 = y, c3 = 'Y';\n        }\n      } else {\n        if (y > b) {\n          x1 = y, c1 = 'Y';\n          if (r > b)\n            x2 = r, c2 = 'R', x3 = b, c3 = 'B';\n          else\n            x3 = r, c3 = 'R', x2 = b, c2 = 'B';\n        } else\n          x1 = b, c1 = 'B', x2 = y, c2 = 'Y', x3 = r, c3 = 'R';\n      }\n\n      cout << \"Case #\" << cas << \": \";\n      char last = c1;\n      while (x1 || x2 || x3) {\n        cout << last;\n        if (last == c1) {\n          x1--;\n          last = x2 >= x3 ? c2 : c3;\n        } else if (last == c2) {\n          x2--;\n          last = x1 >= x3 ? c1 : c3;\n        } else {\n          x3--;\n          last = x1 >= x2 ? c1 : c2;\n        }\n      }\n      cout << \"\\n\";\n    }\n  }\n}\n\nvoid p2017_1b_b_large() {\n  int t;\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n\n    cout << \"Case #\" << cas << \":\\n\";\n  }\n}\n\nvoid p2017_1b_c_small() {\n  int t, n, q;\n  int e[100], s[100], d[100][100];\n  int u[100], v[100];\n  cin >> t;\n  long long inf = 10000000000000000;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> n >> q;\n    for (int i = 0; i < n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        cin >> d[i][j];\n    for (int i = 0; i < q; ++i)\n      cin >> u[i] >> v[i];\n\n    long long D[100][100];\n    for (int i = 0; i < n; ++i)\n      for (int j = i + 1; j < n; ++j)\n        D[i][j] = d[i][j];\n    for (int i = 0; i < n; ++i)\n      for (int j = i + 2; j < n; ++j)\n        D[i][j] = D[i][j - 1] + d[j - 1][j];\n\n    double dp[100][100];\n    for (int i = 1; i < n; ++i)\n      dp[i][0] = d[0][i] <= e[0] ? 1.0 * D[0][i] \/ s[0] : inf;\n    double m = dp[1][0];\n    for (int j = 1; j < n; ++j) {\n      for (int i = j + 1; i < n; ++i) {\n        dp[i][j] = D[j][i] <= e[j] ? 1.0 * D[j][i] \/ s[j] + m : inf;\n      }\n      m = inf;\n      for (int k = 0; k < j; ++k)\n        if (dp[j][k] < m)\n          m = dp[j][k];\n    }\n\n    printf(\"Case #%d: %6lf\\n\", cas, m);\n    \/\/ cout << \"Case #\" << cas << \": \" << m << \"\\n\";\n  }\n}\n\nvoid p2017_1b_c_large() {\n  int t, n, q;\n  int e[100], s[100], d[100][100];\n  int u[100], v[100];\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++) {\n    cin >> n >> q;\n    for (int i = 0; i < n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        cin >> d[i][j];\n    for (int i = 0; i < q; ++i)\n      cin >> u[i] >> v[i];\n    cout << \"Case #\" << cas << \":\\n\";\n  }\n}\n\nint main() {\n\n  p2017_1b_c_small();\n\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nLL solve() {\n  LL n, tmp;\n  cin >> tmp;\n  vector<int> d;\n  n = tmp;\n  if (n < 10) {\n    return n;\n  }\n  while (n > 0) {\n    d.push_back(n % 10);\n    n \/= 10;\n  }\n  int l = d.size();\n  int prev = 0;\n  int i = l - 1;\n  for (; i >= 0; --i) {\n    if (d[i] >= prev) {\n      prev = d[i];\n    } else {\n      break;\n    }\n  }\n  if (i < 0) {\n    return tmp;\n  }\n  for (int j = i + 1; j < l; ++j) {\n    if (d[j] > 0) {\n      d[j]--;\n    }\n    if (j < l - 1 && d[j + 1] <= d[j]) {\n      break;\n    }\n    if (j < l - 1) {\n      i++;\n    }\n  }\n  for (int j = 0; j <= i; ++j) {\n    d[j] = 9;\n  }\n  long long r = 0;\n  for (int i = l - 1; i >= 0; --i) {\n    r *= 10;\n    r += d[i];\n  }\n  return r;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout << \"Case #\" << x << \": \" << solve() << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nLL getSize(int p, LL d, LL n) {\n  if (p == 0) {\n    return n;\n  }\n  LL x = getSize(p - 1, d >> 1, n);\n  return (x - (d % 2)) \/ 2;\n}\n\nvoid solve() {\n  LL n, k;\n  cin >> n >> k;\n  int p = 0;\n  LL x = 1;\n  if (k == 1) {\n    cout << n \/ 2 << \" \" << (n - 1) \/ 2;\n    return;\n  }\n  while (x * 2 <= k) {\n    x *= 2;\n    p++;\n  }\n  x--;\n  LL diff = k - x;\n  LL w = getSize(p, diff - 1, n);\n  cout << w \/ 2 << \" \" << (w - 1) \/ 2;\n}\n\nvoid solve2() {\n  LL n, k;\n  cin >> n >> k;\n  vector<int> dn(1000005, 0);\n  dn[n] = 1;\n  LL i = n + 1;\n  while (k-- > 1) {\n    while (dn[i] == 0) {\n      --i;\n    };\n    dn[i]--;\n    dn[i \/ 2]++;\n    dn[(i - 1) \/ 2]++;\n  }\n  while (dn[i] == 0) {\n    --i;\n  }\n  cout << i \/ 2 << \" \" << (i - 1) \/ 2;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout << \"Case #\" << x << \": \";\n    solve2();\n    cout << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nint solve() {\n  string s;\n  cin >> s;\n  int k;\n  cin >> k;\n  int l = -1, i = 0, n = s.length();\n  char c = '-';\n  int res = 0;\n  for (int i = 0; i < n; ++i) {\n    if (s[i] == '-') {\n      res++;\n      for (int j = i; j < i + k; ++j) {\n        if (j >= n) {\n          return -1;\n        }\n        s[j] = s[j] == '+' ? '-' : '+';\n      }\n    }\n  }\n  return res;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    int res = solve();\n    cout << \"Case #\" << x << \": \";\n    if (res >= 0) {\n      cout << res;\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nint solve() {\n  int n, p;\n  cin >> n >> p;\n  vector<int> r;\n  for (int i = 0; i < n; ++i) {\n    int a;\n    cin >> a;\n    r.push_back(a);\n  }\n  vector<int> q[10];\n  for (int j = 0; j < n; ++j) {\n    for (int i = 0; i < p; ++i) {\n      int qi;\n      cin >> qi;\n      q[j].push_back(qi);\n    }\n  }\n  int res = 0;\n  if (n == 1) {\n    for (int i = 0; i < p; ++i) {\n      int a = ceil(q[0][i] \/ 1.1 \/ r[0]);\n      int b = floor(q[0][i] \/ 0.9 \/ r[0]);\n      if (a <= b) {\n        res++;\n      }\n    }\n    return res;\n  }\n  sort(q[1].begin(), q[1].end());\n  do {\n    int tmp = 0;\n    for (int i = 0; i < p; ++i) {\n      int a = ceil(q[0][i] \/ 1.1 \/ r[0]);\n      int b = floor(q[0][i] \/ 0.9 \/ r[0]);\n      int c = ceil(q[1][i] \/ 1.1 \/ r[1]);\n      int d = floor(q[1][i] \/ 0.9 \/ r[1]);\n      if (a <= b && c <= d && ((a <= c && b >= c) || (a >= c && a <= d))) {\n        tmp++;\n      }\n      res = tmp > res ? tmp : res;\n    }\n  } while (next_permutation(q[1].begin(), q[1].end()));\n  return res;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout << \"Case #\" << x << \": \" << solve() << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nint solve() {\n  int r, c;\n  cin >> r >> c;\n  vector<string> res;\n  for (int i = 0; i < r; ++i) {\n    string row;\n    cin >> row;\n    bool empty = true;\n    char first = '?';\n    for (int j = 0; j < c; ++j) {\n      if (row[j] != '?') {\n        empty = false;\n        first = row[j];\n        break;\n      }\n    }\n    if (!empty) {\n      string s(c, '?');\n      for (int j = 0; j < c; ++j) {\n        if (row[j] == first || row[j] == '?') {\n          s[j] = first;\n        } else {\n          first = row[j];\n          s[j] = first;\n        }\n      }\n      while (res.size() < i + 1) {\n        res.push_back(s);\n      }\n    } else {\n      if (res.size() > 0) {\n        res.push_back(res[res.size() - 1]);\n      }\n    }\n  }\n  for (int i = 0; i < r; ++i) {\n    cout << res[i] << endl;\n  }\n  return 0;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout << \"Case #\" << x << \": \" << endl;\n    solve(); \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\ndouble solve() {\n  double d;\n  int n;\n  cin >> d >> n;\n  double tmax = 0.;\n  for (int i = 0; i < n; ++i) {\n    double k, s;\n    cin >> k >> s;\n    if (k < d) {\n      double t = (double)(d - k) \/ s;\n      tmax = t > tmax ? t : tmax;\n    }\n  }\n  return d \/ tmax;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n\n    cout.precision(9);\n    cout << \"Case #\" << x << \": \" << fixed << solve() << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\nvoid test(string s) {\n  int n = s.length();\n  for (int i = 0; i < n; ++i) {\n    if (s[i] == s[i + 1 % n]) {\n      cout << \"WRONG!\";\n      return;\n    }\n  }\n}\n\nstring solve() {\n  int n;\n  cin >> n;\n  int r, o, y, g, b, v;\n  cin >> r >> o >> y >> g >> b >> v;\n\n  vector<char> m = {'R', 'Y', 'B'};\n  vector<int> x = {r, y, b};\n  for (int i = 0; i < 3; ++i) {\n    char tmp = m[i];\n    int t = x[i];\n    int j = i + 1;\n    while (j < 3 && x[j] < x[i]) {\n      x[j - 1] = x[j];\n      m[j - 1] = m[j];\n      j++;\n    }\n    m[j - 1] = tmp;\n    x[j - 1] = t;\n  }\n\n  ostringstream is(\"\");\n  int a1 = x[0] + x[1] - x[2];\n  int a2 = x[2] - x[1];\n  int a3 = x[2] - x[0];\n  if (a1 < 0 || a2 < 0 || a3 < 0) {\n    return \"IMPOSSIBLE\";\n  }\n\n  while (a1-- > 0) {\n    is << m[0] << m[2] << m[1];\n  }\n  while (a2-- > 0) {\n    is << m[2] << m[0];\n  }\n  while (a3-- > 0) {\n    is << m[2] << m[1];\n  }\n\n  test(is.str());\n  return is.str();\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout << \"Case #\" << x << \": \" << solve() << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"chocimir","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint cond = 1;\n\ndouble solve() {\n  int n, q;\n  vector<long long> e, s, d;\n  cin >> n >> q;\n  for (int i = 0; i < n; ++i) {\n    int a, b;\n    cin >> a >> b;\n    e.push_back(a);\n    s.push_back(b);\n  }\n  d.push_back(0);\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < n; ++j) {\n      int di;\n      cin >> di;\n      if (di != -1) {\n        d.push_back(d.back() + di);\n      }\n    }\n  }\n\n  int a, b;\n  cin >> a >> b;\n  vector<double> dd;\n  dd.push_back(0.);\n  for (int i = 1; i < n; ++i) {\n    double dm = 1000LL * 1000 * 1000 * 1000 + 5;\n    for (int j = 0; j < i; ++j) {\n      if (d[i] - d[j] <= e[j]) {\n        double tmp = dd[j] + ((double)(d[i] - d[j])) \/ s[j];\n        dm = dm > tmp ? tmp : dm;\n      }\n    }\n    dd.push_back(dm);\n  }\n  return dd[n - 1];\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int x = 1; x <= t; ++x) {\n    cout.precision(9);\n    cout << \"Case #\" << x << \": \" << fixed << solve() << endl; \/\/ result\n  }\n  return 0;\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint check(ll x) {\n  int i = 0;\n  ll a[20];\n  while (x > 0) {\n    a[i] = x % 10;\n    i++;\n    x \/= 10;\n  }\n  for (int j = 0; j < i - 1; j++) {\n    if (a[j] < a[j + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    ll n;\n    cin >> n;\n    int count = 0;\n    int flag = 0;\n    while (flag == 0) {\n      if (check(n) == true) {\n        flag = 1;\n      } else if (n % 10 == 9) {\n        count++;\n        n \/= 10;\n      } else {\n        ll nn = n % 10;\n        n -= (nn + 1);\n      }\n      \/\/ cout<<n<<endl;\n    }\n    cout << \"Case #\" << z << \": \" << n;\n    for (int i = 0; i < count; i++) {\n      cout << '9';\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nll a[61][2];\n\nll calc(ll k, int idx) {\n  ll t1 = k - a[idx][0];\n  ll t2 = a[idx][1] + 1 - a[idx][0];\n  t1 = t1 % (t2 \/ 2);\n  return a[idx - 1][0] + t1;\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  a[1][0] = 1;\n  a[1][1] = 1;\n  for (int i = 2; i <= 60; i++) {\n    a[i][0] = a[i - 1][1] + 1;\n    a[i][1] = (a[i - 1][1] * 2) + 1;\n  }\n  \/\/ for (int i = 0; i<= 60; i++){\n  \/\/ \tcout<<a[i][0]<<\" \"<<a[i][1]<<endl;\n  \/\/ }\n\n  int t;\n  cin >> t;\n  for (int z = 1; z <= t; z++) {\n    ll n, kk;\n    cin >> n >> kk;\n    ll k = kk;\n    string s = \"\";\n    int idx = 0;\n    for (int i = 1; i <= 60; i++) {\n      if (a[i][0] <= k && a[i][1] >= k) {\n        idx = i;\n        break;\n      }\n    }\n    \/\/ cout<<\"idx \"<<idx<<endl;\n    while (k > 1) {\n      ll mid = (a[idx][0] + a[idx][1]) \/ 2;\n      \/\/ cout<<\"mid \"<<mid<<endl;\n      if (k <= mid) {\n        s = s + 'l';\n      } else\n        s = s + 's';\n      k = calc(k, idx);\n      \/\/ cout<<k<<endl;\n      idx--;\n    }\n    \/\/ cout<<\"str \"<<s<<endl;\n    ll p = n;\n    for (int i = s.length() - 1; i >= 0; i--) {\n\n      if (s[i] == 'l') {\n        p = p \/ 2;\n      } else {\n        p = (p - 1) \/ 2;\n      }\n      \/\/ cout<<\"p \"<<p<<endl;\n    }\n    cout << \"Case #\" << z << \": \";\n    if ((p - 1) % 2 == 0) {\n      cout << p \/ 2 << \" \" << p \/ 2 << endl;\n    } else {\n      cout << p \/ 2 << \" \" << (p - 1) \/ 2 << endl;\n    }\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint a[1005];\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int z = 1; z <= t; z++) {\n    string s;\n    int k;\n    cin >> s;\n    cin >> k;\n    \/\/ cout<<s<<endl;\n    int n = s.length();\n    int n_flips = 0;\n    int flag = 0;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n      a[i] = 0;\n    }\n    for (int i = 0; i < n; i++) {\n      \/\/ cout<<\"i \"<<i<<\" n_flips\"<<n_flips<<endl;\n      if ((s[i] == '+' && n_flips == 0) || (s[i] == '-' && n_flips == 1)) {\n        \/\/ cout<<\"no flip\"<<endl;\n        ;\n      } else if (i <= n - k) {\n        \/\/ cout<<\"flip\"<<endl;\n        n_flips = (n_flips + 1) % 2;\n        a[i] = 1;\n        count++;\n      } else {\n        cout << \"Case #\" << z << \": \"\n             << \"IMPOSSIBLE\" << endl;\n        flag = 1;\n        break;\n      }\n      int idx = i + 1 - k;\n      \/\/ cout<<\"i+1 \"<<i+1<<\" idx \"<<idx<<endl;\n      if (idx >= 0 && a[idx] > 0) {\n        n_flips = (n_flips + 1) % 2;\n      }\n    }\n    if (flag == 0) {\n      cout << \"Case #\" << z << \": \" << count << endl;\n    }\n    \/\/ for(int i = 0; i<n; i++){\n    \/\/ \tcout<<a[i];\n    \/\/ }\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nbool calc(int x, int k, int y) {\n  double xx = x * 1.0;\n  double yy = y * 1.0;\n  if (yy >= xx * k * .9 && yy <= xx * k * 1.1)\n    return true;\n  return false;\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    int n, p;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &p);\n    int a[50][50];\n    int b[50];\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &b[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &a[i][j]);\n      }\n      sort(a[i], a[i] + p);\n    }\n    \/\/ for(int i=0;i<n;i++){\n    \/\/ \tfor(int j=0;j<p;j++){\n    \/\/ \t\tcout<<a[i][j]<<\" \";\n    \/\/ \t}\n    \/\/ \tcout<<endl;\n    \/\/ }\n\n    int ini[50];\n    int tini[50];\n    for (int i = 0; i < n; i++) {\n      ini[i] = -1;\n      tini[i] = -1;\n    }\n    int count = 0;\n    for (int j = 0; j < p; j++) {\n      int right = floor((a[0][j] * 10.0) \/ (b[0] * 9.0));\n      int left = ceil((a[0][j] * 10.0) \/ (b[0] * 11.0));\n      for (int k = left; k <= right; k++) {\n        for (int i = 0; i < n; i++) {\n          tini[i] = ini[i];\n        }\n\n        for (int i = 1; i < n; i++) {\n          int flag = 0;\n          for (int jj = tini[i] + 1; jj < p; jj++) {\n            if (calc(b[i], k, a[i][jj])) {\n              tini[i] = jj;\n              flag = 1;\n              break;\n            }\n          }\n          if (flag == 0) {\n            break;\n          }\n        }\n        int flag1 = 0;\n        for (int i = 1; i < n; i++) {\n          if (tini[i] == ini[i]) {\n            flag1 = 1;\n            break;\n          }\n        }\n        if (flag1 == 0) {\n          count++;\n          ini[0] = p;\n          for (int i = 1; i < n; i++) {\n            ini[i] == tini[i];\n          }\n          break;\n        }\n      }\n    }\n    cout << \"Case #\" << z << \": \" << count << endl;\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    int r, c;\n    cin >> r >> c;\n    string s[12];\n    for (int i = 0; i < r; i++) {\n      cin >> s[i];\n    }\n    for (int i = 0; i < r - 1; i++) {\n      for (int j = 0; j < c; j++) {\n        if (s[i][j] != '?' && s[i + 1][j] == '?') {\n          s[i + 1][j] = s[i][j];\n        }\n      }\n    }\n    for (int i = r - 1; i > 0; i--) {\n      for (int j = 0; j < c; j++) {\n        if (s[i][j] != '?' && s[i - 1][j] == '?') {\n          s[i - 1][j] = s[i][j];\n        }\n      }\n    }\n\n    for (int j = 0; j < c - 1; j++) {\n      for (int i = 0; i < r; i++) {\n        if (s[i][j] != '?' && s[i][j + 1] == '?') {\n          s[i][j + 1] = s[i][j];\n        }\n      }\n    }\n\n    for (int j = c - 1; j > 0; j--) {\n      for (int i = 0; i < r; i++) {\n        if (s[i][j] != '?' && s[i][j - 1] == '?') {\n          s[i][j - 1] = s[i][j];\n        }\n      }\n    }\n    cout << \"Case #\" << z << \":\" << endl;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cout << s[i][j];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    ll d;\n    int n;\n    cin >> d >> n;\n    double tmin = 0.0;\n    for (int i = 0; i < n; i++) {\n      ll k, speed;\n      cin >> k >> speed;\n      ll distrem = d - k;\n      double timerem = ((1.0) * distrem);\n      timerem = timerem \/ ((double)speed);\n      if (timerem > tmin) {\n        tmin = timerem;\n      }\n    }\n    double speed = (double)d \/ tmin;\n    printf(\"Case #%d: %.6f\\n\", z, speed);\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    int n;\n    cin >> n;\n    char a[n];\n    for (int i = 0; i < n; i++) {\n      a[i] = '-';\n    }\n    int R, O, Y, G, B, V;\n    cin >> R >> O >> Y >> G >> B >> V;\n    if (R > n \/ 2 || Y > n \/ 2 || B > n \/ 2) {\n      cout << \"Case #\" << z << \": IMPOSSIBLE\" << endl;\n    } else {\n      int idx = 0;\n      if (R > Y && R > B) {\n        for (int i = 0; i < R; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'R';\n          idx += 2;\n          idx = idx % n;\n        }\n        for (int i = 0; i < Y; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'Y';\n          idx += 2;\n          idx = idx % n;\n        }\n        for (int i = 0; i < B; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'B';\n          idx += 2;\n          idx = idx % n;\n        }\n      } else if (Y > R && Y > B) {\n        for (int i = 0; i < Y; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'Y';\n          idx += 2;\n          idx = idx % n;\n        }\n        for (int i = 0; i < R; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'R';\n          idx += 2;\n          idx = idx % n;\n        }\n\n        for (int i = 0; i < B; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'B';\n          idx += 2;\n          idx = idx % n;\n        }\n      } else {\n        for (int i = 0; i < B; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'B';\n          idx += 2;\n          idx = idx % n;\n        }\n        for (int i = 0; i < Y; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'Y';\n          idx += 2;\n          idx = idx % n;\n        }\n        for (int i = 0; i < R; i++) {\n          if (a[idx] != '-')\n            idx++;\n          idx = idx % n;\n          a[idx] = 'R';\n          idx += 2;\n          idx = idx % n;\n        }\n      }\n\n      cout << \"Case #\" << z << \": \";\n      for (int i = 0; i < n; i++) {\n        cout << a[i];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"codemonger","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int z = 1; z <= t; z++) {\n    int n, q;\n    cin >> n >> q;\n    ll ee[n];\n    ll ss[n];\n    ll d[105][105];\n\n    for (int i = 0; i < n; i++) {\n      cin >> ee[i] >> ss[i];\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> d[i][j];\n      }\n    }\n    ll dist[n];\n    dist[0] = 0;\n    for (int i = 1; i < n; i++) {\n      dist[i] = d[i - 1][i];\n      dist[i] += dist[i - 1];\n    }\n\n    for (int i = 0; i < q; i++) {\n      double dp[105];\n      for (int j = 0; j < 105; j++) {\n        dp[j] = 100000000000000.0;\n      }\n      int start, end;\n      cin >> start >> end;\n      dp[0] = 0.0;\n      for (int j = 1; j < n; j++) {\n        for (int k = 0; k < j; k++) {\n          if (ee[k] >= (dist[j] - dist[k])) {\n            double temp = (double)(dist[j] - dist[k]) \/ (double)ss[k];\n            dp[j] = min(dp[j], (dp[k] + temp));\n          }\n        }\n      }\n      cout << \"Case #\" << z << \": \";\n      printf(\"%.6f\", dp[n - 1]);\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nvoid convert(string &str) {\n  int decreased = -1;\n  for (int i = 1; i < str.size(); i++) {\n    if (str[i] < str[i - 1]) {\n      decreased = i;\n      break;\n    }\n  }\n  if (decreased != -1) {\n    for (int i = decreased; i < str.size(); i++) {\n      str[i] = '9';\n    }\n    str[decreased - 1]--;\n    convert(str);\n  }\n}\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    string str;\n    cin >> str;\n    convert(str);\n    cout << \"Case #\" << (t + 1) << \": \" << atoll(str.c_str()) << endl;\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nstruct Stall {\n  int first;\n  int second;\n  bool operator<(const Stall &b) const {\n    int size1 = (second - first + 1);\n    int size2 = (b.second - b.first + 1);\n    if (size2 != size1) {\n      return size1 < size2;\n    } else {\n      return first > b.first;\n    }\n  }\n};\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    long long N, K;\n    cin >> N >> K;\n    priority_queue<Stall> pq;\n    Stall initial;\n    initial.first = 1;\n    initial.second = N;\n    pq.push(initial);\n    for (long long i = 0; i < K - 1; i++) {\n      Stall current = pq.top();\n      pq.pop();\n      long long oc = (current.second + current.first) \/ 2;\n      if (oc != current.first) {\n        Stall firstPart;\n        firstPart.first = current.first;\n        firstPart.second = oc - 1;\n        pq.push(firstPart);\n      }\n      if (oc != current.second) {\n        Stall secondPart;\n        secondPart.first = oc + 1;\n        secondPart.second = current.second;\n        pq.push(secondPart);\n      }\n    }\n    Stall current = pq.top();\n    long long oc = (current.second + current.first) \/ 2;\n    long long d1 = (oc - current.first);\n    long long d2 = (current.second - oc);\n    cout << \"Case #\" << (t + 1) << \": \";\n    cout << max(d1, d2) << \" \" << min(d1, d2) << endl;\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    string status;\n    cin >> status;\n    int K;\n    cin >> K;\n    int changed = 0;\n    for (int i = 0; i < (int)(status.size()) - K + 1; i++) {\n      if (status[i] == '-') {\n        changed++;\n        for (int j = 0; j < K; j++) {\n          status[i + j] = (status[i + j] == '+') ? '-' : '+';\n        }\n      }\n    }\n    bool ok = true;\n    for (int i = 0; i < status.size(); i++) {\n      if (status[i] == '-') {\n        ok = false;\n        break;\n      }\n    }\n    cout << \"Case #\" << (t + 1) << \": \";\n    if (!ok) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << changed << endl;\n    }\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nint N, P;\nint R[100], Q[100][100];\n\nvoid getServes(int p, int ing, int &minServes, int &maxServes) {\n  minServes = (Q[ing][p] * 10) \/ (R[ing] * 11);\n  if ((Q[ing][p] * 10) % (R[ing] * 11) != 0) {\n    minServes++;\n  }\n  maxServes = (Q[ing][p] * 10) \/ (R[ing] * 9);\n}\n\nbool isCompatible(int i, int j) {\n  int minFirst, maxFirst, minSecond, maxSecond;\n  getServes(i, 0, minFirst, maxFirst);\n  getServes(j, 1, minSecond, maxSecond);\n  if ((minFirst <= maxFirst) && (minSecond <= maxSecond)) {\n    if ((maxFirst < minSecond) || (maxSecond < minFirst)) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n}\n\nint getScore(vector<int> &assignment) {\n  int sc = 0;\n  for (int i = 0; i < assignment.size(); i++) {\n    if (isCompatible(i, assignment[i])) {\n      sc++;\n    }\n  }\n  return sc;\n}\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    cin >> N >> P;\n    for (int i = 0; i < N; i++) {\n      cin >> R[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> Q[i][j];\n      }\n    }\n    if (N == 2) {\n      vector<int> assignment;\n      for (int i = 0; i < P; i++) {\n        assignment.push_back(i);\n      }\n      int score = 0;\n      do {\n        score = max(score, getScore(assignment));\n      } while (next_permutation(assignment.begin(), assignment.end()));\n      cout << \"Case #\" << (t + 1) << \": \" << score << endl;\n    } else if (N == 1) {\n      int score = 0;\n      for (int i = 0; i < P; i++) {\n        int minS, maxS;\n        getServes(i, 0, minS, maxS);\n        if (minS <= maxS) {\n          score++;\n        }\n      }\n      cout << \"Case #\" << (t + 1) << \": \" << score << endl;\n    }\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    int R, C;\n    cin >> R >> C;\n    char board[R][C];\n    int firstRow = -1;\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        cin >> board[i][j];\n        if ((board[i][j] != '?') && (firstRow == -1)) {\n          firstRow = i;\n        }\n      }\n    }\n    for (int i = firstRow; i < R; i++) {\n      for (int j = 1; j < C; j++) {\n        if (board[i][j] == '?') {\n          board[i][j] = board[i][j - 1];\n        }\n      }\n      for (int j = C - 2; j >= 0; j--) {\n        if (board[i][j] == '?') {\n          board[i][j] = board[i][j + 1];\n        }\n      }\n      if (board[i][0] == '?') {\n        for (int j = 0; j < C; j++) {\n          board[i][j] = board[i - 1][j];\n        }\n      }\n    }\n    for (int i = firstRow - 1; i >= 0; i--) {\n      for (int j = 0; j < C; j++) {\n        board[i][j] = board[i + 1][j];\n      }\n    }\n    cout << \"Case #\" << (t + 1) << \": \" << endl;\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        cout << board[i][j];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iomanip>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    double D;\n    long long N;\n    cin >> D >> N;\n    pair<double, double> horses[N];\n    for (int i = 0; i < N; i++) {\n      cin >> horses[i].first >> horses[i].second;\n    }\n    sort(horses, horses + N);\n    double whenReaches[N + 1];\n    whenReaches[N] = 0;\n    for (int i = N - 1; i >= 0; i--) {\n      whenReaches[i] =\n          max(whenReaches[i + 1], (D - (horses[i].first)) \/ horses[i].second);\n    }\n    cout << \"Case #\" << (t + 1) << \": \" << fixed << setprecision(10)\n         << D \/ whenReaches[0] << endl;\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\nusing namespace std;\n\nint getMin(int RYB[3]) {\n  int minValue = INT_MAX;\n  int minIndex = -1;\n  for (int i = 0; i < 3; i++) {\n    if ((RYB[i] < minValue) && (RYB[i] != 0)) {\n      minIndex = i;\n      minValue = RYB[i];\n    }\n  }\n  return minIndex;\n}\n\nint getMax(int RYB[3], int avoid, int preference) {\n  int maxIndex = -1;\n  int maxValue = 0;\n  if ((preference != avoid) && (RYB[preference] != 0)) {\n    maxIndex = preference;\n    maxValue = RYB[preference];\n  }\n  for (int i = 0; i < 3; i++) {\n    if (i == avoid)\n      continue;\n    if (RYB[i] > maxValue) {\n      maxIndex = i;\n      maxValue = RYB[i];\n    }\n  }\n  return maxIndex;\n}\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    int RYB[3] = {R, Y, B};\n    char RYB_char[3] = {'R', 'Y', 'B'};\n    vector<char> solution;\n    int minIndex = getMin(RYB);\n    RYB[minIndex]--;\n    solution.push_back(RYB_char[minIndex]);\n    int lastSelected = minIndex;\n    for (int i = 1; i < N; i++) {\n      int maxIndex = getMax(RYB, lastSelected, minIndex);\n      if (maxIndex == -1)\n        break;\n      RYB[maxIndex]--;\n      solution.push_back(RYB_char[maxIndex]);\n      lastSelected = maxIndex;\n    }\n    if (solution.size() == N) {\n      cout << \"Case #\" << (t + 1) << \": \";\n      for (int i = 0; i < solution.size(); i++) {\n        cout << solution[i];\n      }\n      cout << endl;\n    } else {\n      cout << \"Case #\" << (t + 1) << \": IMPOSSIBLE\" << endl;\n    }\n  }\n}\n"}
{"target":"csegura","func":"#include <algorithm>\n#include <float.h>\n#include <iomanip>\n#include <iostream>\n#include <limits.h>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdlib.h>\n#include <string.h>\n#include <strings.h>\n#include <vector>\n\nusing namespace std;\n\nint N;\ndouble distances[100][100];\nlong long E[100];\ndouble S[100];\n\nbool dp[100][100];\ndouble solution[100][100];\n\ndouble solve(int initial, int dest) {\n  if (initial == dest) {\n    return 0;\n  }\n  if (dp[initial][dest]) {\n    return solution[initial][dest];\n  }\n  long long life = E[initial];\n  double bestCost = DBL_MAX;\n  double cost = 0;\n  for (int i = initial + 1; i <= dest; i++) {\n    life -= distances[i - 1][i];\n    if (life < 0) {\n      break;\n    }\n    cost += distances[i - 1][i] \/ S[initial];\n    double total = cost + solve(i, dest);\n    bestCost = min(bestCost, total);\n  }\n  dp[initial][dest] = true;\n  solution[initial][dest] = bestCost;\n  return solution[initial][dest];\n}\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int t = 0; t < tests; t++) {\n    cout << \"Case #\" << (t + 1) << \": \";\n    long long Q;\n    cin >> N >> Q;\n    for (int i = 0; i < N; i++) {\n      cin >> E[i] >> S[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> distances[i][j];\n      }\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        dp[i][j] = false;\n      }\n    }\n    for (int i = 0; i < Q; i++) {\n      int initial, dest;\n      cin >> initial >> dest;\n      initial--;\n      dest--;\n      cout << setprecision(10) << fixed << solve(initial, dest) << \" \";\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"b.in\");\n  ofstream ofs(\"b.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    string s;\n    ifs >> s;\n    int pos = -1;\n    for (int i = 1; i < s.size(); ++i) {\n      if (s[i] < s[i - 1]) {\n        pos = i - 1;\n        while (pos > 0 && s[pos] == s[pos - 1])\n          --pos;\n        break;\n      }\n    }\n    if (pos != -1) {\n      s[pos]--;\n      for (int i = pos + 1; i < s.size(); ++i) {\n        s[i] = '9';\n      }\n    }\n    stringstream str(s);\n    long long l;\n    str >> l;\n\n    ofs << \"Case #\" << test + 1 << \": \" << l << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"c.in\");\n  ofstream ofs(\"c.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    long long n, k;\n    ifs >> n >> k;\n    map<long long, long long> m;\n    m[n] = 1;\n    long long cnt = 0, mx, mn;\n    while (!m.empty()) {\n      long long len, c;\n      tie(len, c) = *m.rbegin();\n      m.erase(len);\n      mx = len \/ 2;\n      mn = len - mx - 1;\n      cnt += c;\n      if (cnt >= k) {\n        break;\n      }\n      if (mx > 0)\n        m[mx] += c;\n      if (mn > 0)\n        m[mn] += c;\n    }\n    ofs << \"Case #\" << test + 1 << \": \" << mx << ' ' << mn << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"a.in\");\n  ofstream ofs(\"a.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    string s;\n    int k;\n    ifs >> s >> k;\n\n    int res = 0;\n    for (int i = 0; i < s.length() - k + 1; ++i) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; ++j) {\n          if (s[i + j] == '-')\n            s[i + j] = '+';\n          else\n            s[i + j] = '-';\n        }\n        ++res;\n      }\n    }\n\n    bool ok = s.find('-') == -1;\n    ofs << \"Case #\" << test + 1 << \": \" << (ok ? to_string(res) : \"IMPOSSIBLE\")\n        << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nstruct Int {\n  int l, r;\n  bool isEmpty() { return l > r; }\n};\n\nInt getInt(int count, int need) {\n  int minx = (count * 100 + (need * 90 - 1)) \/ (need * 90) - 1;\n  int maxx = (count * 100) \/ (need * 110) + 1;\n\n  int mn = -1, mx = -1;\n  for (int i = 1; i <= 2000000; ++i) {\n    if (need * (long long)i * 90 <= count * 100 &&\n        count * 100 <= need * (long long)i * 110) {\n      if (mn == -1)\n        mn = i;\n      mx = i;\n    }\n  }\n  if (mn == -1)\n    return Int{0, -1};\n  return Int{mn, mx};\n}\n\nInt cross(const Int &l, const Int &r) {\n  return Int{max(l.l, r.l), min(l.r, r.r)};\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"b.in\");\n  ofstream ofs(\"b.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    int res = 0;\n    int n, p;\n    ifs >> n >> p;\n    vector<int> c(n);\n    for (int i = 0; i < n; ++i)\n      ifs >> c[i];\n\n    vector<vector<int>> v(n);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        int k;\n        ifs >> k;\n        v[i].push_back(k);\n      }\n      sort(v[i].begin(), v[i].end());\n    }\n\n    vector<vector<Int>> vi(n);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        vi[i].push_back(getInt(v[i][j], c[i]));\n      }\n    }\n\n    vector<vector<int>> was(n, vector<int>(p, 0));\n    for (int i = 0; i < p; ++i) {\n      Int cur = vi[0][i];\n      vector<int> way;\n      way.push_back(i);\n      bool found = !cur.isEmpty();\n      for (int j = 1; j < n; ++j) {\n        found = false;\n        for (int k = 0; k < p; ++k) {\n          if (was[j][k] == 0 && !cross(cur, vi[j][k]).isEmpty()) {\n            way.push_back(k);\n            cur = cross(cur, vi[j][k]);\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          break;\n        }\n      }\n      if (found) {\n        for (int i = 0; i < n; ++i) {\n          was[i][way[i]] = 1;\n        }\n        ++res;\n      }\n    }\n    ofs << \"Case #\" << test + 1 << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"a.in\");\n  ofstream ofs(\"a.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    int res = 0;\n    int n, m;\n    ifs >> n >> m;\n    vector<string> v(n);\n\n    for (int i = 0; i < n; ++i)\n      ifs >> v[i];\n\n    bool found = false;\n    int sx;\n    for (int i = 0; i < n && !found; ++i)\n      for (int j = 0; j < m; ++j)\n        if (v[i][j] != '?') {\n          sx = i;\n          found = true;\n          break;\n        }\n\n    for (int i = sx; i < n; ++i) {\n      char f = '?';\n      for (int j = 0; j < m; ++j)\n        if (v[i][j] != '?') {\n          f = v[i][j];\n          break;\n        }\n      if (f != '?') {\n        for (int j = 0; j < m; ++j) {\n          if (v[i][j] == '?' || v[i][j] == f) {\n            v[i][j] = f;\n          } else {\n            f = v[i][j];\n          }\n        }\n      } else {\n        v[i] = v[i - 1];\n      }\n    }\n\n    for (int i = 0; i < sx; ++i)\n      v[i] = v[sx];\n    ofs << \"Case #\" << test + 1 << \":\" << endl;\n    for (auto s : v) {\n      ofs << s << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"a.in\");\n  ofstream ofs(\"a.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    double res = 0;\n    int d, n;\n    ifs >> d >> n;\n    double maxt = 0;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      ifs >> k >> s;\n\n      maxt = max(maxt, (d - k) \/ (double)s);\n    }\n    ofs << \"Case #\" << test + 1 << \": \" << setprecision(10) << fixed << d \/ maxt\n        << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nconst int C[6] = {1, 3, 2, 6, 4, 5};\nconst string colors = \"ROYGBV\";\n\nbool crossed(int c1, int c2) { return (C[c1] & C[c2]) != 0; }\n\nbool check(const vector<int> &v) {\n  for (int i = 0; i + 1 < v.size(); ++i)\n    if (crossed(v[i], v[i + 1]))\n      return false;\n  if (crossed(v[0], v.back()))\n    return false;\n  return true;\n}\n\nstring vtos(const vector<int> &v) {\n  string res;\n  for (int i : v) {\n    res += colors[i];\n  }\n  return res;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"b.in\");\n  ofstream ofs(\"b.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    int n;\n    ifs >> n;\n    vector<int> v(6);\n    for (int i = 0; i < 6; ++i) {\n      ifs >> v[i];\n    }\n    vector<int> res(n);\n    int prev = -1;\n    for (int i = 0; i < n; ++i) {\n      int bestj = -1;\n      for (int j = 0; j < 6; ++j) {\n        if ((bestj == -1 || v[j] > v[bestj]) && v[j] > 0 &&\n            (prev == -1 || !crossed(prev, j)))\n          bestj = j;\n      }\n      if (bestj == -1) {\n        for (int j = 0; j < 6; ++j) {\n          if ((bestj == -1 || v[j] > v[bestj]) && v[j] > 0)\n            bestj = j;\n        }\n      }\n      --v[bestj];\n      res[i] = bestj;\n      prev = bestj;\n    }\n\n    if (!check(res)) {\n      sort(res.size() < 10 ? res.begin() : res.end() - 10, res.end());\n      do {\n        if (check(res))\n          break;\n      } while (next_permutation(res.size() < 10 ? res.begin() : res.end() - 10,\n                                res.end()));\n    }\n    ofs << \"Case #\" << test + 1 << \": \"\n        << (!check(res) ? \"IMPOSSIBLE\" : vtos(res)) << endl;\n  }\n  return 0;\n}\n"}
{"target":"DAle","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nlong long a[105][105];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  ifstream ifs(\"b.in\");\n  ofstream ofs(\"b.out\");\n\n  int t;\n  ifs >> t;\n  for (int test = 0; test < t; ++test) {\n    int res = 0;\n    int n, q;\n    ifs >> n >> q;\n\n    vector<int> d(n), s(n);\n    for (int i = 0; i < n; ++i)\n      ifs >> d[i] >> s[i];\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j) {\n        ifs >> a[i][j];\n        if (i == j)\n          a[i][j] = 0;\n      }\n\n    for (int k = 0; k < n; ++k)\n      for (int i = 0; i < n; ++i)\n        for (int j = 0; j < n; ++j)\n          if (a[i][k] != -1 && a[k][j] != -1 &&\n              (a[i][j] == -1 || a[i][j] > a[i][k] + a[k][j])) {\n            a[i][j] = a[i][k] + a[k][j];\n          }\n\n    ofs << \"Case #\" << test + 1 << \":\";\n    for (int z = 0; z < q; ++z) {\n      int start, fin;\n      vector<double> dist(n, 1e+100);\n      vector<int> was(n, 0);\n      ifs >> start >> fin;\n      --start;\n      --fin;\n      priority_queue<pair<double, int>, vector<pair<double, int>>,\n                     greater<pair<double, int>>>\n          q;\n      q.push({0.0, start});\n      dist[start] = 0;\n      while (!q.empty()) {\n        int cur = q.top().second;\n        q.pop();\n        if (cur == fin)\n          break;\n        if (was[cur] == 0) {\n          was[cur] = 1;\n          for (int next = 0; next < n; ++next) {\n            if (was[next] == 0) {\n              if (a[cur][next] != -1 && a[cur][next] <= d[cur]) {\n                double time = a[cur][next] \/ (double)s[cur];\n                if (dist[cur] + time < dist[next]) {\n                  dist[next] = dist[cur] + time;\n                  q.push({dist[next], next});\n                }\n              }\n            }\n          }\n        }\n      }\n      ofs << ' ' << setprecision(10) << fixed << dist[fin];\n    }\n    ofs << endl;\n  }\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nunsigned long long a, x, y;\nint maxt;\nint main() {\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  cin >> maxt;\n  for (int t = 1; t <= maxt; ++t) {\n    cin >> x;\n    y = 0;\n    int tr = 0;\n    a = 1;\n    while (a <= x)\n      a *= 10;\n    a = (a - 1) \/ 9;\n    while (a > 0) {\n      while (a <= x && tr < 9) {\n        ++tr;\n        x -= a;\n        y += a;\n      }\n      a \/= 10;\n    }\n    cout << \"Case #\" << t << \": \" << y << endl;\n  }\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint maxt;\nunsigned long long n, k;\nint main() {\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  cin >> maxt;\n  for (int tr = 1; tr <= maxt; ++tr) {\n    cin >> n >> k;\n    unsigned long long t = 0;\n    while (t < k) {\n      t = t * 2 + 1;\n    }\n    t = t \/ 2;\n    k -= t;\n    n -= t;\n    unsigned long long a, r, ans;\n    a = n % (t + 1);\n\n    if (k > a) {\n      r = n \/ (t + 1) - 1;\n    } else {\n      r = n \/ (t + 1);\n    }\n    cout << \"Case #\" << tr << \": \";\n    cout << (r + 1) \/ 2 << \" \" << r \/ 2;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint t, n, k;\nchar s[1024];\nint main() {\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  cin >> t;\n  int retarded = 1;\n  while (t--) {\n    int ans = 0;\n    cin >> s >> k;\n    n = strlen(s);\n    for (int i = 0; i < n - k + 1; ++i) {\n      if (s[i] == '-') {\n        ++ans;\n        for (int j = i; j < i + k; ++j) {\n          if (s[j] == '-') {\n            s[j] = '+';\n          } else {\n            s[j] = '-';\n          }\n        }\n      }\n    }\n    for (int i = n - k + 1; i < n; ++i) {\n      if (s[i] == '-')\n        ans = -1;\n    }\n    cout << \"Case #\" << retarded << \": \";\n    if (ans == -1)\n      cout << \"IMPOSSIBLE\";\n    else {\n      cout << ans;\n    }\n    cout << endl;\n    retarded++;\n  }\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nlong long t, n, p;\nlong long r[64];\nlong long q[64][64];\nlong long ti[64];\n\ninline long long inrange(long long req, long long cur) {\n  if (cur * 10 < 9 * req)\n    return -1;\n  if (cur * 10 > 11 * req)\n    return 1;\n  return 0;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out2.out\", \"w\", stdout);\n  \/\/*\/\n  cin >> t;\n  for (int id = 0; id < t; ++id) {\n    int ans = 0;\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i) {\n      ti[i] = 0;\n    }\n    for (int i = 0; i < n; ++i)\n      cin >> r[i];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j)\n        cin >> q[i][j];\n    }\n    for (int i = 0; i < n; ++i) {\n      sort(q[i], q[i] + p);\n    }\n    \/*for (int i = 0; i < n; ++i)\n    {\n        for (int j = 0; j < p; ++j) cout << q[i][j] << \" \";\n        cout << \"\\n\";\n    }\/\/*\/\n    long long meals = 1; \/*\n     for (int i = 0; i < p; ++i)\n     {\n         ti[0] = i;*\/\n\n    for (meals = 1; meals < 1000000; ++meals) {\n      \/\/ cout << q[0][0];\n      \/\/ cout << \"M: \" << meals << \"\\n\";\n      for (int j = 0; j < n; ++j) {\n        while (ti[j] < p && inrange(meals * r[j], q[j][ti[j]]) < 0) {\n          ++ti[j];\n        }\n      }\n      int j;\n      for (j = 0; j < n; ++j) {\n        \/\/ cout << meals * r[j] << \" \" << q[j][ti[j]] << \"\\n\";\n        if (ti[j] >= p || inrange(meals * r[j], q[j][ti[j]]) != 0)\n          break;\n      }\n      if (j == n) {\n        ++ans;\n        meals--;\n        \/\/ cout << meals << \" : \";\n        for (j = 0; j < n; ++j) {\n          \/\/ cout << ti[j] << \" \";\n          ++ti[j];\n        }\n        \/\/ cout << \"\\n\";\n      }\n    }\n    \/\/}\n\n    cout << \"Case #\" << id + 1 << \": \" << ans << \"\\n\";\n  }\n\n  return 0;\n}\n\/*\n6\n2 1\n500 300\n900\n660\n2 1\n500 300\n1500\n809\n2 2\n50 100\n450 449\n1100 1101\n2 1\n500 300\n300\n500\n1 8\n10\n11 13 17 11 16 14 12 18\n3 3\n70 80 90\n1260 1500 700\n800 1440 1600\n1700 1620 900\n*\/\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint t, r, c, lef, rig, up, down;\nchar a[32][32], sym;\nbool used[256];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n\n  cin >> t;\n  for (int id = 0; id < t; ++id) {\n    for (int i = 0; i < 256; ++i)\n      used[i] = 0;\n    cin >> r >> c;\n    for (int i = 0; i < r; ++i)\n      cin >> a[i];\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        if (a[i][j] != '?' && !used[a[i][j]]) {\n          sym = a[i][j];\n          used[sym] = 1;\n          for (lef = j - 1; lef >= 0; --lef) {\n            if (a[i][lef] != '?')\n              break;\n          }\n          ++lef;\n          for (rig = j + 1; rig < c; ++rig) {\n            if (a[i][rig] != '?')\n              break;\n          }\n          --rig;\n          for (up = i - 1; up >= 0; --up) {\n            int z;\n            for (z = lef; z <= rig; ++z) {\n              if (a[up][z] != '?')\n                break;\n            }\n            if (z <= rig)\n              break;\n          }\n          ++up;\n          for (down = i + 1; down < r; ++down) {\n            int z;\n            for (z = lef; z <= rig; ++z) {\n              if (a[down][z] != '?')\n                break;\n            }\n            if (z <= rig)\n              break;\n          }\n          --down;\n          \/\/ cout << lef << \" \" << rig << \" : \" << up << \" \" << down << \"\\n\";\n          for (int z1 = up; z1 <= down; ++z1) {\n            for (int z2 = lef; z2 <= rig; ++z2) {\n              a[z1][z2] = sym;\n            }\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << id + 1 << \":\\n\";\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        cout << a[i][j];\n      }\n      cout << \"\\n\";\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nint t, n;\ndouble d, k, s, ans;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  cin >> t;\n\n  for (int i = 1; i <= t; ++i) {\n    ans = 0;\n    cin >> d >> n;\n    for (int j = 0; j < n; ++j) {\n      cin >> k >> s;\n      if ((d - k) \/ s > ans) {\n        ans = (d - k) \/ s;\n      }\n    }\n    ans = d \/ ans;\n    cout.precision(6);\n    cout << fixed;\n    cout << \"Case #\" << i << \": \" << ans << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nint T, n;\nint rs, os, ys, gs, bs, vs, b, r, y;\nbool fb, fr, fy;\n\nvoid p(char c) {\n  if (c == 'B') {\n    cout << \"B\";\n    if (fb) {\n      fb = 0;\n      for (int i = 0; i < os; ++i) {\n        cout << \"OB\";\n      }\n    }\n  }\n  if (c == 'R') {\n    cout << \"R\";\n    if (fr) {\n      fr = 0;\n      for (int i = 0; i < gs; ++i) {\n        cout << \"GR\";\n      }\n    }\n  }\n  if (c == 'Y') {\n    cout << \"Y\";\n    if (fy) {\n      fy = 0;\n      for (int i = 0; i < vs; ++i) {\n        cout << \"VY\";\n      }\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  \/\/*\/\n  cin >> T;\n\n  for (int t = 1; t <= T; ++t) {\n    cin >> n >> rs >> os >> ys >> gs >> bs >> vs;\n    b = bs - os;\n    r = rs - gs;\n    y = ys - vs;\n    \/\/ cout << b << r << y;\n    if (b == 0 && bs != 0 && bs + os != n) {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (r == 0 && rs != 0 && rs + gs != n) {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (y == 0 && ys != 0 && ys + vs != n) {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (b < 0 || r < 0 || y < 0 || b > r + y || r > b + y || y > b + r) {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (b == 0 && bs != 0) {\n      cout << \"Case #\" << t << \": \";\n      for (int i = 0; i < n \/ 2; ++i) {\n        cout << \"BO\";\n      }\n      cout << \"\\n\";\n      continue;\n    }\n    if (r == 0 && rs != 0) {\n      cout << \"Case #\" << t << \": \";\n      for (int i = 0; i < n \/ 2; ++i) {\n        cout << \"RG\";\n      }\n      cout << \"\\n\";\n      continue;\n    }\n    if (y == 0 && ys != 0) {\n      cout << \"Case #\" << t << \": \";\n      for (int i = 0; i < n \/ 2; ++i) {\n        cout << \"YV\";\n      }\n      cout << \"\\n\";\n      continue;\n    }\n\n    cout << \"Case #\" << t << \": \";\n    fb = 1;\n    fr = 1;\n    fy = 1;\n    if (b >= r && b >= y) {\n      while (true) {\n        if (r > 0) {\n          p('R');\n          --r;\n          if (b > r + y)\n            break;\n        }\n        if (y > 0) {\n          p('Y');\n          --y;\n          if (b > r + y)\n            break;\n        }\n      }\n      p('B');\n      --b;\n      while (b) {\n        if (r > 0) {\n          p('R');\n          --r;\n        } else {\n          p('Y');\n          --y;\n        }\n        p('B');\n        --b;\n      }\n      cout << \"\\n\";\n      continue;\n    }\n    if (r >= b && r >= y) {\n      while (true) {\n        if (b > 0) {\n          p('B');\n          --b;\n          if (r > b + y)\n            break;\n        }\n        if (y > 0) {\n          p('Y');\n          --y;\n          if (r > b + y)\n            break;\n        }\n      }\n      p('R');\n      --r;\n      while (r) {\n        if (b > 0) {\n          p('B');\n          --b;\n        } else {\n          p('Y');\n          --y;\n        }\n        p('R');\n        --r;\n      }\n      cout << \"\\n\";\n      continue;\n    }\n    if (y >= r && y >= b) {\n      while (true) {\n        if (r > 0) {\n          p('R');\n          --r;\n          if (y > r + b)\n            break;\n        }\n        if (b > 0) {\n          p('B');\n          --b;\n          if (y > r + b)\n            break;\n        }\n      }\n      p('Y');\n      --y;\n      while (y) {\n        if (r > 0) {\n          p('R');\n          --r;\n        } else {\n          p('B');\n          --b;\n        }\n        p('Y');\n        --y;\n      }\n      cout << \"\\n\";\n      continue;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"daninnm","func":"#include <cstdio>\n#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nint T;\nint n, q;\nlong long e[128];\ndouble s[128];\nlong long d[128][128];\nlong long dist[128];\nint u, v;\ndouble mintime[128];\ndouble temp;\ndouble dp[128][128]; \/\/\/ dp[index][horse]\ninline long long rem(int index, int horse) {\n  return e[horse] - dist[index] + dist[horse];\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  \/\/*\/\n  cin >> T;\n\n  for (int t = 1; t <= T; ++t) {\n    cin >> n >> q;\n    for (int i = 0; i <= n; ++i) {\n      mintime[i] = -1;\n    }\n    for (int i = 1; i <= n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j) {\n        cin >> d[i][j];\n        \/\/ if(d[i][j] != -1)cout << \"IJ: \" << i <<\" \" << j <<\"\\n\";\n      }\n    cin >> u >> v;\n    for (int i = 2; i <= n; ++i) {\n      dist[i] = dist[i - 1] + d[i - 1][i];\n    } \/\/ cout << d[i-1][i] << \" \" << i-1 << \" \" << i << \"\\n\";}\n    mintime[1] = 0;\n    for (int i = 1; i <= n; ++i) {\n      \/\/ cout << \"DIST: \" << dist[i] << \"\\n\";\n      for (int j = 1; j < i; ++j) {\n        if (rem(i, j) >= 0) {\n          temp = mintime[j] + (dist[i] - dist[j]) \/ s[j];\n          \/\/ cout << i << \" \" << j << \" : \" << temp << \"\\n\";\n          if (mintime[i] < 0 || mintime[i] > temp)\n            mintime[i] = temp;\n        }\n      }\n    }\n\n    cout.precision(20);\n    cout << fixed;\n    cout << \"Case #\" << t << \": \" << mintime[n] << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"dariofg","func":"#include <iostream>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \": \";\n    long long n;\n    cin >> n;\n    long long mask = 1;\n    while (mask * 10 <= n)\n      mask *= 10;\n    \/\/ cout << mask << endl;\n    if (n >= 10 && (n \/ mask > (10 * n \/ mask) % 10))\n      n = (n \/ mask) * mask - 1;\n\n    mask = 1;\n    while (mask > 0) {\n    aaa:;\n      if (((n \/ mask) % 10) < ((n \/ (mask * 10)) % 10)) {\n        n -= mask;\n        \/\/ cout << n << endl;\n        mask = 1;\n        goto aaa;\n      }\n      mask *= 10;\n    }\n    cout << n << endl;\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \": \";\n    int n, k;\n    cin >> n >> k; \/*\n     vector<int> distiz(n+2);\n     vector<int> distder(n+2);\n     distiz[0] = distiz[n+1] = distder[0] = distder[n+1] = 0;\n     for(int i=1;i<=n;i++)\n             distiz[i] = i-1,distder[i]=n-i;\n     int mn,mx;\n     for(int ii=0;ii<k;ii++)\n     {\n             vector<pair<pair<int,int>,int> > v;\n             pair<pair<int,int>,int> pp;\n             pair<int,int> p;\n             for(int i=1;i<=n;i++)\n             {\n                     pp.first.first=min(distiz[i],distder[i]);\n                     pp.first.second=max(distiz[i],distder[i]);\n                     pp.second = i;\n                     v.push_back(pp);\n             }\n             sort(v.begin(),v.end());\n             mn = v[0].first.first;\n             mx = v[0].first.second;\n             int pos = v[0].second;\n             distiz[pos] = distder[pos] = 0;\n             distiz[pos+1] = 0;\n             distder[pos-1] = 0;\n     }\n     cout << mx << \" \" << mn << endl;*\/\n    priority_queue<int> pq;\n    pq.push(n);\n    int mn, mx;\n    for (int i = 0; i < k; i++) {\n      n = pq.top();\n      pq.pop();\n      int a = (n - 1) \/ 2;\n      int b = n - a - 1;\n      mn = min(a, b);\n      mx = max(a, b);\n      pq.push(a);\n      pq.push(b);\n    }\n    cout << mx << \" \" << mn << endl;\n  }\n}\n"}
{"target":"dariofg","func":"#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint f(const vector<bool> &v, int k) {\n  queue<pair<vector<bool>, int>> q;\n  pair<vector<bool>, int> p1, p2, p3;\n  p1.first = v;\n  p1.second = 0;\n  q.push(p1);\n  set<vector<bool>> st;\n  while (!q.empty()) {\n    p1 = q.front();\n    q.pop();\n    for (int i = 0; i < v.size(); i++) {\n      \/\/ cout << p1.first[i] << endl;\n      if (!p1.first[i])\n        goto aaaa;\n    }\n    return p1.second;\n  aaaa:;\n    \/\/ cout << \"HELP\" << endl;\n    if (st.find(p1.first) != st.end())\n      continue;\n    \/\/ cout << \"HELP2\" << endl;\n    st.insert(p1.first);\n    \/\/ cout << \"HELP3\" << endl;\n    p2.second = p1.second + 1;\n    p2.first = vector<bool>(v.size());\n    for (int i = 0; i < k; i++)\n      p2.first[i] = !p1.first[i];\n    for (int i = k; i < v.size(); i++)\n      p2.first[i] = p1.first[i];\n    \/\/ cout << \"HELP3\" << endl;\n\n    q.push(p2);\n\n    \/\/ cout << \"HELP3\" << endl;\n    for (int i = k; i < v.size(); i++) {\n\n      \/\/\tcout << \"HELP3\" << endl;\n      p2.first[i] = !p1.first[i];\n      p2.first[i - k] = p1.first[i - k];\n      q.push(p2);\n    }\n  }\n  return -1;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    vector<bool> v(s.size());\n    for (int i = 0; i < v.size(); i++)\n      v[i] = s[i] == '+';\n    int aaa = k - 1;\n    int bbb = v.size() - k;\n    bool ok = true; \/*\n       if(bbb<aaa)\n       {\n               for(int i=bbb;i<=aaa;i++)\n               {\n                       if(v[i]!=v[bbb])\n                               ok = false;\n               }\n       }*\/\n    if (!ok)\n      cout << \"IMPOSSIBLE\" << endl;\n    else {\n      int a = f(v, k);\n      if (a >= 0)\n        cout << a << endl;\n      else\n        cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n\nusing namespace std;\n\nint count(vector<vector<bool>> &ok, vector<vector<int>> &izs,\n          vector<vector<int>> &ders) {\n  int n = izs.size();\n  int p = izs[0].size();\n  if (n == 1) {\n    int r = 0;\n    for (int i = 0; i < p; i++) {\n      r += ok[0][i];\n    }\n    return r;\n  } else \/\/ n==2\n  {\n    vector<pair<int, int>> vp;\n    pair<int, int> pp;\n    for (int i = 0; i < p; i++) {\n      for (int j = 0; j < p; j++) {\n        if (ok[0][i] && ok[1][j] &&\n            (izs[1][j] <= ders[0][i] && izs[0][i] <= ders[1][j])) {\n          pp.first = i;\n          pp.second = j;\n          vp.push_back(pp);\n        }\n      }\n    }\n    int r = 0;\n    int rt = 0;\n    vector<bool> vis1(p, false);\n    vector<bool> vis2(p, false);\n    for (int i = 0; i < 64; i++) {\n      vis1 = vector<bool>(p);\n      vis2 = vector<bool>(p);\n\n      rt = 0;\n      for (int j = 0; j < vp.size(); j++) {\n        if (!vis1[vp[j].first] && !vis2[vp[j].second]) {\n          rt++;\n          vis1[vp[j].first] = true;\n          vis2[vp[j].second] = true;\n        }\n      }\n\n      r = max(r, rt);\n      random_shuffle(vp.begin(), vp.end());\n    }\n    return r;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \": \";\n    int n, p;\n    cin >> n >> p;\n    vector<int> a(n);\n    vector<vector<int>> m(n, vector<int>(p));\n    for (int i = 0; i < n; i++)\n      cin >> a[i];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> m[i][j];\n      }\n    }\n    vector<vector<int>> izs(n, vector<int>(p));\n    vector<vector<int>> ders(n, vector<int>(p));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        double aaa = a[i] \/ m[i][j];\n        izs[i][j] =\n            (m[i][j] * 10) \/ (a[i] * 11) + !!((m[i][j] * 10) % (a[i] * 11));\n        ders[i][j] = (m[i][j] * 10) \/ (a[i] * 9);\n      }\n    }\n    vector<vector<bool>> ok(n, vector<bool>(p, true));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        if (izs[i][j] > ders[i][j])\n          ok[i][j] = false;\n      }\n    }\n    int asdf = count(ok, izs, ders);\n    cout << asdf << endl;\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n\nusing namespace std;\n\nint ancho, alto;\n\nbool ok;\n\nbool valid(const vector<vector<char>> &m) {\n  vector<vector<bool>> vis(alto, vector<bool>(ancho));\n  set<char> st;\n  for (int i = 0; i < alto; i++) {\n    for (int j = 0; j < ancho; j++) {\n      if (vis[i][j])\n        continue;\n      char mander = m[i][j];\n      if (st.find(mander) != st.end())\n        return false;\n      vis[i][j] = true;\n      int ii = i;\n      while (ii < alto && m[ii][j] == mander)\n        vis[ii][j] = true, ii++;\n      int jj = j;\n      while (jj < ancho && m[i][jj] == mander)\n        vis[i][jj] = true, jj++;\n      for (int k = i; k < ii; k++) {\n        for (int l = j; l < jj; l++) {\n          if (m[k][l] != mander)\n            return false;\n          vis[k][l] = true;\n        }\n      }\n      st.insert(mander);\n    }\n  }\n  return true;\n}\n\nvoid rec(vector<vector<char>> &m, const vector<char> &asdf) {\n  if (ok)\n    return;\n  for (int i = 0; i < alto; i++) {\n    for (int j = 0; j < ancho; j++) {\n      if (m[i][j] == '?') {\n        for (int k = 0; k < asdf.size(); k++) {\n          m[i][j] = asdf[k];\n          rec(m, asdf);\n        }\n        m[i][j] = '?';\n        return;\n      }\n    }\n  }\n  if (valid(m)) {\n    for (int i = 0; i < alto; i++) {\n      for (int j = 0; j < ancho; j++) {\n        cout << m[i][j];\n      }\n      cout << endl;\n    }\n    ok = true;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \":\" << endl;\n    cin >> alto >> ancho;\n    vector<vector<char>> m(alto, vector<char>(ancho));\n    vector<char> aaa;\n    set<char> asdf;\n    for (int i = 0; i < alto; i++) {\n      for (int j = 0; j < ancho; j++) {\n        cin >> m[i][j];\n        if (m[i][j] != '?' && asdf.find(m[i][j]) == asdf.end())\n          aaa.push_back(m[i][j]);\n        asdf.insert(m[i][j]);\n      }\n    }\n    ok = false;\n    rec(m, aaa);\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    int n;\n    double d;\n    cin >> d >> n;\n    vector<double> pos(n);\n    vector<double> vel(n);\n    for (int i = 0; i < n; i++)\n      cin >> pos[i] >> vel[i];\n    long double iz = 0;\n    long double der = 1e108;\n    long double med = (iz + der) \/ 2.0;\n    while (der - iz > 1e-6) {\n      med = (iz + der) \/ 2.0;\n      long double t = d \/ med;\n      for (int i = 0; i < n; i++) {\n        if ((d - pos[i]) \/ vel[i] > t) {\n          der = med;\n          goto aaa;\n        }\n      }\n      iz = med;\n    aaa:;\n      \/\/ cout << der-iz << endl;\n    }\n    printf(\"Case #%d: %.6Lf\\n\", I, med);\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n\nusing namespace std;\n\nint max(int a1, int a2, int a3, int a4, int a5, int a6) {\n  int m1 = max(a1, a2);\n  int m2 = max(a3, a4);\n  int m3 = max(a5, a6);\n  return max(m1, max(m2, m3));\n}\n\nbool comp(char a, char b) {\n  if (a == 'R') {\n    if (b == 'O' || b == 'V' || b == 'R')\n      return false;\n    return true;\n  }\n  if (a == 'Y') {\n    if (b == 'O' || b == 'G' || b == 'Y')\n      return false;\n    return true;\n  }\n  if (a == 'B') {\n    if (b == 'G' || b == 'V' || b == 'B')\n      return false;\n    return true;\n  }\n  if (a == 'O') {\n    if (b == 'B')\n      return true;\n    return false;\n  }\n  if (a == 'G') {\n    if (b == 'R')\n      return true;\n    return false;\n  }\n  if (a == 'V') {\n    if (b == 'Y')\n      return true;\n    return false;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \": \";\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    for (int ii = 0; ii < 100; ii++) {\n      int ri = r, oi = o, yi = y, gi = g, bi = b, vi = v;\n      int ni = n;\n      vector<char> ans;\n      while (ni > 0) {\n      bbb:;\n        vector<char> vc;\n        vector<pair<int, char>> aaa;\n        \/*pair<int,char> pp;\n        aaa.push_back(make_pair(-ri,rand()%2?'R':'r'));\n        aaa.push_back(make_pair(-oi,rand()%2?'O':'o'));\n        aaa.push_back(make_pair(-yi,rand()%2?'Y':'y'));\n        aaa.push_back(make_pair(-gi,rand()%2?'G':'g'));\n        aaa.push_back(make_pair(-bi,rand()%2?'B':'b'));\n        aaa.push_back(make_pair(-vi,rand()%2?'V':'v'));\n        sort(aaa.begin(),aaa.end());\n        for(int i=0;i<aaa.size();i++)\n        {\n                vc.push_back(aaa[i].second&(~32));\/\/ magic\n                random_shuffle(vc.begin(),vc.end());\n        }*\/\n\n        if (ri)\n          vc.push_back('R');\n        if (oi)\n          vc.push_back('O');\n        if (yi)\n          vc.push_back('Y');\n        if (gi)\n          vc.push_back('G');\n        if (bi)\n          vc.push_back('B');\n        if (vi)\n          vc.push_back('V');\n        random_shuffle(vc.begin(), vc.end());\n        if (ni == n) {\n          ni--;\n          ans.push_back(vc[0]);\n          if (vc[0] == 'R')\n            ri--;\n          if (vc[0] == 'O')\n            oi--;\n          if (vc[0] == 'Y')\n            yi--;\n          if (vc[0] == 'G')\n            gi--;\n          if (vc[0] == 'B')\n            bi--;\n          if (vc[0] == 'V')\n            vi--;\n\n          goto bbb;\n        }\n        int mx = max(ri, oi, yi, gi, bi, vi);\n        aaa.push_back(make_pair(-ri, 'R'));\n        aaa.push_back(make_pair(-oi, 'O'));\n        aaa.push_back(make_pair(-yi, 'Y'));\n        aaa.push_back(make_pair(-gi, 'G'));\n        aaa.push_back(make_pair(-bi, 'B'));\n        aaa.push_back(make_pair(-vi, 'V'));\n        sort(aaa.begin(), aaa.end());\n        for (int i = 0; i < aaa.size(); i++) {\n          if (aaa[i].first < 0 && aaa[i].second == 'R' &&\n              comp(ans[ans.size() - 1], 'R')) {\n            ans.push_back('R');\n            ni--;\n            ri--;\n            goto bbb;\n          }\n          if (aaa[i].first < 0 && aaa[i].second == 'O' &&\n              comp(ans[ans.size() - 1], 'O')) {\n            ans.push_back('O');\n            ni--;\n            oi--;\n            goto bbb;\n          }\n          if (aaa[i].first < 0 && aaa[i].second == 'Y' &&\n              comp(ans[ans.size() - 1], 'Y')) {\n            ans.push_back('Y');\n            ni--;\n            yi--;\n            goto bbb;\n          }\n          if (aaa[i].first < 0 && aaa[i].second == 'G' &&\n              comp(ans[ans.size() - 1], 'G')) {\n            ans.push_back('G');\n            ni--;\n            gi--;\n            goto bbb;\n          }\n          if (aaa[i].first < 0 && aaa[i].second == 'B' &&\n              comp(ans[ans.size() - 1], 'B')) {\n            ans.push_back('B');\n            ni--;\n            bi--;\n            goto bbb;\n          }\n          if (aaa[i].first < 0 && aaa[i].second == 'V' &&\n              comp(ans[ans.size() - 1], 'V')) {\n            ans.push_back('V');\n            ni--;\n            yi--;\n            goto bbb;\n          }\n        }\n        \/*\n        for(int i=0;i<vc.size();i++)\n        {\n                if(vc[i]=='R' && comp(ans[ans.size()-1],'R'))\n                {\n                        ans.push_back('R');\n                        ni--;\n                        ri--;\n                        goto bbb;\n                }\n                if(vc[i]=='O' && comp(ans[ans.size()-1],'O'))\n                {\n                        ans.push_back('O');\n                        ni--;\n                        oi--;\n                        goto bbb;\n                }\n                if(vc[i]=='Y' && comp(ans[ans.size()-1],'Y'))\n                {\n                        ans.push_back('Y');\n                        ni--;\n                        yi--;\n                        goto bbb;\n                }\n                if(vc[i]=='G' && comp(ans[ans.size()-1],'G'))\n                {\n                        ans.push_back('G');\n                        ni--;\n                        gi--;\n                        goto bbb;\n                }\n                if(vc[i]=='B' && comp(ans[ans.size()-1],'B'))\n                {\n                        ans.push_back('B');\n                        ni--;\n                        bi--;\n                        goto bbb;\n                }\n                if(vc[i]=='V' && comp(ans[ans.size()-1],'V'))\n                {\n                        ans.push_back('V');\n                        ni--;\n                        vi--;\n                        goto bbb;\n                }\n                \/\/break;\n        }*\/\n        break;\n      }\n      if (!comp(ans[0], ans[ans.size() - 1]))\n        ni++;\n      if (!ni) {\n        for (int i = 0; i < n; i++)\n          cout << ans[i];\n        cout << endl;\n        goto aaa;\n      }\n    }\n    cout << \"IMPOSSIBLE\" << endl;\n  aaa:;\n    cerr << I << endl;\n  }\n}\n"}
{"target":"dariofg","func":"#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n\nusing namespace std;\n\nvector<vector<int>> dist;\nvector<int> cabmaxdist;\nvector<int> cabvel;\nint n, q;\n\ndouble mindist(int ini, int fin) {\n  vector<vector<bool>> vis(n, vector<bool>(n, false));\n  pair<double, pair<int, pair<int, int>>> ppp, ppp2;\n  pair<int, int> p1, p2, p3;\n  pair<int, pair<int, int>> pp1, pp2, pp3;\n  priority_queue<pair<double, pair<int, pair<int, int>>>> pq;\n  p1.first = ini;\n  p1.second = cabmaxdist[ini];\n  pp1.second = p1;\n  pp1.first = ini;\n  ppp.first = 0;\n  ppp.second = pp1;\n  pq.push(ppp);\n  while (!pq.empty()) {\n    ppp = pq.top();\n    pq.pop();\n    double distancia = -ppp.first;\n    int pos = ppp.second.first;\n    int caballo = ppp.second.second.first;\n    int distcaballor = ppp.second.second.second;\n    if (vis[pos][caballo])\n      continue;\n    vis[pos][caballo] = true;\n    if (pos == fin)\n      return distancia;\n    ppp2.first = -distancia;\n    ppp2.second.first = pos;\n    ppp2.second.second.first = pos;\n    ppp2.second.second.second = cabmaxdist[pos];\n    pq.push(ppp2);\n    for (int i = 0; i < n; i++) {\n      if (dist[pos][i] >= 0 && dist[pos][i] <= distcaballor) {\n        ppp2.first =\n            -distancia - double(dist[pos][i]) \/ double(cabvel[caballo]);\n        ppp2.second.first = i;\n        ppp2.second.second.first = caballo;\n        ppp2.second.second.second = distcaballor - dist[pos][i];\n        pq.push(ppp2);\n      }\n    }\n  }\n  return -1;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int I = 1; I <= T; I++) {\n    cout << \"Case #\" << I << \":\";\n    cin >> n >> q;\n    cabmaxdist = vector<int>(n);\n    cabvel = vector<int>(n);\n    for (int i = 0; i < n; i++)\n      cin >> cabmaxdist[i] >> cabvel[i];\n    dist = vector<vector<int>>(n, vector<int>(n));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        cin >> dist[i][j];\n    }\n    for (int i = 0; i < q; i++) {\n      int ini, fin;\n      cin >> ini >> fin;\n      ini--;\n      fin--;\n      printf(\" %.6f\", mindist(ini, fin));\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    string s;\n    cin >> s;\n\n    string tidy;\n    bool reduced = false;\n    for (int j = 0; j < s.length(); j++) {\n      if (reduced) {\n        tidy += '9';\n      } else {\n        bool add = true;\n        for (int k = j + 1; k <= s.length() - 1; k++) {\n          if (s[j] > s[k]) {\n            if (s[j] > '1') {\n              tidy += s[j] - 1;\n            }\n            add = false;\n            reduced = true;\n            break;\n          } else if (s[j] < s[k]) {\n            tidy += s[j];\n            add = false;\n            break;\n          }\n        }\n        if (add) {\n          tidy += s[j];\n        }\n      }\n    }\n    cout << \"Case #\" << i + 1 << \": \" << tidy << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    ll N, K;\n    cin >> N >> K;\n\n    map<ll, ll> stallCount;\n    vector<ll> stall;\n\n    stallCount[N] = 1;\n    stall.push_back(N);\n\n    ll currentCount = 0;\n    ll space = 0;\n    int index = 0;\n    while (currentCount < K) {\n      space = stall[index];\n      currentCount += stallCount[space];\n\n      if (stallCount[space \/ 2] == 0) {\n        stall.push_back(space \/ 2);\n      }\n      stallCount[space \/ 2] += stallCount[space];\n\n      if (stallCount[(space - 1) \/ 2] == 0) {\n        stall.push_back((space - 1) \/ 2);\n      }\n      stallCount[(space - 1) \/ 2] += stallCount[space];\n\n      index++;\n    }\n\n    cout << \"Case #\" << i + 1 << \": \" << space \/ 2 << \" \" << (space - 1) \/ 2\n         << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    string S;\n    int K;\n    cin >> S >> K;\n\n    int flip = 0;\n    for (int j = 0; j < S.length() - K + 1; j++) {\n      if (S[j] == '-') {\n        flip++;\n        for (int k = 0; k < K; k++) {\n          if (S[j + k] == '-') {\n            S[j + k] = '+';\n          } else {\n            S[j + k] = '-';\n          }\n        }\n      }\n    }\n\n    bool possible = true;\n    for (int j = 0; j < S.length(); j++) {\n      if (S[j] == '-') {\n        possible = false;\n        break;\n      }\n    }\n\n    cout << \"Case #\" << i + 1 << \": \";\n    if (possible) {\n      cout << flip << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    int N, P;\n    cin >> N >> P;\n\n    vector<int> rec(N);\n    for (int j = 0; j < N; j++) {\n      cin >> rec[j];\n    }\n\n    vector<vector<int>> ing(N, vector<int>(P));\n    for (int j = 0; j < N; j++) {\n      for (int k = 0; k < P; k++) {\n        cin >> ing[j][k];\n      }\n      sort(ing[j].begin(), ing[j].end());\n    }\n\n    vector<int> curIndex(N);\n\n    bool pos = true;\n    int res = 0;\n    for (int j = 1; j <= 1000000; j++) {\n      bool canMake = true;\n      for (int k = 0; k < N; k++) {\n        if (rec[k] * j * 0.85 > 1000000) {\n          pos = false;\n          break;\n        }\n\n        int minServing = (rec[k] * j * 9 + 9) \/ 10;\n        int maxServing = (rec[k] * j * 11) \/ 10;\n        while (ing[k][curIndex[k]] < minServing) {\n          curIndex[k]++;\n          if (curIndex[k] >= P) {\n            pos = false;\n            break;\n          }\n        }\n\n        if (!pos) {\n          break;\n        } else {\n          \/\/ cout << k << \" \" << minServing << \" \" << maxServing << \" \" <<\n          \/\/ curIndex[k] << \" \" << ing[k][curIndex[k]] << endl;\n          if (maxServing < ing[k][curIndex[k]]) {\n            canMake = false;\n          }\n        }\n      }\n\n      if (!pos) {\n        break;\n      } else if (canMake) {\n        res++;\n        j--;\n        \/\/ cout << N << endl;\n        for (int k = 0; k < N; k++) {\n          \/\/ cout << ing[k][curIndex[k]] << \" \";\n          curIndex[k]++;\n          if (curIndex[k] >= P) {\n            pos = false;\n            break;\n          }\n        }\n        \/\/ cout << endl;\n      }\n    }\n\n    cout << \"Case #\" << i + 1 << \": \" << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    int r, c;\n    cin >> r >> c;\n\n    vector<string> grid(r);\n    string s;\n    vector<pair<int, int>> gridIndex;\n    for (int j = 0; j < r; j++) {\n      cin >> s;\n      grid[j] = s;\n      for (int k = 0; k < c; k++) {\n        if (s[k] != '?') {\n          gridIndex.push_back(make_pair(j, k));\n        }\n      }\n    }\n\n    sort(gridIndex.begin(), gridIndex.end());\n\n    for (int j = 0; j < gridIndex.size(); j++) {\n      int done = false;\n      int row = gridIndex[j].first;\n      int col = gridIndex[j].second;\n      int startRow = row, startColumn = col;\n      for (int k = 0; k < row + 1; k++) {\n        for (int l = 0; l < col + 1; l++) {\n          if (grid[k][l] == '?') {\n            startRow = k;\n            startColumn = l;\n            done = true;\n            break;\n          }\n        }\n        if (done) {\n          break;\n        }\n      }\n\n      int endColumn = c - 1;\n      int endRow = r - 1;\n      for (int k = col + 1; k <= c - 1; k++) {\n        if (grid[row][k] != '?') {\n          endColumn = k - 1;\n          break;\n        }\n      }\n      done = false;\n      for (int k = row + 1; k <= r - 1; k++) {\n        for (int l = startColumn; l <= endColumn; l++) {\n          if (grid[k][l] != '?') {\n            endRow = k - 1;\n            done = true;\n            break;\n          }\n        }\n        if (done) {\n          break;\n        }\n      }\n      \/\/ cout << startRow << \" \" << startColumn << \" \" << endRow << \" \" <<\n      \/\/ endColumn << endl;\n\n      for (int k = startRow; k <= endRow; k++) {\n        for (int l = startColumn; l <= endColumn; l++) {\n          grid[k][l] = grid[row][col];\n        }\n      }\n    }\n    cout << \"Case #\" << i + 1 << \":\" << endl;\n    for (int j = 0; j < r; j++) {\n      cout << grid[j] << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n  cout << fixed << setprecision(7);\n\n  for (int i = 0; i < T; i++) {\n    int D, N;\n    cin >> D >> N;\n\n    int K, S;\n    double speed = 1e20;\n    for (int j = 0; j < N; j++) {\n      cin >> K >> S;\n      speed = min(speed, (double)D \/ ((double)(D - K) \/ (double)S));\n    }\n\n    cout << \"Case #\" << i + 1 << \": \" << speed << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    bool possible = true;\n    cout << \"Case #\" << i + 1 << \": \";\n    \/\/ cout << (o < b) << (g < r) << (v < y) << (2 * max(max(b - o, r - g), y -\n    \/\/ v) <= b - o + r - g + y - v) << endl;\n    if (o + b == n && o == b) {\n      for (int j = 0; j < o; j++) {\n        cout << \"OB\";\n      }\n    } else if (g + r == n && g == r) {\n      for (int j = 0; j < g; j++) {\n        cout << \"GR\";\n      }\n    } else if (v + y == n && v == y) {\n      for (int j = 0; j < v; j++) {\n        cout << \"VY\";\n      }\n    } else if ((o == 0 || o < b) && (g == 0 || g < r) && (v == 0 || v < y) &&\n               2 * max(max(b - o, r - g), y - v) <= b - o + r - g + y - v) {\n      string temp;\n      vector<string> sb, sr, sy;\n      temp = \"B\";\n      for (int j = 0; j < o; j++) {\n        temp += \"OB\";\n      }\n      sb.push_back(temp);\n      b -= o;\n      for (int j = 0; j < b - 1; j++) {\n        sb.push_back(\"B\");\n      }\n\n      temp = \"R\";\n      for (int j = 0; j < g; j++) {\n        temp += \"GR\";\n      }\n      sr.push_back(temp);\n      r -= g;\n      for (int j = 0; j < r - 1; j++) {\n        sr.push_back(\"R\");\n      }\n\n      temp = \"Y\";\n      for (int j = 0; j < v; j++) {\n        temp += \"VY\";\n      }\n      sy.push_back(temp);\n      y -= v;\n      for (int j = 0; j < y; j++) {\n        sy.push_back(\"Y\");\n      }\n\n      string s;\n      if (b >= r && b >= y) {\n        for (int j = 0; j < b; j++) {\n          s += sb[j];\n          if (j < r)\n            s += sr[j];\n          if (j >= b - y)\n            s += sy[j - b + y];\n        }\n      } else if (r >= b && r >= y) {\n        for (int j = 0; j < r; j++) {\n          s += sr[j];\n          if (j < b)\n            s += sb[j];\n          if (j >= r - y)\n            s += sy[j - r + y];\n        }\n      } else {\n        for (int j = 0; j < y; j++) {\n          s += sy[j];\n          if (j < b)\n            s += sb[j];\n          if (j >= y - r)\n            s += sr[j - y + r];\n        }\n      }\n\n      cout << s;\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"davi0015","func":"#include <algorithm>\n#include <cmath>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long int ll;\n\nint main() {\n  int T;\n  cin >> T;\n\n  cout << fixed << setprecision(7);\n\n  for (int i = 0; i < T; i++) {\n    int N, Q;\n    cin >> N >> Q;\n\n    vector<ll> d(N), s(N);\n    for (int j = 0; j < N; j++) {\n      cin >> d[j] >> s[j];\n    }\n\n    vector<ll> dist(N);\n    int temp;\n    for (int j = 0; j < N; j++) {\n      for (int k = 0; k < N; k++) {\n        cin >> temp;\n        if (j + 1 == k) {\n          dist[j] = temp;\n        }\n      }\n    }\n\n    for (int j = 0; j < Q; j++) {\n      cin >> temp >> temp;\n    }\n\n    vector<double> time(N);\n    for (int j = 0; j < N - 1; j++) {\n      double bestTime = -1;\n      \/\/ cout << \"dist \" << dist[j] << endl;\n      if (j == 0) {\n        bestTime = 0;\n      } else {\n        for (int k = 0; k < j; k++) {\n          \/\/ cout << k << \" \" << d[k] << endl;\n          if (d[k] >= 0 && (bestTime == -1 || bestTime > time[k])) {\n            bestTime = time[k];\n          }\n        }\n      }\n\n      time[j] = bestTime;\n      \/\/ cout << time[j] << endl;\n\n      for (int k = 0; k < j + 1; k++) {\n        d[k] -= dist[j];\n        time[k] += (double)dist[j] \/ (double)s[k];\n      }\n    }\n\n    double res = 1e20;\n    for (int j = 0; j < N - 1; j++) {\n      if (d[j] >= 0) {\n        res = min(res, time[j]);\n      }\n    }\n\n    cout << \"Case #\" << i + 1 << \": \" << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"David.Liu","func":"#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n  int T;\n  cin >> T;\n  for (int TT = 1; TT <= T; ++TT) {\n    string s;\n    cin >> s;\n    int l = s.length(), p = 1;\n    while (p < l && s[p] >= s[p - 1])\n      ++p;\n    cout << \"Case #\" << TT << \": \";\n    if (p == l)\n      cout << s << endl;\n    else {\n      --p;\n      while (p > 0 && s[p] == s[p - 1])\n        --p;\n      --s[p];\n      for (int i = p + 1; i < l; ++i)\n        s[i] = '9';\n      if (s[0] == '0')\n        cout << s.substr(1) << endl;\n      else\n        cout << s << endl;\n    }\n  }\n}\n"}
{"target":"David.Liu","func":"#include <iostream>\nusing namespace std;\ntypedef long long ll;\n\nll min(ll a, ll b) {\n  if (a == -1)\n    return b;\n  if (b == -1)\n    return a;\n\n  return a < b ? a : b;\n}\n\nll f(ll n, ll k) {\n  \/\/ cout<<n<<\" \"<<k<<endl;\n  if (k == 1)\n    return n - 1;\n  if (k == 0)\n    return -1;\n  ll p = (k - 1) \/ 2 + (k - 1) % 2;\n  ll m = (n - 1) \/ 2;\n  if (n % 2 == 0 && k % 2 == 0)\n    return min(f(m + 1, p), f(m, p - 1));\n  return f(m, p);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int TT = 1; TT <= T; ++TT) {\n    ll n, k;\n    cin >> n >> k;\n    ll ans = f(n, k);\n    ll a = ans \/ 2 + ans % 2, b = ans \/ 2;\n    cout << \"Case #\" << TT << \": \" << a << \" \" << b << endl;\n  }\n}\n"}
{"target":"David.Liu","func":"#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int TT = 1; TT <= T; ++TT) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int l = s.length();\n    int cnt = 0;\n    for (int i = 0; i + k - 1 < l; ++i)\n      if (s[i] == '-') {\n        ++cnt;\n        for (int j = i; j < i + k; ++j)\n          s[j] = '+' + '-' - s[j];\n        \/\/      cout<<i<<endl<<s<<endl;\n      }\n    cout << \"Case #\" << TT << \": \";\n    bool f = 1;\n    for (int j = 0; j < l; ++j)\n      if (s[j] == '-') {\n        f = 0;\n        break;\n      }\n    if (f)\n      cout << cnt << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"David.Liu","func":"#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nbool cmp(int a, int b) { return a >= b; }\n\nbool notAll(int arr[], int n, int p) {\n  for (int i = 0; i < n; ++i)\n    if (arr[i] < p)\n      return true;\n  return false;\n}\n\nint getMax(int n, int k) {\n  int ans = n \/ k;\n  while (n >= (ans + 1) * k * 0.9 && n <= (ans + 1) * k * 1.1)\n    ++ans;\n  if (n < ans * k * 0.9 || n > ans * k * 1.1)\n    return 0;\n  return ans;\n}\n\nint getMin(int n, int k) {\n  int ans = getMax(n, k);\n  if (ans > 0)\n    while (n <= (ans - 1) * k * 1.1 && n >= (ans - 1) * k * 0.9)\n      --ans;\n  if (n < ans * k * 0.9 || n > ans * k * 1.1)\n    return 0;\n  return ans;\n}\n\nint main() {\n  int TT;\n  cin >> TT;\n  for (int T = 1; T <= TT; ++T) {\n    int r[100], q[100][100];\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i)\n      cin >> r[i];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j)\n        cin >> q[i][j];\n      sort(q[i], q[i] + p, cmp);\n    }\n    int cnt[100];\n    memset(cnt, 0, sizeof(cnt));\n    int ans = 0;\n    bool done = 0;\n    while (!done && notAll(cnt, n, p)) {\n      int serve = 99999999;\n      bool canAdd = 1;\n      for (int i = 0; i < n; ++i) {\n        int m = getMax(q[i][cnt[i]], r[i]);\n        while (cnt[i] < p && m == 0) {\n          ++cnt[i];\n          m = getMax(q[i][cnt[i]], r[i]);\n        }\n        if (m < serve)\n          serve = m;\n      }\n      for (int i = 0; i < n; ++i) {\n        int m1;\n        while (cnt[i] < p && (serve * r[i] * 0.9 > q[i][cnt[i]] ||\n                              serve * r[i] * 1.1 < q[i][cnt[i]]))\n          ++cnt[i];\n        if (cnt[i] == p) {\n          done = 1;\n          break;\n        }\n        if (serve == 0) {\n\n          canAdd = 0;\n          break;\n        }\n      }\n      if (!done && canAdd) {\n        if (serve > 0)\n          ++ans;\n        for (int k = 0; k < n; ++k)\n          ++cnt[k];\n      }\n    }\n    cout << \"Case #\" << T << \": \" << ans << endl;\n  }\n}\n"}
{"target":"David.Liu","func":"#include <iostream>\n#include <map>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvector<string> v;\n\nbool allQ(int a, int b, int c, int d) {\n  for (int i = a; i <= b; ++i)\n    for (int j = c; j <= d; ++j)\n      if (v[i][j] != '?')\n        return false;\n  return true;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int TT = 1; TT <= T; ++TT) {\n\n    int n, m;\n    cin >> n >> m;\n    for (int k = 0; k < n; ++k) {\n      string s;\n      cin >> s;\n      for (int i = 1; i < s.length(); ++i)\n        if (s[i] == '?')\n          s[i] = s[i - 1];\n      for (int i = s.length() - 2; i >= 0; --i)\n        if (s[i] == '?')\n          s[i] = s[i + 1];\n      v.push_back(s);\n    }\n    for (int i = 1; i < n; ++i)\n      if (v[i][0] == '?')\n        v[i] = v[i - 1];\n    for (int i = n - 2; i >= 0; --i)\n      if (v[i][0] == '?')\n        v[i] = v[i + 1];\n    cout << \"Case #\" << TT << \":\" << endl;\n    for (int i = 0; i < n; ++i)\n      cout << v[i] << endl;\n    v.clear();\n  }\n}\n"}
{"target":"David.Liu","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  int TT;\n  cin >> TT;\n  for (int T = 1; T <= TT; ++T) {\n    int d, n;\n    cin >> d >> n;\n    double ans;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      cin >> k >> s;\n      double speed = double(d) \/ (double(d - k) \/ double(s));\n      if (i == 0 || speed < ans)\n        ans = speed;\n    }\n    printf(\"Case #%d: %.9lf\\n\", T, ans);\n  }\n}\n"}
{"target":"David.Liu","func":"#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nbool cmp(int a, int b) { return a >= b; }\n\nint main() {\n  int TT;\n  cin >> TT;\n  for (int T = 1; T <= TT; ++T) {\n    int n;\n    cin >> n;\n    int a[10];\n    for (int i = 0; i < 6; ++i)\n      cin >> a[i];\n    string ans = \"\";\n    if (a[0] > 0) {\n      ans += 'R';\n      --a[0];\n    } else if (a[2] > 0) {\n      ans += 'Y';\n      --a[2];\n    } else {\n      ans += 'B';\n      --a[4];\n    }\n    for (int i = 1; i < n; ++i) {\n      \/\/  cout<<ans<<endl;\n      if (ans[i - 1] == 'R') {\n        if (a[2] >= a[4] && a[2] > 0) {\n          ans += 'Y';\n          --a[2];\n        } else if (a[4] > 0) {\n          ans += 'B';\n          --a[4];\n        } else\n          break;\n      } else if (ans[i - 1] == 'Y') {\n        if (a[0] >= a[4] && a[0] > 0) {\n          ans += 'R';\n          --a[0];\n        } else if (a[4] > 0) {\n          ans += 'B';\n          --a[4];\n        } else\n          break;\n      } else {\n        if (a[0] >= a[2] && a[0] > 0) {\n          ans += 'R';\n          --a[0];\n        } else if (a[2] > 0) {\n          ans += 'Y';\n          --a[2];\n        } else\n          break;\n      }\n    }\n    cout << \"Case #\" << T << \": \";\n    if (ans.size() == n && ans[0] != ans[n - 1])\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"David.Liu","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint n, q;\nint e[200], s[200];\nint d[200][200];\ndouble g[200];\n\ndouble f(int p, double k, double v) {\n\n  if (p == n)\n    return 0;\n  if (e[p] >= k && s[p] >= v) {\n    if (g[p] > 0)\n      return g[p];\n    return (g[p] = (double(d[p][p + 1]) \/ double(s[p]) +\n                    f(p + 1, e[p] - d[p][p + 1], s[p])));\n  }\n  if (e[p] <= k && s[p] <= v)\n    return d[p][p + 1] \/ v + f(p + 1, k - d[p][p + 1], v);\n  double ans1 = g[p] > 0 ? g[p]\n                         : (double(d[p][p + 1]) \/ double(s[p]) +\n                            f(p + 1, e[p] - d[p][p + 1], s[p]));\n  g[p] = ans1;\n  double ans2 = -1;\n  if (k >= d[p][p + 1])\n    ans2 = d[p][p + 1] \/ v + f(p + 1, k - d[p][p + 1], v);\n  if (ans2 == -1)\n    return ans1;\n  if (ans1 < ans2)\n    return ans1;\n  return ans2;\n}\n\nint main() {\n  int TT;\n  cin >> TT;\n  for (int T = 1; T <= TT; ++T) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j)\n        cin >> d[i][j];\n    memset(g, 0, sizeof(g));\n    for (int i = 0; i < q; ++i) {\n      int x, y;\n      cin >> x >> y;\n      double ans = f(x, 0, 0);\n      printf(\"Case #%d: %.9lf\\n\", T, ans);\n    }\n  }\n}\n"}
{"target":"disneyp","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\nint s[30];\nlong long MAX;\nbool check(int ss[], int k) {\n  for (int i = 0; i < k - 1; i++) {\n    if (ss[i] < ss[i + 1])\n      return false;\n  }\n  return true;\n}\nvoid store(int tt[], int k) {\n  long long pow = 1;\n  long long ret = 0;\n  for (int i = 0; i < k; i++) {\n    ret = ret + pow * tt[i];\n    pow = pow * 10ll;\n  }\n\n  MAX = max(MAX, ret);\n}\nint main() {\n  freopen(\"B.in\", \"r\", stdin);\n  freopen(\"B.txt\", \"w\", stdout);\n  int t, r;\n  int tt[100];\n  long long n, m;\n  cin >> t;\n  for (int aa = 0; aa < t; aa++) {\n    MAX = 0;\n    cin >> n;\n    m = n;\n    r = 0;\n    while (m > 0) {\n      s[r++] = m % 10;\n      m \/= 10;\n    }\n    int k = r;\n    if (check(s, k)) {\n      store(s, k);\n    }\n    for (int i = 0; i < k; i++) {\n      \/\/ flip at i\n      if (s[i] == 0)\n        continue;\n      for (int j = 0; j < i; j++) {\n        tt[j] = 9;\n      }\n      tt[i] = s[i] - 1;\n      for (int j = i + 1; j < k; j++) {\n        tt[j] = s[j];\n      }\n      if (check(tt, k)) {\n        store(tt, k);\n      }\n    }\n    cout << \"Case #\" << aa + 1 << \": \" << MAX << endl;\n  }\n}\n"}
{"target":"disneyp","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  freopen(\"C.in\", \"r\", stdin);\n  freopen(\"C.txt\", \"w\", stdout);\n  int t, r, rr;\n  long long n, k, m, L, R, nn, total;\n  cin >> t;\n  for (int aa = 0; aa < t; aa++) {\n    r = 0;\n    rr = 0;\n    cin >> n >> k;\n    m = k;\n    nn = n;\n    while (nn > 1) {\n      rr++;\n      nn \/= 2ll;\n    }\n    while (m > 1) {\n      r++;\n      m \/= 2ll;\n    }\n\n    long long poww = 1ll;\n    for (int i = 0; i < r; i++)\n      poww = poww * 2ll;\n    poww = poww * 2ll - 1;\n    \/\/ cout << \"---\" << poww << endl;\n    if (n <= poww) {\n      L = 0;\n      R = 0;\n    } else {\n      long long pp = 1ll;\n      for (int i = 0; i < r; i++)\n        pp = pp * 2ll;\n      long long left = n - pp * 2ll + 1;\n      long long res = left % pp;\n      long long qq = left \/ pp;\n      \/\/ cout << \"++++ \" << r << \" \" << pp << \" \" << left << \" \" << res << \" \"\n      \/\/ << qq << endl;\n      if (res >= k - pp + 1) {\n        long long h = (qq + 1ll) \/ 2ll;\n        L = qq + 1 - h;\n        R = h;\n      } else {\n        L = qq - (qq) \/ 2ll;\n        R = qq \/ 2ll;\n      }\n    }\n\n    \/\/ if(m * 2ll <= n) {\n    \/\/ \tm = m * 2ll;\n    \/\/ \twhile(m * 2ll <= n) {\n    \/\/ \t\tr++;\n    \/\/ \t\tm = m * 2ll;\n    \/\/ \t}\n    \/\/ \tlong long pp = 1ll;\n    \/\/ \tfor(int i=0;i<r;i++) pp = pp * 2ll;\n    \/\/ \tcout << \"====\" << m << \" \" << pp << \" \" << n << endl;\n    \/\/ \tif(m + pp < n) {\n    \/\/ \t\t\/\/ all\n    \/\/ \t\tL = pp * 2ll - 1;\n    \/\/ \t}\n    \/\/ \telse {\n    \/\/ \t\tL = n - m + 1 + pp -1;\n    \/\/ \t}\n    \/\/ } else {\n    \/\/ \tL = 0;\n    \/\/ }\n\n    cout << \"Case #\" << aa + 1 << \": \" << L << \" \" << R << endl;\n  }\n}\n"}
{"target":"disneyp","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nstring s;\nint a[1010];\nvoid flip(int l, int r) {\n  for (int i = l; i <= r; i++) {\n    a[i] = 1 - a[i];\n  }\n}\nint main() {\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A.txt\", \"w\", stdout);\n  int n, k;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s >> k;\n    int cnt = 0;\n    int r = 0;\n    int l = s.size();\n    for (int j = 0; j < l; j++) {\n      if (s[j] == '-')\n        a[j] = 0;\n      else\n        a[j] = 1;\n    }\n    if (s[0] == '-') {\n      cnt++;\n      flip(0, k - 1);\n    }\n    for (int j = 0; j < l - k; j++) {\n      if (a[j] != a[j + 1]) {\n        cnt++;\n        flip(j + 1, j + k);\n      }\n    }\n    bool ch = true;\n\n    for (int j = 0; j < l; j++) {\n      if (a[j] != 1)\n        ch = false;\n    }\n\n    if (ch) {\n      cout << \"Case #\" << i + 1 << \": \" << cnt << endl;\n    } else {\n      cout << \"Case #\" << i + 1 << \": IMPOSSIBLE\" << endl;\n    }\n  }\n}\n"}
{"target":"disneyp","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\nint q[100][100], r[100];\nint L[100][100], R[100][100];\nint tt[100010];\nint bb[100010];\nint ee;\nint e, n, p;\nint ans;\nint cur[1000];\n\nint ceil(int a, int b) { return (a + b - 1) \/ b; }\n\nvoid f(int val) {\n  \/\/ cout << \"val \" << val << endl;\n  \/\/ cout << cur[0] << \" \" << cur[1] <<  \" \" << cur[2] << endl;\n  for (int i = 0; i < n; i++) {\n    while (R[i][cur[i]] < val && cur[i] < p) {\n      \/\/ cout << \"L \" << L[i][cur[i]] << endl;\n      cur[i]++;\n    }\n    if (cur[i] >= p)\n      return;\n    if (L[i][cur[i]] > val)\n      return;\n  }\n\n  \/\/ cout << \"successs \" << val << endl;\n  \/\/ found one\n  for (int i = 0; i < n; i++) {\n    cur[i]++;\n  }\n  \/\/ cout << cur[0] << \" \" << cur[1] <<  \" \" << cur[2] << endl;\n\n  ans++;\n}\n\nint main() {\n  freopen(\"B.in\", \"r\", stdin);\n  freopen(\"B.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int aa = 0; aa < t; aa++) {\n    ee = 0;\n    e = 0;\n    ans = 0;\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cur[i] = 0;\n\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n      }\n    for (int i = 0; i < n; i++)\n      sort(q[i], q[i] + p);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++) {\n        L[i][j] = ceil(10 * q[i][j], 11 * r[i]);\n        R[i][j] = 10 * q[i][j] \/ (9 * r[i]);\n\n        tt[ee++] = R[i][j];\n        tt[ee++] = L[i][j];\n      }\n\n    sort(tt, tt + ee);\n    \/\/ bb[e++] = tt[0];\n    \/\/ for(int i=1;i<ee;i++) {\n    \/\/ \tif(tt[i] == tt[i-1]) continue;\n    \/\/ \tbb[e++] = tt[i];\n    \/\/ }\n\n    \/\/ for(int i=0;i<e;i++) {\n    \/\/ \tf(bb[i]);\n    \/\/ }\n    \/\/\n    for (int i = 0; i < ee; i++) {\n      f(tt[i]);\n    }\n\n    \/\/ for(int i=0;i<n;i++) {\n    \/\/ \tfor(int j=0;j<p;j++) {\n    \/\/ \t\tcout << \"(\" << L[i][j] << \",\" << R[i][j] << \")\" << \" \";\n    \/\/ \t}\n    \/\/ \tcout << endl;\n\n    \/\/ }\n\n    cout << \"Case #\" << aa + 1 << \": \" << ans << endl;\n  }\n}\n"}
{"target":"disneyp","func":"#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\nchar s[100][100];\nchar ans[100][100];\nint r, c;\nvoid f(int rr, int cc) {\n  int L = cc, R = cc, U = rr, D = rr;\n  for (int i = rr - 1; i >= 0; i--) {\n    if (ans[i][cc] == '?')\n      U = i;\n    else\n      break;\n  }\n  for (int i = rr + 1; i < r; i++) {\n    if (ans[i][cc] == '?')\n      D = i;\n    else\n      break;\n  }\n\n  for (int j = cc - 1; j >= 0; j--) {\n    bool ch = true;\n    for (int i = U; i <= D; i++) {\n      if (ans[i][j] == '?' || ans[i][j] == ans[rr][cc]) {\n        continue;\n      }\n      ch = false;\n      break;\n    }\n    if (ch) {\n      L = j;\n    } else {\n      break;\n    }\n  }\n\n  for (int j = cc + 1; j < c; j++) {\n    bool ch = true;\n    for (int i = U; i <= D; i++) {\n      if (ans[i][j] == '?' || ans[i][j] == ans[rr][cc]) {\n        continue;\n      }\n      ch = false;\n      break;\n    }\n    if (ch) {\n      R = j;\n    } else {\n      break;\n    }\n  }\n  \/\/ cout << s[rr][cc] << \" \" << L << R << U << D << endl;\n\n  for (int i = U; i <= D; i++)\n    for (int j = L; j <= R; j++)\n      ans[i][j] = s[rr][cc];\n}\n\nint main() {\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int aa = 0; aa < t; aa++) {\n    cin >> r >> c;\n    for (int i = 0; i < r; i++)\n      scanf(\"%s\", s[i]);\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < c; j++)\n        ans[i][j] = s[i][j];\n\n    for (int j = 0; j < c; j++) {\n      for (int i = 0; i < r; i++) {\n        if (s[i][j] == '?')\n          continue;\n        f(i, j);\n      }\n    }\n\n    cout << \"Case #\" << aa + 1 << \":\" << endl;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++)\n        cout << ans[i][j];\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"disneyp","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\ndouble k[1010], s[1010];\ndouble eps = 1.0e-6;\nint n;\ndouble d;\nbool check(double sp) {\n  for (int i = 0; i < n; i++) {\n    if (sp <= s[i])\n      continue;\n    double dif = sp - s[i];\n    if (k[i] \/ dif * sp > d)\n      continue;\n    return false;\n  }\n  return true;\n}\n\ndouble bs(double l, double r) {\n  \/\/ cout << l << \" \" << r << endl;\n  printf(\"%.6lf %.6lf\\n\", l, r);\n  if (r - l <= eps)\n    return l;\n  double mid = (double)(l + r) \/ 2.0;\n  if (check(mid)) {\n    return bs(mid, r);\n  } else\n    return bs(l, mid);\n}\n\nint main() {\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A.txt\", \"w\", stdout);\n  int tt;\n\n  double ans;\n  cin >> tt;\n  for (int aa = 0; aa < tt; aa++) {\n    cin >> d >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> k[i] >> s[i];\n    }\n\n    \/\/ ans = bs(0.0,1000000000.0 * 1000000000.0);\n    double m = 0.0;\n    for (int i = 0; i < n; i++) {\n      m = max(m, (d - k[i]) \/ s[i]);\n    }\n    ans = d \/ m;\n    cout << \"Case #\" << aa + 1 << \": \";\n\n    printf(\"%.6lf\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"disneyp","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\nint n;\nstring s;\nint a[100];\nstring ttt[3];\nint R, RY, Y, YB, B, BR;\nstring ans;\nstring build() {\n  for (int i = 0; i < 3; i++) {\n    for (int j = i; j < 3; j++) {\n      if (a[i] < a[j]) {\n        swap(a[i], a[j]);\n        swap(ttt[i], ttt[j]);\n      }\n    }\n  }\n\n  \/\/ a[0] = max\n  \/\/ a[0] <= a[1] + a[2]\n  string fst = ttt[0] + ttt[1];\n  string snd = ttt[0] + ttt[1] + ttt[2];\n  string thr = ttt[0] + ttt[2];\n  \/\/ cout << fst << \" \" << snd << \" \" << thr << endl;\n  string ret = \"\";\n  for (int i = 0; i < a[0] - a[2]; i++) {\n    ret.append(fst);\n  }\n  for (int i = 0; i < a[1] + a[2] - a[0]; i++) {\n    ret.append(snd);\n  }\n  for (int i = 0; i < a[0] - a[1]; i++) {\n    ret.append(thr);\n  }\n  \/\/ cout << \"ret\" << ret << endl;\n  return ret;\n}\n\nint main() {\n  freopen(\"B.in\", \"r\", stdin);\n  freopen(\"B.txt\", \"w\", stdout);\n  \/\/ ttt[0] = \"R\";\n  \/\/ ttt[1] = \"Y\";\n  \/\/ ttt[2] = \"B\";\n  int tt;\n  cin >> tt;\n  for (int aa = 0; aa < tt; aa++) {\n    ttt[0] = \"R\";\n    ttt[1] = \"Y\";\n    ttt[2] = \"B\";\n    cin >> n;\n    cin >> R >> RY >> Y >> YB >> B >> BR;\n\n    if (RY > B || YB > R || BR > Y) {\n      cout << \"Case #\" << aa + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    int rr = R - YB;\n    int yy = Y - BR;\n    int bb = B - RY;\n    if (rr > yy + bb || yy > bb + rr || bb > rr + yy) {\n      cout << \"Case #\" << aa + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    a[0] = rr;\n    a[1] = yy;\n    a[2] = bb;\n\n    \/\/ cout << endl;\n    \/\/ cout << a[0] << \" \" << a[1] << \" \" << a[2]  << endl;\n    s = build();\n    \/\/ cout << s << endl;\n\n    ans.clear();\n    string tmp;\n    rr = YB;\n    yy = BR;\n    bb = RY;\n    int k = s.size();\n    for (int i = 0; i < k; i++) {\n      tmp = s[i];\n      ans.append(tmp);\n      if (s[i] == 'R') {\n        if (rr > 0) {\n          tmp = \"GR\";\n          ans.append(tmp);\n          rr--;\n        }\n      } else if (s[i] == 'Y') {\n        if (yy > 0) {\n          tmp = \"VY\";\n          ans.append(tmp);\n          yy--;\n        }\n\n      } else if (s[i] == 'B') {\n        if (bb > 0) {\n          tmp = \"OB\";\n          ans.append(tmp);\n          bb--;\n        }\n      }\n    }\n\n    while (rr > 0) {\n      ans.append(\"GR\");\n      rr--;\n    }\n\n    while (yy > 0) {\n      ans.append(\"VY\");\n      yy--;\n    }\n\n    while (bb > 0) {\n      ans.append(\"OB\");\n      bb--;\n    }\n\n    cout << \"Case #\" << aa + 1 << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"disneyp","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\nint n, q;\ndouble e[1010], s[1010];\ndouble d[1010][1010];\ndouble D[1010][1010];\nint u[1001], v[1010];\ndouble T[1010][1001];\ndouble mic[1010];\nbool edge[1010][1010];\n\ndouble ans;\n\nvoid build_easy() {\n  for (int i = 1; i <= n; i++) {\n    for (int j = i + 1; j <= n; j++) {\n      if (j == i + 1) {\n        D[i][j] = d[i][j];\n      } else {\n        D[i][j] = D[i][j - 1] + d[j - 1][j];\n      }\n    }\n  }\n\n  \/\/ have D[i][j]\n\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      edge[i][j] = false;\n  for (int i = 1; i <= n; i++) {\n    for (int j = i + 1; j <= n; j++) {\n      if (e[i] >= D[i][j]) {\n        T[i][j] = D[i][j] \/ s[i];\n        edge[i][j] = true;\n      }\n    }\n  }\n\n  \/\/ mic\n  mic[1] = 0.0;\n  for (int i = 2; i <= n; i++)\n    mic[i] = -1.0;\n  for (int i = 2; i <= n; i++) {\n    for (int j = 1; j < i; j++) {\n      if (!edge[j][i])\n        continue;\n      if (mic[i] < 0.0 || mic[i] > mic[j] + T[j][i]) {\n        mic[i] = mic[j] + T[j][i];\n      }\n    }\n  }\n  ans = mic[n];\n}\nint main() {\n  freopen(\"C.in\", \"r\", stdin);\n  freopen(\"C.txt\", \"w\", stdout);\n  int tt;\n  cin >> tt;\n  for (int aa = 0; aa < tt; aa++) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++)\n        scanf(\"%lf\", &d[i][j]);\n    }\n    for (int i = 0; i < q; i++) {\n      cin >> u[i] >> v[i];\n    }\n\n    build_easy();\n\n    cout << \"Case #\" << aa + 1 << \": \";\n    printf(\"%.6lf\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int q;\n  char s[20];\n  scanf(\"%d\", &q);\n  for (int t = 1; t <= q; ++t) {\n    scanf(\"%s\", s + 1);\n    while (1) {\n      bool check = 1;\n      for (int i = 1; i < strlen(s + 1); ++i)\n        if (s[i] > s[i + 1])\n          check = 0;\n      if (check)\n        break;\n      for (int i = strlen(s + 1) - 1; i; i--) {\n        if (s[i] > s[i + 1]) {\n          s[i]--;\n          for (int j = i + 1; j <= strlen(s + 1); ++j)\n            s[j] = '9';\n        }\n      }\n    }\n    long long ans = 0;\n    for (int i = 1; i <= strlen(s + 1); ++i)\n      ans = ans * 10 + (s[i] - '0');\n    printf(\"Case #%d: %lld\\n\", t, ans);\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstruct compare {\n  bool operator()(const pair<int, int> &lhs, const pair<int, int> &rhs) const {\n    return lhs.first > rhs.first;\n  }\n};\nmultiset<pair<int, int>, compare> S;\nint q, n, k;\n\nint main() {\n\n  scanf(\"%d\", &q);\n  for (int t = 1; t <= q; ++t) {\n    scanf(\"%d %d\", &n, &k);\n    S.clear();\n    S.insert(make_pair(n, 1));\n    int times = log(k) \/ log(2);\n    int l = 0;\n    int r = n + 1;\n    int m = n;\n    int Pow = 1;\n    int cnt = 0;\n    int vmin = 0;\n    int vmax = 0;\n    for (int kk = 1; kk <= times; kk++) {\n      int xx = 0;\n      int yy = 0;\n      for (int j = 1; j <= Pow; j += yy) {\n        xx = (*S.begin()).first;\n        yy = (*S.begin()).second;\n        S.erase(S.begin());\n        xx--;\n        k -= yy;\n\n        if (xx == 0) {\n          vmin = vmax = 0;\n          continue;\n        }\n\n        if (xx & 1) {\n          S.insert(make_pair(xx \/ 2, yy));\n          S.insert(make_pair(xx - (xx \/ 2), yy));\n          vmax = max(xx \/ 2, xx - (xx \/ 2));\n          vmin = min(xx \/ 2, xx - (xx \/ 2));\n        } else {\n          S.insert(make_pair(xx \/ 2, yy * 2));\n          vmin = vmax = xx \/ 2;\n        }\n      }\n      Pow *= 2;\n    }\n    while (k) {\n      int xx = (*S.begin()).first;\n      int yy = (*S.begin()).second;\n      if (yy <= k) {\n        k -= yy;\n        xx--;\n        S.erase(S.begin());\n        if (xx == 0) {\n          vmin = vmax = 0;\n          continue;\n        }\n        if (xx & 1) {\n          S.insert(make_pair(xx \/ 2, yy));\n          S.insert(make_pair(xx - (xx \/ 2), yy));\n          vmax = max(xx \/ 2, xx - (xx \/ 2));\n          vmin = min(xx \/ 2, xx - (xx \/ 2));\n        } else {\n          S.insert(make_pair(xx \/ 2, yy * 2));\n          vmax = vmin = xx \/ 2;\n        }\n      } else {\n        S.erase(S.begin());\n        S.insert(make_pair(xx, yy - k));\n        xx--;\n        if (xx == 0) {\n          vmin = vmax = 0;\n          continue;\n        }\n        if (xx & 1) {\n          S.insert(make_pair(xx \/ 2, k));\n          S.insert(make_pair(xx - (xx \/ 2), k));\n\n          vmax = max(xx \/ 2, xx - (xx \/ 2));\n          vmin = min(xx \/ 2, xx - (xx \/ 2));\n        } else {\n          S.insert(make_pair(xx \/ 2, k * 2));\n          vmax = vmin = xx \/ 2;\n        }\n        k = 0;\n      }\n    }\n\n    printf(\"Case #%d: %d %d\\n\", t, vmax, max(0, vmin));\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int q, n, k;\n  char s[10001];\n  scanf(\"%d\", &q);\n  for (int t = 1; t <= q; ++t) {\n    scanf(\"%s %d\", s + 1, &k);\n    n = strlen(s + 1);\n    int slip = 0;\n    for (int i = 1; i <= n - k + 1; ++i)\n      if (s[i] == '-') {\n        slip++;\n        for (int j = i, cnt = 1; cnt <= k && j <= n; cnt++, j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n      }\n    bool ok = 1;\n    for (int i = n - k + 2; i <= n; ++i)\n      if (s[i] == '-')\n        ok = 0;\n    printf(\"Case #%d: \", t);\n    if (!ok)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", slip);\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint query, n, p;\nint r[1000];\nint vmin[1000][1000], vmax[1000][1000];\nint ans;\nint xx[100];\nbool mark[100];\n\nconst double EPS = (double)(1e-9);\n\nbool check(int i, int j, int u, int v) {\n  if (vmax[i][j] == -1 || vmax[u][v] == -1)\n    return 0;\n  if (vmax[i][j] >= vmin[u][v] && vmax[i][j] <= vmax[u][v])\n    return 1;\n  if (vmax[u][v] >= vmin[i][j] && vmax[u][v] <= vmax[i][j])\n    return 1;\n  return 0;\n}\n\nvoid tryy(int i) {\n  if (i == p + 1) {\n    int temp = 0;\n    for (int j = 1; j <= p; j++)\n      if (check(1, xx[j], 2, j))\n        temp++;\n    ans = max(ans, temp);\n    return;\n  }\n  for (int j = 1; j <= p; ++j)\n    if (!mark[j]) {\n      mark[j] = 1;\n      xx[i] = j;\n      tryy(i + 1);\n      mark[j] = 0;\n    }\n}\n\nvoid solve1() {\n  if (n == 1) {\n    ans = 0;\n    for (int i = 1; i <= p; i++)\n      if (vmin[1][i] != -1)\n        ans++;\n    printf(\"%d\\n\", ans);\n  } else if (n == 2) {\n    ans = 0;\n    tryy(1);\n    printf(\"%d\\n\", ans);\n  }\n}\n\nint getmin(int x, int y) {\n  int mn = (int)(((double)((double)(10 * x) \/ 11.0)) + 0.5);\n  if (mn == 0)\n    return 0;\n  mn -= 1;\n  mn \/= y;\n  mn++;\n  return mn;\n}\n\nint getmax(int x, int y) {\n  int mn = (int)((10 * (double)x) \/ 9);\n  return mn \/ y;\n}\n\nint main() {\n\n  scanf(\"%d\", &query);\n  for (int t = 1; t <= query; ++t) {\n    scanf(\"%d %d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &r[i]);\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; ++j) {\n        int x;\n        scanf(\"%d\", &x);\n        vmin[i][j] = getmin(x, r[i]);\n        vmax[i][j] = getmax(x, r[i]);\n        if (vmin[i][j] > vmax[i][j])\n          vmin[i][j] = vmax[i][j] = -1;\n      }\n    }\n\n    printf(\"Case #%d: \", t);\n    solve1();\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint n, m;\nchar a[100][100];\nint query;\nvector<pair<int, int>> v[400];\n\nint main() {\n\n  scanf(\"%d\", &query);\n  for (int t = 1; t <= query; ++t) {\n    scanf(\"%d %d\", &n, &m);\n\n    for (int i = 0; i < n; ++i)\n      scanf(\"%s\", a[i]);\n\n    for (int i = 0; i < n; ++i) {\n      for (int j = 1; j < m; j++) {\n        if (a[i][j] == '?' && a[i][j - 1] != '?')\n          a[i][j] = a[i][j - 1];\n      }\n      for (int j = m - 2; j >= 0; j--) {\n        if (a[i][j] == '?' && a[i][j + 1] != '?')\n          a[i][j] = a[i][j + 1];\n      }\n    }\n    for (int j = 0; j < m; j++) {\n      for (int i = 1; i < n; ++i) {\n        if (a[i][j] == '?' && a[i - 1][j] != '?')\n          a[i][j] = a[i - 1][j];\n      }\n      for (int i = n - 2; i >= 0; i--) {\n        if (a[i][j] == '?' && a[i + 1][j] != '?')\n          a[i][j] = a[i + 1][j];\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j)\n        printf(\"%c\", a[i][j]);\n      printf(\"\\n\");\n    }\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nconst int N = 1000;\ntypedef long long ll;\n\nusing namespace std;\n\nconst double EPS = (double)(1e-9);\n\nint main() {\n  int query;\n  scanf(\"%d\", &query);\n  int n;\n  int D;\n  int x, y;\n  for (int t = 1; t <= query; t++) {\n    double vmax = 0.0;\n    scanf(\"%d %d\", &D, &n);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d %d\", &x, &y);\n      int kk = D - x;\n      double temp = (double)kk \/ (double)y;\n      if (temp - vmax > -EPS) {\n        vmax = temp;\n      }\n    }\n    double v = (double)D \/ vmax;\n    printf(\"Case #%d: %0.6f\\n\", t, v);\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nconst int N = 1000;\ntypedef long long ll;\n\nusing namespace std;\n\nvector<int> v;\nint n;\nint a[10];\n\nint getmax(int x, int y, int z) { return max(x, max(y, z)); }\n\nint main() {\n  int query;\n  scanf(\"%d\", &query);\n  for (int t = 1; t <= query; t++) {\n    v.clear();\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= 6; ++i)\n      scanf(\"%d\", &a[i]);\n    int x = a[1];\n    int y = a[3];\n    int z = a[5];\n    int k, k1, k2;\n    printf(\"Case #%d: \", t);\n\n    int vmax = getmax(x, y, z);\n    if (x == vmax) {\n      k = 1, k1 = 3, k2 = 5;\n    } else if (y = vmax) {\n      k = 3, k1 = 1, k2 = 5;\n    } else if (z == vmax)\n\n    {\n      k = 5, k1 = 1, k2 = 3;\n    }\n    for (int i = 1; i <= a[k]; ++i) {\n      v.push_back(k);\n      if (i <= a[k1])\n        v.push_back(k1);\n      if (i >= a[k] - a[k2] + 1)\n        v.push_back(k2);\n    }\n    bool flag = 0;\n\n    if (v[0] == v[(int)v.size() - 1]) {\n      flag = 1;\n    }\n    for (int i = 1; i < v.size(); i++)\n      if (v[i] == v[i - 1]) {\n        flag = 1;\n        break;\n      }\n    if (flag) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] == 1)\n        printf(\"R\");\n      else if (v[i] == 3)\n        printf(\"Y\");\n      else\n        printf(\"B\");\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"dothanhlam97","func":"#include <bits\/stdc++.h>\n\nconst int N = 1000;\ntypedef long long ll;\n\nusing namespace std;\n\ndouble dp[N];\nll sum[N], f[N], d[N][N];\nint q, n;\nll w[N], s[N];\n\nvoid solve() {\n  for (int i = 1; i <= n; i++)\n    dp[i] = 1000000000000009;\n  f[1] = 0;\n  for (int i = 2; i <= n; i++)\n    f[i] = f[i - 1] + d[i - 1][i];\n  dp[1] = 0.0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = i + 1; j <= n; j++) {\n      int sum = f[j] - f[i];\n      if (sum > w[i])\n        break;\n      dp[j] = min(dp[j], dp[i] + (double)sum \/ (double)s[i]);\n    }\n  }\n}\n\nint main() {\n  int query;\n  scanf(\"%d\", &query);\n  for (int t = 1; t <= query; t++) {\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d %d\", &w[i], &s[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        scanf(\"%d\", &d[i][j]);\n    int u, v;\n    for (int i = 1; i <= q; i++) {\n      scanf(\"%d %d\", &u, &v);\n      solve();\n    }\n    printf(\"Case #%d: %0.9lf\\n\", t, dp[n]);\n  }\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"B-small-attempt0.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    string s;\n    int n;\n    cin >> s;\n    n = ((int)(s).size());\n    string res = string(n - 1, '9');\n    for (int i = 1; i < n; i++) {\n      if (s[i] < s[i - 1]) {\n        s[i - 1]--;\n        int idx = i;\n        for (int j = i - 2; j >= 0; j--) {\n          if (s[j] > s[j + 1]) {\n            idx = j + 1;\n            s[j]--;\n          } else {\n            break;\n          }\n        }\n        for (int j = idx; j < n; j++) {\n          s[j] = '9';\n        }\n        break;\n      }\n    }\n    if (s[0] != '0') {\n      res = s;\n    }\n    cout << \"Case #\" << tt++ << \": \" << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nint calcLevel(ll x) {\n  int res = 0;\n  while (x) {\n    x >>= 1;\n    res++;\n  }\n  return res - 1;\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"C-small-1-attempt2.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    ll n, k, mn, mx;\n    cin >> n >> k;\n    int lvl = calcLevel(k);\n    for (int i = 0; i < lvl; i++) {\n      mn = (n - 1) >> 1, mx = (n - 1) - mn;\n      if (k & (1LL << i)) {\n        n = mn;\n      } else {\n        n = mx;\n      }\n    }\n    mn = (n - 1) >> 1, mx = (n - 1) - mn;\n    cout << \"Case #\" << tt++ << \": \" << mx << \" \" << mn << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"A-small-attempt0.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    string s;\n    int n, k, res = 0;\n    bool ok = 1;\n    cin >> s >> k;\n    n = ((int)(s).size());\n    for (int i = 0; i <= n - k; i++) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; j++) {\n          s[i + j] = (s[i + j] == '+') ? '-' : '+';\n        }\n        res++;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (s[i] == '-') {\n        ok = 0;\n        break;\n      }\n    }\n    if (ok)\n      cout << \"Case #\" << tt++ << \": \" << res << \"\\n\";\n    else\n      cout << \"Case #\" << tt++ << \": \"\n           << \"IMPOSSIBLE\"\n           << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nconst int N = 55;\nconst ll M = 1000000;\n\nint n, p;\nll r[N];\nll a[N][N];\n\nint solve1() {\n  int res = 0;\n  for (int i = 0; i < p; i++) {\n    ll st = 1, en = M;\n    while (st < en) {\n      ll mid = st + (en - st) \/ 2;\n      ll v = mid * r[0];\n      ll v90 = v * 90;\n      ll v110 = v * 110;\n      if (v110 < a[0][i])\n        st = mid + 1;\n      else\n        en = mid;\n    }\n    ll v = st * r[0];\n    ll v90 = v * 90;\n    ll v110 = v * 110;\n    if (a[0][i] >= v90 && a[0][i] <= v110) {\n      res++;\n    }\n  }\n  return res;\n}\n\nbool valid(ll p0, ll p1) {\n  ll st = 1, en = M;\n  while (st < en) {\n    ll mid = st + (en - st) \/ 2;\n    ll v0 = mid * r[0];\n    ll v1 = mid * r[1];\n    ll v090 = v0 * 90;\n    ll v0110 = v0 * 110;\n    ll v190 = v1 * 90;\n    ll v1110 = v1 * 110;\n    if (v0110 < p0 && v1110 < p1) \/\/ not sure\n      st = mid + 1;\n    else\n      en = mid;\n  }\n  for (ll mid = st;; mid++) {\n    ll v0 = mid * r[0];\n    ll v1 = mid * r[1];\n    ll v090 = v0 * 90;\n    ll v0110 = v0 * 110;\n    ll v190 = v1 * 90;\n    ll v1110 = v1 * 110;\n    if (p0 >= v090 && p0 <= v0110 && p1 >= v190 && p1 <= v1110) {\n      return 1;\n    }\n    if (v090 > p0 || v190 > p1)\n      break;\n  }\n  return 0;\n}\n\nint dp[1 << 8][1 << 8];\nint vis[1 << 8][1 << 8];\nint vid;\n\nint calc(int msk0, int msk1) {\n  int &ret = dp[msk0][msk1];\n  if (vis[msk0][msk1] == vid)\n    return ret;\n  vis[msk0][msk1] = vid;\n  ret = 0;\n  for (int i0 = 0; i0 < p; i0++) {\n    if (!(msk0 & (1 << i0))) {\n      for (int i1 = 0; i1 < p; i1++) {\n        if (!(msk1 & (1 << i1))) {\n          if (valid(a[0][i0], a[1][i1])) {\n            ret = max(ret, 1 + calc(msk0 | (1 << i0), msk1 | (1 << i1)));\n          }\n        }\n      }\n    }\n  }\n  return ret;\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"B-small-attempt3.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n >> p;\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> a[i][j];\n        a[i][j] *= 100;\n      }\n    }\n    int res = 0;\n    if (n == 1)\n      res = solve1();\n    else {\n      vid++;\n      res = calc(0, 0);\n    }\n    cout << \"Case #\" << tt++ << \": \" << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nconst int N = 30;\n\nint n, m;\nchar a[N][N];\n\nvoid solve() {\n  \/\/  each char will take the whole row\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (a[i][j] != '?') {\n        for (int k = j - 1; k >= 0; k--) {\n          if (a[i][k] == '?') {\n            a[i][k] = a[i][j];\n          } else {\n            break;\n          }\n        }\n        for (int k = j + 1; k < m; k++) {\n          if (a[i][k] == '?') {\n            a[i][k] = a[i][j];\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (a[i][0] == '?') {\n      for (int k = i - 1; k >= 0; k--) {\n        if (a[k][0] != '?') {\n          for (int j = 0; j < m; j++) {\n            a[i][j] = a[k][j];\n          }\n          break;\n        }\n      }\n      if (a[i][0] == '?') {\n        for (int k = i + 1; k < n; k++) {\n          if (a[k][0] != '?') {\n            for (int j = 0; j < m; j++) {\n              a[i][j] = a[k][j];\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"A-small-attempt1.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n >> m;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    solve();\n    cout << \"Case #\" << tt++ << \":\"\n         << \"\\n\";\n    for (int i = 0; i < n; i++) {\n      cout << a[i] << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nconst int N = 1003;\n\nint n, d;\nint k[N], s[N];\n\ndouble dist(int v1, int d1, int v2, int d2) {\n  if (v1 <= v2) {\n    return (double)d1 \/ v1;\n  }\n  double st = 0, size = OO;\n  for (; size > eps; size *= 0.5) {\n    double t = st + size;\n    if (v1 * t >= v2 * t)\n      st += size;\n  }\n  double rem = d - st * v1;\n  return st + rem \/ v2;\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"A-small-attempt1.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    cin >> d >> n;\n    for (int i = 0; i < n; i++)\n      cin >> k[i] >> s[i];\n    s[n] = OO;\n    double res = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      res = max(res, double(d - k[i]) \/ s[i]);\n    }\n    cout << fixed << setprecision(6);\n    cout << \"Case #\" << tt++ << \": \" << d \/ res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<int, int> pii;\n\nconst int OO = (int)2e9;\nconst double eps = 1e-9;\n\nconst int N = 1003;\n\nint n;\nint c[6];\nstring col = \"ROYGBV\";\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"B-small-attempt0.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    bool ok = 1;\n    for (int i = 0; i < 6; i++) {\n      cin >> c[i];\n      if (c[i] * 2 > n) {\n        ok = 0;\n      }\n    }\n    int prv = -1;\n    string res;\n    for (int i = 0; i < n; i++) {\n      int mx = 0, idx = -1;\n      for (int j = 0; j < 6; j += 2) {\n        if (c[j] >= mx && j != prv) {\n          mx = c[j], idx = j;\n        }\n      }\n      res += col[idx];\n      prv = idx;\n      c[idx]--;\n    }\n    if (!ok)\n      cout << \"Case #\" << tt++ << \": \"\n           << \"IMPOSSIBLE\"\n           << \"\\n\";\n    else\n      cout << \"Case #\" << tt++ << \": \" << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"eagle93","func":"#include <bits\/stdc++.h>\n#include <ext\/hash_map>\n#include <ext\/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef pair<ll, ll> pii;\n\nconst ll OO = 1LL << 60;\nconst double eps = 1e-9;\n\nconst int N = 101;\n\nint n, q;\nll E[N], S[N];\nll a[N][N];\nint st, en;\ndouble timeHorse[N][N];\nll cntHorse[N][N];\n\nvoid dij(int src) {\n  priority_queue<pair<pii, ll>, vector<pair<pii, ll>>, greater<pair<pii, ll>>>\n      Q;\n  Q.push(make_pair(make_pair(0LL, 0LL), src));\n  timeHorse[src][src] = 0;\n  while (Q.size()) {\n    ll cur = Q.top().second;\n    ll cnt_till_now = Q.top().first.second;\n    ll dist_till_now = Q.top().first.first;\n    double total_time_now = double(dist_till_now) \/ S[src];\n    Q.pop();\n    if (fabs(total_time_now - timeHorse[src][cur]) > eps)\n      continue;\n    for (ll i = 0; i < n; i++) {\n      if (i == src || a[cur][i] == -1)\n        continue;\n      ll new_dist = dist_till_now + a[cur][i];\n      if (new_dist > E[src])\n        continue;\n      double new_time = double(new_dist) \/ S[src];\n      if (timeHorse[src][i] > new_time) {\n        timeHorse[src][i] = new_time;\n        cntHorse[src][i] = cnt_till_now + 1;\n        Q.push(make_pair(make_pair(new_dist, cnt_till_now + 1), i));\n      }\n    }\n  }\n}\n\ndouble dp[N][N];\nint vis[N][N];\nint vid;\n\ndouble calc(int cnt, int cur) {\n  if (cur == en)\n    return 0;\n  double &ret = dp[cnt][cur];\n  if (vis[cnt][cur] == vid)\n    return ret;\n  vis[cnt][cur] = vid;\n  ret = OO;\n  for (int i = 0; i < n; i++) {\n    if (cnt + cntHorse[cur][i] <= n) {\n      ret = min(ret, timeHorse[cur][i] + calc(cnt + cntHorse[cur][i], i));\n    }\n  }\n  return ret;\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  \/\/#ifndef ONLINE_JUDGE\n  freopen(\"C-small-attempt1.in\", \"rt\", stdin);\n  freopen(\"out.txt\", \"wt\", stdout);\n  \/\/#endif\n  int t, tt = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n >> q;\n    for (int i = 0; i < n; i++)\n      cin >> E[i] >> S[i];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> a[i][j];\n        timeHorse[i][j] = OO;\n        cntHorse[i][j] = OO;\n      }\n    }\n    for (int i = 0; i < n; i++)\n      dij(i);\n    cout << \"Case #\" << tt++ << \":\";\n    cout << fixed << setprecision(6);\n    for (int i = 0; i < q; i++) {\n      cin >> st >> en;\n      st--, en--;\n      vid++;\n      double res = calc(0, st);\n      cout << \" \" << res;\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Efgen","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\nint main() {\n  \/\/ freopen(\"input.txt\", \"r\", stdin);\n  \/\/ freopen(\"output.txt\", \"w\", stdout);\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    string s;\n    cin >> s;\n    int n = s.size();\n    int pos = n;\n    for (int i = 1; i < n; i++) {\n      if (s[i] < s[i - 1]) {\n        pos = i - 1;\n        while (pos > 0 && s[pos - 1] == s[pos])\n          pos--;\n        if (s[pos] == '1') {\n          s = \"\";\n          for (int j = 0; j < (int)(n - 1); j++)\n            s += \"9\";\n        } else {\n          s[pos]--;\n          for (int j = pos + 1; j < n; j++)\n            s[j] = '9';\n        }\n        break;\n      }\n    }\n    cout << s << endl;\n  }\n}\n"}
{"target":"Efgen","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\nvoid add(queue<pair<ll, ll>> &a, ll val, ll cnt) {\n  if (!a.empty() && a.back().first == val)\n    a.back().second += cnt;\n  else {\n    a.push({val, cnt});\n  }\n}\n\nvoid solveTask() {\n  ll n, k;\n  cin >> n >> k;\n  queue<pair<ll, ll>> a;\n\n  add(a, n, 1);\n  ll L, R;\n  while (k > 0) {\n    auto cur = a.front();\n    a.pop();\n    ll val = cur.first;\n    ll cnt = cur.second;\n    if (val & 1) {\n      L = R = (val - 1) \/ 2;\n    } else {\n      L = val \/ 2;\n      R = val \/ 2 - 1;\n    }\n    add(a, L, cnt);\n    add(a, R, cnt);\n    k -= cnt;\n  }\n  cout << L << \" \" << R;\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTask();\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\nint main() {\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.size();\n    vector<bool> a(n);\n    for (int i = 0; i < (int)(n); i++)\n      a[i] = s[i] == '+';\n    int res = 0;\n    for (int i = 0; i < (int)(n - k + 1); i++) {\n      if (!a[i]) {\n        res++;\n        for (int j = 0; j < (int)(k); j++) {\n          a[i + j] = !a[i + j];\n        }\n      }\n    }\n    bool ok = true;\n    for (int i = 0; i < (int)(k); i++)\n      ok &= a[n - i - 1];\n    if (ok)\n      cout << res;\n    else\n      cout << \"IMPOSSIBLE\";\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"\/\/ @formatter:off\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\ntemplate <class T> inline T sqr(T x) { return x * x; }\ntemplate <class T> inline T parse(const string &s) {\n  T x;\n  stringstream ss(s);\n  ss >> x;\n  return x;\n}\nint gcd(int a, int b) { return a ? gcd(b % a, a) : b; }\nll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }\nll powmod(ll a, ll p, ll m) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = r * a % m;\n    p >>= 1;\n    a = a * a % m;\n  }\n  return r;\n}\n\/\/ @formatter:on\n\nint g1(int x, int r) {\n  x *= 10;\n  r *= 11;\n  return (x + r - 1) \/ r;\n}\n\nint g2(int x, int r) {\n  x *= 10;\n  r *= 9;\n  return x \/ r;\n}\n\nbool intresect(int x1, int y1, int x2, int y2) {\n  if (x1 > x2) {\n    swap(x1, x2);\n    swap(y1, y2);\n  }\n  if (x1 == x2 && x1 == 0)\n    return false;\n  return x2 <= y1;\n}\n\nvoid solveTest() {\n  int n, m;\n  cin >> n >> m;\n  vi r(n);\n  for (int i = 0; i < (n); ++i)\n    cin >> r[i];\n  vector<vector<pii>> a(n, vector<pii>(m));\n  for (int i = 0; i < (n); ++i) {\n    for (int j = 0; j < (m); ++j) {\n      int x;\n      cin >> x;\n      int x1 = g1(x, r[i]);\n      int x2 = g2(x, r[i]);\n      if (x1 <= x2) {\n        a[i][j].first = x1;\n        a[i][j].second = x2;\n      }\n    }\n  }\n  int res = 0;\n  if (n == 2) {\n    sort(a[1].begin(), a[1].end());\n    do {\n      int cnt = 0;\n      for (int i = 0; i < (m); ++i) {\n        if (intresect(a[0][i].first, a[0][i].second, a[1][i].first,\n                      a[1][i].second))\n          cnt++;\n      }\n      if (cnt > res)\n        res = cnt;\n    } while (next_permutation(a[1].begin(), a[1].end()));\n  } else {\n    if (n == 1) {\n      for (int i = 0; i < (m); ++i) {\n        if (a[0][i].first || a[0][i].second)\n          res++;\n      }\n    }\n  }\n\n  cout << res;\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTest();\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"\/\/ @formatter:off\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\ntemplate <class T> inline T sqr(T x) { return x * x; }\ntemplate <class T> inline T parse(const string &s) {\n  T x;\n  stringstream ss(s);\n  ss >> x;\n  return x;\n}\nint gcd(int a, int b) { return a ? gcd(b % a, a) : b; }\nll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }\nll powmod(ll a, ll p, ll m) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = r * a % m;\n    p >>= 1;\n    a = a * a % m;\n  }\n  return r;\n}\n\/\/ @formatter:on\n\nvoid solveTest() {\n  int n, m;\n  cin >> n >> m;\n  vector<string> a(n);\n  vector<bool> f(n);\n  for (int i = 0; i < (n); ++i) {\n    cin >> a[i];\n  }\n  string sv = \"\";\n  for (int i = 0; i < (m); ++i)\n    sv += \"?\";\n  for (int i = 0; i < (n); ++i) {\n    if (a[i] == sv) {\n      f[i] = true;\n      continue;\n    }\n    int p = 0;\n    for (int j = 0; j < (m); ++j) {\n      if (a[i][j] == '?') {\n        if (p == 0) {\n          while (p < m && a[i][p] == '?')\n            p++;\n        }\n      } else {\n        p = j;\n      }\n      a[i][j] = a[i][p];\n    }\n  }\n  int p = 0;\n  for (int i = 0; i < (n); ++i) {\n    if (f[i]) {\n      if (p == 0) {\n        while (p < n && f[p])\n          p++;\n      }\n    } else {\n      p = i;\n    }\n    a[i] = a[p];\n  }\n  \/\/ cout << endl;\n  for (int i = 0; i < (n); ++i) {\n    cout << endl << a[i];\n  }\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTest();\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"\/\/ @formatter:off\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\ntemplate <class T> inline T sqr(T x) { return x * x; }\ntemplate <class T> inline T parse(const string &s) {\n  T x;\n  stringstream ss(s);\n  ss >> x;\n  return x;\n}\nint gcd(int a, int b) { return a ? gcd(b % a, a) : b; }\nll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }\nll powmod(ll a, ll p, ll m) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = r * a % m;\n    p >>= 1;\n    a = a * a % m;\n  }\n  return r;\n}\n\/\/ @formatter:on\n\nvoid solveTest() {\n  int d, n;\n  cin >> d >> n;\n  vi pos(n);\n  vi v(n);\n  for (int i = 0; i < (n); ++i) {\n    cin >> pos[i] >> v[i];\n  }\n  double l = 0, r = 1e+14;\n  for (int it = 0; it < (200); ++it) {\n    double mv = (l + r) \/ 2;\n    bool ok = true;\n    for (int i = 0; i < (n); ++i) {\n\n      if (mv > v[i]) {\n        double t = pos[i] \/ (mv - v[i]);\n        if (t * mv < d) {\n          ok = false;\n          break;\n        }\n      }\n    }\n    if (ok)\n      l = mv;\n    else\n      r = mv;\n  }\n  printf(\"%0.10lf\", l);\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTest();\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"\/\/ @formatter:off\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\ntemplate <class T> inline T sqr(T x) { return x * x; }\ntemplate <class T> inline T parse(const string &s) {\n  T x;\n  stringstream ss(s);\n  ss >> x;\n  return x;\n}\nint gcd(int a, int b) { return a ? gcd(b % a, a) : b; }\nll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }\nll powmod(ll a, ll p, ll m) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = r * a % m;\n    p >>= 1;\n    a = a * a % m;\n  }\n  return r;\n}\n\/\/ @formatter:on\n\nvoid solveTest() {\n  int n, r, o, y, g, b, v;\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  vector<pair<int, char>> a(3);\n  a[0] = {r, 'R'};\n  a[1] = {y, 'Y'};\n  a[2] = {b, 'B'};\n  sort(a.begin(), a.end());\n  reverse(a.begin(), a.end());\n  string ans;\n\n  int rg = a[0].first - a[1].first;\n  if (rg <= a[2].first) {\n    int c1 = a[1].first + a[2].first - a[0].first;\n    int c2 = a[0].first - a[2].first;\n    int c3 = a[0].first - a[1].first;\n    for (int i = 0; i < (c1); ++i) {\n      cout << a[0].second << a[1].second << a[2].second;\n    }\n    for (int i = 0; i < (c2); ++i) {\n      cout << a[0].second << a[1].second;\n    }\n    for (int i = 0; i < (c3); ++i) {\n      cout << a[0].second << a[2].second;\n    }\n\n  } else {\n    cout << \"IMPOSSIBLE\";\n  }\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTest();\n    cout << endl;\n  }\n}\n"}
{"target":"Efgen","func":"\/\/ @formatter:off\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<string> vs;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vl;\ntypedef vector<vector<ll>> vvl;\n\ntemplate <class T> inline T sqr(T x) { return x * x; }\ntemplate <class T> inline T parse(const string &s) {\n  T x;\n  stringstream ss(s);\n  ss >> x;\n  return x;\n}\nint gcd(int a, int b) { return a ? gcd(b % a, a) : b; }\nll gcd(ll a, ll b) { return a ? gcd(b % a, a) : b; }\nll powmod(ll a, ll p, ll m) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = r * a % m;\n    p >>= 1;\n    a = a * a % m;\n  }\n  return r;\n}\n\/\/ @formatter:on\nconst ll inf = 1000000000000000000LL;\nconst double dinf = 1e+100;\n\nvoid solveTest() {\n  int n, q;\n  cin >> n >> q;\n  vi E(n), S(n);\n  for (int i = 0; i < (n); ++i) {\n    cin >> E[i] >> S[i];\n  }\n  vvl a(n, vl(n));\n  vvl b(n, vl(n));\n  for (int i = 0; i < (n); ++i) {\n    for (int j = 0; j < (n); ++j) {\n      cin >> a[i][j];\n      if (a[i][j] == -1)\n        a[i][j] = inf;\n      if (i == j)\n        a[i][i] = 0;\n      b[i][j] = a[i][j];\n    }\n  }\n  for (int k = 0; k < (n); ++k) {\n    for (int i = 0; i < (n); ++i) {\n      for (int j = 0; j < (n); ++j) {\n        a[i][j] = min(a[i][j], a[i][k] + a[k][j]);\n      }\n    }\n  }\n\n  for (int qq = 0; qq < (q); ++qq) {\n    int s, t;\n    cin >> s >> t;\n    s--;\n    t--;\n    vector<double> d(n);\n    vector<bool> mark(n);\n    for (int i = 0; i < (n); ++i)\n      d[i] = dinf;\n    d[s] = 0;\n    for (int i = 0; i < (n); ++i) {\n      int v = -1;\n      for (int j = 0; j < (n); ++j) {\n        if (!mark[j] && (v < 0 || d[j] < d[v]))\n          v = j;\n      }\n      if (v < 0 || v == t)\n        break;\n      mark[v] = true;\n      for (int j = 0; j < (n); ++j) {\n        if (!mark[j]) {\n          double dist = a[v][j];\n          if (dist > E[v])\n            continue;\n          d[j] = min(d[j], d[v] + dist \/ S[v]);\n        }\n      }\n    }\n    if (qq)\n      printf(\" \");\n    printf(\"%0.10lf\", d[t]);\n  }\n}\n\nint main() {\n\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; test++) {\n    cout << \"Case #\" << test << \": \";\n    solveTest();\n    cout << endl;\n  }\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nLL T, N, K, a[30], ans[30];\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int t, i, j;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> N;\n\n    K = 0;\n    memset(a, 0, sizeof(a));\n    while (N != 0) {\n      a[++K] = N % 10;\n      N \/= 10;\n    }\n\n    bool valid = 1;\n    for (i = K; i > 0 && valid; i--) {\n      if (a[i] - 1 >= a[i + 1]) {\n        for (j = K; j > i; j--)\n          ans[j] = a[j];\n        ans[i] = a[i] - 1;\n        for (j = i - 1; j > 0; j--)\n          ans[j] = 9;\n      }\n\n      if (a[i] < a[i + 1])\n        valid = 0;\n    }\n\n    if (valid) {\n      for (i = 1; i <= K; i++)\n        ans[i] = a[i];\n    }\n\n    while (ans[K] == 0)\n      K--;\n\n    for (i = K; i > 0; i--)\n      fout << ans[i];\n    fout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nLL T, N, K, ans_min, ans_max;\n\nvoid get_ans(LL l, LL r, LL K) {\n  if (K == 1) {\n    ans_min = (l + r) \/ 2 - l;\n    ans_max = r - (l + r) \/ 2;\n    return;\n  }\n\n  if ((l + r) % 2 == 0)\n    get_ans(l, (l + r) \/ 2, K \/ 2);\n  else {\n    if ((K - 1) % 2 == 0)\n      get_ans(l, (l + r) \/ 2, (K - 1) \/ 2);\n    else\n      get_ans((l + r) \/ 2, r, K \/ 2);\n  }\n}\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int t;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> N >> K;\n    get_ans(0, N + 1, K);\n    fout << ans_max - 1 << \" \" << ans_min - 1 << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint T, K;\nstring s;\n\nchar flip(char c) {\n  if (c == '-')\n    return '+';\n  return '-';\n}\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int i, t, j, res;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> s >> K;\n\n    int N = s.length();\n    res = 0;\n    for (i = 0; i + K - 1 < N; i++) {\n      if (s[i] == '-') {\n        for (j = i; j < i + K; j++)\n          s[j] = flip(s[j]);\n\n        res++;\n      }\n    }\n\n    bool ans = 1;\n    for (i = 0; i < N; i++)\n      if (s[i] == '-')\n        ans = 0;\n\n    if (ans)\n      fout << res << \"\\n\";\n    else\n      fout << \"IMPOSSIBLE\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nstruct range {\n  int l, r;\n  range() {}\n  range(int l, int r) : l(l), r(r) {}\n};\n\nstruct point {\n  int x, type, ind;\n  bool e;\n\n  point() {}\n  point(int x, int type, int ind, bool e) : x(x), type(type), ind(ind), e(e) {}\n};\n\nLL T, N, P, req[110], a[110][110], K;\nrange r[110][110];\npoint p[10000];\n\nint cnt[110], tot;\nbool act[110][110];\n\nvoid rmv(int type, int ind) {\n  if (act[type][ind] == 0)\n    return;\n  act[type][ind] = 0;\n  cnt[type]--;\n  if (cnt[type] == 0)\n    tot--;\n}\n\nvoid add(int type, int ind) {\n  act[type][ind] = 1;\n  cnt[type]++;\n  if (cnt[type] == 1)\n    tot++;\n}\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int i, t, j, k;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> N >> P;\n    for (i = 1; i <= N; i++)\n      fin >> req[i];\n\n    int L, R;\n    K = 0;\n    memset(p, 0, sizeof(p));\n    memset(cnt, 0, sizeof(cnt));\n    memset(act, 0, sizeof(act));\n    tot = 0;\n\n    for (i = 1; i <= N; i++)\n      for (j = 1; j <= P; j++) {\n        fin >> a[i][j];\n        L = (100 * a[i][j] + 110 * req[i] - 1) \/ (110 * req[i]);\n        R = (100 * a[i][j]) \/ (90 * req[i]);\n        if (L <= R) {\n          r[i][j] = range(L, R);\n          p[++K] = point(L, i, j, 0);\n          p[++K] = point(R, i, j, 1);\n        }\n      }\n\n    sort(p + 1, p + K + 1, [](point A, point B) {\n      if (A.x == B.x)\n        return (A.e < B.e);\n      else\n        return (A.x < B.x);\n    });\n    tot = 0;\n    int res = 0;\n    memset(cnt, 0, sizeof(cnt));\n    for (k = 1; k <= K; k++) {\n      if (p[k].e) {\n        rmv(p[k].type, p[k].ind);\n      } else {\n        add(p[k].type, p[k].ind);\n        if (tot == N) {\n          for (i = 1; i <= N; i++) {\n            int pos = -1;\n            for (j = 1; j <= P; j++)\n              if (act[i][j]) {\n                if (pos == -1)\n                  pos = j;\n                else if (r[i][j].r < r[i][pos].r)\n                  pos = j;\n              }\n\n            rmv(i, pos);\n          }\n\n          res++;\n        }\n      }\n    }\n\n    fout << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\n\nint R, C, T;\nchar a[50][50];\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int t, i, j;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \":\\n\";\n    fin >> R >> C;\n    for (i = 1; i <= R; i++)\n      for (j = 1; j <= C; j++)\n        fin >> a[i][j];\n\n    int l = 1, k;\n    for (i = 1; i <= R; i++)\n      for (j = 1; j <= C; j++)\n        if (a[i][j] != '?') {\n          int p = i - 1;\n          while (a[p][j] == '?' && p > 0)\n            a[p][j] = a[i][j], p--;\n\n          p = i + 1;\n          while (a[p][j] == '?' && p <= R)\n            a[p][j] = a[i][j], p++;\n        }\n\n    for (i = 1; i <= R; i++)\n      for (j = 1; j <= C; j++)\n        if (a[i][j] != '?') {\n          int p = j - 1;\n          while (a[i][p] == '?' && p > 0)\n            a[i][p] = a[i][j], p--;\n\n          p = j + 1;\n          while (a[i][p] == '?' && p <= C)\n            a[i][p] = a[i][j], p++;\n        }\n\n    for (i = 1; i <= R; i++, fout << \"\\n\")\n      for (j = 1; j <= C; j++)\n        fout << a[i][j];\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <fstream>\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nint T, N;\ndouble K[1010], S[1010], D;\n\nbool check(double sp) {\n  int i;\n  for (i = 1; i <= N; i++) {\n    if (sp <= S[i])\n      continue;\n    double pos = sp * K[i] \/ (sp - S[i]);\n    if (pos < D)\n      return 0;\n  }\n\n  return 1;\n}\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int i, t, k;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> D >> N;\n\n    for (i = 1; i <= N; i++)\n      fin >> K[i] >> S[i];\n\n    double l = 0, r = (1LL << 60);\n    for (k = 1; k <= 200; k++) {\n      double mid = (l + r) \/ 2;\n      if (check(mid))\n        l = mid;\n      else\n        r = mid;\n    }\n\n    fout << fixed << setprecision(9) << l << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <algorithm>\n#include <cstring>\n#include <fstream>\n#include <iostream>\nusing namespace std;\n\nint T, N, R, O, Y, G, B, V;\n\nchar a[3][1010];\nint cnt[300];\nchar cr;\n\nchar get_char() {\n  if (cnt[cr] == 0) {\n    if (cnt['Y'] > 0)\n      cr = 'Y';\n    else if (cnt['R'] > 0)\n      cr = 'R';\n    else\n      cr = 'B';\n  }\n\n  cnt[cr]--;\n  return cr;\n}\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int t, j, i;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> N >> R >> O >> Y >> G >> B >> V;\n    if (R > Y + B || Y > R + B || B > R + Y) {\n      fout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n\n    memset(cnt, 0, sizeof(cnt));\n    cnt['R'] = R, cnt['Y'] = Y, cnt['B'] = B;\n\n    int tot = N \/ 2;\n    if (R == max({R, Y, B}))\n      cr = 'R';\n    else if (Y == max({R, Y, B}))\n      cr = 'Y';\n    else\n      cr = 'B';\n\n    for (j = 1; j <= 2; j++) {\n      for (i = 1; i <= tot; i++) {\n        a[j][i] = get_char();\n      }\n    }\n\n    if (N % 2)\n      a[2][tot + 1] = get_char();\n    for (i = 1; i <= tot; i++)\n      if (N % 2)\n        fout << a[2][i] << a[1][i];\n      else\n        fout << a[1][i] << a[2][i];\n\n    if (N % 2)\n      fout << a[2][tot + 1];\n    fout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"EiLx2","func":"#include <cstring>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nlong long T, N, Q, c[110][110], e[110], s[110], d[110];\ndouble dp[110][110];\n\nint main() {\n  ifstream fin(\"input.in\");\n  ofstream fout(\"output.out\");\n  fin >> T;\n\n  int t;\n  for (t = 1; t <= T; t++) {\n    fout << \"Case #\" << t << \": \";\n    fin >> N >> Q;\n\n    long long i, j;\n    for (i = 1; i <= N; i++)\n      fin >> e[i] >> s[i];\n\n    for (i = 1; i <= N; i++)\n      for (j = 1; j <= N; j++)\n        fin >> c[i][j];\n\n    fin >> i >> j;\n\n    memset(dp, 0, sizeof(dp));\n    memset(d, 0, sizeof(d));\n\n    for (i = 2; i <= N; i++)\n      d[i] = d[i - 1] + c[i - 1][i];\n\n    for (i = N - 1; i > 0; i--)\n      for (j = 1; j <= i; j++) {\n        dp[i][j] = (1LL << 50);\n        if (d[i + 1] - d[j] <= e[j]) {\n          dp[i][j] = min(dp[i][j], 1.0 * c[i][i + 1] \/ s[j] +\n                                       min(dp[i + 1][j], dp[i + 1][i + 1]));\n        }\n      }\n\n    fout << fixed << setprecision(9) << dp[1][1] << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    string n;\n    cin >> n;\n    int const_streak_start = 0, prev = -1;\n    bool done = false;\n    for (int i = 0; i < n.size() && !done; i++) {\n      if (n[i] < prev) {\n        n[const_streak_start]--;\n        for (int j = const_streak_start + 1; j < n.size(); j++) {\n          n[j] = '9';\n          done = true;\n        }\n      }\n      if (n[i] != prev) {\n        const_streak_start = i;\n      }\n      prev = n[i];\n    }\n    cout << \"Case #\" << t << \": \";\n    n.erase(0, min(n.find_first_not_of('0'), n.size() - 1));\n    cout << n << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, k;\n    cin >> n >> k;\n    priority_queue<int> q;\n    q.push(n);\n    int y = -1, z = -1;\n    for (int i = 0; i < k; i++) {\n      int len = q.top();\n      q.pop();\n      q.push(len \/ 2);\n      y = len \/ 2;\n      if (2 * y == len) {\n        q.push(y - 1);\n        z = y - 1;\n      } else {\n        q.push(y);\n        z = y;\n      }\n    }\n    cout << \"Case #\" << t << \": \";\n    cout << y << ' ' << z << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\ntypedef unsigned int u32;\n\nint main() {\n  u32 T;\n  cin >> T;\n  for (u32 t = 1; t <= T; t++) {\n    string s;\n    cin >> s;\n    int k;\n    cin >> k;\n    int total_flips = 0;\n    bool valid = true;\n    queue<int> recent_flips;\n    for (int i = 0; i < s.size(); i++) {\n      if (!recent_flips.empty() && i - recent_flips.front() >= k) {\n        \/\/ cout << i << \", pop: \" << recent_flips.front() << '\\n';\n        recent_flips.pop();\n      }\n      if ((s[i] == '+' && recent_flips.size() % 2 == 1) ||\n          (s[i] == '-' && recent_flips.size() % 2 == 0)) {\n        if (s.size() - i < k) {\n          valid = false;\n          break;\n        }\n        total_flips++;\n        \/\/ cout << i << \", push: \" << i << '\\n';\n        recent_flips.push(i);\n      }\n    }\n    cout << \"Case #\" << t << \": \";\n    if (valid) {\n      cout << total_flips << '\\n';\n    } else {\n      cout << \"IMPOSSIBLE\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nbool approx(int q, int kit_amt) {\n  return 10 * q >= 9 * kit_amt && 10 * q <= 11 * kit_amt;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, p;\n    cin >> n >> p;\n    vi r(n);\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    vvi q(n, vi(p));\n    \/\/ int maxServings = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n        \/\/ maxServings = max(maxServings, q[i][j] \/ r[i] + 1);\n      }\n      sort(q[i].begin(), q[i].end());\n    }\n    int ans = 0;\n    \/*\n    for (int servings = 1; servings <= maxServings; servings++) {\n        vi choices(n);\n        int small_ans = 1;\n        forf(i, n) {\n            int lb = (r[i] * servings * 9 + 5) \/ 10;\n            int ub = r[i] * servings * 11 \/ 10;\n            int first = -1, last = -1;\n            int lo = 0, hi = p - 1;\n            while (lo <= hi) {\n                int mid = lo + (hi - lo)\/2;\n                if (q[i][mid] < lb) {\n                    lo = mid + 1;\n                } else {\n                    first = mid;\n                    hi = mid - 1;\n                }\n            }\n            lo = 0, hi = p - 1;\n            while (lo <= hi) {\n                int mid = lo + (hi - lo)\/2;\n                if (q[i][mid] > ub) {\n                    hi = mid - 1;\n                } else {\n                    last = mid;\n                    lo = mid + 1;\n                }\n            }\n            if (first != -1 && first <= last) {\n                choices[i] = last - first + 1;\n                small_ans *= choices[i];\n            } else {\n                small_ans = 0;\n            }\n        }\n        cout << servings << ' ' << small_ans << '\\n';\n        ans += small_ans;\n    }\n    *\/\n    if (n == 1) {\n      for (int a = 0; a < p; a++) {\n        int kit_amt = q[0][a] \/ r[0] * r[0];\n        if (approx(q[0][a], kit_amt) || approx(q[0][a], kit_amt + 1)) {\n          ans++;\n        }\n      }\n    } else {\n      for (int a = 0; a < p; a++) {\n        for (int b = 0; b < p; b++) {\n          double frac_a = (double)q[0][a] \/ r[0];\n          double frac_b = (double)q[1][b] \/ r[1];\n          bool x = false;\n          for (int servings = min(frac_a, frac_b);\n               servings <= max(frac_a, frac_b) + 1; servings++) {\n            if (approx(q[0][a], r[0] * servings) &&\n                approx(q[1][b], r[1] * servings)) {\n              x = true;\n            }\n          }\n          if (x) {\n            ans++;\n          }\n          \/*\n          if (frac_a <= servings * 1.1 && frac_a >= servings * 0.9\n                  && frac_b <= servings * 1.1 && frac_b >= servings * 0.9) {\n              can = true;\n          }\n          servings++;\n          if (frac_a <= servings * 1.1 && frac_a >= servings * 0.9\n                  && frac_b <= servings * 1.1 && frac_b >= servings * 0.9) {\n              can = true;\n          }\n          if (can) {\n              ans++;\n          }\n          *\/\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << ans << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int r, c;\n    cin >> r >> c;\n    vvc grid(r, vc(c));\n    vc curLetterAtCol(c);\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cin >> grid[i][j];\n        if (curLetterAtCol[j] == 0 && grid[i][j] != '?') {\n          curLetterAtCol[j] = grid[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (grid[i][j] == '?') {\n          if (curLetterAtCol[j] == 0) {\n            if (j > 0) {\n              grid[i][j] = grid[i][j - 1];\n            }\n          } else {\n            grid[i][j] = curLetterAtCol[j];\n          }\n        } else {\n          curLetterAtCol[j] = grid[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = c - 1; j >= 0; j--) {\n        if (grid[i][j] == '?') {\n          if (j < c - 1) {\n            grid[i][j] = grid[i][j + 1];\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << t << \":\\n\";\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cout << grid[i][j];\n      }\n      cout << '\\n';\n    }\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <cfloat>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int d, n;\n    cin >> d >> n;\n    vi k(n), s(n);\n    long double ans = d;\n    for (int i = 0; i < n; i++) {\n      cin >> k[i] >> s[i];\n      \/\/ double t = (double) (d - k[i]) \/ s[i];\n      \/\/ ans = min(ans, (double) d \/ t);\n      ans = min(ans, (long double)d * s[i] \/ (d - k[i]));\n    }\n    cout << \"Case #\" << t << \": \";\n    cout << fixed << setprecision(8) << ans << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    int n1, n2, n3;\n    char c1, c2, c3;\n    if (r >= y && r >= b) {\n      n1 = r;\n      c1 = 'R';\n      if (y >= b) {\n        n2 = y;\n        c2 = 'Y';\n        n3 = b;\n        c3 = 'B';\n      } else {\n        n2 = b;\n        c2 = 'B';\n        n3 = y;\n        c3 = 'Y';\n      }\n    } else if (y >= r && y >= b) {\n      n1 = y;\n      c1 = 'Y';\n      if (r >= b) {\n        n2 = r;\n        c2 = 'R';\n        n3 = b;\n        c3 = 'B';\n      } else {\n        n2 = b;\n        c2 = 'B';\n        n3 = r;\n        c3 = 'R';\n      }\n    } else {\n      n1 = b;\n      c1 = 'B';\n      if (r >= y) {\n        n2 = r;\n        c2 = 'R';\n        n3 = y;\n        c3 = 'Y';\n      } else {\n        n2 = y;\n        c2 = 'Y';\n        n3 = r;\n        c3 = 'R';\n      }\n    }\n    cout << \"Case #\" << t << \": \";\n    if (n1 > n2 + n3) {\n      cout << \"IMPOSSIBLE\\n\";\n    } else {\n      int ext = n2 + n3 - n1;\n      for (int i = 0; i < n1; i++) {\n        cout << c1;\n        if (i < n2) {\n          cout << c2;\n        } else {\n          cout << c3;\n        }\n        if (ext > 0) {\n          cout << c3;\n          ext--;\n        }\n      }\n      cout << '\\n';\n    }\n  }\n  return 0;\n}\n"}
{"target":"elin42","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<double> vd;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<string> vs;\ntypedef vector<vector<string>> vvs;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef vector<pii> vpii;\ntypedef vector<vpii> vvpii;\ntypedef set<int> si;\ntypedef vector<si> vsi;\nusing namespace std;\n\n\/*\nbool min(long double a, long double b) {\n    if (a < b) {\n        return a;\n    }\n    return b;\n}\n*\/\n\n\/*\nstruct city {\n    int e, s, d;\n    bool operator<(const city& other) const {\n        return d < other.d;\n    }\n}\n*\/\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, q;\n    cin >> n >> q;\n    \/\/ vector<struct city> cities(n);\n    vi e(n), s(n);\n    vvi d(n, vi(n));\n    vi u(q), v(q);\n    for (int i = 0; i < n; i++) {\n      cin >> e[i] >> s[i];\n      \/*\n      int e, s;\n      cin >> e >> s;\n      struct city c;\n      c.e = e;\n      c.s = s;\n      cities[i] = c;\n      *\/\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> d[i][j];\n        \/\/ cities[i].d = d;\n      }\n    }\n    for (int i = 0; i < q; i++) {\n      cin >> u[i] >> v[i];\n      u[i]--;\n      v[i]--;\n    }\n    \/*\n    sort(cities.begin(), cities.end());\n    stack stk;\n    vi next_faster(n);\n    forb(i, n) {\n        while (!stk.empty() && stk.top().s <= cities[i].s) {\n            stk.pop();\n        }\n        next_faster[i] = (stk.empty() ? 0 : stk.top());\n        stk.push(cities[i]);\n    }\n    *\/\n    vector<vector<long double>> min_time(n, vector<long double>(n));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        min_time[i][j] = 1000000000000000000.0;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      min_time[i][i] = 0;\n      if (i < n - 1) {\n        min_time[i][i + 1] = (long double)d[i][i + 1] \/ s[i];\n      }\n    }\n    for (int i = n - 2 - 1; i >= 0; i--) {\n      ll running_dist = d[i][i + 1];\n      long double running_min_time = min_time[i][i + 1];\n      for (int j = i + 2; j < n; j++) {\n        running_dist += d[j - 1][j];\n        if (running_dist <= e[i]) {\n          min_time[i][j] = (long double)running_dist \/ s[i];\n        }\n        for (int k = i + 1; k < j; k++) {\n          min_time[i][j] = min(min_time[i][j], min_time[i][k] + min_time[k][j]);\n        }\n      }\n    }\n    cout << \"Case #\" << t << \":\";\n    for (int i = 0; i < q; i++) {\n      cout << fixed << setprecision(7) << ' ' << min_time[u[i]][v[i]];\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nusing namespace std;\nint T_T;\nlong long n;\nbool check(long long x) {\n  int last = 10;\n  while (x) {\n    if (x % 10 > last)\n      return 0;\n    last = x % 10;\n    x \/= 10;\n  }\n  return 1;\n}\nint main(void) {\n  \/\/    freopen(\"B-small-attempt0.in\",\"r\",stdin);\n  \/\/    freopen(\"out-small.txt\",\"w\",stdout);\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%lld\", &n);\n    long long ans;\n    for (long long i = n; i >= 0; i--)\n      if (check(i)) {\n        ans = i;\n        break;\n      }\n    printf(\"Case #%d: %lld\\n\", cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\nusing namespace std;\nint T_T;\nint n, k;\nstruct node {\n  int l, r;\n  node(int _l = 0, int _r = 0) : l(_l), r(_r) {}\n  bool operator<(const node &a) const {\n    return (r - l == a.r - a.l) ? a.l < l : (r - l < a.r - a.l);\n  }\n};\nint main(void) {\n  freopen(\"C-small-1-attempt1.in\", \"r\", stdin);\n  freopen(\"out-small1.txt\", \"w\", stdout);\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d\", &n, &k);\n    priority_queue<node> q;\n    q.push(node(1, n));\n    for (int i = 0; i < k - 1; i++) {\n      node a = q.top();\n      \/\/            printf(\"[%d, %d]\\n\",a.l,a.r);\n      q.pop();\n      int m = (a.l + a.r) >> 1;\n      if (a.l < m) {\n        q.push(node(a.l, m - 1));\n        \/\/                printf(\"push [%d, %d]\\n\",a.l,m-1);\n      }\n      if (m < a.r) {\n        q.push(node(m + 1, a.r));\n        \/\/                printf(\"push [%d, %d]\\n\",m+1,a.r);\n      }\n    }\n    int mx, mn;\n    node a = q.top();\n    \/\/        printf(\"[%d, %d]\\n\",a.l,a.r);\n    int m = (a.l + a.r) >> 1;\n    mx = max(a.r - m, m - a.l);\n    mn = min(a.r - m, m - a.l);\n    printf(\"Case #%d: %d %d\\n\", cas, mx, mn);\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\nusing namespace std;\nint T_T, K, n, A[1111][1111];\nchar str[1111];\nint Gauss(int A[1111][1111], int n) {\n  int i = 0;\n  for (int j = 0; j <= n - K; j++) {\n    for (int k = i + 1; k < n; k++)\n      if (A[k][j]) {\n        A[k][j] ^= A[i][j];\n        A[k][n] ^= A[i][n];\n      }\n    i++;\n  }\n  \/\/    printf(\"after elimination:\\n\");\n  \/\/    for (int i=0;i<n;i++)\n  \/\/    {\n  \/\/        for (int j=0;j<=n;j++) printf(\"%d \",A[i][j]);\n  \/\/        puts(\"\");\n  \/\/    }\n  for (i = n - K + 1; i < n; i++)\n    if (A[i][n])\n      break;\n  if (i != n)\n    return -1;\n  int sum = 0;\n  for (int i = 0; i <= n - K; i++)\n    sum += A[i][n];\n  return sum;\n}\nint main(void) {\n  \/\/    freopen(\"A-small-attempt0.in\",\"r\",stdin);\n  \/\/    freopen(\"out-small.txt\",\"w\",stdout);\n  \/\/ freopen(\"a.in\",\"r\",stdin);\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%s%d\", str, &K);\n    n = strlen(str);\n    memset(A, 0, sizeof(A));\n    for (int i = 0; i < n; i++) {\n      for (int j = max(i - K + 1, 0), sz = min(i, n - K); j <= sz; j++)\n        A[i][j] = 1;\n      A[i][n] = (str[i] == '-');\n    }\n    \/\/        for (int i=0;i<n;i++)\n    \/\/        {\n    \/\/            for (int j=0;j<=n;j++) printf(\"%d \",A[i][j]);\n    \/\/            puts(\"\");\n    \/\/        }\n    int ans = Gauss(A, n);\n    printf(\"Case #%d: \", cas);\n    if (ans < 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst int N = 60;\nint T_T;\nstruct node {\n  int x, y;\n  node(int _x = 0, int _y = 0) {\n    x = _x;\n    y = _y;\n  }\n  bool operator<(const node &t) const {\n    return x < t.x || (x == t.x && y < t.y);\n  }\n} Q[N][N];\nint n, p, a[N], value[N][N], ans;\nint pos[N];\nvoid work() {\n  for (int i = 1; i <= n; i++)\n    pos[i] = 1;\n  int cur = 1;\n  int flag = 1;\n  while (flag) {\n    for (int i = 1; i <= n; i++) {\n      int q = pos[i];\n      while (q <= p && Q[i][q].y < cur)\n        q++;\n      pos[i] = q;\n      if (q > p) {\n        flag = 0;\n        break;\n      }\n    }\n    if (!flag)\n      break;\n    int f = 1;\n    for (int i = 1; i <= n; i++) {\n      if (Q[i][pos[i]].x <= cur && Q[i][pos[i]].y >= cur)\n        continue;\n      else\n        f = 0;\n      break;\n    }\n    if (f) {\n      ans++;\n      for (int i = 1; i <= n; i++)\n        pos[i]++;\n    } else\n      cur++;\n  }\n}\nint main() {\n\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &a[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= p; j++)\n        scanf(\"%d\", &value[i][j]);\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        int tmpx = floor(1.0 * value[i][j] \/ 0.9 \/ a[i]);\n        int tmpy = ceil(1.0 * value[i][j] \/ 1.1 \/ a[i]);\n        if (tmpy <= tmpx)\n          Q[i][j] = node(tmpy, tmpx);\n        else\n          Q[i][j] = node(-1, -1);\n      }\n      sort(Q[i] + 1, Q[i] + 1 + p);\n    }\n    ans = 0;\n    work();\n    printf(\"Case #%d: %d\\n\", cas, ans);\n  }\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\nusing namespace std;\nint T_T, n, m;\nchar str[30][30];\nint main(void) {\n\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", str[i]);\n    int last = 0, i, j, flag = 0;\n    for (i = 0; i < n; i++) {\n      flag = 0;\n      int lastj = 0;\n      for (j = 0; j < m; j++) {\n        if (str[i][j] != '?') {\n          \/\/                    printf(\"i = %d, j = %d\\n\",i,j);\n          flag = 1;\n          for (int k = last; k <= i; k++)\n            for (int l = lastj; l <= j; l++)\n              str[k][l] = str[i][j];\n          lastj = j + 1;\n        }\n      }\n      if (flag && lastj < m) {\n        for (int k = last; k <= i; k++)\n          for (int l = lastj; l < m; l++)\n            str[k][l] = str[i][lastj - 1];\n      }\n      if (flag)\n        last = i + 1;\n    }\n    if (last < n) {\n      for (int k = last; k < n; k++)\n        for (int l = 0; l < m; l++)\n          str[k][l] = str[last - 1][l];\n    }\n    printf(\"Case #%d:\\n\", cas);\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", str[i]);\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\nint T_T;\nint d, n;\nint k[1111], s[1111];\nint main(void) {\n\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d\", &d, &n);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &k[i], &s[i]);\n    double mxt = 0.0;\n    for (int i = 1; i <= n; i++) {\n      mxt = max(mxt, (double)(d - k[i]) \/ (double)s[i]);\n    }\n    printf(\"Case #%d: %.6lf\\n\", cas, (double)d \/ mxt);\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\nint T_T;\nint n;\nint R, O, Y, G, B, V;\nint str[10000];\nint main(void) {\n\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &R, &O, &Y, &G, &B, &V);\n    printf(\"n = %d R = %d O = %d Y = %d G = %d B = %d V = %d\\n\", n, R, O, Y, G,\n           B, V);\n    printf(\"Case #%d: \", cas);\n    if ((G && R <= G) || (V && Y <= V) || (B && B <= O)) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n\n    int nR = R - G, nY = Y - V, nB = B - O;\n    printf(\"nR = %d, nY = %d, nB = %d\\n\", nR, nY, nB);\n    int i = 0, nn = nR + nY + nB;\n    int mx = max(nR, max(nY, nB));\n    if (nR == mx)\n      str[i++] = 'R', nR--;\n    else if (nY == mx)\n      str[i++] = 'Y', nY--;\n    else if (nB == mx)\n      str[i++] = 'B', nB--;\n    while (nR || nY || nB) {\n      if (str[i - 1] == 'R') {\n        if (nY > nB)\n          str[i++] = 'Y', nY--;\n        else if (nB > nY)\n          str[i++] = 'B', nB--;\n        else {\n          if (nY == 0 && nB == 0)\n            break;\n          if (str[0] == 'B')\n            str[i++] = 'Y', nY--;\n          else\n            str[i++] = 'B', nB--;\n        }\n      } else if (str[i - 1] == 'Y') {\n        if (nR > nB)\n          str[i++] = 'R', nR--;\n        else if (nB > nR)\n          str[i++] = 'B', nB--;\n        else {\n          if (nR == 0 && nB == 0)\n            break;\n          if (str[0] == 'B')\n            str[i++] = 'R', nR--;\n          else\n            str[i++] = 'B', nB--;\n        }\n      } else if (str[i - 1] == 'B') {\n        if (nY > nR)\n          str[i++] = 'Y', nY--;\n        else if (nR > nY)\n          str[i++] = 'R', nR--;\n        else {\n          if (nY == 0 && nR == 0)\n            break;\n          if (str[0] == 'Y')\n            str[i++] = 'R', nR--;\n          else\n            str[i++] = 'Y', nY--;\n        }\n      }\n    }\n    for (int i = 0; i < nn; i++)\n      printf(\"%c\", str[i]);\n    puts(\"\");\n    if (nR || nY || nB || str[0] == str[n - 1]) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    printf(\"??\\n\");\n    int fR = 1, fY = 1, fB = 1;\n    for (int i = 0; i < nn; i++) {\n      if (fR && str[i] == 'R') {\n        printf(\"R\");\n        for (int j = 0; j < G; j++)\n          printf(\"GR\");\n        fR = 0;\n      } else if (fY && str[i] == 'Y') {\n        printf(\"Y\");\n        for (int j = 0; j < V; j++)\n          printf(\"VY\");\n        fY = 0;\n      } else if (fB && str[i] == 'B') {\n        printf(\"B\");\n        for (int j = 0; j < O; j++)\n          printf(\"OB\");\n      } else\n        printf(\"%c\", str[i]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"emofunc","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst long long INF = (long long)1e18;\nconst int maxn = (int)100 + 10;\n\nint T_T;\nint n, q;\nint E[maxn], S[maxn];\nint st[maxn], ed[maxn];\nlong long G[maxn][maxn];\ndouble t[maxn][maxn], dis[maxn];\nint inque[maxn];\n\nvoid spfa(int st, double *time) {\n  for (int i = 1; i <= n; i++)\n    time[i] = 1e50;\n\n  queue<int> Q;\n  Q.push(st);\n  inque[st] = 1;\n  time[st] = 0.0;\n\n  while (!Q.empty()) {\n    int u = Q.front();\n    Q.pop();\n    inque[u] = 0;\n    for (int i = 1; i <= n; i++) {\n      if (G[u][i] > E[u])\n        continue;\n      double ti = (double)G[u][i] \/ S[u];\n      if (time[i] > ti + time[u]) {\n        time[i] = ti + time[u];\n        if (!inque[i])\n          inque[i] = 1, Q.push(i);\n      }\n    }\n  }\n}\n\nint main() {\n\n  scanf(\"%d\", &T_T);\n  for (int cas = 1; cas <= T_T; cas++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &E[i], &S[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        scanf(\"%d\", &G[i][j]);\n        if (G[i][j] == -1)\n          G[i][j] = INF;\n      }\n    for (int i = 0; i < q; i++)\n      scanf(\"%d%d\", &st[i], &ed[i]);\n\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        for (int k = 1; k <= n; k++)\n          G[i][j] = min(G[i][j], G[i][k] + G[k][j]);\n\n    for (int i = 1; i <= n; i++)\n      spfa(i, t[i]);\n\n    printf(\"Case #%d:\", cas);\n    for (int i = 0; i < q; i++) {\n      printf(\" %.9lf\", t[st[i]][ed[i]]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"tidy.in\");\n  outfile.open(\"tidy.txt\");\n  int i, j, k, t, n;\n  infile >> t;\n  for (i = 0; i < t; i++) {\n    infile >> n;\n    for (j = n; j > 0; j--) {\n      int temp = j, num, previous = 100;\n      while (temp > 0) {\n        num = temp % 10;\n        if (num > previous)\n          break;\n        previous = num;\n        temp \/= 10;\n      }\n      if (temp == 0) {\n        outfile << \"Case #\" << i + 1 << \": \" << j << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"broom.in\");\n  outfile.open(\"broom.txt\");\n  int i, j, t, k, n, i2;\n  infile >> t;\n  for (i = 0; i < t; i++) {\n    infile >> n >> k;\n    bool *g = new bool[n + 2];\n    for (j = 0; j < n + 2; j++)\n      g[j] = 0;\n    int *le = new int[n + 2];\n    for (j = 1; j < n + 1; j++)\n      le[j] = j - 1;\n    int *re = new int[n + 2];\n    for (j = 1; j < n + 1; j++)\n      re[j] = n - j;\n    g[0] = 1;\n    g[n + 1] = 1;\n    le[0] = 0;\n    le[n + 1] = 0;\n    re[0] = 0;\n    re[n + 1] = 0;\n    for (i2 = 0; i2 < k; i2++) {\n      int leftmost = 0, biggest = 0, biggest2 = 0;\n      for (j = 1; j < n + 1; j++) {\n        if (!g[j]) {\n          if (min(le[j], re[j]) > biggest) {\n            leftmost = j;\n            biggest = min(le[j], re[j]);\n            biggest2 = max(le[j], re[j]);\n          }\n          if (min(le[j], re[j]) == biggest) {\n            if (max(le[j], re[j]) > biggest2) {\n              leftmost = j;\n              biggest = min(le[j], re[j]);\n              biggest2 = max(le[j], re[j]);\n            }\n          }\n        }\n      }\n      g[leftmost] = 1;\n      int counter = 0;\n      for (j = 1; j < n + 1; j++) {\n        le[j] = counter;\n        counter++;\n        if (g[j] == 1)\n          counter = 0;\n      }\n      counter = 0;\n      for (j = n; j > 0; j--) {\n        re[j] = counter;\n        counter++;\n        if (g[j] == 1)\n          counter = 0;\n      }\n      if (i2 == k - 1)\n        outfile << \"Case #\" << i + 1 << \": \" << biggest2 << \" \" << biggest\n                << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <utility>\nusing namespace std;\n\nint bfs(char *g, int ars, int size) {\n  int i, j;\n  set<string> vis;\n  queue<pair<string, int>> v;\n  string current = \"\", goal = \"\";\n  for (i = 0; i < ars; i++)\n    goal += \"+\";\n  for (i = 0; i < ars; i++)\n    current += g[i];\n  v.push(make_pair(current, 0));\n  while (!v.empty()) {\n    string temp = v.front().first, copy = v.front().first;\n    vis.insert(temp);\n    int steps = v.front().second;\n    v.pop();\n    if (temp == goal)\n      return steps;\n    for (i = 0; i <= ars - size; i++) {\n      for (j = i; j < i + size; j++) {\n        if (temp[j] == '+')\n          temp[j] = '-';\n        else\n          temp[j] = '+';\n      }\n      if (vis.find(temp) == vis.end())\n        v.push(make_pair(temp, steps + 1));\n      temp = copy;\n    }\n  }\n  return -1;\n}\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"pan.in\");\n  outfile.open(\"pan.txt\");\n  int i, j, t, size;\n  infile >> t;\n  string temp;\n  for (i = 0; i < t; i++) {\n    infile >> temp >> size;\n    char *g = new char[temp.size()];\n    for (j = 0; j < temp.size(); j++)\n      g[j] = temp[j];\n    int ans = bfs(g, temp.size(), size);\n    if (ans == -1)\n      outfile << \"Case #\" << i + 1 << \": IMPOSSIBLE\" << endl;\n    else\n      outfile << \"Case #\" << i + 1 << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <cmath>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <queue>\n#include <set>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nint m, n, tf = 0, source = 1;\nint **net, *previous, *flow;\nset<int> visited;\nint **weights;\n\nconst int MAXINT = 0x7fffffff;\n\nclass mypair {\npublic:\n  int node;\n  int dist;\n  mypair(int n, int d) : node(n), dist(d) {}\n};\n\nbool operator<(const mypair &lhs, const mypair &rhs) {\n  if (lhs.dist < rhs.dist)\n    return true;\n  else if (lhs.dist == rhs.dist)\n    return (rhs.node < lhs.node);\n  else\n    return false;\n}\n\nvoid FindFlow(list<pair<int, int>> *ADJ, int n, int s, int t, int *path,\n              int &m) {\n  int *flow = new int[n];\n  int *p = new int[n];\n  int i;\n  for (i = 0; i < n; i++)\n    flow[i] = 0;\n  flow[s] = MAXINT;\n  for (i = 0; i < n; i++)\n    p[i] = -1;\n  priority_queue<mypair> Q;\n  set<int> visited;\n  Q.push(mypair(s, MAXINT));\n  while (!Q.empty()) {\n    mypair temp = Q.top();\n    Q.pop();\n    visited.insert(temp.node);\n    \/\/ find all neighbours and update their dist values, if less update and\n    \/\/ insert into Q\n    list<pair<int, int>>::iterator it;\n    for (it = ADJ[temp.node].begin(); it != ADJ[temp.node].end(); it++) {\n      if (visited.find(it->first) == visited.end()) {\n        if (flow[it->first] < it->second) {\n          p[it->first] = temp.node;\n          flow[it->first] = it->second;\n          Q.push(mypair(it->first, flow[it->first]));\n        }\n      }\n    }\n  }\n\n  int nd = t;\n  stack<int> stk;\n  while (p[nd] != -1) {\n    stk.push(nd);\n    nd = p[nd];\n  }\n  stk.push(nd);\n  i = 0;\n  while (!stk.empty()) {\n    path[i] = stk.top();\n    \/\/ cout << path[i] << \" \";\n    stk.pop();\n    i++;\n  }\n  \/\/ cout << endl;\n  m = i;\n\n  delete[] flow;\n  delete[] p;\n}\n\nint FindSmallestEdge(list<pair<int, int>> *ADJ, int n, int *path, int m) {\n  int i, j;\n  int smallest = MAXINT;\n  list<pair<int, int>>::iterator it;\n  for (i = 0; i < m - 1; i++)\n    for (it = ADJ[path[i]].begin(); it != ADJ[path[i]].end(); it++)\n      if (it->first == path[i + 1])\n        if (it->second < smallest)\n          smallest = it->second;\n  return smallest;\n}\n\nvoid AdjustGraph(list<pair<int, int>> *ADJ, int n, int *path, int m, int temp) {\n  int i, j;\n  list<pair<int, int>>::iterator it;\n  queue<int> re;\n  for (i = 0; i < m - 1; i++) {\n    for (it = ADJ[path[i]].begin(); it != ADJ[path[i]].end(); it++) {\n      if (it->first == path[i + 1]) {\n        break;\n      }\n    }\n    if (it->second - temp > 0)\n      it->second -= temp;\n    else\n      ADJ[path[i]].erase(it);\n  }\n  \/\/ backward edge\n  for (i = m - 1; i > 0; i--) {\n    for (it = ADJ[path[i]].begin(); it != ADJ[path[i]].end(); it++) {\n      if (it->first == path[i - 1]) {\n        break;\n      }\n    }\n    if (it == ADJ[path[i]].end())\n      ADJ[path[i]].push_back(make_pair(path[i - 1], temp));\n    else\n      it->second += temp;\n  }\n}\n\nint MaximumFlow(list<pair<int, int>> *ADJ, int n, int s, int t) {\n  \/\/ find a flow\n  int i, j;\n  int *path = new int[n];\n  for (i = 0; i < n; i++)\n    path[i] = -1;\n  int m;\n  int sum = 0;\n  while (1) {\n    m = 0;\n    FindFlow(ADJ, n, s, t, path, m);\n    if (m == 1)\n      break;\n    int temp = FindSmallestEdge(ADJ, n, path, m);\n    \/\/ cout << temp << endl;\n    AdjustGraph(ADJ, n, path, m, temp);\n    sum += temp;\n  }\n  return sum;\n}\n\nbool possible(int a, int b, int *G) {\n  int i, j, k;\n  int x = round(1.0 * a \/ G[0]);\n  int y = round(1.0 * b \/ G[1]);\n  \/\/ cout << x << \", \" << y << endl;\n  if (x < 1)\n    return false;\n  \/\/ cout << 1.0*x*a << \" , \" << 1.0*y*b << endl;\n  for (k = x; k <= y; k++) {\n    if (1.0 * a >= G[0] * k * 0.9 && 1.0 * a <= G[0] * k * 1.1 &&\n        1.0 * b >= G[1] * k * 0.9 && 1.0 * b <= G[1] * k * 1.1)\n      return true;\n  }\n  return false;\n}\n\nint solve(int n, int p, int *G, int **V) {\n  int i, j;\n  if (n == 1) {\n    int cnt = 0;\n    for (i = 0; i < p; i++) {\n      int x = round(1.0 * V[0][i] \/ G[0]);\n      if (1.0 * V[0][i] >= 0.9 * G[0] * x && 1.0 * V[0][i] <= 1.1 * G[0] * x)\n        cnt++;\n    }\n    return cnt;\n  }\n  \/*\n    for (i=0;i<n;i++) {\n      for (j=0;j<p;j++) {\n  cout << V[i][j] << \" \";\n      }\n      cout << endl;\n    }\n  *\/\n  list<pair<int, int>> *adj;\n  adj = new list<pair<int, int>>[n * p + 2];\n  for (i = 0; i < p; i++) {\n    adj[0].push_back(make_pair(i + 1, 1));\n  }\n  for (i = 0; i < p; i++) {\n    for (j = 0; j < p; j++) {\n      if (possible(V[0][i], V[1][j], G)) {\n        adj[i + 1].push_back(make_pair(p + 1 + j, 1));\n      }\n    }\n  }\n  for (i = p + 1; i <= n * p; i++) {\n    adj[i].push_back(make_pair(n * p + 1, 1));\n  }\n\n  list<pair<int, int>>::iterator it;\n  \/*for (i=0;i<n*p+2;i++){\n    cout << i << \": \";\n    for (it=adj[i].begin();it!=adj[i].end();it++) cout << it->first << \":\" <<\n  it->second << \" \"; cout << endl;\n  }*\/\n\n  return MaximumFlow(adj, n * p + 2, 0, n * p + 1);\n}\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"rata.in\");\n  outfile.open(\"rata.txt\");\n  int i, j, k, t, n, p;\n  infile >> t;\n  for (j = 0; j < t; j++) {\n    infile >> n >> p;\n    int *G = new int[n];\n    int **V = new int *[n];\n    for (i = 0; i < n; i++)\n      V[i] = new int[p];\n    for (i = 0; i < n; i++)\n      infile >> G[i];\n    for (i = 0; i < n; i++)\n      for (k = 0; k < p; k++)\n        infile >> V[i][k];\n    int r = solve(n, p, G, V);\n    outfile << \"Case #\" << j + 1 << \": \" << r << endl;\n    delete[] G;\n    for (i = 0; i < n; i++)\n      delete[] V[i];\n    delete[] V;\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iostream>\n#include <set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nofstream outfile;\n\nvoid calculate(char **g, int r, int c, set<char> ls, char in[1000],\n               int bounds[1000][4]) {\n  int i, j, k, l, temp, temp2;\n  set<char>::iterator it;\n  set<char>::iterator it2;\n  for (i = 0; i < r; i++) {\n    for (j = 0; j < c; j++) {\n      if (g[i][j] == '?') {\n        for (it = ls.begin(); it != ls.end(); it++) {\n          for (k = 0; k < 1000; k++)\n            if (in[k] == *it)\n              break;\n          temp = k;\n          bool breaker = 0;\n          for (it2 = ls.begin(); it2 != ls.end(); it2++) {\n            if (*it == *it2)\n              continue;\n            for (k = 0; k < 1000; k++)\n              if (in[k] == *it2)\n                break;\n            temp2 = k;\n            for (k = bounds[temp2][0]; k <= bounds[temp2][2]; k++) {\n              for (l = bounds[temp2][1]; l <= bounds[temp2][3]; l++) {\n                if (k == i && l == j) {\n                  breaker = 1;\n                  break;\n                }\n              }\n            }\n          }\n          for (k = min(bounds[temp][0], i); k <= max(bounds[temp][2], i); k++) {\n            for (l = min(bounds[temp][1], j); l <= max(bounds[temp][3], j);\n                 l++) {\n              if (g[k][l] != '?' && g[k][l] != *it) {\n                breaker = 1;\n                break;\n              }\n            }\n          }\n          if (!breaker) {\n            g[i][j] = *it;\n            bounds[temp][0] = min(bounds[temp][0], i);\n            bounds[temp][1] = min(bounds[temp][1], j);\n            bounds[temp][2] = max(bounds[temp][2], i);\n            bounds[temp][3] = max(bounds[temp][3], j);\n          }\n        }\n      }\n    }\n  }\n  for (i = 0; i < r; i++) {\n    for (j = 0; j < c; j++)\n      outfile << g[i][j];\n    outfile << endl;\n  }\n}\n\nint main() {\n  ifstream infile;\n  infile.open(\"cake.in\");\n  outfile.open(\"cake.txt\");\n  int i, j, k, t, r, c;\n  infile >> t;\n  for (i = 0; i < t; i++) {\n    int counter = 0;\n    infile >> r >> c;\n    set<char> ls;\n    char in[1000];\n    int bounds[1000][4];\n    char **g = new char *[r];\n    for (j = 0; j < r; j++)\n      g[j] = new char[c];\n    for (j = 0; j < r; j++) {\n      for (k = 0; k < c; k++) {\n        infile >> g[j][k];\n        if (g[j][k] != '?') {\n          ls.insert(g[j][k]);\n          in[counter] = g[j][k];\n          bounds[counter][0] = j;\n          bounds[counter][1] = k;\n          bounds[counter][2] = j;\n          bounds[counter][3] = k;\n          counter++;\n        }\n      }\n    }\n    outfile << \"Case #\" << i + 1 << \": \" << endl;\n    calculate(g, r, c, ls, in, bounds);\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <algorithm>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"horse.in\");\n  outfile.open(\"horse.txt\");\n  double i, j, t, n, p, d, speed;\n  infile >> t;\n  for (i = 0; i < t; i++) {\n    infile >> d >> n;\n    vector<pair<double, double>> hs;\n    for (j = 0; j < n; j++) {\n      infile >> p >> speed;\n      hs.push_back(make_pair(p, speed));\n    }\n    sort(hs.begin(), hs.end());\n    double minp = hs[0].first, mins = hs[0].second;\n    for (j = 1; j < hs.size(); j++) {\n      if ((hs[j].first - minp) \/ (mins - hs[j].second) >= 0 &&\n          ((hs[j].first - minp) \/ (mins - hs[j].second)) * mins + minp <= d) {\n        minp = hs[j].first;\n        mins = hs[j].second;\n      } else\n        break;\n    }\n    outfile << \"Case #\" << (int)i + 1 << \": \";\n    outfile << setprecision(6) << fixed << d \/ ((d - minp) \/ mins) << endl;\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iostream>\n#include <queue>\n#include <utility>\nusing namespace std;\n\nint main() {\n  ifstream infile;\n  ofstream outfile;\n  infile.open(\"unicorn.in\");\n  outfile.open(\"unicorn.txt\");\n  int i, j, t, n, r, o, y, g, b, v;\n  infile >> t;\n  for (i = 0; i < t; i++) {\n    infile >> n >> r >> o >> y >> g >> b >> v;\n    if (r > n \/ 2 || y > n \/ 2 || b > n \/ 2) {\n      outfile << \"Case #\" << i + 1 << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n    priority_queue<pair<int, char>> order;\n    order.push(make_pair(r, 'R'));\n    order.push(make_pair(y, 'Y'));\n    order.push(make_pair(b, 'B'));\n    char *circle = new char[n];\n    for (j = 0; j < n; j++)\n      circle[j] = ' ';\n    char color = order.top().second;\n    int amount = order.top().first;\n    order.pop();\n    int copy = n - amount, copy2 = amount;\n    priority_queue<int> distances;\n    while (copy > 0) {\n      distances.push(copy \/ copy2);\n      copy = copy - copy \/ copy2;\n      copy2--;\n    }\n    j = 0;\n    while (!distances.empty()) {\n      circle[j] = color;\n      j += distances.top() + 1;\n      distances.pop();\n    }\n    char prev = color;\n    color = order.top().second;\n    amount = order.top().first;\n    order.pop();\n    for (j = 1; j < n; j++) {\n      if (amount == 0)\n        break;\n      if (circle[j - 1] == prev) {\n        circle[j] = color;\n        amount--;\n      }\n    }\n    color = order.top().second;\n    for (j = 0; j < n; j++)\n      if (circle[j] == ' ')\n        circle[j] = color;\n    outfile << \"Case #\" << i + 1 << \": \";\n    for (j = 0; j < n; j++)\n      outfile << circle[j];\n    outfile << endl;\n  }\n  return 0;\n}\n"}
{"target":"EricXu","func":"#include <fstream>\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nint T, N, Q, U, V;\nint *E, *S;\nlong long *D;\n\nlong long dist(int i, int j) {\n  int k;\n  long long s = 0;\n  for (k = i; k < j; k++) {\n    s += D[k];\n  }\n  return s;\n}\n\ndouble mymin(double a, double b) {\n  if (a == -1.0)\n    return b;\n  else\n    return min(a, b);\n}\n\ndouble solve() {\n  int i, j;\n  double *M;\n  M = new double[N];\n  M[0] = 0;\n  long long td;\n  for (i = 1; i < N; i++) {\n    M[i] = -1.0;\n    for (j = 0; j < i; j++) {\n      td = dist(j, i);\n      if (E[j] >= td)\n        M[i] = mymin(M[i], M[j] + 1.0 * td \/ S[j]);\n    }\n  }\n  double r = M[N - 1];\n  delete[] M;\n  return r;\n}\n\nint main() {\n  int i, j, k, temp;\n  ifstream infile(\"pony.in\");\n  ofstream outfile;\n  outfile.open(\"pony.txt\");\n  infile >> T;\n  for (i = 0; i < T; i++) {\n    infile >> N >> Q;\n    E = new int[N];\n    S = new int[N];\n    D = new long long[N];\n    for (j = 0; j < N; j++)\n      infile >> E[j] >> S[j];\n    for (j = 0; j < N; j++) {\n      for (k = 0; k < N; k++) {\n        if (k == j + 1)\n          infile >> D[j];\n        else\n          infile >> temp;\n      }\n    }\n    for (j = 0; j < Q; j++) {\n      infile >> U >> V;\n    }\n    double r = solve();\n    outfile << \"Case #\" << i + 1 << \": \" << setprecision(10) << r << endl;\n    delete[] E;\n    delete[] S;\n    delete[] D;\n  }\n  outfile.close();\n  infile.close();\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\nmap<char, char> inv;\n\nbool is_tidy(string s) {\n  int l = s.size();\n  char cur = s[0];\n\n  for (int i = (1); i < (l); i++) {\n    if (cur > s[i])\n      return (false);\n    cur = s[i];\n  }\n\n  return (true);\n}\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int t, l;\n  cin >> t;\n  string n;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> n;\n    l = n.size();\n    vector<string> cnd;\n    if (is_tidy(n))\n      cnd.push_back(n);\n    string acum = \"\";\n    for (int i = 0; i < (l); i++) {\n      char c = (char)(n[i] - 1);\n      string aux = acum + c;\n      for (int j = (i + 1); j < (l); j++)\n        aux += '9';\n      if (is_tidy(aux))\n        cnd.push_back(aux);\n      acum += n[i];\n    }\n\n    sort(cnd.begin(), cnd.end());\n    int u = cnd.size() - 1;\n    int j = 0;\n    while (cnd[u][j] == '0')\n      j++;\n    string ans = \"\";\n    for (int k = (j); k < (cnd[u].size()); k++)\n      ans += cnd[u][k];\n\n    cout << \"Case #\" << caso << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int t;\n  tint n, k;\n\n  cin >> t;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> n >> k;\n    tint b = 62;\n    while (k < (1ll << b))\n      b--;\n    \/\/ cout << k << \" \"  << b << \" \" << (1ll << b) << endl;\n    tint nn = n + 1 - (1ll << b);\n    tint q = nn \/ (1ll << b);\n    tint r = nn % (1ll << b);\n    \/\/ cout << nn << \" \"  << q << \" \" << r << endl;\n\n    tint kk = k + 1 - (1ll << b);\n    tint ma, mi;\n    if (kk <= r)\n      q++;\n    q--;\n    ma = (q + 1ll) \/ 2ll;\n    mi = q \/ 2ll;\n\n    cout << \"Case #\" << caso << \": \" << ma << \" \" << mi << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\nmap<char, char> inv;\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  inv['-'] = '+';\n  inv['+'] = '-';\n  int t, k;\n  string s;\n\n  cin >> t;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> s >> k;\n    int l = s.size();\n\n    int ans = 0;\n    for (int i = 0; i < (l + 1 - k); i++) {\n      if (s[i] == '-') {\n        for (int j = (i); j < (i + k); j++)\n          s[j] = inv[s[j]];\n        ans++;\n      }\n    }\n    bool check = true;\n    for (int i = 0; i < (l); i++) {\n      check = check and s[i] == '+';\n    }\n    cout << \"Case #\" << caso << \": \";\n    if (check)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\n\nint r[55];\nint q[55][55];\npar cand[55][55];\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n  int n, p;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> n >> p;\n    vector<int> l;\n    for (int i = 0; i < (n); i++)\n      cin >> r[i];\n    bool used[55][55];\n    for (int i = 0; i < (n); i++)\n      for (int j = 0; j < (n); j++)\n        used[i][j] = false;\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (p); j++)\n        cin >> q[i][j];\n    }\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (p); j++) {\n        int a = (100 * q[i][j] + 110 * r[i] - 1) \/ (110 * r[i]);\n        a = max(a, 1);\n        int b = (100 * q[i][j]) \/ (90 * r[i]);\n        if (a <= b)\n          l.push_back(a);\n        par p;\n        p.first = b - a;\n        p.second = b;\n        cand[i][j] = p;\n      }\n      sort(cand[i], cand[i] + p);\n    }\n    sort(l.begin(), l.end());\n    int ans = 0;\n\n    for (int m = 0; m < (l.size()); m++) {\n      bool ok = true;\n      int k = l[m];\n      int ac[55];\n      for (int i = 0; i < (n); i++) {\n        bool oki = false;\n        for (int j = 0; j < (p); j++) {\n          if (!used[i][j]) {\n            int a = cand[i][j].second - cand[i][j].first;\n            int b = cand[i][j].second;\n            if (a <= k and k <= b) {\n              \/\/ used[i][j] = true;\n              ac[i] = j;\n              oki = true;\n              break;\n            }\n          }\n        }\n        if (!oki) {\n          ok = false;\n          break;\n        }\n      }\n\n      if (ok) {\n        \/\/ cout << k << endl;\n        for (int i = 0; i < (n); i++)\n          used[i][ac[i]] = true;\n        ans++;\n      }\n    }\n\n    cout << \"Case #\" << caso << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\n\nstring cake[50];\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n  int r, c;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> r >> c;\n\n    bool in[50];\n    int mh[50], mah[50], ml[50], mal[50];\n\n    for (int i = 0; i < (50); i++) {\n      mh[i] = 100;\n      ml[i] = 100;\n      in[i] = false;\n      mah[i] = 0;\n      mal[i] = 0;\n    }\n    \/\/ cout << \"init\" << endl;\n\n    for (int i = 0; i < (r); i++)\n      cin >> cake[i];\n\n    int co = 0;\n\n    for (char l = 'A'; l <= 'Z'; l++) {\n      for (int i = 0; i < (r); i++) {\n        for (int j = 0; j < (c); j++) {\n          if (cake[i][j] == l) {\n            in[co] = true;\n            mh[co] = min(mh[co], i);\n            mah[co] = max(mh[co], i);\n            ml[co] = min(ml[co], j);\n            mal[co] = max(mal[co], j);\n          }\n        }\n      }\n      co++;\n    }\n\n    for (int i = 0; i < (40); i++) {\n      if (in[i]) {\n        char l = (char)('A' + i);\n        for (int a = mh[i]; a <= mah[i]; a++) {\n          for (int b = ml[i]; b <= mal[i]; b++) {\n            cake[a][b] = l;\n          }\n        }\n      }\n    }\n    \/\/ horizontal\n    for (int i = 0; i < (40); i++) {\n      if (in[i]) {\n        char l = (char)('A' + i);\n        \/\/ cout << l << endl;\n        int mml = ml[i];\n        int mmal = mal[i];\n\n        for (int k = (mal[i] + 1); k < (c); k++) {\n          bool ext = true;\n          for (int j = (mh[i]); j < (mah[i] + 1); j++) {\n            if (cake[j][k] != '?') {\n              ext = false;\n              break;\n            }\n          }\n          if (ext) {\n            mmal++;\n            for (int j = (mh[i]); j < (mah[i] + 1); j++) {\n              cake[j][k] = l;\n            }\n          } else\n            break;\n        }\n        for (int k = ml[i] - 1; k >= 0; k--) {\n          bool ext = true;\n          for (int j = (mh[i]); j < (mah[i] + 1); j++) {\n            if (cake[j][k] != '?') {\n              ext = false;\n              break;\n            }\n          }\n          if (ext) {\n            mml--;\n            for (int j = (mh[i]); j < (mah[i] + 1); j++) {\n              cake[j][k] = l;\n            }\n          } else\n            break;\n        }\n        ml[i] = mml;\n        mal[i] = mmal;\n        \/\/ cout << ml[i] << \" \" << mal[i] << \" \" << mh[i] << \" \" << mah[i] <<\n        \/\/ endl;\n      }\n    }\n\n    \/\/ vertical\n    for (int i = 0; i < (40); i++) {\n      if (in[i]) {\n        char l = (char)('A' + i);\n        int mmh = mh[i];\n        int mmah = mah[i];\n        for (int k = (mah[i] + 1); k < (r); k++) {\n          bool ext = true;\n          for (int j = (ml[i]); j < (mal[i] + 1); j++) {\n            if (cake[k][j] != '?') {\n              ext = false;\n              break;\n            }\n          }\n          if (ext) {\n            mmah++;\n            for (int j = (ml[i]); j < (mal[i] + 1); j++) {\n              cake[k][j] = l;\n            }\n          } else\n            break;\n        }\n        for (int k = mh[i] - 1; k >= 0; k--) {\n          bool ext = true;\n          for (int j = (ml[i]); j < (mal[i] + 1); j++) {\n            if (cake[k][j] != '?') {\n              ext = false;\n              break;\n            }\n          }\n          if (ext) {\n            mmh--;\n            for (int j = (ml[i]); j < (mal[i] + 1); j++) {\n              cake[k][j] = l;\n            }\n          } else\n            break;\n        }\n        mh[i] = mmh;\n        mah[i] = mmah;\n      }\n    }\n\n    cout << \"Case #\" << caso << \": \" << endl;\n    for (int i = 0; i < (r); i++)\n      cout << cake[i] << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int tint;\ntypedef pair<tint, tint> par;\n\npar h[1100];\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int t, n, d;\n  cin >> t;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> d >> n;\n    for (int i = 0; i < (n); i++)\n      cin >> h[i].first >> h[i].second;\n    sort(h, h + n);\n\n    int next = n - 1;\n\n    for (int i = (n - 2); i >= 0; i--) {\n      \/\/ cout << h[i].x << \" \" << h[i].y << endl;\n      if (h[i].second > h[next].second) {\n        par q =\n            make_pair(h[next].first - h[i].first, h[i].second - h[next].second);\n        par arr = make_pair(d - h[next].first, h[next].second);\n        \/\/ cout << i << \" \" << next << endl;\n        \/\/ cout << q.x << \" \" << q.y << endl;\n        \/\/ cout << arr.x << \" \" << arr.y << endl;\n        if (q.first * arr.second >= q.second * arr.first) {\n          next = i;\n        }\n      } else\n        next = i;\n    }\n    \/\/ cout << next << endl;\n\n    par arr = make_pair(d - h[next].first, h[next].second);\n    double ans = d * arr.second \/ (arr.first + 0.0);\n    cout.setf(ios::showpoint | ios::fixed);\n    cout.precision(10);\n\n    cout << \"Case #\" << caso << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> par;\ntypedef long long int tint;\n\nstring solve(int R, int Y, int B) {\n  int aux[3];\n  aux[0] = R;\n  aux[1] = Y;\n  aux[2] = B;\n  for (int i = 0; i < (3); i++) {\n    if (aux[i] < 0)\n      return \"IMPOSSIBLE\";\n  }\n  string l;\n\n  if (R >= Y) {\n    if (Y >= B)\n      l = \"RYB\";\n    else {\n      if (B > R) {\n        l = \"BRY\";\n        aux[0] = B;\n        aux[1] = R;\n        aux[2] = Y;\n      } else {\n        l = \"RBY\";\n        aux[0] = R;\n        aux[1] = B;\n        aux[2] = Y;\n      }\n    }\n  } else {\n    if (R >= B) {\n      l = \"YRB\";\n      aux[0] = Y;\n      aux[1] = R;\n      aux[2] = B;\n    } else {\n      if (B >= Y) {\n        l = \"BYR\";\n        aux[0] = B;\n        aux[1] = Y;\n        aux[2] = R;\n      } else {\n        l = \"YBR\";\n        aux[0] = Y;\n        aux[1] = B;\n        aux[2] = R;\n      }\n    }\n  }\n\n  if (aux[0] > (aux[1] + aux[2]))\n    return \"IMPOSSIBLE\";\n\n  string ans = \"\";\n  for (int i = 0; i < (aux[1] - aux[2]); i++) {\n    ans += l[0];\n    ans += l[1];\n  }\n  aux[0] -= (aux[1] - aux[2]);\n  aux[1] = aux[2];\n  for (int i = 0; i < (aux[0]); i++) {\n    if (i & 1) {\n      ans += l[0];\n      ans += l[1];\n      aux[1]--;\n    } else {\n      ans += l[0];\n      ans += l[2];\n      aux[2]--;\n    }\n  }\n  if (aux[0] & 1) {\n    ans += l[1];\n    aux[1]--;\n  }\n  for (int i = 0; i < (aux[2]); i++) {\n    ans += l[2];\n    ans += l[1];\n  }\n\n  return (ans);\n}\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int t, N;\n  cin >> t;\n  int R, O, Y, G, B, V;\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> N;\n    cin >> R >> O >> Y >> G >> B >> V;\n    R -= G;\n    Y -= V;\n    B -= O;\n    if (R == 0 and G) {\n      if (N == 2 * G) {\n        string ans = \"\";\n        for (int i = 0; i < (N \/ 2); i++) {\n          ans += \"RG\";\n        }\n        cout << \"Case #\" << caso << \": \" << ans << endl;\n      } else {\n        cout << \"Case #\" << caso << \": \"\n             << \"IMPOSSIBLE\" << endl;\n      }\n      continue;\n    }\n    if (Y == 0 and V) {\n      if (N == 2 * V) {\n        string ans = \"\";\n        for (int i = 0; i < (N \/ 2); i++) {\n          ans += \"YV\";\n        }\n        cout << \"Case #\" << caso << \": \" << ans << endl;\n      } else {\n        cout << \"Case #\" << caso << \": \"\n             << \"IMPOSSIBLE\" << endl;\n      }\n      continue;\n    }\n    if (B == 0 and O) {\n      if (N == 2 * O) {\n        string ans = \"\";\n        for (int i = 0; i < (N \/ 2); i++) {\n          ans += \"BO\";\n        }\n        cout << \"Case #\" << caso << \": \" << ans << endl;\n      } else {\n        cout << \"Case #\" << caso << \": \"\n             << \"IMPOSSIBLE\" << endl;\n      }\n      continue;\n    }\n\n    \/\/ cout << R << \" \" << Y << \" \" << B << endl;\n    string ans = solve(R, Y, B);\n    string a = \"\";\n    int l = ans.size();\n    if (ans == \"IMPOSSIBLE\")\n      a = ans;\n    else {\n      int o = 0;\n      int g = 0;\n      int v = 0;\n      for (int i = 0; i < (l); i++) {\n        a += ans[i];\n        if (ans[i] == 'R' and g < G) {\n          a += \"GR\";\n          g++;\n        }\n        if (ans[i] == 'Y' and v < V) {\n          a += \"VY\";\n          v++;\n        }\n        if (ans[i] == 'B' and o < O) {\n          a += \"OB\";\n          o++;\n        }\n      }\n    }\n\n    cout << \"Case #\" << caso << \": \" << a << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"eugenus","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int tint;\ntypedef pair<int, int> par;\n\ntint d[110][110];\nint e[110];\nint s[110];\npar qu[110];\n\ndouble dp[110][110];\n\nint main() {\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"out2.txt\", \"w\", stdout);\n\n  int t, n, q;\n  cin >> t;\n\n  for (int caso = (1); caso < (t + 1); caso++) {\n    cin >> n >> q;\n    \/\/ cout << n << \" \" << q << endl;\n    for (int i = 0; i < (n); i++)\n      cin >> e[i + 1] >> s[i + 1];\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++)\n        cin >> d[i + 1][j + 1];\n    }\n    for (int i = 0; i < (q); i++) {\n      cin >> qu[i].first >> qu[i].second;\n    }\n    tint acum[110];\n    acum[1] = 0;\n    for (int i = 0; i < (110); i++)\n      for (int j = 0; j < (110); j++)\n        dp[i][j] = -1;\n    dp[2][1] = d[1][2] \/ (s[1] + 0.0);\n    for (int i = (2); i < (n + 1); i++)\n      acum[i] = acum[i - 1] + d[i - 1][i];\n    \/\/ forn(i,n+1) cout << acum[i] << \" \";\n    \/\/ cout << endl;\n\n    for (int i = (3); i < (n + 1); i++) {\n      for (int j = (1); j < (i); j++) {\n        tint dis = (acum[i] - acum[j]);\n        if (dis <= e[j] and dis >= 0) {\n          double t = dis \/ (s[j] + 0.0);\n          double m = -1;\n          for (int k = (1); k < (j); k++) {\n            if (dp[j][k] >= 0.0) {\n              if (m > -1)\n                m = min(m, dp[j][k]);\n              else\n                m = dp[j][k];\n            }\n          }\n          if (m >= 0)\n            dp[i][j] = t + m;\n        }\n      }\n    }\n    double ans = -1;\n    for (int i = (1); i < (n); i++) {\n      if (dp[n][i] >= 0.0) {\n        if (ans >= 0.0)\n          ans = min(ans, dp[n][i]);\n        else\n          ans = dp[n][i];\n      }\n    }\n\n    cout.setf(ios::showpoint | ios::fixed);\n    cout.precision(10);\n\n    cout << \"Case #\" << caso << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"evenharder","func":"#include <stdio.h>\n#include <string.h>\n\nvoid process() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int t_ = 1; t_ <= t; t_++) {\n    char a[30] = {};\n    a[0] = '0';\n    scanf(\"%s\", a + 1);\n    int l = strlen(a);\n    int piv = -1;\n    while (1) {\n      int flag = 0;\n      for (int i = 0; i < l - 1; i++) {\n        if (a[i] > a[i + 1]) {\n          a[i] = a[i] - 1;\n          piv = i;\n          for (int j = piv + 1; j < l; j++) {\n            a[j] = '9';\n          }\n          flag = 1;\n          break;\n        }\n      }\n      if (!flag)\n        break;\n    }\n    printf(\"Case #%d: \", t_);\n    int zero = 1;\n    for (zero = 1; zero < l; zero++) {\n      if (a[zero] != '0')\n        break;\n    }\n    puts(a + zero);\n  }\n}\n\nint main() { process(); }\n"}
{"target":"evenharder","func":"#include <algorithm>\n#include <functional>\n#include <map>\n#include <stdio.h>\n\ntypedef long long int ll;\n\nvoid process() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int t_ = 1; t_ <= t; t_++) {\n    ll n, k, x;\n    scanf(\"%lld%lld\", &n, &k);\n    std::map<ll, ll, std::greater<ll>> m;\n    m[n] = 1LL;\n    x = 0LL;\n    while (1) {\n      ll num = m.begin()->first;  \/\/ m['n']\n      ll siz = m.begin()->second; \/\/ 'm[n]'\n      ll l = num \/ 2;\n      ll r = (num - 1) \/ 2;\n      if (x + siz >= k) {\n        printf(\"Case #%d: \", t_);\n        printf(\"%lld %lld\\n\", l, r);\n        break;\n      } else {\n        m.erase(m.begin());\n        m[l] = m[l] + siz;\n        m[r] = m[r] + siz;\n        x = x + siz;\n      }\n    }\n  }\n}\n\nint main() { process(); }\n"}
{"target":"evenharder","func":"#include <stdio.h>\n#include <string.h>\n\nint a[1003];\n\nvoid process() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    char a[1003] = {};\n    int k;\n    int ans = 0;\n    int flag = 0;\n    scanf(\"%s%d\", a, &k);\n    int l = strlen(a);\n    for (int j = 0; j <= l - k; j++) {\n      if (a[j] == '-') {\n        for (int x = j; x < j + k; x++) {\n          if (a[x] == '-')\n            a[x] = '+';\n          else\n            a[x] = '-';\n        }\n        ans++;\n      }\n    }\n    for (int j = l - k; j < l; j++) {\n      if (a[j] == '-') {\n        flag = 1;\n        break;\n      }\n    }\n    printf(\"Case #%d: \", i + 1);\n    if (flag)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n}\n\nint main() { process(); }\n"}
{"target":"evenharder","func":"#include <algorithm>\n#include <cmath>\n#include <stdio.h>\n#include <string.h>\n#include <utility>\n\nint n, p;\nint s[51];\nint a[51][51];\nint l[51];                 \/\/ index\nstd::pair<int, int> d[51]; \/\/ number of sets\nint done;\nint ans;\nstd::pair<int, int> getRange(int x, int b) {\n  return std::make_pair(int(ceil(x \/ (1.1 * b))), int(floor(x \/ (0.9 * b))));\n}\nstd::pair<int, int> getIntersect(std::pair<int, int> p1,\n                                 std::pair<int, int> p2) {\n  if (p1.first > p2.first) {\n    return getIntersect(p2, p1);\n  }\n  return std::make_pair(p2.first, std::min(p1.second, p2.second));\n}\nvoid recur(int x) {\n  if (done)\n    return;\n  if (x > n) {\n    ans++;\n    done = 1;\n    return;\n  }\n  while (l[x] <= p) {\n    auto pi = getRange(a[x][l[x]], s[x]);\n    if (pi.first <= pi.second) {\n      d[x] = getIntersect(d[x - 1], pi);\n      if (d[x - 1].second < d[x].first)\n        return;\n      if (d[x].first <= d[x].second) {\n        recur(x + 1);\n        if (done)\n          return;\n      }\n    }\n    l[x]++;\n  }\n  done = 2;\n  return;\n}\nvoid process() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int t_ = 0; t_ < t; t_++) {\n    memset(l, 0, sizeof(l));\n    memset(d, 0, sizeof(d));\n    done = 0;\n    ans = 0;\n    scanf(\"%d%d\", &n, &p);\n    d[0] = std::make_pair(0, 1000000);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &s[i]);\n      l[i] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        scanf(\"%d\", &a[i][j]);\n      }\n      std::sort(a[i] + 1, a[i] + p + 1);\n    }\n    while (done != 2) {\n      done = 0;\n      recur(1);\n      for (int i = 1; i <= n; i++) {\n        l[i]++;\n      }\n    }\n    printf(\"Case #%d: \", t_ + 1);\n    printf(\"%d\\n\", ans);\n  }\n}\n\nint main() { process(); }\n"}
{"target":"evenharder","func":"#include <stdio.h>\n#include <string.h>\n\nchar a[30][30];\nint r, c;\nvoid process() {\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int t_ = 0; t_ < t; t_++) {\n    memset(a, 0, sizeof(a));\n    scanf(\"%d%d\", &r, &c);\n    for (int i = 0; i < r; i++) {\n      scanf(\"%s\", a[i]);\n    }\n\n    int done = -1;\n    for (int i = 0; i < r; i++) {\n      int cnt = 0;\n      char prev = '?';\n      for (int j = 0; j < c; j++) {\n        if (a[i][j] != '?') {\n          if (cnt == 0) {\n            for (int k = 0; k < j; k++)\n              a[i][k] = a[i][j];\n          }\n          prev = a[i][j];\n          cnt++;\n        } else {\n          a[i][j] = prev;\n        }\n      }\n      if (cnt) {\n        if (done == -1) {\n          for (int k = 0; k < i; k++)\n            for (int j = 0; j < c; j++)\n              a[k][j] = a[i][j];\n        }\n        done = i;\n      } else if (~done) {\n        for (int k = done + 1; k <= i; k++)\n          for (int j = 0; j < c; j++)\n            a[k][j] = a[done][j];\n      }\n    }\n    printf(\"Case #%d:\\n\", t_ + 1);\n    for (int i = 0; i < r; i++) {\n      puts(a[i]);\n    }\n  }\n}\n\nint main() { process(); }\n"}
{"target":"evenharder","func":"#include <algorithm>\n#include <functional>\n#include <stdio.h>\n#include <string.h>\n#include <utility>\n#include <vector>\n\ntypedef std::pair<long long int, long long int> lp;\nint a[1003];\n\nvoid process(int TEST_CASE) {\n  long long int dest;\n  int n;\n  std::vector<lp> horse;\n\n  scanf(\"%lld%d\", &dest, &n);\n  for (int i = 0; i < n; i++) {\n    long long int pos, vel;\n    scanf(\"%lld%lld\", &pos, &vel);\n    horse.push_back(std::make_pair(pos, vel));\n  }\n  std::sort(horse.begin(), horse.end(), std::greater<lp>());\n\n  double ans = 0.0;\n  for (int i = 0; i < horse.size(); i++) {\n    double est = (double)(dest - horse[i].first) \/ (horse[i].second);\n    ans = std::max(ans, est);\n  }\n\n  printf(\"Case #%d: %.6lf\\n\", TEST_CASE, dest \/ ans);\n}\n\nint main() {\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 1; i <= t; i++) {\n    process(i);\n  }\n}\n"}
{"target":"evenharder","func":"#include <algorithm>\n#include <stdio.h>\n#include <string.h>\n\nvoid process(int TEST_CASE) {\n  int n, r, o, y, g, b, v;\n  int flag = 0;\n  scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n\n  int a[1001];\n  memset(a, -1, sizeof(a));\n  int m = std::max(std::max(r, y), b);\n  if (n \/ 2 < m)\n    flag = 1;\n  if (flag == 0) {\n    int c;\n    if (m == r)\n      c = 0;\n    else if (m == y)\n      c = 1;\n    else\n      c = 2;\n    int x[3] = {};\n    x[0] = r;\n    x[1] = y;\n    x[2] = b;\n    for (int i = 0; i < m; i++)\n      a[2 * i] = c;\n\n    for (int i = 0; i < n; i++) {\n      if (a[i] == -1) {\n        if (x[(c + 1) % 3] > x[(c + 2) % 3]) {\n          a[i] = (c + 1) % 3;\n          x[(c + 1) % 3]--;\n        } else {\n          a[i] = (c + 2) % 3;\n          x[(c + 2) % 3]--;\n        }\n      }\n    }\n  }\n  printf(\"Case #%d: \", TEST_CASE);\n  if (flag)\n    printf(\"IMPOSSIBLE\");\n  else {\n    for (int i = 0; i < n; i++) {\n      switch (a[i]) {\n      case 0:\n        printf(\"R\");\n        r--;\n        break;\n      case 1:\n        printf(\"Y\");\n        y--;\n        break;\n      case 2:\n        printf(\"B\");\n        b--;\n        break;\n      }\n    }\n  }\n  puts(\"\");\n}\n\nint main() {\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 1; i <= t; i++) {\n    process(i);\n  }\n}\n"}
{"target":"evenharder","func":"#include <algorithm>\n#include <queue>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\n\ntypedef std::pair<int, int> pi;\nconst int INF_INT = 1000000007;\nconst double INF_DOU = 3e11;\n\nint data[103][103];\ndouble rdata[103][103];\n\nvoid floyd(int siz_, std::vector<pi> &horse) {\n  for (int i = 0; i < siz_; i++) {\n    for (int j = 0; j < siz_; j++) {\n      if (i == j)\n        data[i][j] = 0;\n      if (data[i][j] == -1)\n        data[i][j] = INF_INT;\n    }\n  }\n  for (int k = 0; k < siz_; k++) {\n    for (int i = 0; i < siz_; i++) {\n      for (int j = 0; j < siz_; j++) {\n        if (data[i][j] > data[i][k] + data[k][j]) {\n          data[i][j] = data[i][k] + data[k][j];\n        }\n      }\n    }\n  }\n  for (int i = 0; i < siz_; i++) {\n    for (int j = 0; j < siz_; j++) {\n      if (data[i][j] <= horse[i].first) {\n        rdata[i][j] = data[i][j] \/ (double)horse[i].second;\n      } else {\n        rdata[i][j] = INF_DOU;\n      }\n    }\n  }\n  for (int k = 0; k < siz_; k++) {\n    for (int i = 0; i < siz_; i++) {\n      for (int j = 0; j < siz_; j++) {\n        if (rdata[i][j] > rdata[i][k] + rdata[k][j]) {\n          rdata[i][j] = rdata[i][k] + rdata[k][j];\n        }\n      }\n    }\n  }\n}\n\nvoid process(int TEST_CASE) {\n  int n, q;\n  std::vector<pi> horse;\n  memset(data, 0, sizeof(data));\n  memset(data, 0, sizeof(rdata));\n\n  scanf(\"%d%d\", &n, &q);\n  for (int i = 0; i < n; i++) {\n    int e, s;\n    scanf(\"%d%d\", &e, &s);\n    horse.push_back(std::make_pair(e, s));\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      scanf(\"%d\", &data[i][j]);\n    }\n  }\n  floyd(n, horse);\n  printf(\"Case #%d: \", TEST_CASE);\n  for (int i = 0; i < q; i++) {\n    int q1, q2;\n    scanf(\"%d%d\", &q1, &q2);\n    printf(\"%.6lf \", rdata[q1 - 1][q2 - 1]);\n  }\n  puts(\"\");\n}\n\nint main() {\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 1; i <= t; i++) {\n    process(i);\n  }\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nvoid printcase(int k, ll ans) {\n  cout << \"Case #\" << k << \": \";\n  cout << ans << endl;\n}\n\nint main() {\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    ll x;\n    cin >> x;\n    vector<int> dt;\n    while (x)\n      dt.push_back(x % 10), x \/= 10;\n    reverse(dt.begin(), dt.end());\n    set<ll> ans;\n    ll nowx = 0;\n    for (int i = 0; i < dt.size(); ++i) {\n      if (!i || dt[i - 1] < dt[i]) {\n        ll nowy = nowx * 10ll;\n        nowy += dt[i] - 1;\n        for (int j = i + 1; j < dt.size(); ++j)\n          nowy *= 10ll, nowy += 9;\n        ans.insert(nowy);\n      }\n      if (!i || dt[i - 1] <= dt[i])\n        nowx *= 10, nowx += dt[i];\n      else\n        break;\n    }\n    ans.insert(nowx);\n    printcase(tt + 1, *ans.rbegin());\n  }\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <set>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nvoid printcase(int k, ll a, ll b) {\n  cout << \"Case #\" << k << \": \";\n  cout << a << ' ' << b << endl;\n}\n\nvector<bool> field;\n\npair<ll, ll> getans(ll k) {\n  vector<int> lefts(field.size()), rights(field.size());\n  int pastl = -1;\n  int pastr = field.size();\n  for (int i = 0, j = field.size() - 1; i < field.size(); ++i, --j) {\n    lefts[i] = i - pastl - 1;\n    rights[j] = pastr - j - 1;\n    if (field[i])\n      pastl = i;\n    if (field[j])\n      pastr = j;\n  }\n\n  pair<ll, ll> bestans = {-1, -1};\n  int ind = 0;\n  for (int i = 0; i < field.size(); ++i) {\n    if (!field[i]) {\n      if (min(bestans.first, bestans.second) < min(lefts[i], rights[i])) {\n        bestans = {lefts[i], rights[i]}, ind = i;\n      } else {\n        if (min(bestans.first, bestans.second) == min(lefts[i], rights[i]))\n          if (max(bestans.first, bestans.second) < max(lefts[i], rights[i]))\n            bestans = {lefts[i], rights[i]}, ind = i;\n      }\n    }\n  }\n  field[ind] = 1;\n  if (k != 1)\n    return getans(k - 1);\n  return {max(bestans.first, bestans.second),\n          min(bestans.first, bestans.second)};\n}\n\nint main() {\n  \/\/#ifdef _DEBUG\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  \/\/#endif\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    ll k, n;\n    cin >> n >> k;\n    field.assign(n, 0);\n    pair<ll, ll> ans = getans(k);\n    printcase(tt + 1, ans.first, ans.second);\n  }\n\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    string str;\n    cin >> str;\n    int k;\n    cin >> k;\n    int cnt = 0;\n    for (int i = 0; i + k - 1 < str.size(); ++i) {\n      if (str[i] == '-') {\n        cnt++;\n        for (int j = i; j < i + k; ++j)\n          str[j] = str[j] == '-' ? '+' : '-';\n      }\n    }\n    bool okfl = 1;\n    for (int i = 0; i < str.size(); ++i)\n      if (str[i] == '-')\n        okfl = 0;\n\n    cout << \"Case #\" << tt + 1 << \": \";\n    if (okfl) {\n      cout << cnt;\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll dd = 1e6;\nconst ll inf = 1e9 + 7;\n\nconst double eps = 1e-8;\n\nmultiset<ll> dt;\n\nint main() {\n  \/\/#ifdef _DEBUG\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  \/\/#endif\n\n  ll t;\n  cin >> t;\n  for (ll tt = 0; tt < t; ++tt) {\n    cerr << tt << endl;\n    ll n, m;\n    cin >> n >> m;\n    vector<ll> recipe;\n    vector<vector<ll>> twopack(n, vector<ll>(m));\n    for (ll i = 0; i < n; ++i) {\n      ll x;\n      cin >> x;\n      recipe.push_back(x);\n    }\n    for (ll i = 0; i < n; ++i)\n      for (ll j = 0; j < m; ++j)\n        cin >> twopack[i][j];\n    ll gans = 0;\n    {\n      vector<vector<ll>> pack = twopack;\n      for (ll i = 0; i < n; ++i)\n        sort(pack[i].begin(), pack[i].end());\n      ll llans = 0;\n      for (ll k = 1; k < 1000001; ++k) {\n        ll ans = inf;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110)\n              ++cnt;\n          }\n          ans = min(cnt, ans);\n          if (ans == 0)\n            break;\n        }\n        if (ans == 0)\n          continue;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110) {\n              if (cnt < ans)\n                pack[i][j] = 0;\n              ++cnt;\n            }\n          }\n        }\n        if (ans != 0)\n          llans += ans;\n      }\n      gans = max(gans, llans);\n    }\n    {\n      vector<vector<ll>> pack = twopack;\n      for (ll i = 0; i < n; ++i)\n        sort(pack[i].rbegin(), pack[i].rend());\n      ll llans = 0;\n      for (ll k = 1; k < 1000001; ++k) {\n        ll ans = inf;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110)\n              ++cnt;\n          }\n          ans = min(cnt, ans);\n          if (ans == 0)\n            break;\n        }\n        if (ans == 0)\n          continue;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110) {\n              if (cnt < ans)\n                pack[i][j] = 0;\n              ++cnt;\n            }\n          }\n        }\n        if (ans != 0)\n          llans += ans;\n      }\n      gans = max(gans, llans);\n    }\n    for (ll r = 0; r < 5; ++r) {\n      vector<vector<ll>> pack = twopack;\n      for (ll i = 0; i < n; ++i)\n        random_shuffle(pack[i].begin(), pack[i].end());\n      ll llans = 0;\n      for (ll k = 1; k < 1000001; ++k) {\n        ll ans = inf;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110)\n              ++cnt;\n          }\n          ans = min(cnt, ans);\n          if (ans == 0)\n            break;\n        }\n        if (ans == 0)\n          continue;\n        for (ll i = 0; i < n; ++i) {\n          ll cnt = 0;\n          for (ll j = 0; j < m; ++j) {\n            ll x;\n            x = pack[i][j];\n            if (90 <= x * 100 \/ (recipe[i] * k) &&\n                x * 100 \/ (recipe[i] * k) <= 110) {\n              if (cnt < ans)\n                pack[i][j] = 0;\n              ++cnt;\n            }\n          }\n        }\n        if (ans != 0)\n          llans += ans;\n      }\n      gans = max(gans, llans);\n    }\n    cout << \"Case #\" << tt + 1 << \": \" << gans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int dd = 1e6;\nconst int inf = 1e9 + 7;\n\nconst double eps = 1e-8;\n\nmultiset<ll> dt;\n\nint main() {\n  \/\/#ifdef _DEBUG\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  \/\/#endif\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<char>> a(n, vector<char>(m));\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < m; ++j)\n        cin >> a[i][j];\n    for (int i = 0; i < n; ++i) {\n      char pastc = '?';\n      for (int j = 0; j < m; ++j) {\n        if (a[i][j] == '?')\n          a[i][j] = pastc;\n        else\n          pastc = a[i][j];\n      }\n      for (int j = m - 1; j >= 0; --j) {\n        if (a[i][j] == '?')\n          a[i][j] = pastc;\n        else\n          pastc = a[i][j];\n      }\n    }\n    for (int j = 0; j < m; ++j) {\n      char pastc = '?';\n      for (int i = 0; i < n; ++i) {\n        if (a[i][j] == '?')\n          a[i][j] = pastc;\n        else\n          pastc = a[i][j];\n      }\n      for (int i = n - 1; i >= 0; --i) {\n        if (a[i][j] == '?')\n          a[i][j] = pastc;\n        else\n          pastc = a[i][j];\n      }\n    }\n    cout << \"Case #\" << tt + 1 << \":\\n\";\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j)\n        cout << a[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst long double inf = 1e18 + 7;\n\nconst long double eps = 1e-18;\n\nint gcd(int a, int b) {\n  while (a && b)\n    a %= b, swap(a, b);\n  return a + b;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    long double d;\n    int n;\n    cin >> d >> n;\n    long double maxt = 0;\n    for (int i = 0; i < n; ++i) {\n      long double x, v;\n      cin >> x >> v;\n      maxt = max(maxt, (d - x) \/ v);\n    }\n    cout.precision(10);\n    cout << \"Case #\" << tt + 1 << \": \" << fixed << d \/ maxt << endl;\n  }\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst long double inf = 1e18 + 7;\n\nconst long double eps = 1e-18;\n\nvoid fail(int tt) { cout << \"Case #\" << tt + 1 << \": IMPOSSIBLE\\n\"; }\n\nvoid ok(string ans, int tt) {\n  cout << \"Case #\" << tt + 1 << \": \" << ans << \"\\n\";\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    int rr = R;\n    int yy = Y;\n    int bb = B;\n    string ans;\n    char cr = 'R';\n    char cb = 'B';\n    char cy = 'Y';\n    if (Y >= R && Y >= B) {\n      cr = 'Y', cb = 'B', cy = 'R';\n      swap(Y, R);\n    } else if (B >= R && B >= Y) {\n      cr = 'B', cb = 'R', cy = 'Y';\n      swap(B, R);\n    }\n    string buf(R, cr);\n    for (int i = 0; i < Y; ++i)\n      ans.push_back(buf.back()), ans.push_back(cy), buf.pop_back();\n    ans = ans + buf;\n    buf = ans;\n    ans = \"\";\n    for (int i = 0; i < B; ++i)\n      ans.push_back(cb), ans.push_back(buf.back()), buf.pop_back();\n    while (buf.size())\n      ans.push_back(buf.back()), buf.pop_back();\n\n    bool okfl = 1;\n    for (int i = 0; i < ans.size(); ++i)\n      if (ans[i] == ans[(i + 1) % ans.size()]) {\n        fail(tt), okfl = 0;\n        break;\n      }\n\n    for (auto x : ans) {\n      if (x == 'R')\n        --rr;\n      if (x == 'Y')\n        --yy;\n      if (x == 'B')\n        --bb;\n    }\n    if (rr != 0)\n      assert(0);\n    if (bb != 0)\n      assert(0);\n    if (yy != 0)\n      assert(0);\n    if (okfl) {\n      ok(ans, tt);\n    }\n  }\n  return 0;\n}\n"}
{"target":"evgenstf","func":"#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst long double inf = 1e18 + 7;\n\nconst long double eps = 1e-8;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n\n  int t;\n  cin >> t;\n  for (int tt = 0; tt < t; ++tt) {\n    int n, q;\n    cin >> n >> q;\n    vector<pair<int, ll>> hourses;\n    for (int i = 0; i < n; ++i) {\n      int s;\n      ll v;\n      cin >> s >> v;\n      hourses.push_back({s, v});\n    }\n\n    vector<ll> roads;\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j) {\n        int x;\n        cin >> x;\n        if (x != -1)\n          roads.push_back(x);\n      }\n\n    int a, b;\n    cin >> a >> b;\n    vector<long double> dp(n, inf);\n    dp[0] = 0;\n    for (int i = 0; i < n; ++i) {\n      ll snow = 0;\n      int j = 1;\n      while (i + j < n && snow <= hourses[i].first) {\n        snow += roads[i + j - 1];\n        if (!(snow <= hourses[i].first))\n          break;\n        dp[i + j] =\n            min(dp[i + j], dp[i] + ((long double)snow) \/ hourses[i].second);\n        j++;\n      }\n    }\n    cout << \"Case #\" << tt + 1 << \": \";\n    cout.precision(10);\n    cout << fixed << dp[n - 1] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    string N;\n    cin >> N;\n    for (int i = 0; i < (int)N.size() - 1; i++) {\n      if (N[i] > N[i + 1]) {\n        while (i > 0 && N[i] == N[i - 1])\n          i--;\n        N[i]--;\n        i++;\n        while (i < (int)N.size()) {\n          N[i] = '9';\n          i++;\n        }\n        break;\n      }\n    }\n    if (N[0] == '0')\n      N = N.substr(1);\n    cout << \"Case #\" << caso << \": \" << N << endl;\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    long long N, K;\n    cin >> N >> K;\n    map<long long, long long> dicc;\n    dicc[N] = 1;\n    map<long long, long long>::iterator it = dicc.end();\n    it--;\n    while (K > it->second) {\n      if ((it->first) & 1) {\n        dicc[(it->first) >> 1] += 2 * (it->second);\n      } else {\n        dicc[(it->first) >> 1] += it->second;\n        dicc[((it->first) >> 1) - 1] += it->second;\n      }\n      K -= (it->second);\n      it--;\n    }\n    int izq, der;\n    izq = (it->first) >> 1;\n    der = izq;\n    if (!((it->first) & 1))\n      izq--;\n    dicc.clear();\n    cout << \"Case #\" << caso << \": \" << max(izq, der) << \" \" << min(izq, der)\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    string S;\n    int K, res = 0;\n    bool pos = true;\n    cin >> S >> K;\n    for (int i = 0; i < (int)S.size() - K + 1; i++) {\n      if (S[i] == '+')\n        continue;\n      res++;\n      for (int j = 0; j < K; j++) {\n        if (S[i + j] == '-') {\n          S[i + j] = '+';\n        } else {\n          S[i + j] = '-';\n        }\n      }\n    }\n    for (int i = 0; i < (int)S.size(); i++) {\n      if (S[i] == '-')\n        pos = false;\n    }\n\n    cout << \"Case #\" << caso << \": \";\n    if (!pos)\n      cout << \"IMPOSSIBLE\" << endl;\n    if (pos)\n      cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    int N, P;\n    cin >> N >> P;\n    vector<int> need(N);\n    for (int i = 0; i < N; i++) {\n      cin >> need[i];\n    }\n    vector<vector<int>> pack(N, vector<int>(P));\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> pack[i][j];\n      }\n    }\n\n    int res = -1;\n\n    if (N == 1) {\n      res = 0;\n      for (int i = 0; i < P; i++) {\n        bool sirve = (int)(ceil((double)pack[0][i] \/ (1.1 * need[0]))) <=\n                     (int)(floor((double)pack[0][i] \/ (0.9 * need[0])));\n        if (sirve)\n          res++;\n      }\n    } else {\n      res = 0;\n      sort(pack[0].begin(), pack[0].end());\n      do {\n        int act = 0;\n        for (int i = 0; i < P; i++) {\n          int bajo = (int)(ceil((double)pack[0][i] \/ (1.1 * need[0])));\n          int alto = (int)(floor((double)pack[0][i] \/ (0.9 * need[0])));\n          if (bajo > alto)\n            continue;\n          int bajo2 = (int)(ceil((double)pack[1][i] \/ (1.1 * need[1])));\n          int alto2 = (int)(floor((double)pack[1][i] \/ (0.9 * need[1])));\n          if (bajo2 > alto2)\n            continue;\n          if (bajo > alto2)\n            continue;\n          if (alto < bajo2)\n            continue;\n          act++;\n        }\n        res = max(res, act);\n      } while (next_permutation(pack[0].begin(), pack[0].end()));\n    }\n    cout << \"Case #\" << caso << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    int R, C;\n    cin >> R >> C;\n    vector<string> cake;\n    string aux;\n    for (int i = 0; i < R; i++) {\n      cin >> aux;\n      cake.push_back(aux);\n    }\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (cake[i][j] == '?')\n          continue;\n        for (int a = 0; a <= i; a++) {\n          for (int b = 0; b <= j; b++) {\n            if (cake[a][b] == '?')\n              cake[a][b] = cake[i][j];\n          }\n        }\n      }\n      for (int a = 0; a <= i; a++) {\n        char last;\n        bool some = false;\n        for (int j = 0; j < C; j++) {\n          if (cake[a][j] != '?') {\n            last = cake[a][j];\n            some = true;\n          }\n        }\n        if (!some)\n          continue;\n        for (int j = 0; j < C; j++) {\n          if (cake[a][j] == '?')\n            cake[a][j] = last;\n        }\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      if (cake[i][0] == '?')\n        cake[i] = cake[i - 1];\n    }\n\n    cout << \"Case #\" << caso << \":\" << endl;\n    for (int i = 0; i < R; i++) {\n      cout << cake[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    int D, N;\n    double Ks[1005], Ss[1005];\n    cin >> D >> N;\n    for (int i = 0; i < N; i++) {\n      cin >> Ks[i] >> Ss[i];\n    }\n    double times[1005];\n    for (int i = 0; i < N; i++) {\n      times[i] = (D - Ks[i]) \/ Ss[i];\n    }\n\n    sort(times, times + N);\n    double res = D \/ times[N - 1];\n    \/\/~ double inf, med, sup;\n    \/\/~ inf = 1.;\n\n    \/\/~ while(abs(sup-inf)>1e-7){\n    \/\/~ med = (inf+sup)\/2.;\n\n    \/\/~ }\n\n    cout << \"Case #\" << caso << \": \";\n    printf(\"%.6lf\\n\", res);\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    bool puedo = true;\n    if (N < 2 * R)\n      puedo = false;\n    if (N < 2 * Y)\n      puedo = false;\n    if (N < 2 * B)\n      puedo = false;\n    cout << \"Case #\" << caso << \": \";\n    if (!puedo) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    vector<pair<int, char>> vec;\n    vec.push_back(pair<int, char>(R, 'R'));\n    vec.push_back(pair<int, char>(Y, 'Y'));\n    vec.push_back(pair<int, char>(B, 'B'));\n    sort(vec.begin(), vec.end());\n    int dif = vec[2].first - vec[1].first;\n    string res = \"\";\n    for (int i = 0; i < dif; i++) {\n      res.push_back(vec[2].second);\n      res.push_back(vec[1].second);\n      res.push_back(vec[2].second);\n      res.push_back(vec[0].second);\n    }\n    for (int i = 0; i < vec[0].first - dif; i++) {\n      res.push_back(vec[2].second);\n      res.push_back(vec[1].second);\n      res.push_back(vec[0].second);\n    }\n    int act = 2;\n    while ((int)res.size() < N) {\n      if (act == 2) {\n        res.push_back(vec[2].second);\n        act = 1;\n      } else {\n        res.push_back(vec[1].second);\n        act = 2;\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"FedePousa","func":"\n\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint T;\nint N, Q;\nint Es[105], Ss[105];\nint dist[105][105];\ndouble memo[105][105];\n\ndouble solve(int from, int to, int horse, int acum) {\n  if (from == to)\n    return 0.0;\n  if (memo[from][horse] > -0.5)\n    return memo[from][horse];\n  double res = 1e100;\n  if (dist[from][from + 1] <= Es[horse] - acum)\n    res = min(res, ((double)(dist[from][from + 1]) \/ (double)(Ss[horse])) +\n                       solve(from + 1, to, horse, acum + dist[from][from + 1]));\n  if (dist[from][from + 1] <= Es[from])\n    res = min(res, ((double)(dist[from][from + 1]) \/ (double)(Ss[from])) +\n                       solve(from + 1, to, from, dist[from][from + 1]));\n  memo[from][horse] = res;\n  return res;\n}\n\nint main() {\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    cin >> N >> Q;\n    for (int i = 0; i < N; i++) {\n      cin >> Es[i] >> Ss[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> dist[i][j];\n      }\n    }\n    cout << \"Case #\" << caso << \":\";\n    for (int i = 0; i < Q; i++) {\n      int U, V;\n      cin >> U >> V;\n      for (int a = 0; a < 105; a++) {\n        for (int b = 0; b < 105; b++) {\n          memo[a][b] = -1;\n        }\n      }\n      double res = solve(U - 1, V - 1, U - 1, 0);\n      printf(\" %.6lf\", res);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll dp[20][10][2]; \/\/ [N][last][se]\n\nvoid solve() {\n  ll N;\n  cin >> N;\n\n  memset(dp, -1, sizeof dp);\n\n  string s = to_string(N);\n  reverse(s.begin(), s.end());\n\n  int n = s.size();\n  dp[0][9][1] = 0;\n  ll cur = 0;\n  for (int i = 0; i < n; i++) {\n    cur += (ll)pow(10, i) * (s[i] - '0');\n    \/\/ cerr << cur << endl;\n    for (int j = 0; j < 10; j++) {\n      for (int k = 0; k < 2; k++) {\n        if (dp[i][j][k] == -1)\n          continue;\n        ll d = dp[i][j][k];\n        for (int l = 0; l <= j; l++) {\n          ll nd = d + (ll)pow(10, i) * l;\n          int nse = nd <= cur;\n          dp[i + 1][l][nse] = max(dp[i + 1][l][nse], nd);\n        }\n      }\n    }\n  }\n  ll ans = 0;\n  for (int i = 0; i < 10; i++) {\n    ans = max(ans, dp[n][i][1]);\n  }\n  cout << ans << endl;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ntypedef pair<ll, ll> Pll;\nPll f(ll n) {\n  if (n % 2)\n    return {n \/ 2, n \/ 2};\n  return {n \/ 2 - 1, n \/ 2};\n}\n\nstruct S {\n  ll N, left, pos, maxS, minS;\n  S(ll n, ll pos, ll left) : N(n), pos(pos), left(left) {\n    Pll p = f(n);\n    maxS = max(p.first, p.second);\n    minS = min(p.first, p.second);\n  }\n  bool operator<(const S &x) const {\n    if (x.minS != minS)\n      return minS < x.minS;\n    if (x.maxS != maxS)\n      return maxS < x.maxS;\n    return pos > x.pos;\n  }\n};\n\nvoid solve() {\n  ll N, K;\n  cin >> N >> K;\n  if (N == K) {\n    cout << \"0 0\" << endl;\n    return;\n  }\n\n  priority_queue<S> q;\n  q.push(S(N, (N - 1) \/ 2, 0));\n  for (int i = 0; i < K; i++) {\n    S s = q.top();\n    q.pop();\n    ll n = s.N;\n    ll left = s.left;\n    ll pos = s.pos;\n    Pll p = f(n);\n    S s1 = S(p.first, left + (p.first - 1) \/ 2, left);\n    S s2 = S(p.second, pos + 1 + (p.second - 1) \/ 2, pos + 1);\n    q.push(s1);\n    q.push(s2);\n    if (i == K - 1) {\n      cout << max(p.first, p.second) << \" \" << min(p.first, p.second) << endl;\n    }\n  }\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nvoid solve() {\n  int K;\n  string S;\n  cin >> S >> K;\n  int N = S.size();\n\n  vector<int> imos(N + 1);\n  int sum = 0, ans = 0;\n  ;\n  for (int i = 0; i < N; i++) {\n    sum += imos[i];\n    int a = ((S[i] == '-') + sum) % 2;\n    if (a) {\n      if (i + K > N) {\n        cout << \"IMPOSSIBLE\" << endl;\n        return;\n      } else {\n        ans++;\n        imos[i + 1]++;\n        imos[i + K]--;\n      }\n    }\n  }\n  cout << ans << endl;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll R[50];\nll Q[50][50];\nll l[50][50];\nll r[50][50];\n\nll lower(ll R, ll q) {\n  ll ok = 0, ng = 1e9;\n  while (abs(ng - ok) > 1) {\n    ll mid = (ng + ok) \/ 2;\n    if (1.1 * R * mid < q)\n      ok = mid;\n    else\n      ng = mid;\n  }\n  return ok + 1;\n}\n\nll upper(ll R, ll q) {\n  ll ng = 0, ok = 1e9;\n  while (abs(ng - ok) > 1) {\n    ll mid = (ng + ok) \/ 2;\n    if (q < 0.9 * R * mid)\n      ok = mid;\n    else\n      ng = mid;\n  }\n  return ok - 1;\n}\n\nvoid solve() {\n  int N, P;\n  cin >> N >> P;\n  for (int i = 0; i < N; i++) {\n    cin >> R[i];\n  }\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < P; j++) {\n      cin >> Q[i][j];\n      ll low = lower(R[i], Q[i][j]);\n      ll upp = upper(R[i], Q[i][j]);\n      l[i][j] = low;\n      r[i][j] = upp;\n    }\n  }\n\n  int ans = 0;\n  if (N == 1) {\n    for (int i = 0; i < P; i++) {\n      if (l[0][i] <= r[0][i])\n        ans++;\n    }\n  } else if (N == 2) {\n    vector<int> id(P);\n    for (int i = 0; i < P; i++) {\n      id[i] = i;\n    }\n    do {\n      int sum = 0;\n      for (int i = 0; i < P; i++) {\n        ll lo = max(l[0][i], l[1][id[i]]);\n        ll hi = min(r[0][i], r[1][id[i]]);\n        if (lo <= hi)\n          sum++;\n      }\n      ans = max(ans, sum);\n    } while (next_permutation(id.begin(), id.end()));\n  } else {\n    ans = -1;\n  }\n\n  cout << ans << endl;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nstring b[25];\n\nvoid solve() {\n  int R, C;\n  cin >> R >> C;\n\n  typedef pair<char, int> P;\n  vector<P> p[25];\n  vector<int> max_x(26, 0);\n  vector<int> max_y(26, 0);\n  vector<int> min_x(26, 1e9);\n  vector<int> min_y(26, 1e9);\n  int r = 1e9;\n  for (int y = 0; y < R; y++) {\n    cin >> b[y];\n    for (int x = 0; x < C; x++) {\n      if (b[y][x] == '?')\n        continue;\n      p[y].push_back({b[y][x], x});\n      max_x[b[y][x] - 'A'] = max(max_x[b[y][x] - 'A'], x);\n      max_y[b[y][x] - 'A'] = max(max_y[b[y][x] - 'A'], y);\n      min_x[b[y][x] - 'A'] = min(min_x[b[y][x] - 'A'], x);\n      min_y[b[y][x] - 'A'] = min(min_y[b[y][x] - 'A'], y);\n      r = min(r, y);\n    }\n  }\n\n  for (int i = 0; i < 26; i++) {\n    if (min_x[i] == 1e9)\n      continue;\n    for (int y = min_y[i]; y <= max_y[i]; y++) {\n      for (int x = min_x[i]; x <= max_x[i]; x++) {\n        b[y][x] = 'A' + i;\n      }\n    }\n  }\n\n  for (int y = r; y < R; y++) {\n    if (p[y].size()) {\n      for (int x = 0; x < p[y][0].second; x++) {\n        if (b[y][x] == '?')\n          b[y][x] = p[y][0].first;\n      }\n    }\n    char c = 'A';\n    for (int x = 0; x < C; x++) {\n      if (b[y][x] == '?') {\n        if (p[y].size() == 0)\n          b[y][x] = b[y - 1][x];\n        else\n          b[y][x] = c;\n      } else {\n        c = b[y][x];\n      }\n    }\n  }\n  for (int y = r - 1; y >= 0; y--) {\n    for (int x = 0; x < C; x++) {\n      if (b[y][x] == '?') {\n        b[y][x] = b[y + 1][x];\n      }\n    }\n  }\n\n  for (int i = 0; i < R; i++) {\n    cout << b[i] << endl;\n    ;\n  }\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \":\" << endl;\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\ndouble K[1000];\ndouble S[1000];\n\nvoid solve() {\n  double D;\n  int N;\n  cin >> D >> N;\n  for (int i = 0; i < N; i++) {\n    cin >> K[i] >> S[i];\n  }\n\n  double t = 0;\n  for (int i = N - 1; i >= 0; i--) {\n    t = max(t, (D - K[i]) \/ S[i]);\n  }\n  cout << fixed << setprecision(15) << D \/ t << endl;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int R = 1;\nconst int Y = 2;\nconst int B = 4;\n\/\/ R O Y G B V\nconst int r = 0;\nconst int o = 1;\nconst int y = 2;\nconst int g = 3;\nconst int b = 4;\nconst int v = 5;\nint C[6] = {R, R + Y, Y, Y + B, B, R + B};\nstring s[6] = {\"R\", \"O\", \"Y\", \"G\", \"B\", \"V\"};\n\nbool check(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) {\n    if (v[i] & v[(i + 1) % v.size()])\n      return false;\n  }\n  return true;\n}\n\nvoid solve() {\n  int cnt[6];\n  int tmp[6];\n  int N;\n  cin >> N;\n  for (int i = 0; i < 6; i++) {\n    cin >> cnt[i];\n    tmp[i] = cnt[i];\n  }\n  if (cnt[o] > cnt[b] + 1 || cnt[g] > cnt[r] + 1 || cnt[v] > cnt[y] + 1) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n\n  cnt[b] -= cnt[o];\n  cnt[r] -= cnt[g];\n  cnt[y] -= cnt[v];\n  int n = cnt[b] + cnt[r] + cnt[y];\n\n  typedef pair<int, int> P;\n  P p[3] = {{cnt[b], b}, {cnt[r], r}, {cnt[y], y}};\n  sort(p, p + 3);\n  reverse(p, p + 3);\n\n  if (p[0].first > p[1].first + p[2].first) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n\n  vector<int> t(p[0].first, 1);\n  int idx = 0;\n  for (int i = 0; i < p[1].first; i++) {\n    t[idx] += 2;\n    idx = (idx + 1) % t.size();\n  }\n  for (int i = 0; i < p[2].first; i++) {\n    t[idx] += 4;\n    idx = (idx + 1) % t.size();\n  }\n\n  vector<int> ans;\n  for (auto x : t) {\n    for (int i = 0; i <= 2; i++) {\n      if ((x >> i & 1) == 0)\n        continue;\n      int c = p[i].second;\n      if (c == b && tmp[o]) {\n        for (int j = 0; j < tmp[o]; j++) {\n          ans.push_back(c);\n          ans.push_back(o);\n        }\n        tmp[o] = 0;\n      }\n      if (c == r && tmp[g]) {\n        for (int j = 0; j < tmp[g]; j++) {\n          ans.push_back(c);\n          ans.push_back(g);\n        }\n        tmp[g] = 0;\n      }\n      if (c == y && tmp[v]) {\n        for (int j = 0; j < tmp[v]; j++) {\n          ans.push_back(c);\n          ans.push_back(v);\n        }\n        tmp[v] = 0;\n      }\n      ans.push_back(c);\n    }\n  }\n  assert(ans.size() == N);\n  assert(check(ans));\n  for (auto x : ans) {\n    cout << s[x];\n  }\n  cout << endl;\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cerr << i << endl;\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"femto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst double INF = 1e15;\ndouble D[100][100];\n\ndouble E[100];\ndouble S[100];\n\ndouble dp[100];\n\ntypedef pair<double, int> P;\nint U[100];\nint V[100];\n\nvoid solve() {\n  int N, Q;\n  cin >> N >> Q;\n\n  for (int i = 0; i < N; i++) {\n    cin >> E[i] >> S[i];\n  }\n\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < N; j++) {\n      cin >> D[i][j];\n      if (D[i][j] == -1)\n        D[i][j] = INF;\n    }\n  }\n  for (int i = 0; i < Q; i++) {\n    cin >> U[i] >> V[i];\n    U[i]--, V[i]--;\n  }\n\n  for (int k = 0; k < N; k++) {\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        D[i][j] = min(D[i][j], D[i][k] + D[k][j]);\n      }\n    }\n  }\n\n  for (int i = 0; i < Q; i++) {\n    fill((double *)begin(dp), (double *)end(dp), INF);\n    priority_queue<P, vector<P>, greater<P>> q;\n    dp[U[i]] = 0;\n    q.push({0, U[i]});\n    while (q.size()) {\n      auto p = q.top();\n      q.pop();\n      double cost = p.first;\n      int v = p.second;\n      if (p.first > dp[v])\n        continue;\n      for (int u = 0; u < N; u++) {\n        if (D[v][u] > E[v])\n          continue;\n        double ncost = cost + D[v][u] \/ S[v];\n        if (dp[u] > ncost) {\n          dp[u] = ncost;\n          q.push({ncost, u});\n        }\n      }\n    }\n    cout << fixed << setprecision(15) << dp[V[i]];\n    if (i == Q - 1)\n      cout << endl;\n    else\n      cout << \" \";\n  }\n}\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n  }\n}\n"}
{"target":"fidels","func":"#include <iostream>\n#include <set>\nusing namespace std;\n\ntypedef unsigned long long tint;\n\nset<tint> n;\n\nvoid dfs(tint cur, tint curd) {\n  n.insert(cur);\n  if (cur < 100000000000000000ULL) {\n    dfs(cur * 10ULL + curd, curd);\n    if (curd < 9)\n      dfs(cur, curd + 1);\n  }\n}\n\nint main() {\n  int T, t;\n  tint N;\n\n  dfs(0, 1);\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N;\n    set<tint>::iterator RES = n.upper_bound(N);\n    RES--;\n    cout << \"Case #\" << t << \": \" << *RES << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <cstring>\n#include <iostream>\nusing namespace std;\n\nint l[1024], r[1024];\nbool n[1024];\n\nint main() {\n  int T, t, N, K, i, k, best;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N >> K;\n\n    memset(n, false, sizeof(n));\n    n[0] = n[N + 1] = true;\n    for (k = 0; k < K; k++) {\n      for (i = 1; i <= N; i++) {\n        if (n[i - 1])\n          l[i] = 0;\n        else\n          l[i] = l[i - 1] + 1;\n      }\n      for (i = N; i >= 0; i--) {\n        if (n[i + 1])\n          r[i] = 0;\n        else\n          r[i] = r[i + 1] + 1;\n      }\n\n      best = -1;\n      for (i = 1; i <= N; i++)\n        if (!n[i]) {\n          if (best == -1 || min(l[i], r[i]) > min(l[best], r[best]) ||\n              (min(l[i], r[i]) == min(l[best], r[best]) &&\n               max(l[i], r[i]) > max(l[best], r[best])))\n            best = i;\n        }\n      n[best] = true;\n    }\n    cout << \"Case #\" << t << \": \" << max(l[best], r[best]) << ' '\n         << min(l[best], r[best]) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <iostream>\nusing namespace std;\n\nchar s[1024];\n\nint main() {\n  int T, t, i, j, K, RES;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> s >> K;\n\n    RES = 0;\n    for (i = 0; s[i + K - 1] != '\\0'; i++)\n      if (s[i] == '-') {\n        for (j = 0; j < K; j++)\n          s[i + j] = ((s[i + j]) == '+' ? '-' : '+');\n        RES++;\n      }\n\n    for (i = 0; s[i] != '\\0'; i++)\n      if (s[i] == '-')\n        break;\n    cout << \"Case #\" << t << \": \";\n    if (s[i] == '-')\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << RES << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <vector>\nusing namespace std;\n\nint find_max(int cant, int req) { return (10 * cant) \/ (9 * req); }\n\nint find_min(int cant, int req) {\n  int tmp = (10 * cant) \/ (11 * req);\n  if ((10 * cant) % (11 * req) != 0)\n    tmp++;\n  return tmp;\n}\n\nbool intersect(int a, int b, int c, int d) {\n  if (b < a || d < c || b < c || a > d)\n    return false;\n  else\n    return true;\n}\n\nint main() {\n  int T, t, N, M, n[2], m[2][8], i, j, RES;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N >> M;\n    for (i = 0; i < N; i++)\n      cin >> n[i];\n    for (i = 0; i < N; i++)\n      for (j = 0; j < M; j++)\n        cin >> m[i][j];\n\n    RES = 0;\n    if (N == 1) {\n      for (i = 0; i < M; i++)\n        if (find_min(m[0][i], n[0]) <= find_max(m[0][i], n[0]))\n          RES++;\n    } else {\n      sort(m[1], m[1] + M);\n\n      do {\n        int tmp = 0;\n        for (i = 0; i < M; i++)\n          if (intersect(find_min(m[0][i], n[0]), find_max(m[0][i], n[0]),\n                        find_min(m[1][i], n[1]), find_max(m[1][i], n[1])))\n            tmp++;\n        RES = max(RES, tmp);\n      } while (next_permutation(m[1], m[1] + M));\n    }\n    cout << \"Case #\" << t << \": \" << RES << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <iostream>\nusing namespace std;\n\nint main() {\n  int T, t, R, C, i, j;\n  char m[32][32];\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> R >> C;\n    for (i = 0; i < R; i++)\n      for (j = 0; j < C; j++)\n        cin >> m[i][j];\n\n    for (i = 0; i < R; i++)\n      for (j = 1; j < C; j++)\n        if (m[i][j] == '?' && m[i][j - 1] != '?')\n          m[i][j] = m[i][j - 1];\n    for (i = 0; i < R; i++)\n      for (j = C - 2; j >= 0; j--)\n        if (m[i][j] == '?' && m[i][j + 1] != '?')\n          m[i][j] = m[i][j + 1];\n\n    for (i = 1; i < R; i++)\n      if (m[i][0] == '?' && m[i - 1][0] != '?')\n        for (j = 0; j < C; j++)\n          m[i][j] = m[i - 1][j];\n    for (i = R - 2; i >= 0; i--)\n      if (m[i][0] == '?' && m[i + 1][0] != '?')\n        for (j = 0; j < C; j++)\n          m[i][j] = m[i + 1][j];\n\n    cout << \"Case #\" << t << \":\" << endl;\n    for (i = 0; i < R; i++) {\n      for (j = 0; j < C; j++)\n        cout << m[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int T, t, D, N, i, K, S;\n  double TIME;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> D >> N;\n\n    TIME = 0.0;\n    for (i = 0; i < N; i++) {\n      cin >> K >> S;\n      TIME = max(TIME, (D - K) \/ ((double)S));\n    }\n    printf(\"Case #%d: %.8lf\\n\", t, D \/ TIME);\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <cstring>\n#include <iostream>\n#include <vector>\nusing namespace std;\nstruct node {\n  vector<int> c;\n  int point;\n} n[2048];\n\nstruct edge {\n  int a, b, cd, cr, f;\n} e[2097152];\n\nint EDGES;\n\nvoid init(int N) {\n  for (int i = 0; i < N; i++)\n    n[i].c.clear();\n  EDGES = 0;\n}\n\nvoid add_edge(int a, int b, int cd, int cr) {\n  e[EDGES].a = a;\n  e[EDGES].b = b;\n  e[EDGES].cd = cd;\n  e[EDGES].cr = cr;\n  n[e[EDGES].a].c.push_back(EDGES);\n  n[e[EDGES].b].c.push_back(EDGES);\n  EDGES++;\n}\n\nbool bfs(int *r, int N, int SOURCE, int SINK) {\n  int i, S, E, s[2048], cur, next, cure;\n\n  for (i = 0; i < N; i++) {\n    r[i] = -1;\n    n[i].point = 0;\n  }\n  r[SOURCE] = 0;\n  S = E = 0;\n  s[E++] = SOURCE;\n  while (S < E) {\n    cur = s[S++];\n    for (i = 0; i < (int)n[cur].c.size(); i++) {\n      cure = n[cur].c[i];\n      next = (e[(cure)].a == cur ? e[(cure)].b : e[(cure)].a);\n      if (r[next] == -1 &&\n          ((cur) == e[(cure)].a ? e[(cure)].cd - e[(cure)].f\n                                : e[(cure)].cr + e[(cure)].f) > 0) {\n        s[E++] = next;\n        r[next] = r[cur] + 1;\n      }\n    }\n  }\n  return r[SINK] != -1;\n}\n\nint dfs(int *r, int SOURCE, int SINK, int cur, int flowcap) {\n  if (cur == SINK)\n    return flowcap;\n\n  int curflow = 0;\n  for (; curflow < flowcap && n[cur].point < (int)n[cur].c.size();\n       n[cur].point++) {\n    int cure = n[cur].c[n[cur].point];\n    int next = (e[(cure)].a == cur ? e[(cure)].b : e[(cure)].a);\n\n    if (r[next] == r[cur] + 1 &&\n        ((cur) == e[(cure)].a ? e[(cure)].cd - e[(cure)].f\n                              : e[(cure)].cr + e[(cure)].f) > 0) {\n      int tmp = dfs(r, SOURCE, SINK, next,\n                    min(flowcap - curflow,\n                        ((cur) == e[(cure)].a ? e[(cure)].cd - e[(cure)].f\n                                              : e[(cure)].cr + e[(cure)].f)));\n      curflow += tmp;\n      if (cur == e[cure].a)\n        e[cure].f += tmp;\n      else\n        e[cure].f -= tmp;\n    }\n  }\n  return curflow;\n}\n\nint dinic(int N, int SOURCE, int SINK) {\n  int r[2048];\n  for (int i = 0; i < EDGES; i++)\n    e[i].f = 0;\n\n  int FLOW = 0;\n  while (bfs(r, N, SOURCE, SINK))\n    FLOW += dfs(r, SOURCE, SINK, SOURCE, 1000000000);\n  return FLOW;\n}\n\nint R, O, Y, G, B, V, sig[2048];\nbool v[2048];\nchar last;\n\nchar color(int id) {\n  if (0 <= id && id < R)\n    return 'R';\n  if (R <= id && id < R + O)\n    return 'O';\n  if (R + O <= id && id < R + O + Y)\n    return 'Y';\n  if (R + O + Y <= id && id < R + O + Y + G)\n    return 'G';\n  if (R + O + Y + G <= id && id < R + O + Y + G + B)\n    return 'B';\n  if (R + O + Y + G + B <= id && id < R + O + Y + G + B + V)\n    return 'V';\n}\n\nvoid print(int cur) {\n  do {\n    cout << color(cur);\n    v[cur] = true;\n    last = color(cur);\n    cur = sig[cur];\n  } while (!v[cur]);\n}\n\nint main() {\n  int T, t, N, i, j, SOURCE, SINK;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    init(2 * N + 2);\n    SOURCE = 2 * N;\n    SINK = 2 * N + 1;\n    for (i = 0; i < N; i++)\n      add_edge(SOURCE, i, 1, 0);\n    for (i = N; i < 2 * N; i++)\n      add_edge(i, SINK, 1, 0);\n    for (i = 0; i < R; i++)\n      for (j = R + O; j < R + O + Y; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = 0; i < R; i++)\n      for (j = R + O + Y + G; j < R + O + Y + G + B; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = 0; i < R; i++)\n      for (j = R + O + Y; j < R + O + Y + G; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O + Y + G; i < R + O + Y + G + B; i++)\n      for (j = R + O; j < R + O + Y; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O + Y + G; i < R + O + Y + G + B; i++)\n      for (j = 0; j < R; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O + Y + G; i < R + O + Y + G + B; i++)\n      for (j = R; j < R + O; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O; i < R + O + Y; i++)\n      for (j = 0; j < R; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O; i < R + O + Y; i++)\n      for (j = R + O + Y + G; j < R + O + Y + G + B; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O; i < R + O + Y; i++)\n      for (j = R + O + Y + G + B; j < R + O + Y + G + B + V; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R; i < R + O; i++)\n      for (j = R + O + Y + G; j < R + O + Y + G + B; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O + Y; i < R + O + Y + G; i++)\n      for (j = 0; j < R; j++)\n        add_edge(i, N + j, 1, 0);\n    for (i = R + O + Y + G + B; i < R + O + Y + G + B + V; i++)\n      for (j = R + O; j < R + O + Y; j++)\n        add_edge(i, N + j, 1, 0);\n\n    cout << \"Case #\" << t << \": \";\n    if (dinic(2 * N + 2, SOURCE, SINK) == N) {\n      for (i = 0; i < EDGES; i++)\n        if (e[i].a < N && e[i].f == 1)\n          sig[e[i].a] = e[i].b - N;\n\n      memset(v, false, sizeof(v));\n      for (i = R + O + Y + G; i < R + O + Y + G + B; i++)\n        if (!v[i])\n          print(i);\n      if (last == 'Y') {\n        for (i = 0; i < R; i++)\n          if (!v[i])\n            print(i);\n        for (i = R + O + Y + G + B; i < R + O + Y + G + B + V; i++)\n          if (!v[i])\n            print(i);\n      } else {\n        for (i = R + O; i < R + O + Y; i++)\n          if (!v[i])\n            print(i);\n        for (i = R + O + Y; i < R + O + Y + G; i++)\n          if (!v[i])\n            print(i);\n      }\n      cout << endl;\n    } else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"fidels","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int T, t, N, Q, D[128], i, j, k;\n  long long n[128][128];\n  double time[128][128], S[128];\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N >> Q;\n\n    for (i = 1; i <= N; i++)\n      cin >> D[i] >> S[i];\n    for (i = 1; i <= N; i++)\n      for (j = 1; j <= N; j++) {\n        cin >> n[i][j];\n        if (n[i][j] == -1) {\n          if (i == j)\n            n[i][j] = 0;\n          else\n            n[i][j] = 1000000000000000000LL;\n        }\n      }\n\n    for (k = 1; k <= N; k++)\n      for (i = 1; i <= N; i++)\n        for (j = 1; j <= N; j++)\n          if (n[i][j] > n[i][k] + n[k][j])\n            n[i][j] = n[i][k] + n[k][j];\n\n    \/\/\t\tfor (i=1; i<=N; i++) {\n    \/\/\t\t\tfor (j=1; j<=N; j++) cerr << n[i][j] << '\\t';\n    \/\/\t\t\tcerr << endl;\n    \/\/\t\t}\n\n    for (i = 1; i <= N; i++)\n      for (j = 1; j <= N; j++) {\n        if (n[i][j] <= D[i])\n          time[i][j] = n[i][j] \/ S[i];\n        else\n          time[i][j] = 1e18;\n        ;\n      }\n\n    for (k = 1; k <= N; k++)\n      for (i = 1; i <= N; i++)\n        for (j = 1; j <= N; j++)\n          if (time[i][j] > time[i][k] + time[k][j])\n            time[i][j] = time[i][k] + time[k][j];\n\n    \/\/\t\tfor (i=1; i<=N; i++) {\n    \/\/\t\t\tfor (j=1; j<=N; j++) printf(\"%.8lf\\t\", time[i][j]);\n    \/\/\t\t\tcerr << endl;\n    \/\/\t\t}\n\n    printf(\"Case #%d:\", t);\n    for (i = 0; i < Q; i++) {\n      cin >> j >> k;\n      printf(\" %.8lf\", time[j][k]);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nbool check(int n) {\n  while (n > 0) {\n    if (n % 10 < n \/ 10 % 10) {\n      return false;\n    }\n    n \/= 10;\n  }\n  return true;\n}\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    printf(\"Case #%d: \", cc);\n    int n;\n    scanf(\"%d\", &n);\n    int ans = n;\n    while (!check(ans)) {\n      --ans;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstruct E {\n  int l, r;\n  E(int nl, int nr) : l(nl), r(nr) {}\n  bool operator<(const E &o) const {\n    int v = r - l;\n    int ov = o.r - o.l;\n    if (v \/ 2 != ov \/ 2) {\n      return v \/ 2 > ov \/ 2;\n    }\n    if ((v + 1) \/ 2 != (ov + 1) \/ 2) {\n      return (v + 1) \/ 2 > (ov + 1) \/ 2;\n    }\n    return l < o.l;\n  }\n};\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    printf(\"Case #%d: \", cc);\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    set<E> ss = {{0, n + 1}};\n    while (k-- > 1) {\n      int l = ss.begin()->l;\n      int r = ss.begin()->r;\n      ss.erase(ss.begin());\n      int s = (l + r) \/ 2;\n      if (s - l - 1 >= 1) {\n        ss.emplace(l, s);\n      }\n      if (r - s - 1 >= 1) {\n        ss.emplace(s, r);\n      }\n    }\n    int ans = ss.begin()->r - ss.begin()->l;\n    printf(\"%d %d\\n\", (ans + 1) \/ 2 - 1, ans \/ 2 - 1);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar s[77];\nint q[7777];\nint d[7777];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    printf(\"Case #%d: \", cc);\n    int k;\n    scanf(\"%s %d\", s, &k);\n    int n = strlen(s);\n    q[0] = 1 << n;\n    for (int i = 0; i < n; ++i) {\n      if (s[i] == '-') {\n        q[0] |= 1 << (n - 1 - i);\n      }\n    }\n    memset(d, -1, sizeof d);\n    d[q[0]] = 0;\n    for (int qh = 0, qt = 1; qh < qt; ++qh) {\n      int x = q[qh];\n      for (int i = 0; i <= n - k; ++i) {\n        int nx = x ^ (((1 << k) - 1) << i);\n        if (d[nx] == -1) {\n          d[nx] = d[x] + 1;\n          q[qt++] = nx;\n        }\n      }\n    }\n    if (d[1 << n] == -1) {\n      puts(\"IMPOSSIBLE\");\n    } else {\n      printf(\"%d\\n\", d[1 << n]);\n    }\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int inf = 1e8;\nconst int N = 77;\n\nbool check_90(long long have, long long need) {\n  return have * 100 >= 90 * need;\n}\n\nbool check_110(long long have, long long need) {\n  return have * 100 <= 110 * need;\n}\n\nint get_l(int have, int need) {\n  int l = 0, r = inf;\n  while (r - l > 1) {\n    int s = (l + r) \/ 2;\n    if (check_90(have, 1LL * need * s)) {\n      l = s;\n    } else {\n      r = s;\n    }\n  }\n  return l;\n}\n\nint get_r(int have, int need) {\n  int l = 0, r = inf;\n  while (r - l > 1) {\n    int s = (l + r) \/ 2;\n    if (check_110(have, 1LL * need * s)) {\n      r = s;\n    } else {\n      l = s;\n    }\n  }\n  return r;\n}\n\nint need[N];\nint have[N][N];\nint p[N];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    double begt = clock();\n    printf(\"Case #%d: \", cc);\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", need + i);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        scanf(\"%d\", have[i] + j);\n      }\n    }\n    if (n == 1) {\n      int ans = 0;\n      for (int i = 0; i < m; ++i) {\n        int l = get_l(have[0][i], need[0]);\n        int r = get_r(have[0][i], need[0]);\n        swap(l, r);\n        if (l <= r) {\n          ++ans;\n        }\n      }\n      printf(\"%d\\n\", ans);\n      continue;\n    }\n    for (int i = 0; i < m; ++i) {\n      p[i] = i;\n    }\n    int ans = 0;\n    do {\n      int cur = 0;\n      for (int i = 0; i < m; ++i) {\n        int l0 = get_l(have[0][i], need[0]);\n        int r0 = get_r(have[0][i], need[0]);\n        swap(l0, r0);\n        if (l0 > r0) {\n          continue;\n        }\n        int l1 = get_l(have[1][p[i]], need[1]);\n        int r1 = get_r(have[1][p[i]], need[1]);\n        swap(l1, r1);\n        if (l1 > r1) {\n          continue;\n        }\n        int l = max(l0, l1);\n        int r = min(r0, r1);\n        if (l <= r) {\n          ++cur;\n        }\n      }\n      ans = max(ans, cur);\n    } while (next_permutation(p, p + m));\n    printf(\"%d\\n\", ans);\n    fprintf(stderr, \"case %d solved in %.3f\\n\", cc,\n            (clock() - begt) \/ CLOCKS_PER_SEC);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar a[77][77];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    double begt = clock();\n    printf(\"Case #%d:\\n\", cc);\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%s\", a[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m - 1; ++j) {\n        if (a[i][j] != '?' && a[i][j + 1] == '?') {\n          a[i][j + 1] = a[i][j];\n        }\n      }\n      for (int j = m - 1; j > 0; --j) {\n        if (a[i][j] != '?' && a[i][j - 1] == '?') {\n          a[i][j - 1] = a[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < n - 1; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (a[i][j] != '?' && a[i + 1][j] == '?') {\n          a[i + 1][j] = a[i][j];\n        }\n      }\n    }\n    for (int i = n - 1; i > 0; --i) {\n      for (int j = 0; j < m; ++j) {\n        if (a[i][j] != '?' && a[i - 1][j] == '?') {\n          a[i - 1][j] = a[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      printf(\"%s\\n\", a[i]);\n    }\n    fprintf(stderr, \"case %d solved in %.3f\\n\", cc,\n            (clock() - begt) \/ CLOCKS_PER_SEC);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1010;\n\nint a[N];\nlong long b[N];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    double begt = clock();\n    printf(\"Case #%d: \", cc);\n    int d, n;\n    scanf(\"%d %d\", &d, &n);\n    for (int i = 0; i < n; ++i) {\n      int foo, bar;\n      scanf(\"%d %d\", &foo, &bar);\n      a[i] = d - foo;\n      b[i] = 1LL * d * bar;\n    }\n    long double l = 0, r = 1e16;\n    for (int it = 0; it < 1000; ++it) {\n      long double s = (l + r) * 0.5;\n      bool can = true;\n      for (int i = 0; i < n; ++i) {\n        if (b[i] < a[i] * s) {\n          can = false;\n        }\n      }\n      if (can) {\n        l = s;\n      } else {\n        r = s;\n      }\n    }\n    printf(\"%.15f\\n\", (double)((l + r) * 0.5));\n    fprintf(stderr, \"case %d solved in %.3f\\n\", cc,\n            (clock() - begt) \/ CLOCKS_PER_SEC);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\npair<int, int> a[3];\nint z[1010];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    double begt = clock();\n    printf(\"Case #%d: \", cc);\n    int n, R, O, Y, G, B, V;\n    scanf(\"%d %d %d %d %d %d %d\", &n, &R, &O, &Y, &G, &B, &V);\n    a[0] = {R, 0};\n    a[1] = {Y, 1};\n    a[2] = {B, 2};\n    sort(a, a + 3);\n    memset(z, -1, sizeof z);\n    for (int i = 2; i >= 0; --i) {\n      while (a[i].first > 0) {\n        int pos = -1;\n        for (int j = 0; j < n; j += 2) {\n          if (z[j] == -1) {\n            pos = j;\n            break;\n          }\n        }\n        if (pos != -1) {\n          z[pos] = a[i].second;\n          --a[i].first;\n          continue;\n        }\n        for (int j = 1; j < n; j += 2) {\n          if (z[j] == -1) {\n            pos = j;\n            break;\n          }\n        }\n        z[pos] = a[i].second;\n        --a[i].first;\n      }\n    }\n    bool can = true;\n    for (int i = 0; i < n; ++i) {\n      if (z[i] == z[(i + 1) % n]) {\n        can = false;\n      }\n    }\n    if (!can) {\n      puts(\"IMPOSSIBLE\");\n    } else {\n      for (int i = 0; i < n; ++i) {\n        if (z[i] == 0) {\n          putchar('R');\n        } else if (z[i] == 1) {\n          putchar('Y');\n        } else {\n          putchar('B');\n        }\n      }\n      putchar('\\n');\n    }\n    fprintf(stderr, \"case %d solved in %.3f\\n\", cc,\n            (clock() - begt) \/ CLOCKS_PER_SEC);\n  }\n}\n"}
{"target":"fragusbot","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst long long inf = 4e18;\nconst int N = 123;\n\nint a[N];\nint b[N];\nlong long d[N][N];\nlong double f[N];\nbool was[N];\n\nint main() {\n  freopen(\"in\", \"r\", stdin);\n  freopen(\"out\", \"w\", stdout);\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int cc = 1; cc <= tt; ++cc) {\n    double begt = clock();\n    printf(\"Case #%d: \", cc);\n    int n, qq;\n    scanf(\"%d %d\", &n, &qq);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d %d\", a + i, b + i);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        int foo;\n        scanf(\"%d\", &foo);\n        d[i][j] = (foo == -1 ? inf : foo);\n      }\n    }\n    for (int k = 0; k < n; ++k) {\n      for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < n; ++j) {\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n        }\n      }\n    }\n    for (int q = 0; q < qq; ++q) {\n      if (q > 0)\n        putchar(' ');\n      int from, to;\n      scanf(\"%d %d\", &from, &to);\n      --from;\n      --to;\n      for (int i = 0; i < n; ++i) {\n        f[i] = inf;\n      }\n      memset(was, false, sizeof was);\n      was[from] = true;\n      f[from] = 0;\n      int x = from;\n      for (int it = 0; it < n - 1; ++it) {\n        for (int y = 0; y < n; ++y) {\n          if (d[x][y] > a[x]) {\n            continue;\n          }\n          long double cur = f[x] + (long double)d[x][y] \/ b[x];\n          if (cur < f[y]) {\n            f[y] = cur;\n          }\n        }\n        x = -1;\n        for (int y = 0; y < n; ++y) {\n          if (was[y]) {\n            continue;\n          }\n          if (x == -1 || f[y] < f[x]) {\n            x = y;\n          }\n        }\n        was[x] = true;\n      }\n      printf(\"%.15f\", (double)f[to]);\n    }\n    putchar('\\n');\n    fprintf(stderr, \"case %d solved in %.3f\\n\", cc,\n            (clock() - begt) \/ CLOCKS_PER_SEC);\n  }\n}\n"}
{"target":"frankbozar","func":"#include <algorithm>\n#include <cstdio>\n#include <vector>\nusing namespace std;\ntypedef long long lld;\n\nvector<lld> gen(int n = 18) {\n  vector<vector<lld>> a(n + 1);\n  a[0].push_back(0);\n  vector<lld> ans;\n\n  for (int i = 1; i <= n; i++) {\n    for (lld p : a[i - 1]) {\n      for (lld j = max(p % 10, 1LL); j <= 9; j++) {\n        a[i].push_back(p * 10 + j);\n        ans.push_back(p * 10 + j);\n      }\n    }\n  }\n\n  return ans;\n}\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n  vector<lld> t = gen();\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    lld n;\n    scanf(\"%lld\", &n);\n    printf(\"Case #%d: %lld\\n\", cases, *--upper_bound(t.begin(), t.end(), n));\n  }\n}\n"}
{"target":"frankbozar","func":"#include <cstdio>\n#include <map>\nusing namespace std;\ntypedef long long lld;\n\nlld solve(lld n, lld m) {\n  map<lld, lld> M;\n\n  for (M[n] = 1; !M.empty(); M.erase(--M.end())) {\n    lld c = M.rbegin()->second;\n    lld d = M.rbegin()->first - 1;\n    m -= c;\n\n    if (m <= 0)\n      return d;\n\n    if (d > 1)\n      M[d >> 1] += c;\n\n    if (c > 0)\n      M[d - (d >> 1)] += c;\n  }\n\n  return -1;\n}\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    lld n, k;\n    scanf(\"%lld%lld\", &n, &k);\n    lld ans = solve(n, k);\n    printf(\"Case #%d: %lld %lld\\n\", cases, ans - (ans >> 1), ans >> 1);\n  }\n}\n"}
{"target":"frankbozar","func":"#include <cstdio>\n#include <cstring>\n\nint solve(char *s, int m) {\n  int n = strlen(s), ans = 0;\n\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '-') {\n      if (m + i > n)\n        return -1;\n\n      for (int j = 0; j < m; j++)\n        s[i + j] ^= 6;\n\n      ans++;\n    }\n  }\n\n  return ans;\n}\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    printf(\"Case #%d: \", cases);\n    char s[1024] = {0};\n    int k;\n    scanf(\"%s%d\", s, &k);\n    int ans = solve(s, k);\n\n    if (ans < 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n}\n"}
{"target":"frankbozar","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\nint solve(const vector<vector<pair<int, int>>> &p, int n) {\n  const int N = 1 << 20;\n  vector<vector<int>> a(N + 1, vector<int>(n, 0));\n  vector<vector<int>> s(N + 1, vector<int>(n, 0));\n\n  for (int i = 0; i < n; i++)\n    for (const pair<int, int> &d : p[i]) {\n      a[d.first][i]++;\n      s[min(d.second, N)][i]++;\n    }\n\n  a[0].assign(n, 0);\n  vector<int> d(n, 0);\n  int ans = 0;\n\n  for (int i = 1; i < N; i++) {\n    for (int j = 0; j < n; j++) {\n      int tmp = min(s[i][j], d[j]);\n      s[i][j] -= tmp;\n      d[j] -= tmp;\n      a[i][j] += a[i - 1][j] - s[i][j];\n    }\n\n    int cnt = N;\n\n    for (int j = 0; j < n; j++)\n      cnt = min(cnt, a[i][j]);\n\n    for (int j = 0; j < n; j++)\n      d[j] += cnt, a[i][j] -= cnt;\n\n    ans += cnt;\n  }\n\n  return ans;\n}\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    vector<vector<pair<int, int>>> a(n);\n    vector<int> r(n);\n\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &r[i]);\n\n    for (int i = 0; i < n; i++) {\n      double x = r[i] * 1.1;\n      double y = r[i] * 0.9;\n\n      for (int j = 0; j < m; j++) {\n        int p;\n        scanf(\"%d\", &p);\n        a[i].push_back(pair<int, int>(ceil(p \/ x), floor(p \/ y + 1)));\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", cases, solve(a, n));\n  }\n}\n\n\/*\n\n6\n\n2 1\n500 300\n900\n660\n\n2 1\n500 300\n1500\n809\n\n2 2\n50 100\n450 449\n1100 1101\n\n2 1\n500 300\n300\n500\n\n1 8\n10\n11 13 17 11 16 14 12 18\n\n3 3\n70 80 90\n1260 1500 700\n800 1440 1600\n1700 1620 900\n\n*\/\n"}
{"target":"frankbozar","func":"#include <cstdio>\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    int n, m, p = 0;\n    char s[32][32] = {{0}};\n    scanf(\"%d%d\", &n, &m);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", s[i]);\n      int q = 0;\n\n      for (int j = 0; j < m; j++) {\n        if (s[i][j] != '?') {\n          for (int k = p; k <= i; k++)\n            for (int l = q; l <= j; l++)\n              s[k][l] = s[i][j];\n\n          q = j + 1;\n        }\n      }\n\n      if (q != 0) {\n        for (int k = p; k <= i; k++)\n          for (int l = q; l < m; l++)\n            s[k][l] = s[i][q - 1];\n\n        p = i + 1;\n      }\n    }\n\n    for (int i = p; i < n; i++)\n      for (int j = 0; j < m; j++)\n        s[i][j] = s[p - 1][j];\n\n    printf(\"Case #%d:\\n\", cases);\n\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", s[i]);\n  }\n}\n"}
{"target":"frankbozar","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    int d, n;\n    double ans = 0;\n\n    for (scanf(\"%d%d\", &d, &n); n > 0; n--) {\n      double p, s;\n      scanf(\"%lf%lf\", &p, &s);\n      ans = max(ans, (d - p) \/ s);\n    }\n\n    printf(\"Case #%d: %.10f\\n\", cases, d \/ ans);\n  }\n}\n"}
{"target":"frankbozar","func":"#include <algorithm>\n#include <cstdio>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef pair<int, string> data;\nconst string QQ = \"IMPOSSIBLE\";\n\nstring solve(int r, int y, int b) {\n  int n = r + y + b;\n\n  if (r << 1 > n || y << 1 > n || b << 1 > n)\n    return QQ;\n\n  vector<data> a(3);\n  a[0] = data(r, \"R\");\n  a[1] = data(y, \"Y\");\n  a[2] = data(b, \"B\");\n  sort(a.rbegin(), a.rend());\n  r = a[0].first;\n  y = a[1].first;\n  b = a[2].first;\n  string R = a[0].second;\n  string Y = a[1].second;\n  string B = a[2].second;\n  string ans;\n\n  for (int i = 0; i < b - r + y; i++)\n    ans += R + Y + B;\n\n  for (int i = 0; i < r - b; i++)\n    ans += R + Y;\n\n  for (int i = 0; i < r - y; i++)\n    ans += R + B;\n\n  return ans;\n}\n\nstring solve(int n, int r, int o, int y, int g, int b, int v) {\n  string ans = \"\";\n\n  if (n == o + b && o == b) {\n    for (int i = 0; i < b; i++)\n      ans += \"BO\";\n  } else if (n == g + r && g == r) {\n    for (int i = 0; i < r; i++)\n      ans += \"RG\";\n  } else if (n == v + y && v == y) {\n    for (int i = 0; i < y; i++)\n      ans += \"YV\";\n  }\n\n  if (ans != \"\")\n    return ans;\n\n  for (int i = 0; i <= o; i++) {\n    if (i == 0 && o != 0)\n      continue;\n    else if (b < i + o)\n      break;\n\n    for (int j = 0; j <= g; j++) {\n      if (j == 0 && g != 0)\n        continue;\n      else if (r < j + g)\n        break;\n\n      for (int k = 0; k <= v; k++) {\n        if (k == 0 && v != 0)\n          continue;\n        else if (y < k + v)\n          break;\n\n        string tmp = solve(r - g, y - v, b - o);\n\n        if (tmp == QQ)\n          continue;\n\n        int I = i, J = j, K = k;\n\n        for (char C : tmp) {\n          if (C == 'B') {\n            int l = I > 1 ? 1 : I < 1 ? 0 : o - i + 1;\n\n            for (I--; l > 0; l--)\n              ans += \"BO\";\n\n            ans += \"B\";\n          } else if (C == 'R') {\n            int l = J > 1 ? 1 : J < 1 ? 0 : g - j + 1;\n\n            for (J--; l > 0; l--)\n              ans += \"RG\";\n\n            ans += \"R\";\n          } else \/\/ if( C=='Y' )\n          {\n            int l = K > 1 ? 1 : K < 1 ? 0 : v - k + 1;\n\n            for (K--; l > 0; l--)\n              ans += \"YV\";\n\n            ans += \"Y\";\n          }\n        }\n\n        return ans;\n      }\n    }\n  }\n\n  return QQ;\n}\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    int n, r, o, y, g, b, v;\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: %s\\n\", cases, solve(n, r, o, y, g, b, v).c_str());\n  }\n}\n"}
{"target":"frankbozar","func":"#include <algorithm>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n\n  for (int cases = 1; cases <= ncase; cases++) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    vector<double> e(n), s(n);\n    vector<vector<double>> d(n, vector<double>(n));\n\n    for (int i = 0; i < n; i++)\n      scanf(\"%lf%lf\", &e[i], &s[i]);\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        scanf(\"%lf\", &d[i][j]);\n    \/*\n    for(int k=0; k<n; k++)\n        for(int i=0; i<n; i++)\n            for(int j=0; j<n; j++)\n                if( d[i][k]>=0 && d[k][j]>=0 )\n                    d[i][j]=min(d[i][j], d[i][k]+d[k][j]);\n    *\/\n\n    for (printf(\"Case #%d:\", cases); m > 0; m--) {\n      int u, v;\n      u--, v--;\n      scanf(\"%d%d\", &u, &v);\n      vector<double> p(n, 0), t(n, 1e100);\n      t[0] = 0;\n\n      for (int i = 1; i < n; i++)\n        p[i] = p[i - 1] + d[i - 1][i];\n\n      for (int i = 0; i < n; i++)\n        for (int j = i; j < n && p[j] - p[i] <= e[i]; j++)\n          t[j] = min(t[j], t[i] + (p[j] - p[i]) \/ s[i]);\n\n      printf(\" %.10f\", t[n - 1]);\n    }\n\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"fswenton","func":"#include <iostream>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n\n    string s;\n    cin >> s;\n    \/\/ cerr << s << \"\\n\";\n    int i0, i, n = s.length();\n\n    if (n > 1) {\n      for (i0 = 1; i0 < n; ++i0)\n        if (s[i0] < s[i0 - 1])\n          break;\n\n      if (i0 < n) {\n        \/\/ cerr << i0 << \"\\n\";\n\n        \/\/ i0 is position of first actual drop in digit\n        for (i = i0; i < n; ++i)\n          s[i] = '9';\n        --s[--i0];\n\n        \/\/ cerr << \" --> \" << s;\n\n        while (i0 > 0 && s[i0] < s[i0 - 1]) {\n          --s[i0 - 1];\n          s[i0] = '9';\n          --i0;\n        }\n\n        \/\/ cerr << \" --> \" << s;\n\n        if (s[0] == '0')\n          s = s.substr(1);\n\n        \/\/ cerr << \" --> \" << s << \"\\n\";\n      }\n    }\n\n    cout << \" \" << s << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iostream>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n    int i, n, k;\n    cin >> n >> k;\n\n    multiset<int> gaps;\n    gaps.insert(-n);\n\n    int left, right;\n    for (i = 0; i < k; ++i) {\n      int gap = -*gaps.begin();\n      gaps.erase(gaps.begin());\n\n      --gap;\n      right = gap \/ 2;\n      left = gap - right;\n\n      if (left)\n        gaps.insert(-left);\n      if (right)\n        gaps.insert(-right);\n    }\n\n    cout << \" \" << left << \" \" << right;\n\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iostream>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nvoid flip(string &s, int i) { s[i] = ('+' + '-' - s[i]); }\n\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n    string state0;\n    cin >> state0;\n    int k;\n    cin >> k;\n    int i, j, n = state0.length();\n\n    \/\/ cerr << k << \"\\n\";\n\n    map<string, int> flips;\n    multimap<int, string> toDo;\n    toDo.insert(make_pair(0, state0));\n\n    while (!toDo.empty()) {\n      \/\/ dump(flips);\n      \/\/ cerr << \"=====\\n\";\n\n      int flips0 = toDo.begin()->first;\n      string s0 = toDo.begin()->second;\n      toDo.erase(toDo.begin());\n      if (flips.find(s0) != flips.end())\n        continue;\n      flips[s0] = flips0;\n      if (k > n)\n        continue;\n      for (i = 0; i < k; ++i)\n        flip(s0, i);\n\n      i = 0;\n      while (true) {\n        toDo.insert(make_pair(flips0 + 1, s0));\n        if (i + k == n)\n          break;\n        flip(s0, i);\n        flip(s0, i + k);\n        ++i;\n      }\n    }\n\n    map<string, int>::iterator iFlips = flips.find(string(n, '+'));\n    if (iFlips == flips.end())\n      cout << \" IMPOSSIBLE\";\n    else\n      cout << \" \" << iFlips->second;\n\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <algorithm>\n#include <iostream>\n#include <list>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void _dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n\n    int i, j, k, N, P;\n    cin >> N >> P;\n\n    vector<int> needed(N);\n    for (i = 0; i < N; ++i)\n      cin >> needed[i];\n\n    vector<vector<int>> packages(N, vector<int>(P));\n    vector<vector<int>> minPackServings(N, vector<int>(P));\n    vector<vector<int>> maxPackServings(N, vector<int>(P));\n    map<int, vector<set<int>>> kitChoices;\n    map<int, int> maxKitCounts;\n\n    for (i = 0; i < N; ++i)\n      for (j = 0; j < P; ++j) {\n        cin >> packages[i][j];\n        minPackServings[i][j] =\n            (10 * packages[i][j] + 11 * needed[i] - 1) \/ (11 * needed[i]);\n        maxPackServings[i][j] = (10 * packages[i][j]) \/ (9 * needed[i]);\n      }\n\n    int best = 0;\n    \/\/===SMALL===\n\n    if (N == 1) { \/\/ Just see whether you can make something from the packs\n      for (i = 0; i < P; ++i)\n        if (minPackServings[0][i] <= maxPackServings[0][i] &&\n            maxPackServings[0][i] > 0)\n          ++best;\n\n    } else if (N == 2) { \/\/ Look through all possible permutations\n      vector<int> perm(P);\n      int permCount = 0;\n      for (i = 0; i < P; ++i)\n        perm[i] = i;\n      do {\n        int count = 0;\n        for (i = 0; i < P; ++i) {\n          if (minPackServings[0][i] <= maxPackServings[0][i] &&\n              maxPackServings[0][i] > 0 &&\n              minPackServings[1][perm[i]] <= maxPackServings[1][perm[i]] &&\n              maxPackServings[1][perm[i]] > 0 &&\n              minPackServings[0][i] <= maxPackServings[1][perm[i]] &&\n              maxPackServings[0][i] >= minPackServings[1][perm[i]])\n            ++count;\n        }\n        if (count > best)\n          best = count;\n      } while (next_permutation(perm.begin(), perm.end()));\n    }\n\n    cout << \" \" << best;\n\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iostream>\n#include <list>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void _dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\\n\";\n    {\n      cerr << \"iCase\"\n           << \": \" << iCase << \"\\n\";\n    };\n\n    int i, j, R, C;\n    cin >> R >> C;\n    vector<string> cake(R);\n    for (i = 0; i < R; ++i)\n      cin >> cake[i];\n\n    {\n      cerr << \"cake\"\n           << \": \";\n      _dump(cake);\n    };\n\n    for (i = 0; i < R; ++i) {\n      for (j = 0; j < C;)\n        if (cake[i][j] != '?') {\n          char ch = cake[i][j];\n          while (++j < C && cake[i][j] == '?')\n            cake[i][j] = ch;\n        } else\n          ++j;\n\n      for (j = C - 1; j >= 0;)\n        if (cake[i][j] != '?') {\n          char ch = cake[i][j];\n          while (--j >= 0 && cake[i][j] == '?')\n            cake[i][j] = ch;\n        } else\n          --j;\n    }\n\n    string empty(C, '?');\n    for (i = 0; i < R;)\n      if (cake[i] != empty) {\n        string s = cake[i];\n        while (++i < R && cake[i] == empty)\n          cake[i] = s;\n      } else\n        ++i;\n\n    for (i = R - 1; i >= 0;)\n      if (cake[i] != empty) {\n        string s = cake[i];\n        while (--i >= 0 && cake[i] == empty)\n          cake[i] = s;\n      } else\n        --i;\n\n    for (i = 0; i < R; ++i)\n      cout << cake[i] << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void _dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \": \";\n\n    int i, j, d, n;\n    cin >> d >> n;\n    map<double, double> horses; \/\/ pos |--> speed\n    for (i = 0; i < n; ++i) {\n      double pos, speed;\n      cin >> pos >> speed;\n      horses[pos] = speed;\n    }\n\n    {\n      cerr << \"horses\"\n           << \": \";\n      _dump(horses);\n    };\n\n    double slowest = 0.0;\n    for (auto it = horses.begin(); it != horses.end(); ++it) {\n      double time = (d - it->first) \/ it->second;\n      if (time > slowest)\n        slowest = time;\n    }\n\n    cout << setprecision(8) << d \/ slowest;\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iostream>\n#include <list>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void _dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nstring colors = \"ROYGBV\";\n\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n\n    int i, j, n;\n    cin >> n;\n\n    vector<int> count(6, 0);\n    for (i = 0; i < 6; ++i)\n      cin >> count[i];\n\n    {\n      cerr << \"count\"\n           << \": \";\n      _dump(count);\n    };\n\n    int maxChunk = 0, maxChunkStart = 0;\n    for (i = 0; i < 6; ++i) {\n      int chunk = 0;\n      for (j = 0; j <= 1; ++j)\n        chunk += count[(i + j) % 6];\n      if (chunk > maxChunk) {\n        maxChunkStart = i;\n        maxChunk = chunk;\n      }\n    }\n\n    if (maxChunk * 2 > n) {\n      cout << \" IMPOSSIBLE\\n\";\n      continue;\n    }\n\n    maxChunkStart = (maxChunkStart + 1) & (~1);\n    {\n      cerr << \"maxChunk\"\n           << \": \" << maxChunk << \"\\n\";\n    };\n    {\n      cerr << \"maxChunkStart\"\n           << \": \" << maxChunkStart << \"\\n\";\n    };\n\n    \/\/=====SMALL\n    int plus2 = (maxChunkStart + 2) % 6, plus4 = (maxChunkStart + 4) % 6;\n    string sPlus2(maxChunk, ' '), sPlus4(maxChunk, ' ');\n    for (i = 0; i < count[plus2]; ++i)\n      sPlus2[i] = colors[plus2];\n    for (i = 0; i < count[plus4]; ++i)\n      sPlus4[maxChunk - 1 - i] = colors[plus4];\n\n    {\n      cerr << \"sPlus2\"\n           << \": \" << sPlus2 << \"\\n\";\n    };\n    {\n      cerr << \"sPlus4\"\n           << \": \" << sPlus4 << \"\\n\";\n    };\n\n    string result = \"\";\n    for (i = 0; i < maxChunk; ++i) {\n      result += colors[maxChunkStart];\n      if (sPlus2[i] != ' ')\n        result += sPlus2[i];\n      if (sPlus4[i] != ' ')\n        result += sPlus4[i];\n    }\n\n    cout << \" \" << result << \"\\n\";\n    if (result.length() < n)\n      cerr << \"****\" << iCase << \"****\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"fswenton","func":"#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntemplate <class P0, class P1>\nostream &operator<<(ostream &os, const pair<P0, P1> &p) {\n  return os << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <class T> void _dump(const T &t) {\n  cerr << \"[\";\n  for (auto it = t.begin(); it != t.end(); ++it)\n    cerr << \" \" << *it;\n  cerr << \" ]\"\n       << \"\\n\";\n}\nint main(void) {\n  int T;\n  cin >> T;\n\n  for (int iCase = 1; iCase <= T; ++iCase) {\n    cout << \"Case #\" << iCase << \":\";\n\n    int i, j, k, n, nRoutes;\n    cin >> n >> nRoutes;\n    vector<int> maxDist(n);\n    vector<double> speed(n);\n    for (i = 0; i < n; ++i)\n      cin >> maxDist[i] >> speed[i];\n    vector<vector<int>> dist0(n, vector<int>(n));\n    for (i = 0; i < n; ++i)\n      for (j = 0; j < n; ++j)\n        cin >> dist0[i][j];\n\n    for (int iRoute = 0; iRoute < nRoutes; ++iRoute) {\n      int start, finish;\n      cin >> start >> finish;\n      --start;\n      --finish;\n\n      \/\/ if (iCase!=92) continue;\n      {\n        cerr << \"maxDist\"\n             << \": \";\n        _dump(maxDist);\n      };\n      {\n        cerr << \"speed\"\n             << \": \";\n        _dump(speed);\n      };\n\n      \/\/=====SMALL\n      vector<double> bestTime(n, -1.0);\n      bestTime[0] = 0.0;\n      for (int horse = 0; horse < n; ++horse) {\n        double time = bestTime[horse];\n        double distLeft = maxDist[horse];\n        for (i = horse; ++i < n && distLeft >= dist0[i - 1][i];) {\n          distLeft -= dist0[i - 1][i];\n          time += dist0[i - 1][i] \/ speed[horse];\n          if (time < bestTime[i] || bestTime[i] == -1.0)\n            bestTime[i] = time;\n        }\n        {\n          cerr << \"bestTime\"\n               << \": \";\n          _dump(bestTime);\n        };\n      }\n\n      cout << \" \" << setprecision(8) << bestTime[n - 1];\n    }\n\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    string N;\n    fin >> N;\n    unsigned int i = 0;\n    while (i < N.length() - 1 && N[i] <= N[i + 1])\n      i++;\n    if (i == N.length() - 1)\n      fout << N;\n    else {\n      for (unsigned int j = i + 1; j < N.length(); j++)\n        N[j] = '9';\n      while (i > 0 && N[i] == N[i - 1])\n        N[i--] = '9';\n      N[i] = N[i] - 1;\n      for (i = 0; i < N.length(); i++)\n        if (N[i] != '0')\n          break;\n      for (unsigned int j = i; j < N.length(); j++)\n        fout << N[j];\n    }\n    fout << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    unsigned int u = 1;\n    unsigned long long int N, K, T[3][2];\n    fin >> N >> K;\n    T[0][0] = N;\n    T[0][1] = 1;\n    while (K > T[0][1]) {\n      K -= T[0][1];\n      unsigned long long int S[2][2], s;\n      if (T[0][0] % 2) {\n        s = 1;\n        S[0][0] = (T[0][0] - 1) \/ 2;\n        S[0][1] = T[0][1] * 2;\n      } else {\n        s = 2;\n        S[0][0] = T[0][0] \/ 2;\n        S[1][0] = T[0][0] \/ 2 - 1;\n        S[0][1] = S[1][1] = T[0][1];\n      }\n      for (unsigned int i = 1; i < u; i++) {\n        T[i - 1][0] = T[i][0];\n        T[i - 1][1] = T[i][1];\n      }\n      u--;\n      for (unsigned int i = 0; i < s; i++) {\n        bool found = false;\n        for (unsigned int j = 0; j < u; j++) {\n          if (T[j][0] == S[i][0]) {\n            found = true;\n            T[j][1] += S[i][1];\n          }\n        }\n        if (!found) {\n          T[u][0] = S[i][0];\n          T[u][1] = S[i][1];\n          u++;\n        }\n      }\n      if (u == 2 && T[0][0] < T[1][0]) {\n        unsigned long long int tmp;\n        tmp = T[0][0];\n        T[0][0] = T[1][0];\n        T[1][0] = tmp;\n        tmp = T[0][1];\n        T[0][1] = T[1][1];\n        T[1][1] = tmp;\n      }\n      \/*for (unsigned int i = 0; i < u; i++)\n      {\n              for (unsigned int j = 0; j < T[i][1]; j++) fout << T[i][0] << \",\";\n      }\n      fout << \"\\n\";*\/\n    }\n    if (T[0][0] % 2)\n      fout << (T[0][0] - 1) \/ 2 << \" \" << (T[0][0] - 1) \/ 2 << \"\\n\";\n    else\n      fout << T[0][0] \/ 2 << \" \" << T[0][0] \/ 2 - 1 << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iostream>\n#include <queue>\n#include <string>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  int r;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    r = 0;\n    string S;\n    unsigned int K;\n    fin >> S >> K;\n    queue<int> F;\n    bool f = false;\n    for (unsigned int j = 0; j <= S.length() - K; j++) {\n      if (!F.empty() && F.front() == j) {\n        f = !f;\n        F.pop();\n      }\n      if ((S[j] == '+' && f) || (S[j] == '-' && !f)) {\n        r++;\n        F.push(j + K);\n        f = !f;\n      }\n    }\n    for (unsigned int j = S.length() - K + 1; j < S.length(); j++) {\n      if (!F.empty() && F.front() == j) {\n        f = !f;\n        F.pop();\n      }\n      if ((S[j] == '+' && f) || (S[j] == '-' && !f)) {\n        r = -1;\n        break;\n      }\n    }\n    if (r == -1)\n      fout << \"IMPOSSIBLE\\n\";\n    else\n      fout << r << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <algorithm>\n#include <fstream>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  vector<vector<unsigned int>> MIN;\n  vector<unsigned int> tmpMIN;\n  for (unsigned int i = 0; i < 50; i++)\n    tmpMIN.push_back(0);\n  for (unsigned int i = 0; i < 50; i++)\n    MIN.push_back(tmpMIN);\n  vector<vector<unsigned int>> MAX;\n  vector<unsigned int> tmpMAX;\n  for (unsigned int i = 0; i < 50; i++)\n    tmpMAX.push_back(0);\n  for (unsigned int i = 0; i < 50; i++)\n    MAX.push_back(tmpMAX);\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    unsigned int N, P, R[50];\n    fin >> N >> P;\n    for (unsigned int i = 0; i < N; i++)\n      fin >> R[i];\n    vector<vector<unsigned int>> Q;\n    for (unsigned int i = 0; i < N; i++) {\n      vector<unsigned int> tmpQ;\n      unsigned int tmp;\n      for (unsigned int j = 0; j < P; j++) {\n        fin >> tmp;\n        tmpQ.push_back(tmp);\n      }\n      sort(tmpQ.begin(), tmpQ.end());\n      Q.push_back(tmpQ);\n    }\n    for (unsigned int i = 0; i < N; i++)\n      sort(Q[i].begin(), Q[i].end());\n    unsigned int y = 0, cp[50];\n    for (unsigned int i = 0; i < N; i++)\n      cp[i] = 0;\n    for (unsigned int i = 0; i < N; i++)\n      for (unsigned int j = 0; j < P; j++) {\n        MIN[i][j] = Q[i][j] \/ (1.1 * R[i]);\n        if (MIN[i][j] * 1.1 * R[i] < Q[i][j])\n          MIN[i][j]++;\n        MAX[i][j] = Q[i][j] \/ (0.9 * R[i]);\n        if (MAX[i][j] * 0.9 * R[i] > Q[i][j])\n          MAX[i][j]--;\n      }\n    bool done = false;\n    unsigned int max = 0;\n    while (!done) {\n      bool moved;\n      do {\n        moved = false;\n        for (unsigned int i = 0; i < N; i++)\n          if (MIN[i][cp[i]] > max)\n            max = MIN[i][cp[i]];\n        for (unsigned int i = 0; i < N; i++)\n          while (cp[i] < P && MAX[i][cp[i]] < max) {\n            cp[i]++;\n            moved = true;\n          }\n        for (unsigned int i = 0; i < N; i++)\n          done = done || cp[i] == P;\n        if (done)\n          break;\n      } while (moved);\n      if (done)\n        break;\n      for (unsigned int i = 0; i < N; i++)\n        cp[i]++;\n      y++;\n      for (unsigned int i = 0; i < N; i++)\n        done = done || cp[i] == P;\n    }\n    fout << y << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \":\\n\";\n    unsigned int R, C;\n    fin >> R >> C;\n    string G[25];\n    for (unsigned int i = 0; i < R; i++)\n      fin >> G[i];\n    bool HL[25];\n    char FL[25];\n    for (unsigned int i = 0; i < R; i++) {\n      HL[i] = false;\n      for (unsigned int j = 0; j < C; j++) {\n        if (!HL[i] && G[i][j] != '?') {\n          HL[i] = true;\n          FL[i] = G[i][j];\n        }\n      }\n    }\n    for (unsigned int i = 0; i < R; i++) {\n      if (HL[i]) {\n        char cl = FL[i];\n        for (unsigned int j = 0; j < C; j++) {\n          if (G[i][j] != '?')\n            cl = G[i][j];\n          G[i][j] = cl;\n        }\n      }\n    }\n    unsigned int flwl;\n    for (flwl = 0; flwl < R; flwl++)\n      if (HL[flwl])\n        break;\n    for (unsigned int i = 0; i < flwl; i++)\n      for (unsigned int j = 0; j < C; j++)\n        G[i][j] = G[flwl][j];\n    for (unsigned int i = flwl + 1; i < R; i++)\n      if (!HL[i])\n        for (unsigned int j = 0; j < C; j++)\n          G[i][j] = G[i - 1][j];\n    for (unsigned int i = 0; i < R; i++) {\n      for (unsigned int j = 0; j < C; j++)\n        fout << G[i][j];\n      fout << \"\\n\";\n    }\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    unsigned int N, S[1000];\n    unsigned long long int D, K[1000];\n    double y, T[1000];\n    fin >> D >> N;\n    for (unsigned int i = 0; i < N; i++)\n      fin >> K[i] >> S[i];\n    for (unsigned int i = 1; i < N; i++)\n      for (unsigned int j = N - 1; j >= i; j--)\n        if (K[j] < K[j - 1]) {\n          unsigned long long int tmp;\n          tmp = K[j];\n          K[j] = K[j - 1];\n          K[j - 1] = tmp;\n          tmp = S[j];\n          S[j] = S[j - 1];\n          S[j - 1] = tmp;\n        }\n    for (int i = N - 1; i >= 0; i--) {\n      T[i] = (D - K[i]) * 1.0 \/ S[i];\n      if (i < N - 1 && T[i] < T[i + 1])\n        T[i] = T[i + 1];\n    }\n    y = D \/ T[0];\n    fout << setprecision(20) << y << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iostream>\nusing namespace std;\n\nchar gc(unsigned int v) {\n  if (v == 0)\n    return ('R');\n  if (v == 1)\n    return ('Y');\n  return ('B');\n}\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    unsigned int N, R, O, Y, G, B, V, max, sc, tc;\n    fin >> N >> R >> O >> Y >> G >> B >> V;\n    if (R >= Y && R >= B)\n      max = 0;\n    else if (Y >= B)\n      max = 1;\n    else\n      max = 2;\n    if ((max == 0 && R > Y + B) || (max == 1 && Y > R + B) ||\n        (max == 2 && B > R + Y)) {\n      fout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    unsigned int CC[3];\n    CC[0] = R;\n    CC[1] = Y;\n    CC[2] = B;\n    sc = (max + 1) % 3;\n    tc = (max + 2) % 3;\n    if (CC[sc] < CC[tc]) {\n      sc = (max + 2) % 3;\n      tc = (max + 1) % 3;\n    }\n    fout << gc(max);\n    unsigned int lc = max;\n    for (unsigned int i = 1; i < N; i++) {\n      if (CC[max] > CC[sc] && lc != max) {\n        fout << gc(max);\n        CC[max]--;\n        lc = max;\n      } else if (CC[sc] > CC[tc] && lc != sc) {\n        fout << gc(sc);\n        CC[sc]--;\n        lc = sc;\n      } else {\n        fout << gc(tc);\n        CC[tc]--;\n        lc = tc;\n      }\n    }\n    fout << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"georgevidalakis","func":"#include <fstream>\n#include <iomanip>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  ifstream fin(\"data.in\");\n  ofstream fout(\"data.out\");\n  unsigned int T;\n  fin >> T;\n  for (unsigned int x = 1; x <= T; x++) {\n    fout << \"Case #\" << x << \": \";\n    unsigned int N, Q, S[100], U, V;\n    unsigned long long int E[100];\n    long long int D[100][100];\n    fin >> N >> Q;\n    for (unsigned int i = 0; i < N; i++)\n      fin >> E[i] >> S[i];\n    for (unsigned int i = 0; i < N; i++)\n      for (unsigned int j = 0; j < N; j++)\n        fin >> D[i][j];\n    fin >> U >> V;\n    long long int HD[100];\n    double HT[100];\n    for (unsigned int i = 0; i < N; i++) {\n      HD[i] = 0;\n      HT[0] = 0;\n    }\n    for (unsigned int i = 0; i < N - 1; i++) {\n      if (i > 0) {\n        double min = -1;\n        for (unsigned int j = 0; j < i; j++)\n          if (HD[j] != -1 && (min == -1 || HT[j] < min))\n            min = HT[j];\n        HT[i] = min;\n      }\n      for (unsigned int j = 0; j <= i; j++)\n        if (HD[j] >= 0) {\n          HD[j] += D[i][i + 1];\n          if (HD[j] > E[j])\n            HD[j] = -1;\n          else\n            HT[j] += D[i][i + 1] * 1.0 \/ S[j];\n        }\n    }\n    double min = -1;\n    for (unsigned int i = 0; i < N - 1; i++)\n      if (HD[i] != -1 && (min == -1 || HT[i] < min))\n        min = HT[i];\n    fout << setprecision(15) << min << \"\\n\";\n  }\n  fin.close();\n  fout.close();\n  return (0);\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n#include <string>\n\nusing namespace std;\n\nifstream fin(\"B-small-attempt0.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    string s;\n    fin >> s;\n    for (int i = 0; i < s.length() - 1; ++i) {\n      if (s[i] > s[i + 1]) {\n        --s[i];\n        while (i > 0 && s[i - 1] > s[i]) {\n          --i;\n          --s[i];\n        }\n\n        if (s[0] == '0') {\n          s.pop_back();\n        } else {\n          ++i;\n        }\n\n        for (i = i; i < s.length(); ++i) {\n          s[i] = '9';\n        }\n\n        break;\n      }\n    }\n\n    fout << \"Case #\" << test + 1 << \": \" << s << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n#include <queue>\n\nusing namespace std;\n\nifstream fin(\"C-small-1-attempt0.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    long long n, k, l, r;\n    fin >> n >> k;\n    pair<long long, long long> a(n, 1), b(0, 0);\n\n    while (true) {\n      pair<long long, long long> an(0, 0), bn(0, 0);\n      if (k <= a.second) {\n        if (a.first % 2) {\n          l = r = a.first \/ 2;\n        } else {\n          l = a.first \/ 2;\n          r = l - 1;\n        }\n\n        break;\n      }\n      if (a.first % 2) {\n        an.first = a.first \/ 2;\n        an.second = a.second * 2;\n      } else {\n        an.first = a.first \/ 2;\n        an.second = a.second;\n        bn.first = an.first - 1;\n        bn.second = a.second;\n      }\n      k -= a.second;\n\n      if (b.second) {\n        if (k <= b.second) {\n          if (b.first % 2) {\n            l = r = b.first \/ 2;\n          } else {\n            l = b.first \/ 2;\n            r = l - 1;\n          }\n\n          break;\n        }\n\n        if (b.first % 2) {\n          bn.second += b.second * 2;\n        } else {\n          an.second += b.second;\n          bn.first = an.first - 1;\n          bn.second += b.second;\n        }\n      }\n      k -= b.second;\n\n      a = an;\n      b = bn;\n    }\n\n    fout << \"Case #\" << test + 1 << \": \" << l << \" \" << r << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n#include <string>\n\nusing namespace std;\n\nifstream fin(\"A-small-attempt0.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int t;\n  fin >> t;\n  for (int _t = 0; _t < t; ++_t) {\n    string s;\n    int ans = 0;\n    int k;\n\n    fin >> s >> k;\n    for (int i = 0; i <= s.length() - k; ++i) {\n      if (s[i] == '-') {\n        for (int j = i; j < i + k; ++j) {\n          s[j] = s[j] == '-' ? '+' : '-';\n        }\n\n        ++ans;\n      }\n    }\n\n    for (int i = s.length() - k + 1; i < s.length(); ++i) {\n      if (s[i] == '-') {\n        ans = -1;\n        break;\n      }\n    }\n\n    fout << \"Case #\" << _t + 1 << \": \";\n    if (ans == -1) {\n      fout << \"IMPOSSIBLE\" << endl;\n    } else {\n      fout << ans << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <algorithm>\n#include <fstream>\n#include <math.h>\n\nusing namespace std;\n\nifstream fin(\"B-small-attempt1.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    int ans = 0;\n    int n, p;\n    double x[2];\n    fin >> n >> p;\n    for (int i = 0; i < n; ++i) {\n      fin >> x[i];\n    }\n    if (n == 1) {\n      double y;\n      for (int i = 0; i < p; ++i) {\n        fin >> y;\n        double k = floor(y \/ x[0]);\n        if ((y \/ (k * x[0]) >= 0.89999999995 &&\n             y \/ (k * x[0]) <= 1.10000000005) ||\n            (y \/ (k * x[0] + x[0]) >= 0.89999999995 &&\n             y \/ (k * x[0] + x[0]) <= 1.10000000005)) {\n          ++ans;\n        }\n      }\n    } else {\n      double y1[8], y2[8];\n      for (int i = 0; i < p; ++i) {\n        fin >> y1[i];\n      }\n      for (int i = 0; i < p; ++i) {\n        fin >> y2[i];\n      }\n      sort(y2, y2 + p);\n\n      do {\n        int curans = 0;\n        for (int i = 0; i < p; ++i) {\n          double a = y1[i], b = y2[i];\n          double l1 = floor(a \/ x[0]);\n          double l2 = floor(b \/ x[1]);\n          if (l2 < l1) {\n            swap(a, b);\n            swap(l1, l2);\n          }\n          double s = l1 - 1000.0;\n          while (s <= l2 + 1000.0) {\n            if (a \/ (s * x[0]) >= 0.89999999995 &&\n                a \/ (s * x[0]) <= 1.10000000005 &&\n                b \/ (s * x[1]) >= 0.89999999995 &&\n                b \/ (s * x[1]) <= 1.10000000005) {\n              curans++;\n              break;\n            }\n            s += 1.0;\n          }\n        }\n        if (curans > ans) {\n          ans = curans;\n        }\n      } while (next_permutation(y2, y2 + p));\n    }\n    fout << \"Case #\" << test + 1 << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n\nusing namespace std;\n\nifstream fin(\"A-small-attempt0.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    char a[25][25];\n    int n, m;\n    fin >> n >> m;\n    int lastj = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        fin >> a[i][j];\n        if (a[i][j] != '?' && j > lastj) {\n          lastj = j;\n        }\n      }\n    }\n\n    for (int j = 0; j < m; j++) {\n      int lasti = -1;\n      for (int i = 0; i < n; i++) {\n        if (a[i][j] != '?') {\n          char c = a[i][j];\n          a[i][j] = '?';\n          for (int k = i; a[k][j] == '?' && k > lasti; --k) {\n            for (int l = j; a[k][l] == '?' && l >= 0; --l) {\n              a[k][l] = c;\n            }\n          }\n          lasti = i;\n        }\n      }\n      if (lasti != -1 && lasti != n - 1) {\n        char c = a[lasti][j];\n        for (int k = n - 1; a[k][j] == '?' && k > lasti; --k) {\n          for (int l = j; a[k][l] == '?' && l >= 0; --l) {\n            a[k][l] = c;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = lastj + 1; j < m; ++j) {\n        a[i][j] = a[i][lastj];\n      }\n    }\n    fout << \"Case #\" << test + 1 << \":\" << endl;\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        fout << a[i][j];\n      }\n      fout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <algorithm>\n#include <fstream>\n#include <iomanip>\n\nusing namespace std;\n\nifstream fin(\"A-small-attempt0.in\");\nofstream fout(\"out.txt\");\n\nstruct h {\n  double k;\n  double s;\n  double t;\n};\n\nh horse[1000];\n\nbool comp(h a, h b) { return a.k > b.k; }\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    int n;\n    double d;\n    fin >> d >> n;\n    for (int i = 0; i < n; ++i) {\n      h a;\n      fin >> a.k >> a.s;\n      horse[i] = a;\n    }\n    sort(horse, horse + n, comp);\n    double time = -1.0;\n    for (int i = 0; i < n; ++i) {\n      if (time == -1.0) {\n        time = (d - horse[i].k) \/ horse[i].s;\n        horse[i].t = time;\n      } else {\n        double t = (d - horse[i].k) \/ horse[i].s;\n        if (t < horse[i - 1].t) {\n          horse[i].t = horse[i - 1].t;\n        } else {\n          horse[i].t = t;\n        }\n      }\n    }\n\n    fout << fixed << setprecision(8) << \"Case #\" << test + 1 << \": \"\n         << d \/ horse[n - 1].t << endl;\n  }\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nifstream fin(\"B-small-attempt0.in\");\nofstream fout(\"out.txt\");\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    int s, r, y, b, ss;\n    fin >> s >> r >> ss >> y >> ss >> b >> ss;\n    if ((r > y + b) || (y > r + b) || (b > y + r)) {\n      fout << \"Case #\" << test + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n    } else {\n      string label[3];\n      int x[3];\n      label[0] = \"R\";\n      label[1] = \"Y\";\n      label[2] = \"B\";\n      x[0] = r;\n      x[1] = y;\n      x[2] = b;\n      if (x[0] < x[1]) {\n        swap(x[0], x[1]);\n        swap(label[0], label[1]);\n      }\n      if (x[0] < x[2]) {\n        swap(x[0], x[2]);\n        swap(label[0], label[2]);\n      }\n      vector<string> a;\n      for (int i = 0; i < x[0]; ++i) {\n        string s = label[0];\n        a.push_back(s);\n      }\n      int pos = 0;\n      ;\n      for (int i = 0; i < x[1]; ++i) {\n        a[pos] = a[pos] + label[1];\n        pos += 1;\n        pos %= x[0];\n      }\n      for (int i = 0; i < x[2]; ++i) {\n        a[pos] = a[pos] + label[2];\n        pos += 1;\n        pos %= x[0];\n      }\n      string s = \"\";\n      for (int i = 0; i < x[0]; ++i) {\n        s += a[i];\n      }\n\n      fout << \"Case #\" << test + 1 << \": \" << s << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Grandrogue","func":"#include <fstream>\n#include <iomanip>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nifstream fin(\"C-small-attempt2.in\");\nofstream fout(\"out.txt\");\n\ndouble e[100], s[100], x[100];\nint n;\n\ndouble dijkstra(vector<vector<pair<double, int>>> a) {\n  vector<double> d(n, 1000000000000000), p(n);\n  d[0] = 0.0;\n  priority_queue<pair<double, int>> q;\n  q.push(make_pair(0, 0));\n  while (!q.empty()) {\n    int v = q.top().second;\n    double cur_d = -q.top().first;\n    q.pop();\n    if (cur_d > d[v])\n      continue;\n\n    for (size_t j = 0; j < a[v].size(); ++j) {\n      int to = a[v][j].second;\n      double len = a[v][j].first;\n      if (d[v] + len < d[to]) {\n        d[to] = d[v] + len;\n        p[to] = v;\n        q.push(make_pair(-d[to], to));\n      }\n    }\n  }\n  return d[n - 1];\n}\n\nint main() {\n  int tests;\n  fin >> tests;\n  for (int test = 0; test < tests; ++test) {\n    vector<vector<pair<double, int>>> a;\n    int q;\n    fin >> n >> q;\n    int h;\n    for (int i = 0; i < n; ++i) {\n      fin >> e[i] >> s[i];\n      vector<pair<double, int>> o;\n      a.push_back(o);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        fin >> h;\n        if (j == i + 1) {\n          x[j] = h;\n        }\n      }\n    }\n    fin >> h >> h;\n    double cure = e[0];\n    double curs = s[0];\n    for (int i = 0; i < n - 1; ++i) {\n      double end = 0;\n      for (int j = i + 1; j < n; ++j) {\n        end += x[j];\n        if (end > e[i]) {\n          break;\n        }\n        pair<double, int> g;\n        g.first = end \/ s[i];\n        g.second = j;\n        a[i].push_back(g);\n      }\n    }\n\n    fout << fixed << setprecision(8) << \"Case #\" << test + 1 << \": \"\n         << dijkstra(a) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\ntypedef long long LL;\n\nint Case, q[20 + 5];\nchar s[20 + 5];\n\nbool dfs(int dep, bool op, int last) {\n  if (!dep)\n    return 1;\n  int top = op ? q[dep] : 9;\n  for (int i = top; i >= last; i--)\n    if (dfs(dep - 1, op & (i == top), i)) {\n      q[dep] = i;\n      return 1;\n    }\n  return 0;\n}\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    printf(\"Case #%d: \", T);\n    scanf(\"%s\", s);\n    q[0] = strlen(s);\n    for (int i = 1; i <= q[0]; i++)\n      q[i] = s[q[0] - i] - '0';\n    dfs(q[0], 1, 0);\n    for (; !q[q[0]]; q[0]--)\n      ;\n    for (int i = q[0]; i; i--)\n      printf(\"%d\", q[i]);\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\ntypedef long long LL;\n\nint Case;\nLL n, k;\n\nLL dfs(LL u_1, LL c_1, LL u_2, LL c_2, LL t) {\n  if (t <= c_1)\n    return u_1;\n  if (t <= c_1 + c_2)\n    return u_2;\n  LL v_1 = u_1 >> 1, v_2 = v_1 - 1;\n  LL d_1 = c_1 + (u_1 & 1 ? c_1 + c_2 : 0), d_2 = (c_1 + c_2 << 1) - d_1;\n  return dfs(v_1, d_1, v_2, d_2, t - c_1 - c_2);\n}\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    printf(\"Case #%d: \", T);\n    scanf(\"%lld%lld\", &n, &k);\n    LL res = dfs(n + 1, 0, n, 1, k);\n    printf(\"%lld %lld\\n\", res >> 1, res - 1 >> 1);\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint Case, k, len;\nchar s[1000 + 5];\nbool Flag[1000 + 5];\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    printf(\"Case #%d: \", T);\n    scanf(\"%s%d\", s, &k);\n    len = strlen(s);\n    for (int i = 0; i < len; i++)\n      Flag[i] = 0;\n    int step = 0;\n    for (int i = 0, del = 0; ~step && i < len; i++) {\n      del ^= Flag[i];\n      int t = (s[i] == '-');\n      if (del ^ t) {\n        if (i + k > len)\n          step = -1;\n        else\n          Flag[i + 1] ^= 1, Flag[i + k] ^= 1, step++;\n      }\n    }\n    if (!~step)\n      puts(\"IMPOSSIBLE\");\n    else\n      printf(\"%d\\n\", step);\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint Case, n, p, tot, S, T, R[50 + 5], Q[50 + 5][50 + 5], Num[50 + 5][50 + 5],\n    Head[2500 + 5], Dfn[2500 + 5], q[2500 + 5];\nint Max = 0;\nbool Map[50 + 5][50 + 5], Flag[50 + 5];\n\nstruct Edge {\n  int next, node, flow;\n} h[1000000 + 5];\n\ninline void addedge(int u, int v, int fl) {\n  h[++tot].next = Head[u], Head[u] = tot;\n  h[tot].node = v, h[tot].flow = fl;\n  h[++tot].next = Head[v], Head[v] = tot;\n  h[tot].node = u, h[tot].flow = 0;\n}\n\nbool Check(int u, int v) {\n  if (n == 1) {\n    for (int i = 1; i <= 1000000 && i * R[1] <= 100000000; i++) {\n      bool ok_1 = Q[1][u] * 10 >= i * R[1] * 9 && Q[1][u] * 10 <= i * R[1] * 11;\n      if (ok_1)\n        return 1;\n    }\n  } else if (n == 2) {\n    for (int i = 1;\n         i <= 1000000 && i * R[1] <= 100000000 && i * R[2] <= 100000000; i++) {\n      bool ok_1 = Q[1][u] * 10 >= i * R[1] * 9 && Q[1][u] * 10 <= i * R[1] * 11;\n      bool ok_2 = Q[2][u] * 10 >= i * R[2] * 9 && Q[2][u] * 10 <= i * R[2] * 11;\n      if (ok_1 && ok_2)\n        return 1;\n    }\n  }\n  return 0;\n}\n\nvoid dfs(int dep, int cur) {\n  if (dep > p) {\n    Max = max(Max, cur);\n    return;\n  }\n  for (int i = 1; i <= p; i++)\n    if (!Flag[i]) {\n      Flag[i] = 1;\n      dfs(dep + 1, cur + Map[dep][i]);\n      Flag[i] = 0;\n    }\n}\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int Test = 1; Test <= Case; Test++) {\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", R + i);\n    for (int i = 1, id = 0; i <= n; i++)\n      for (int j = 1; j <= p; j++) {\n        scanf(\"%d\", Q[i] + j);\n        Num[i][j] = ++id;\n      }\n    for (int i = 1; i <= p; i++)\n      for (int j = 1; j <= p; j++)\n        Map[i][j] = Check(i, j);\n    Max = 0;\n    dfs(1, 0);\n    printf(\"Case #%d: %d\\n\", Test, Max);\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint Case, n, m;\nchar s[25 + 5][25 + 5];\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    printf(\"Case #%d:\\n\", T);\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", s[i]);\n    for (int i = 0; i < n; i++)\n      for (int j = 1; j < m; j++)\n        s[i][j] = s[i][j] == '?' ? s[i][j - 1] : s[i][j];\n    for (int i = 0; i < n; i++)\n      for (int j = m - 2; ~j; j--)\n        s[i][j] = s[i][j] == '?' ? s[i][j + 1] : s[i][j];\n    for (int j = 0; j < m; j++)\n      for (int i = 1; i < n; i++)\n        s[i][j] = s[i][j] == '?' ? s[i - 1][j] : s[i][j];\n    for (int j = 0; j < m; j++)\n      for (int i = n - 2; ~i; i--)\n        s[i][j] = s[i][j] == '?' ? s[i + 1][j] : s[i][j];\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", s[i]);\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\ntypedef long double LD;\n\nint Case, d, n;\nLD ans;\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    scanf(\"%d%d\", &d, &n);\n    ans = 1e14;\n    for (int i = 1, k, s; i <= n; i++) {\n      scanf(\"%d%d\", &k, &s);\n      LD t = (LD)(d - k) \/ s;\n      ans = min(ans, (LD)d \/ t);\n    }\n    printf(\"Case #%d: %.6f\\n\", T, (double)ans);\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint Case, n, r, o, y, g, b, v;\nchar s[1000 + 5], t[1000 + 5];\n\nvoid Brute() {\n  int sum = r + b;\n  if (y > sum) {\n    puts(\"IMPOSSIBLE\");\n    return;\n  }\n  for (int i = 0, op = (r >= b ? 1 : 0); i < sum; i++) {\n    if (!b || ((i + op & 1) && r > 0))\n      r--, s[i] = 'R';\n    else\n      b--, s[i] = 'B';\n  }\n  int len = 0;\n  for (int i = 0; i < sum - y; i++)\n    t[len++] = s[i];\n  for (int i = sum - y; i < sum; i++)\n    t[len++] = s[i], t[len++] = 'Y';\n  t[len] = '\\0';\n  bool ok = 1;\n  for (int i = 0; ok && i < len - 1; i++)\n    ok = t[i] != t[i + 1];\n  if (!ok)\n    puts(\"IMPOSSIBLE\");\n  else\n    printf(\"%s\\n\", t);\n}\n\nvoid Solve() { puts(\"\"); }\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    scanf(\"%d\", &n);\n    scanf(\"%d%d%d%d%d%d\", &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: \", T);\n    if (o == 0 && g == 0 && v == 0)\n      Brute();\n    else\n      Solve();\n  }\n  return 0;\n}\n"}
{"target":"Gromah","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\ntypedef long double LD;\n\nint Case, n, q, V[100 + 5], E[100 + 5], S[100 + 5], Map[100 + 5][100 + 5],\n    End[100 + 5], Sum[100 + 5];\nLD ans, Dp[100 + 5][100 + 5];\n\nint main() {\n  scanf(\"%d\", &Case);\n  for (int T = 1; T <= Case; T++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      V[i] = End[i] = 0;\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", E + i, S + i);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        scanf(\"%d\", Map[i] + j);\n    for (int i = 1; i < n; i++)\n      Sum[i] = Sum[i - 1] + Map[i][i + 1];\n    for (int i = 1; i < n; i++)\n      for (int j = i; j < n && Sum[j] - Sum[i - 1] <= E[i]; j++)\n        End[i] = j;\n    scanf(\"%*d%*d\");\n    for (int i = 1; i <= n; i++)\n      for (int j = 0; j <= n; j++)\n        Dp[i][j] = 1e14;\n    Dp[0][0] = 0;\n    for (int i = 1; i < n; i++)\n      for (int j = 0; j < i; j++) {\n        if (End[j] >= i && j > 0)\n          Dp[i][j] = min(Dp[i][j], Dp[i - 1][j] + (LD)Map[i][i + 1] \/ S[j]);\n        if (i == 1 || j > 0)\n          Dp[i][i] = min(Dp[i][i], Dp[i - 1][j] + (LD)Map[i][i + 1] \/ S[i]);\n      }\n    ans = Dp[n - 1][1];\n    for (int j = 2; j < n; j++)\n      ans = min(ans, Dp[n - 1][j]);\n    printf(\"Case #%d: %.6f\\n\", T, (double)ans);\n  }\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <vector>\n\nusing namespace std;\n\nlong long solve(long long n) {\n  vector<int> b;\n  for (long long i = n; i; i \/= 10) {\n    b.push_back(i % 10);\n  }\n  reverse(b.begin(), b.end());\n  size_t j = b.size() - 1;\n  for (size_t i = 1; i < b.size(); ++i) {\n    if (b[i] < b[i - 1]) {\n      j = i - 1;\n      break;\n    }\n  }\n  if (j == b.size() - 1) {\n    return n;\n  }\n  size_t k = 0;\n  for (size_t i = j; i > 0; --i) {\n    if (i - 1 >= 0 && b[i] > b[i - 1]) {\n      k = i;\n      break;\n    }\n  }\n  b[k]--;\n  for (size_t i = k + 1; i < b.size(); ++i) {\n    b[i] = 9;\n  }\n  long long r = 0;\n  for (size_t i = 0; i < b.size(); ++i) {\n    r = r * 10 + b[i];\n  }\n  return r;\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int test = 1; test <= T; ++test) {\n    long long N;\n    cin >> N;\n    \/\/ cout << N << \" \" << solve(N) << endl;\n    cout << \"Case #\" << test << \": \" << solve(N) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <set>\n#include <stdio.h>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(long long N, set<long long> &Set) {\n  if (N == 0) {\n    return;\n  }\n  long long L = (N - 1) \/ 2;\n  long long R = N - 1 - L;\n  if (!Set.count(N)) {\n    Set.insert(N);\n    solve(L, Set);\n    solve(R, Set);\n  }\n}\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int test = 1; test <= T; ++test) {\n    long long N, K;\n    cin >> N >> K;\n    set<long long> Set;\n    solve(N, Set);\n    vector<long long> V;\n    for (set<long long>::iterator i = Set.begin(); i != Set.end(); ++i) {\n      V.push_back(*i);\n    }\n    map<long long, long long> C;\n    C[N] = 1;\n    for (int i = V.size() - 2; i >= 0; --i) {\n      C[V[i]] = 0;\n      if (C.count(V[i] * 2)) {\n        C[V[i]] += C[V[i] * 2];\n      }\n      if (C.count(V[i] * 2 + 1)) {\n        C[V[i]] += C[V[i] * 2 + 1] * 2;\n      }\n      if (C.count(V[i] * 2 + 2)) {\n        C[V[i]] += C[V[i] * 2 + 2];\n      }\n      \/\/ cout << V[i] << \":\" << C[V[i]] << endl;\n    }\n    long long r = 0;\n    for (int i = V.size() - 1; i >= 0; --i) {\n      r += C[V[i]];\n      if (r >= K) {\n        long long L = (V[i] - 1) \/ 2;\n        long long R = V[i] - 1 - L;\n        cout << \"Case #\" << test << \": \" << R << \" \" << L << endl;\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <iostream>\n#include <stdio.h>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int test = 1; test <= T; ++test) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int r = 0;\n    for (int i = 0; i + k - 1 < s.size(); ++i) {\n      if (s[i] == '-') {\n        ++r;\n        for (int j = 0; j < k; ++j) {\n          s[i + j] = (s[i + j] == '+' ? '-' : '+');\n        }\n      }\n    }\n    for (int i = s.size() + 1 - k; i < s.size(); ++i) {\n      if (s[i] == '-') {\n        r = -1;\n        break;\n      }\n    }\n    if (r == -1) {\n      cout << \"Case #\" << test << \": IMPOSSIBLE\" << endl;\n    } else {\n      cout << \"Case #\" << test << \": \" << r << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <algorithm>\n#include <map>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nint n, m;\nint a[50], w[50][50], p[50];\nint l[50], r[50];\n\nint solve() {\n  int ans = 0;\n  while (true) {\n    for (int i = 0; i < n; ++i) {\n      if (p[i] == m) {\n        return ans;\n      }\n    }\n\n    int L = 0, R = (int)1e9;\n    int ml = (int)1e9, nxt = -1;\n    bool flag = false;\n    for (int i = 0; i < n; ++i) {\n      \/\/ w[i][p[i]]\n      \/\/ x * a[i] * 0.9 <= w[i][p[i]] <= x * a[i] * 1.1\n      l[i] = (w[i][p[i]] * 10 + a[i] * 11 - 1) \/ (a[i] * 11);\n      r[i] = (w[i][p[i]] * 10) \/ (a[i] * 9);\n      if (l[i] > r[i]) {\n        p[i]++;\n        flag = true;\n        break;\n      }\n      if (ml > l[i]) {\n        ml = l[i];\n        nxt = i;\n      }\n      L = max(L, l[i]);\n      R = min(R, r[i]);\n    }\n    if (flag) {\n      continue;\n    }\n    if (L <= R) {\n      ans++;\n      for (int j = 0; j < n; ++j) {\n        p[j]++;\n      }\n    } else {\n      p[nxt]++;\n    }\n  }\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", &a[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        scanf(\"%d\", &w[i][j]);\n      }\n      sort(w[i], w[i] + m);\n      p[i] = 0;\n    }\n    int ans = solve();\n\n    printf(\"Case #%d: %d\\n\", test, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <algorithm>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nint r, c;\nchar G[26][26];\n\nvoid exp(int r, int c, char G[26][26]) {\n  int rl[26], rr[26], cl[26], cr[26];\n  for (int i = 0; i < 26; ++i) {\n    rl[i] = r;\n    rr[i] = -1;\n    cl[i] = c;\n    cr[i] = -1;\n  }\n  for (int i = 0; i < r; ++i) {\n    for (int j = 0; j < c; ++j) {\n      if (G[i][j] != '?') {\n        int x = G[i][j] - 'A';\n        rl[x] = min(rl[x], i);\n        rr[x] = max(rr[x], i);\n        cl[x] = min(cl[x], j);\n        cr[x] = max(cr[x], j);\n      }\n    }\n  }\n  for (int i = 0; i < 26; ++i) {\n    for (int p = rl[i]; p <= rr[i]; ++p) {\n      for (int q = cl[i]; q <= cr[i]; ++q) {\n        G[p][q] = 'A' + i;\n      }\n    }\n  }\n}\nvoid push(int r, int c, char G[26][26]) {\n  bool vis[26];\n  memset(vis, 0x00, sizeof(vis));\n  for (int i = 0; i < r; ++i) {\n    for (int j = 0; j < c; ++j) {\n      if (G[i][j] != '?' && !vis[G[i][j] - 'A']) {\n        vis[G[i][j] - 'A'] = true;\n\n        int p, q;\n        for (p = i; p < r && G[p][j] == G[i][j]; ++p) {\n        }\n        --p;\n        for (q = j; q < c && G[i][q] == G[i][j]; ++q) {\n        }\n        --q;\n\n        for (int x = p + 1; x < r; ++x) {\n          bool flag = true;\n          for (int y = j; y <= q; ++y) {\n            if (G[x][y] != '?') {\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            for (int y = j; y <= q; ++y) {\n              G[x][y] = G[i][j];\n            }\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\nvoid rot(int &r, int &c, char G[26][26]) {\n  char tG[26][26];\n  for (int i = 0; i < r; ++i) {\n    for (int j = 0; j < c; ++j) {\n      \/\/ 0,0->0,r-1\n      \/\/ r-1,0->0,0\n      \/\/ 0,c-1->c-1,r-1\n      \/\/ r-1,c-1->c-1,0\n      tG[j][r - 1 - i] = G[i][j];\n    }\n  }\n  swap(r, c);\n  for (int i = 0; i < r; ++i) {\n    for (int j = 0; j < c; ++j) {\n      G[i][j] = tG[i][j];\n    }\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n    scanf(\"%d%d\", &r, &c);\n    for (int i = 0; i < r; ++i) {\n      scanf(\"%s\", G[i]);\n    }\n    exp(r, c, G);\n    for (int i = 0; i < 4; ++i) {\n      push(r, c, G);\n      rot(r, c, G);\n    }\n    printf(\"Case #%d:\\n\", test);\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        printf(\"%c\", G[i][j]);\n      }\n      puts(\"\");\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <algorithm>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\n\nstatic const int MAX_N = 1000;\n\ndouble L;\nint n;\ndouble a[MAX_N], v[MAX_N];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n\n    scanf(\"%lf%d\", &L, &n);\n    double t = 0;\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%lf%lf\", &a[i], &v[i]);\n      t = max(t, (L - a[i]) \/ v[i]);\n    }\n\n    double ans = L \/ t;\n    printf(\"Case #%d: %.12lf\\n\", test, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <stdio.h>\n\n#include <algorithm>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint n, r, o \/* r+y *\/, y, g \/* y+b *\/, b, v \/* r+b *\/;\n\nvoid ins(string &str, char ch, int cnt, string rep) {\n  for (int i = 0; i < str.size(); ++i) {\n    if (str[i] == ch) {\n      string ans = str.substr(0, i + 1);\n      for (int j = 0; j < cnt; ++j) {\n        ans += rep;\n      }\n      ans += str.substr(i + 1);\n      str = ans;\n      return;\n    }\n  }\n}\n\nstring solve() {\n  if (b - o < 0 || r - g < 0 || y - v < 0) {\n    return \"IMPOSSIBLE\";\n  }\n  if (o && b - o == 0) {\n    if (b + o < n) {\n      return \"IMPOSSIBLE\";\n    } else {\n      string ans = \"\";\n      for (int i = 0; i < b; ++i) {\n        ans += \"BO\";\n      }\n      return ans;\n    }\n  }\n  if (g && r - g == 0) {\n    if (r + g < n) {\n      return \"IMPOSSIBLE\";\n    } else {\n      string ans = \"\";\n      for (int i = 0; i < r; ++i) {\n        ans += \"RG\";\n      }\n      return ans;\n    }\n  }\n  if (v && y - v == 0) {\n    if (y + v < n) {\n      return \"IMPOSSIBLE\";\n    } else {\n      string ans = \"\";\n      for (int i = 0; i < y; ++i) {\n        ans += \"YV\";\n      }\n      return ans;\n    }\n  }\n  vector<pair<int, char>> vec;\n  vec.push_back(make_pair(b - o, 'B'));\n  vec.push_back(make_pair(r - g, 'R'));\n  vec.push_back(make_pair(y - v, 'Y'));\n  sort(vec.begin(), vec.end());\n  if (vec[2].first > vec[0].first + vec[1].first) {\n    return \"IMPOSSIBLE\";\n  }\n  string ans = \"\";\n  int sum = vec[0].first + vec[1].first + vec[2].first;\n  int cnt = sum - 2 * vec[2].first;\n  for (int i = 0; i < vec[2].first; ++i) {\n    ans += vec[2].second;\n    if (i < vec[1].first) {\n      ans += vec[1].second;\n    } else {\n      ans += vec[0].second;\n    }\n    if (i < cnt) {\n      ans += vec[0].second;\n    }\n  }\n  ins(ans, 'B', o, \"OB\");\n  ins(ans, 'R', g, \"GR\");\n  ins(ans, 'Y', v, \"VY\");\n  return ans;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: %s\\n\", test, solve().c_str());\n  }\n\n  return 0;\n}\n"}
{"target":"GuaiNiGuoFenMeiLi","func":"#include <stdio.h>\n\n#include <algorithm>\n#include <queue>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nstatic const int MAX_N = 100;\n\nint N;\ndouble a[MAX_N], v[MAX_N];\ndouble d[MAX_N][MAX_N];\nint Q, U, V;\n\ndouble f[MAX_N];\n\ndouble solve() {\n  for (int i = 0; i < N; ++i) {\n    f[i] = 1e18;\n  }\n  priority_queue<pair<double, int>> PQ;\n  f[U] = 0;\n  PQ.push(make_pair(-f[U], U));\n  while (!PQ.empty()) {\n    double cur = -PQ.top().first;\n    int s = PQ.top().second;\n    PQ.pop();\n    for (int t = 0; t < N; ++t) {\n      if (d[s][t] >= 0 && d[s][t] <= a[s] && cur + d[s][t] \/ v[s] < f[t]) {\n        f[t] = cur + d[s][t] \/ v[s];\n        PQ.push(make_pair(-f[t], t));\n      }\n    }\n  }\n  return f[V];\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 0; i < N; ++i) {\n      scanf(\"%lf%lf\", &a[i], &v[i]);\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        scanf(\"%lf\", &d[i][j]);\n      }\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        for (int k = 0; k < N; ++k) {\n          if (d[i][k] >= 0 && d[k][j] >= 0 &&\n              (d[i][j] < 0 || d[i][j] > d[i][k] + d[k][j])) {\n            d[i][j] = d[i][k] + d[k][j];\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\", test);\n    while (Q--) {\n      scanf(\"%d%d\", &U, &V);\n      --U;\n      --V;\n      printf(\" %.12lf\", solve());\n    }\n    puts(\"\");\n  }\n\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nbool is_tidy(int n) {\n  int d = 9;\n  while (n) {\n    if (n % 10 > d) {\n      return 0;\n    }\n    d = n % 10;\n    n \/= 10;\n  }\n  return 1;\n}\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    long long int n;\n    fin >> n;\n    long long int tidy = 1;\n    for (int i = n; i > 1; --i) {\n      if (is_tidy(i)) {\n        tidy = i;\n        break;\n      }\n    }\n    fout << \"Case #\" << testcase + 1 << \": \" << tidy << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstruct Segment {\n  long long int l, r;\n  long long int center() { return (l + r) \/ 2; }\n  long long int left_dist() { return this->center() - this->l - 1; }\n  long long int right_dist() { return this->r - this->center() - 1; }\n  long long int min_dist() {\n    return min(this->left_dist(), this->right_dist());\n  }\n  long long int max_dist() {\n    return max(this->left_dist(), this->right_dist());\n  }\n};\n\nstruct Magic {\n  bool operator()(Segment &lhs, Segment &rhs) const {\n    if (lhs.min_dist() == rhs.min_dist()) {\n      if (lhs.max_dist() == rhs.max_dist()) {\n        return lhs.center() > rhs.center();\n      }\n      return lhs.max_dist() < rhs.max_dist();\n    }\n    return lhs.min_dist() < rhs.min_dist();\n  }\n};\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    long long int n, k;\n    fin >> n >> k;\n\n    priority_queue<Segment, vector<Segment>, Magic> pq;\n    Segment s = {0, n + 1};\n    pq.push(s);\n    for (int i = 0; i < k; ++i) {\n      s = pq.top();\n      pq.pop();\n      if (s.max_dist() > 0) {\n        pq.push({s.l, s.center()});\n        pq.push({s.center(), s.r});\n      }\n    }\n\n    fout << \"Case #\" << testcase + 1 << \": \" << s.max_dist() << ' '\n         << s.min_dist() << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_Quals\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    string s;\n    int k;\n    fin >> s >> k;\n    int n = s.size();\n\n    vector<bool> v;\n    for (int i = 0; i < n; ++i) {\n      v.push_back(s[i] == '+');\n    }\n\n    int cnt = 0;\n    for (int i = 0; i < n - k + 1; ++i) {\n      if (!v[i]) {\n        for (int j = i; j < i + k; ++j) {\n          v[j] = !v[j];\n        }\n        cnt++;\n      }\n\n      \/\/\t\t\tFORi(j,0,n){\n      \/\/\t\t\t\tcout << v[j];\n      \/\/\t\t\t}\n      \/\/\t\t\tcout << endl;\n    }\n\n    for (int i = n - k; i < n; ++i) {\n      if (!v[i]) {\n        cnt = -1;\n      }\n    }\n\n    fout << \"Case #\" << testcase + 1 << \": \";\n    if (cnt == -1) {\n      fout << \"IMPOSSIBLE\" << endl;\n    } else {\n      fout << cnt << endl;\n    }\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1A\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1A\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    int n, p;\n    fin >> n >> p;\n    vector<int> need(n);\n    for (int i = 0; i < n; ++i) {\n      fin >> need[i];\n    }\n    vector<vector<int>> q(n, vector<int>(p));\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        fin >> q[i][j];\n      }\n    }\n\n    assert(n < 3);\n    int ans = 0;\n    if (n == 1) {\n      for (int i = 0; i < p; ++i) {\n        int k = q[0][i] \/ need[0];\n        long double fr1 = 1.0L * q[0][i] \/ (k * need[0]);\n        if (0.9L <= fr1 && fr1 <= 1.1L) {\n          ans++;\n          continue;\n        }\n        long double fr2 = 1.0L * q[0][i] \/ ((k + 1) * need[0]);\n        if (0.9L <= fr2 && fr2 <= 1.1L) {\n          ans++;\n        }\n      }\n    } else {\n      vector<int> perm(p);\n      for (int i = 0; i < p; ++i) {\n        perm[i] = i;\n      }\n      do {\n        int cur = 0;\n        for (int i = 0; i < p; ++i) {\n          int m1 = q[0][i] \/ need[0];\n          int m2 = q[1][i] \/ need[1];\n          if (m2 < m1) {\n            swap(m1, m2);\n          }\n          for (int k = m1; k < m2 + 2; ++k) {\n            long double fr01 = 1.0L * q[0][i] \/ (k * need[0]);\n            long double fr11 = 1.0L * q[1][perm[i]] \/ (k * need[1]);\n            long double fr02 = 1.0L * q[0][i] \/ ((k + 1) * need[0]);\n            long double fr12 = 1.0L * q[1][perm[i]] \/ ((k + 1) * need[1]);\n            if (0.9L <= fr01 && fr01 <= 1.1L && 0.9L <= fr11 && fr11 <= 1.1L) {\n              cur++;\n              break;\n            } else if (0.9L <= fr02 && fr02 <= 1.1L && 0.9L <= fr12 &&\n                       fr12 <= 1.1L) {\n              cur++;\n              break;\n            }\n          }\n        }\n        ans = max(ans, cur);\n      } while (next_permutation(perm.begin(), perm.end()));\n    }\n\n    fout << \"Case #\" << testcase + 1 << \": \" << ans << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1A\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1A\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    int r, c;\n    fin >> r >> c;\n    vector<string> v(r);\n    for (int i = 0; i < r; ++i) {\n      fin >> v[i];\n      \/\/\t\t\tcout << v[i] << endl;\n    }\n\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        if (v[i][j] == '?') {\n          int dist = c, index = j;\n          for (int k = 0; k < c; ++k) {\n            if (v[i][k] != '?') {\n              if (abs(j - k) < dist) {\n                dist = abs(j - k);\n                index = k;\n              }\n            }\n          }\n          for (int k = min(j, index); k < max(j, index) + 1; ++k) {\n            v[i][k] = v[i][index];\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < r; ++i) {\n      if (v[i][0] == '?') {\n        int dist = r, index = -1;\n        for (int k = 0; k < r; ++k) {\n          if (v[k][0] != '?') {\n            if (abs(i - k) < dist) {\n              dist = abs(i - k);\n              index = k;\n            }\n          }\n        }\n        assert(index >= 0);\n        for (int j = 0; j < c; ++j) {\n          v[i][j] = v[index][j];\n        }\n      }\n    }\n\n    fout << \"Case #\" << testcase + 1 << \":\" << endl;\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        fout << v[i][j];\n      }\n      fout << endl;\n    }\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    long long int d, n, k, s;\n    fin >> d >> n;\n    double max_time = 0;\n    for (int i = 0; i < n; ++i) {\n      fin >> k >> s;\n      \/\/\t\t\tcout << k << s << endl;\n      max_time = max(max_time, 1.0 * (d - k) \/ s);\n    }\n\n    fout << \"Case #\" << testcase + 1 << \": \" << fixed << setprecision(7)\n         << d \/ max_time << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nbool comp(pair<int, char> &l, pair<int, char> &r) { return l.first < r.first; }\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    int n, r, o, y, g, b, v;\n    fin >> n >> r >> o >> y >> g >> b >> v;\n    int m = max(r, max(y, b));\n    fout << \"Case #\" << testcase + 1 << \": \";\n\n    pair<int, char> col[] = {{r, 'R'}, {y, 'Y'}, {b, 'B'}};\n    sort(col, &col[3], comp);\n\n    if (r + y + b == 1) {\n      for (int i = 0; i < 3; ++i) {\n        if (col[i].first) {\n          fout << col[i].second << endl;\n        }\n      }\n      continue;\n    }\n\n    if (m > (r + y + b) \/ 2.0) {\n      fout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    while (col[1].first > col[0].first) {\n      fout << col[2].second << col[1].second;\n      col[2].first--;\n      col[1].first--;\n    }\n    int odd = 0;\n    while (col[2].first) {\n      fout << col[2].second << col[odd % 2].second;\n      col[2].first--;\n      col[odd % 2].first--;\n      odd++;\n    }\n    while (col[odd % 2].first) {\n      fout << col[odd % 2].second;\n      col[odd % 2].first--;\n      odd++;\n    }\n    fout << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"gultai4ukr","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nbool comp(pair<int, char> &l, pair<int, char> &r) { return l.first < r.first; }\n\nint main(int argc, char **argv) {\n  ifstream fin(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/in.txt\");\n  ofstream fout(\"\/home\/roman\/CodeliteProjects\/Competitive\/GCJ17_R1B\/out.txt\");\n\n  int t;\n  fin >> t;\n  for (int testcase = 0; testcase < t; ++testcase) {\n    int n, q, u, v;\n    fin >> n >> q;\n    assert(q == 1);\n    vector<long long int> e(n), s(n);\n    for (int i = 0; i < n; ++i) {\n      fin >> e[i] >> s[i];\n    }\n    vector<vector<long long int>> d(n, vector<long long int>(n));\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        fin >> d[i][j];\n      }\n    }\n    fin >> u >> v;\n\n    vector<vector<long long int>> dist(n, vector<long long int>(n, -1));\n    for (int from = 0; from < n; ++from) {\n      dist[from][from] = 0;\n      for (int to = from + 1; to < n; ++to) {\n        dist[from][to] = dist[from][to - 1] + d[to - 1][to];\n        \/\/\t\t\t\tcout << from << ' ' << to << ' ' <<\n        \/\/ dist[from][to] << endl;\n      }\n    }\n\n    vector<double> dp(n, 1e18);\n    dp[0] = 0;\n    for (int to = 1; to < n; ++to) {\n      for (int from = 0; from < to; ++from) {\n        if (dist[from][to] <= e[from]) {\n          dp[to] = min(dp[to], dp[from] + 1.0 * dist[from][to] \/ s[from]);\n        }\n      }\n    }\n\n    fout << \"Case #\" << testcase + 1 << \": \" << fixed << setprecision(7)\n         << dp[n - 1] << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iostream>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nint is_tidy(ll in) {\n  int crr = 10;\n  for (int i = 0; in > 0; i++) {\n    if (in % 10 > crr) {\n      return false;\n    }\n    crr = in % 10;\n    in \/= 10;\n  }\n  return true;\n}\n\nint non_tidy_digit(ll in) {\n  int d = -1;\n  int crr = 10;\n  for (int i = 0; in > 0; i++) {\n    if (in % 10 >= crr) {\n      d = i;\n    }\n    crr = in % 10;\n    in \/= 10;\n  }\n  return d;\n}\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    ll N;\n    cin >> N;\n\n    if (is_tidy(N)) {\n      cout << \"Case #\" << i + 1 << \": \" << N << endl;\n    } else {\n      ll base = ll(pow(10, non_tidy_digit(N)));\n      cout << \"Case #\" << i + 1 << \": \" << (N \/ base) * base - 1 << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iostream>\n#include <queue>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    ll N, K;\n    cin >> N >> K;\n\n    \/\/ O(log N)\n    \/\/ init\n    \/\/ ll crr = (N-1) - (N-1)\/2, n1=1, n2=1;\n    ll crr = N, n1 = 1, n2 = 0;\n\n    \/\/ main loop\n    ll c = 1;\n    while (K > c) {\n      ll nn1, nn2;\n      if (crr % 2 == 0) {\n        \/\/ crr=(2n+2)*i, (2n+1)*j -> n  ,n+1, n  ,n i.e. next=n+1, i, i+2j\n        nn1 = n1;\n        nn2 = n1 + 2 * n2;\n      } else {\n        \/\/ crr=(2n+3)*i, (2n+2)*j -> n+1,n+1, n+1,n i.e. next=n+1, 2i+j, j\n        nn1 = 2 * n1 + n2;\n        nn2 = n2;\n      }\n      crr \/= 2;\n      n1 = nn1;\n      n2 = nn2;\n      K -= c;\n      c *= 2;\n    }\n\n    ll final_seg = (n1 >= K) ? crr : crr - 1;\n    ll l = (final_seg - 1) \/ 2, r = (final_seg - 1) - l;\n    cout << \"Case #\" << i + 1 << \": \" << r << \" \" << l << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <iostream>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nchar flip(char c) {\n  if (c == '+') {\n    return '-';\n  }\n  return '+';\n}\n\nint main() {\n  ll N;\n  cin >> N;\n  cin.ignore();\n\n  for (int i = 0; i < N; i++) {\n    string ps;\n    int K;\n    cin >> ps >> K;\n    cin.ignore();\n\n    ll lim = ps.length() - (K - 1);\n\n    ll ans = 0;\n    for (int j = 0; j < lim; j++) { \/\/ make every pancake happy\n      if (ps[j] == '-') {\n        ans++;\n        for (int k = 0; k < K; k++) {\n          ps[j + k] = flip(ps[j + k]);\n        }\n      }\n    }\n    for (size_t j = lim; j < ps.length(); j++) {\n      if (ps[j] == '-') {\n        ans = -1;\n        break;\n      }\n    }\n\n    if (ans < 0) {\n      cout << \"Case #\" << i + 1 << \": IMPOSSIBLE\" << endl;\n    } else {\n      cout << \"Case #\" << i + 1 << \": \" << ans << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nbool has_overlap(pair<int, int> p1, pair<int, int> p2) {\n  if (p1.second < p2.first)\n    return false;\n  if (p2.second < p1.first)\n    return false;\n  return true;\n}\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    ll N, P;\n    cin >> N >> P;\n    vector<int> rcp(N);\n    for (int i = 0; i < N; i++) {\n      cin >> rcp[i];\n    }\n    vector<vector<int>> pack(N);\n    for (int i = 0; i < N; i++) {\n      pack[i].resize(P);\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> pack[i][j];\n      }\n      sort(pack[i].begin(), pack[i].end());\n    }\n\n    \/\/ check possible num of servings\n    vector<vector<pair<int, int>>> segs(N);\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        int lmul = 1;\n        while (pack[i][j] > 1.1 * lmul * rcp[i]) {\n          lmul++;\n        }\n        int rmul = lmul;\n        while (pack[i][j] >= 0.9 * rmul * rcp[i]) {\n          rmul++;\n        }\n        rmul--;\n\n        if (lmul <= rmul) {\n          segs[i].push_back(make_pair(lmul, rmul));\n        }\n      }\n    }\n\n    int ans = 0;\n    vector<int> idx(N, 0);\n    for (int j = 0; j < segs[0].size(); j++) {\n      pair<int, int> crr = segs[0][j];\n      \/\/ cerr << pack[0][j] << \" \" << rcp[0] << \" \" << crr.first << \" \" <<\n      \/\/ crr.second << endl;\n\n      bool possible = true;\n      for (int i = 1; i < N; i++) {\n        int tmp_idx = idx[i];\n        for (; tmp_idx < segs[i].size(); tmp_idx++) {\n          if (has_overlap(crr, segs[i][tmp_idx])) {\n            break;\n          }\n        }\n        if (tmp_idx == segs[i].size()) {\n          possible = false;\n          break;\n        }\n        idx[i] = tmp_idx + 1;\n      }\n      if (possible) {\n        ans++;\n      }\n    }\n\n    cout << \"Case #\" << i + 1 << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iostream>\n#include <queue>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int i = 0; i < T; i++) {\n    ll R, C;\n    cin >> R >> C;\n\n    vector<string> cake(R);\n    for (int i = 0; i < R; i++) {\n      cin >> cake[i];\n      cin.ignore();\n    }\n\n    \/\/ fill non-empty columns\n    for (int i = 0; i < C; i++) {\n      int idx = 0;\n      while (idx < R && cake[idx][i] == '?') {\n        idx++;\n      } \/\/ first non-empty row\n      if (idx == R) {\n        continue;\n      } \/\/ empty column\n\n      for (int j = 0; j < idx; j++) {\n        cake[j][i] = cake[idx][i];\n      } \/\/ fill upper cells\n      char fill = cake[idx][i];\n      for (int j = idx + 1; j < R; j++) {\n        if (cake[j][i] == '?') {\n          cake[j][i] = fill;\n        } else {\n          fill = cake[j][i];\n        }\n      }\n    }\n\n    \/\/ fill empty columns\n    int idx = 0;\n    while (idx < C && cake[0][idx] == '?') {\n      idx++;\n    } \/\/ first non-empty column\n    if (idx != C) {\n      for (int i = 0; i < idx; i++) { \/\/ fill left side\n        for (int j = 0; j < R; j++) {\n          cake[j][i] = cake[j][idx];\n        }\n      }\n      int fill_idx = idx;\n      for (int i = idx + 1; i < C; i++) {\n        if (cake[0][i] == '?') {\n          for (int j = 0; j < R; j++) {\n            cake[j][i] = cake[j][fill_idx];\n          }\n        } else {\n          fill_idx = i;\n        }\n      }\n    }\n\n    cout << \"Case #\" << i + 1 << \":\" << endl;\n    for (int i = 0; i < R; i++) {\n      cout << cake[i] << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int t = 0; t < T; t++) {\n    ll D, N;\n    cin >> D >> N;\n\n    vector<ll> Ks(N);\n    vector<ll> Ss(N);\n    for (int i = 0; i < N; i++) {\n      cin >> Ks[i] >> Ss[i];\n    }\n\n    double max_time = 0;\n    for (int i = 0; i < N; i++) {\n      max_time = max(max_time, ((double)(D - Ks[i])) \/ (double)Ss[i]);\n    }\n\n    double ans = D \/ max_time;\n\n    cout << \"Case #\" << t + 1 << \": \" << setprecision(8) << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <tuple>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nstruct P {\n  int n1, n2;\n  string s1, s2;\n  P(){};\n  P(int n1, int n2, string s1, string s2) : n1(n1), n2(n2), s1(s1), s2(s2){};\n  bool operator<(const P &rhs) const { return n1 < rhs.n1; };\n};\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int t = 0; t < T; t++) {\n    ll N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    if (R - G < 0 || Y - V < 0 || B - O < 0) { \/\/ cannot make RGR\/YVY\/BOB\n      cout << \"Case #\" << t + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    if (O == 0 && Y == 0 && B == 0 && V == 0 && R == G) {\n      cout << \"Case #\" << t + 1 << \": \";\n      for (int i = 0; i < R; i++) {\n        cout << \"RG\";\n      }\n      cout << endl;\n      continue;\n    }\n    if (R == 0 && O == 0 && G == 0 && B == 0 && Y == V) {\n      cout << \"Case #\" << t + 1 << \": \";\n      for (int i = 0; i < Y; i++) {\n        cout << \"YV\";\n      }\n      cout << endl;\n      continue;\n    }\n    if (R == 0 && Y == 0 && G == 0 && V == 0 && B == O) {\n      cout << \"Case #\" << t + 1 << \": \";\n      for (int i = 0; i < B; i++) {\n        cout << \"BO\";\n      }\n      cout << endl;\n      continue;\n    }\n\n    \/\/ num of RorRGR, num of RGR, \"R\", \"RGR\"\n    vector<P> ps;\n    ps.push_back(P(R - G, G, \"R\", \"RGR\"));\n    ps.push_back(P(Y - V, V, \"Y\", \"YVY\"));\n    ps.push_back(P(B - O, O, \"B\", \"BOB\"));\n    \/\/ vector<tuple<int,int,string,string> > ts(3);\n    \/\/ ts[0] = make_tuple(R-G, G, \"R\", \"RGR\");\n    \/\/ ts[1] = make_tuple(Y-V, V, \"Y\", \"YVY\");\n    \/\/ ts[2] = make_tuple(B-O, O, \"B\", \"BOB\");\n    \/\/    ts[1] = make_pair(Y-V, \"Y\");\n    \/\/    ts[2] = make_pair(B-O, \"B\");\n\n    sort(ps.rbegin(), ps.rend());\n\n    \/\/ for(int i=0; i<3; i++){\n    \/\/   cerr<< ps[i].n1<<\" \"<<ps[i].n2<<\" \"<<ps[i].s1<<\" \"<<ps[i].s2 <<endl;\n    \/\/ }\n\n    if (ps[0].n1 > ps[1].n1 + ps[2].n1) {\n      cout << \"Case #\" << t + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    cout << \"Case #\" << t + 1 << \": \";\n    int rest = ps[1].n1 + ps[2].n1 - ps[0].n1;\n    while (ps[0].n1 > 0 || ps[1].n1 > 0 || ps[2].n1 > 0) {\n      if (rest-- > 0) {\n        cout << (ps[0].n2 > 0 ? ps[0].s2 : ps[0].s1);\n        cout << (ps[1].n2 > 0 ? ps[1].s2 : ps[1].s1);\n        cout << (ps[2].n2 > 0 ? ps[2].s2 : ps[2].s1);\n      } else if (ps[1].n1 > 0) {\n        cout << (ps[0].n2 > 0 ? ps[0].s2 : ps[0].s1);\n        cout << (ps[1].n2 > 0 ? ps[1].s2 : ps[1].s1);\n      } else {\n        cout << (ps[0].n2 > 0 ? ps[0].s2 : ps[0].s1);\n        cout << (ps[2].n2 > 0 ? ps[2].s2 : ps[2].s1);\n      }\n      ps[0].n1--;\n      ps[1].n1--;\n      ps[2].n1--;\n      ps[0].n2--;\n      ps[1].n2--;\n      ps[2].n2--;\n    }\n    cout << endl;\n\n    \/\/ while(ps[0].first > 0 || ps[1].first > 0 || ps[2].first > 0){\n    \/\/   if(rest > 0){\n    \/\/     cout << ps[0].second << ps[1].second << ps[2].second;\n    \/\/   } else if(ps[1].first > 0){\n    \/\/     cout << ps[0].second << ps[1].second;\n    \/\/   } else {\n    \/\/     cout << ps[0].second << ps[2].second;\n    \/\/   }\n\n    \/\/   ps[0].first--; ps[1].first--; ps[2].first--; rest--;\n    \/\/ }\n    \/\/ cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"hayassy","func":"#include <algorithm> \/\/ sort\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <utility>\n#include <vector>\n\ntypedef long long ll;\nusing namespace std;\n\nint main() {\n  ll T;\n  cin >> T;\n\n  for (int t = 0; t < T; t++) {\n    ll N, Q;\n    cin >> N >> Q;\n\n    vector<ll> Es(N);\n    vector<ll> Ss(N);\n    for (int i = 0; i < N; i++) {\n      cin >> Es[i] >> Ss[i];\n    }\n    vector<vector<ll>> Ds(N);\n    for (int i = 0; i < N; i++) {\n      Ds[i].resize(N);\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> Ds[i][j];\n      }\n    }\n    vector<pair<int, int>> UVs(Q);\n    for (int i = 0; i < Q; i++) {\n      int u, v;\n      cin >> u >> v;\n      UVs[i] = make_pair(u, v);\n    }\n\n    \/\/ small : Q=0\n    vector<ll> Dss(N, 0); \/\/ distance sum from city 1\n    for (int i = 1; i < N; i++) {\n      Dss[i] = Dss[i - 1] + Ds[i - 1][i];\n    }\n\n    vector<vector<double>> dp(\n        N); \/\/ min time which @ city i with horse j, -1 if impossible\n    for (int i = 0; i < N; i++) {\n      dp[i].resize(N);\n    }\n    dp[1][0] = (double)Ds[0][1] \/ (double)Ss[0];\n    for (int i = 2; i < N; i++) { \/\/ city\n      \/\/ horse, change horse\n      double min_time = numeric_limits<double>::max();\n      for (int k = 0; k < i - 1; k++) {\n        if (dp[i - 1][k] >= 0) {\n          min_time = min(min_time, dp[i - 1][k]);\n        }\n      }\n      dp[i][i - 1] = min_time + ((double)Ds[i - 1][i] \/ (double)Ss[i - 1]);\n\n      for (int j = 0; j < i - 1; j++) { \/\/ horse, not change horse\n        if (Dss[i] - Dss[j] > Es[j]) {\n          dp[i][j] = -1;\n        } else {\n          dp[i][j] = dp[i - 1][j] + ((double)Ds[i - 1][i] \/ (double)Ss[j]);\n        }\n      }\n    }\n\n    double ans = numeric_limits<double>::max();\n    for (int i = 0; i < N - 1; i++) {\n      if (dp[N - 1][i] >= 0) {\n        ans = min(ans, dp[N - 1][i]);\n      }\n    }\n\n    cout << \"Case #\" << t + 1 << \": \" << setprecision(8) << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar s[110], ans[110];\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n\n  int test;\n  scanf(\"%d\", &test);\n\n  for (int _ = 1; _ <= test; _++) {\n    scanf(\"%s\", s);\n    int lens = strlen(s);\n    long long ret = 0;\n    for (int i = 0; i < lens; i++) {\n      bool judge = true;\n      for (int j = i + 1; j < lens; j++) {\n        if (s[j] < s[i]) {\n          judge = false;\n          break;\n        } else if (s[j] > s[i]) {\n          break;\n        }\n      }\n      if (judge)\n        ans[i] = s[i];\n      else {\n        ans[i] = s[i] - 1;\n        for (int j = i + 1; j < lens; j++) {\n          ans[j] = '9';\n        }\n        break;\n      }\n    }\n    for (int i = 0; i < lens; i++) {\n      ret = ret * 10 + ans[i] - '0';\n    }\n    printf(\"Case #%d: %I64d\\n\", _, ret);\n  }\n\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    long long x, K;\n    cin >> x >> K;\n\n    long long KK = K;\n    int i = 0;\n    for (; (1LL << i) < K; i++) {\n      K -= (1LL << i);\n    }\n    x -= (KK - K);\n    long long y = x \/ (1 << i) + (K <= (x % (1 << i)));\n    printf(\"Case #%d: %I64d %I64d\\n\", _, y \/ 2, (y - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar s[1010];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    scanf(\"%s\", s);\n    int K;\n    scanf(\"%d\", &K);\n\n    int lens = strlen(s), ret = 0;\n\n    for (int i = 0; i + K <= lens; i++) {\n      if (s[i] == '-') {\n        for (int j = i; j < i + K; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n        ret++;\n      }\n    }\n    bool judge = true;\n    for (int i = 0; i < lens; i++) {\n      if (s[i] == '-') {\n        judge = false;\n      }\n    }\n\n    printf(\"Case #%d: \", _);\n    if (judge)\n      printf(\"%d\\n\", ret);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint a[60], mat[60][60];\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    int n, P;\n    scanf(\"%d%d\", &n, &P);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < P; j++) {\n        scanf(\"%d\", &mat[i][j]);\n      }\n    }\n    int ret = 0;\n    if (2 == n) {\n      sort(mat[1], mat[1] + P);\n      do {\n        int nowtot = 0;\n        for (int i = 0; i < P; i++) {\n          bool judge = false;\n          for (int k = mat[0][i] \/ 1.1 \/ a[0]; k <= mat[0][i] \/ 0.9 \/ a[0] + 1;\n               k++) {\n            bool hav = ((mat[0][i] >= 0.9 * a[0] * k - 0.5) &&\n                        (mat[0][i] <= 1.1 * a[0] * k + 0.5) &&\n                        (mat[1][i] >= 0.9 * a[1] * k - 0.5) &&\n                        (mat[1][i] <= 1.1 * a[1] * k + 0.5));\n            if (hav) {\n              judge = true;\n              break;\n            }\n          }\n          if (judge)\n            nowtot++;\n        }\n        ret = max(ret, nowtot);\n      } while (next_permutation(mat[1], mat[1] + P));\n    } else {\n      for (int i = 0; i < P; i++) {\n        bool judge = false;\n        for (int k = mat[0][i] \/ 1.1 \/ a[0]; k <= mat[0][i] \/ 0.9 \/ a[0] + 1;\n             k++) {\n          bool hav = ((mat[0][i] >= 0.9 * a[0] * k - 0.5) &&\n                      (mat[0][i] <= 1.1 * a[0] * k + 0.5));\n          if (hav) {\n            judge = true;\n            break;\n          }\n        }\n        if (judge)\n          ret++;\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", _, ret);\n  }\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstruct Re {\n  int idx, line, row;\n  Re() {}\n  Re(int idx, int line, int row) : idx(idx), line(line), row(row) {}\n  bool operator<(const Re &re) const {\n    if (row != re.row)\n      return row < re.row;\n    return line < re.line;\n  }\n} re[33];\n\nchar mat[33][33];\nvector<pair<int, int>> sav[33];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", mat[i]);\n      sav[i].clear();\n    }\n\n    int totre = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        if (mat[i][j] != '?') {\n          sav[i].push_back({mat[i][j], j});\n          re[totre++] = Re(mat[i][j] - 'A', i, j);\n        }\n      }\n    }\n\n    int ed[33];\n    char lab[33];\n\n    int mxline = 0;\n    for (int i = 0, preline = 0; i < n; i++) {\n      if (sav[i].size()) {\n        mxline = max(mxline, i);\n        for (int k = 0; k < sav[i].size(); k++) {\n          ed[k] = sav[i][k].second;\n          lab[k] = sav[i][k].first;\n        }\n        ed[sav[i].size() - 1] = m - 1;\n\n        for (int k = 0, pre = 0; k < sav[i].size(); k++) {\n          for (int ii = preline; ii <= i; ii++) {\n            for (int j = pre; j <= ed[k]; j++) {\n              mat[ii][j] = lab[k];\n            }\n          }\n\n          pre = ed[k] + 1;\n        }\n        preline = i + 1;\n      }\n    }\n\n    for (int i = mxline + 1; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        mat[i][j] = mat[mxline][j];\n      }\n    }\n\n    printf(\"Case #%d:\\n\", _);\n    for (int i = 0; i < n; i++) {\n      puts(mat[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    int d, n;\n    scanf(\"%d%d\", &d, &n);\n\n    double mx = 0;\n    for (int i = 0; i < n; i++) {\n      int x, v;\n      scanf(\"%d%d\", &x, &v);\n      mx = max(mx, (d - x) * 1.0 \/ v);\n    }\n\n    printf(\"Case #%d: %.10f\\n\", _, d \/ mx);\n  }\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint sz[7], ret[1010];\nconst int flag[7] = {1, (1 | 2), 2, (2 | 4), 4, (1 | 4)};\nconst char name[7] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    int n;\n    scanf(\"%d\", &n);\n    int mx = 0;\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &sz[i]);\n      mx = max(mx, sz[i]);\n    }\n\n    printf(\"Case #%d: \", _);\n    if (mx * 2 > n) {\n      puts(\"IMPOSSIBLE\");\n    } else {\n      int totret = 0;\n      while (n--) {\n        int mx = 0, id = -1;\n        int bk = totret ? ret[totret - 1] : -1;\n        int x = totret ? ret[0] : 0;\n        for (int i = x, j = 0; j < 3; (i += 2) %= 6, j++) {\n          if (i == bk)\n            continue;\n          if (sz[i] > mx) {\n            id = i;\n            mx = sz[i];\n          }\n        }\n        sz[id]--;\n        ret[totret++] = id;\n      }\n      if (ret[0] == ret[totret - 1]) {\n        puts(\"\");\n      }\n      for (int i = 0; i < totret; i++) {\n        putchar(name[ret[i]]);\n      }\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"hhhhhhhhhhhhhhhhhhhhhh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int N = 110;\nint mxd[N], sp[N];\nint mat[N][N];\n\ndouble dis[N];\nbool done[N];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int test;\n  scanf(\"%d\", &test);\n  for (int _ = 1; _ <= test; _++) {\n    int n, q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d%d\", &mxd[i], &sp[i]);\n    }\n\n    memset(mat, 63, sizeof(mat));\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        if (~x) {\n          mat[i][j] = x;\n        }\n      }\n    }\n    for (int k = 1; k <= n; k++) {\n      for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n          mat[i][j] = min(mat[i][j], mat[i][k] + mat[k][j]);\n        }\n      }\n    }\n\n    printf(\"Case #%d:\", _);\n    while (q--) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      for (int i = 1; i <= n; i++) {\n        dis[i] = 1e60;\n      }\n      memset(done, 0, sizeof(done));\n      priority_queue<pair<double, int>, vector<pair<double, int>>,\n                     greater<pair<double, int>>>\n          que;\n\n      dis[x] = 0;\n      que.push({dis[x], x});\n\n      while (!que.empty()) {\n        pair<double, int> u = que.top();\n        que.pop();\n        if (done[u.second]) {\n          continue;\n        }\n        done[u.second] = true;\n        for (int v = 1; v <= n; v++) {\n          if (mat[u.second][v] <= mxd[u.second] &&\n              dis[v] > dis[u.second] + mat[u.second][v] * 1.0 \/ sp[u.second]) {\n            dis[v] = dis[u.second] + mat[u.second][v] * 1.0 \/ sp[u.second];\n            que.push({dis[v], v});\n          }\n        }\n      }\n      printf(\" %.10f\", dis[y]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nint t, tc;\nchar s[20];\n\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s\", s);\n    int n = strlen(s);\n    int reset = n;\n    for (int i = 1; i < n; ++i) {\n      while (reset <= i) {\n        s[reset++] = '9';\n      }\n      if (s[i - 1] <= s[i])\n        continue;\n      else {\n        reset = i;\n        s[i - 1] -= 1;\n        i -= 2;\n      }\n    }\n    int i = 0;\n    while (i < n - 1 && s[i] == '0')\n      ++i;\n    printf(\"Case #%d: %s\\n\", ++tc, s + i);\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nstruct pos {\n  int L, R;\n  pos() {}\n  pos(int L, int R) : L(L), R(R) {}\n  bool operator<(const pos &p) const {\n    int s1 = R - L;\n    int s2 = p.R - p.L;\n    return s1 < s2 || (s1 == s2 && L > p.L);\n  }\n};\n\nint t, n, k;\npriority_queue<pos> pq;\n\nint main() {\n  int tc = 0;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d\", &n, &k);\n    pq = priority_queue<pos>();\n    pq.push(pos(0, n - 1));\n    pos top;\n    for (int i = 0; i < k; ++i) {\n      top = pq.top();\n      int L = top.L;\n      int R = top.R;\n      int M = (L + R) \/ 2;\n      \/\/ choose this stall\n      pq.push(pos(L, M - 1));\n      pq.push(pos(M + 1, R));\n      pq.pop();\n    }\n    int L = top.L;\n    int R = top.R;\n    int M = (L + R) \/ 2;\n    int left = M - L;\n    int right = R - M;\n    int mn = min(left, right);\n    int mx = max(left, right);\n    printf(\"Case #%d: %d %d\\n\", ++tc, mx, mn);\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 1005;\n\nint k, t;\nchar s[N];\n\nint main() {\n  int tc = 0;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s%d\", s, &k);\n    int n = strlen(s);\n    for (int i = 0; i < n; ++i) {\n      if (s[i] == '+')\n        s[i] = 1;\n      else\n        s[i] = 0;\n    }\n    int flips = 0;\n    for (int i = 0; i + k <= n; ++i) {\n      if (s[i] == 0) {\n        \/\/ flip\n        flips += 1;\n        for (int j = 0; j < k; ++j)\n          s[j + i] ^= 1;\n      }\n    }\n    int one = 0;\n    for (int i = 0; i < n; ++i)\n      if (s[i] == 1)\n        ++one;\n    printf(\"Case #%d: \", ++tc);\n    if (one == n)\n      printf(\"%d\\n\", flips);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 55;\n\nint t, n, m, start[N];\nint a[N], M[N][N];\nvector<pair<int, int>> v[N];\n\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", &a[i]);\n      v[i].clear();\n    }\n    set<int> p;\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        scanf(\"%d\", &M[i][j]);\n        double lb = M[i][j] \/ (0.9 * a[i]);\n        double ub = M[i][j] \/ (1.1 * a[i]);\n        \/\/ lbi <= index <= ubi\n        int lbi = (int)floor(lb);\n        int ubi = (int)ceil(ub);\n        if (ubi <= lbi) {\n          v[i].push_back({ubi, lbi});\n          p.insert(ubi);\n          p.insert(lbi);\n        }\n      }\n      sort(v[i].begin(), v[i].end());\n      \/\/ for (auto& c : v[i]) {\n      \/\/ cout << \" \" << c.first << \":\" << c.second;\n      \/\/ }\n      \/\/ cout << endl;\n      start[i] = 0;\n    }\n    int kits = 0;\n    for (auto &x : p) {\n      bool pass = true;\n      while (pass) {\n        \/\/ cout << x << endl;\n        for (int i = 0; i < n; ++i) {\n          bool ok = false;\n          while (start[i] < v[i].size() && v[i][start[i]].second < x)\n            ++start[i];\n          if (start[i] < v[i].size() && v[i][start[i]].first <= x &&\n              x <= v[i][start[i]].second) {\n            ok = true;\n          } else {\n            pass = false;\n            break;\n          }\n        }\n        \/\/ for (int i = 0; i < n; ++i)\n        \/\/ cout << start[i] << ' ';\n        \/\/ cout << endl;\n        if (pass) {\n          \/\/ cout << \"PASS \" << x << endl;\n          ++kits;\n          for (int i = 0; i < n; ++i)\n            ++start[i];\n        }\n      }\n    }\n    static int tc = 0;\n    printf(\"Case #%d: %d\\n\", ++tc, kits);\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 30;\n\nchar s[N][N];\nint tc, match[N][N];\nint dx[] = {-1, 0, 1, 0};\nint dy[] = {0, -1, 0, 1};\nint lmx[N], lMx[N], lmy[N], lMy[N], o[N];\nbool used[N];\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t, r, c;\n  cin >> t;\n  while (t--) {\n    cin >> r >> c;\n    for (int i = 0; i < r; ++i) {\n      cin >> s[i];\n    }\n    memset(used, 0, sizeof used);\n    \/\/ for each letter, interpolate\n    int size = 0;\n    for (char ch = 'A'; ch <= 'Z'; ++ch) {\n      int mx = r, Mx = -1, my = c, My = -1;\n      for (int i = 0; i < r; ++i) {\n        for (int j = 0; j < c; ++j) {\n          if (s[i][j] == ch) {\n            mx = min(mx, i);\n            Mx = max(Mx, i);\n            my = min(my, j);\n            My = max(My, j);\n          }\n        }\n      }\n      lmx[ch - 'A'] = mx;\n      lmy[ch - 'A'] = my;\n      lMx[ch - 'A'] = Mx;\n      lMy[ch - 'A'] = My;\n      if (mx <= Mx) {\n        o[size++] = ch - 'A';\n        used[ch - 'A'] = true;\n        for (int i = mx; i <= Mx; ++i)\n          for (int j = my; j <= My; ++j)\n            s[i][j] = ch;\n      }\n    }\n    \/\/ fill by rows first\n    sort(o, o + size, [](int i, int j) {\n      return lmx[i] < lmx[j] || (lmx[i] == lmx[j] && lMx[i] > lMx[j]);\n    });\n    for (int i = 0; i < size; ++i) {\n      char ch = o[i];\n      \/\/ expand left\n      for (int ny = lmy[ch] - 1; ny >= 0; --ny) {\n        bool ok = true;\n        for (int k = lmx[ch]; k <= lMx[ch]; ++k) {\n          if (s[k][ny] != '?') {\n            ok = false;\n            break;\n          }\n        }\n        if (!ok)\n          break;\n        --lmy[ch];\n        for (int k = lmx[ch]; k <= lMx[ch]; ++k) {\n          s[k][ny] = ch + 'A';\n        }\n      }\n      \/\/ expand right\n      for (int ny = lMy[ch] + 1; ny < c; ++ny) {\n        bool ok = true;\n        for (int k = lmx[ch]; k <= lMx[ch]; ++k) {\n          if (s[k][ny] != '?') {\n            ok = false;\n            break;\n          }\n        }\n        if (!ok)\n          break;\n        ++lMy[ch];\n        for (int k = lmx[ch]; k <= lMx[ch]; ++k) {\n          s[k][ny] = ch + 'A';\n        }\n      }\n    }\n    \/\/ sort by columns\n    sort(o, o + size, [](int i, int j) {\n      return lmy[i] < lmy[j] || (lmy[i] == lmy[j] && lMy[i] > lMy[j]);\n    });\n    for (int i = 0; i < size; ++i) {\n      char ch = o[i];\n      \/\/ expand up\n      for (int nx = lmx[ch] - 1; nx >= 0; --nx) {\n        bool ok = true;\n        for (int k = lmy[ch]; k <= lMy[ch]; ++k) {\n          if (s[nx][k] != '?') {\n            ok = false;\n            break;\n          }\n        }\n        if (!ok)\n          break;\n        --lmx[ch];\n        for (int k = lmy[ch]; k <= lMy[ch]; ++k) {\n          s[nx][k] = ch + 'A';\n        }\n      }\n      \/\/ expand down\n      for (int nx = lMx[ch] + 1; nx < r; ++nx) {\n        bool ok = true;\n        for (int k = lmy[ch]; k <= lMy[ch]; ++k) {\n          if (s[nx][k] != '?') {\n            ok = false;\n            break;\n          }\n        }\n        if (!ok)\n          break;\n        ++lMx[ch];\n        for (int k = lmy[ch]; k <= lMy[ch]; ++k) {\n          s[nx][k] = ch + 'A';\n        }\n      }\n    }\n    cout << \"Case #\" << ++tc << \":\\n\";\n    for (int i = 0; i < r; ++i) {\n      cout << s[i] << \"\\n\";\n    }\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint t, tc, n, d;\n\nint main() {\n  cout.precision(10);\n  cout << fixed;\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> d >> n;\n    cout << \"Case #\" << ++tc << \": \";\n    double mx = 0;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      cin >> k >> s;\n      double t = 1.0 * (d - k) \/ s;\n      mx = max(mx, t);\n    }\n    cout << d \/ mx << '\\n';\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint t, tc, n;\nint r, o, y, g, b, v;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    cin >> r >> o >> y >> g >> b >> v;\n    cout << \"Case #\" << ++tc << \": \";\n    string ans;\n    deque<pair<int, pair<int, char>>> v;\n    if (r)\n      v.push_back({r, {0, 'R'}});\n    if (y)\n      v.push_back({y, {0, 'Y'}});\n    if (b)\n      v.push_back({b, {0, 'B'}});\n    sort(v.begin(), v.end());\n    for (int i = 0; i < v.size(); ++i)\n      v[i].second.first = i;\n    ans += v.back().second.second;\n    v.back().first--;\n    if (v.back().first == 0)\n      v.pop_back();\n    while (v.size() > 0) {\n      sort(v.begin(), v.end());\n      while (v.size() > 0 && v.front().first == 0)\n        v.pop_front();\n      if (v.empty())\n        break;\n      int i;\n      for (i = v.size() - 1; i >= 0; --i) {\n        if (v[i].second.second != ans.back()) {\n          ans.push_back(v[i].second.second);\n          v[i].first -= 1;\n          break;\n        }\n      }\n      if (i < 0)\n        break;\n    }\n    \/\/ cout << v.empty() << ' ' << ans << endl;\n    if (!v.empty() || ans[0] == ans.back())\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << \"\\n\";\n  }\n}\n"}
{"target":"hikarico","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 105;\n\nint t, tc, n;\nint q, e[N], s[N], u, v, d[N][N];\ndouble dp[N];\n\nint main() {\n  cout.precision(10);\n  cout << fixed;\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    cout << \"Case #\" << ++tc << \": \";\n    \/\/ small\n    cin >> q;\n    for (int i = 1; i <= n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j)\n        cin >> d[i][j];\n    cin >> u >> v;\n    fill(dp, dp + n + 1, HUGE_VAL);\n    dp[1] = 0;\n    for (int i = 1; i <= n; ++i) {\n      long long dist = 0;\n      for (int j = i + 1; j <= n; ++j) {\n        dist += d[j - 1][j];\n        if (dist <= e[i]) {\n          \/\/ horse can go here\n          dp[j] = min(dp[j], dp[i] + 1.0 * dist \/ s[i]);\n        }\n      }\n    }\n    cout << dp[n] << '\\n';\n  }\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"b.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    string s;\n    in >> s;\n    string ans;\n    int i = 0;\n    for (i = 0; i < s.size(); ++i) {\n      if (s[i] > '0' && (i == 0 || s[i] - 1 >= s[i - 1]))\n        ans = s.substr(0, i) + char(s[i] - 1) + string(s.size() - i - 1, '9');\n      if (i > 0 && s[i] < s[i - 1])\n        break;\n    }\n    if (i == s.size())\n      ans = s;\n    while (ans[0] == '0')\n      ans = ans.substr(1);\n    out << \"Case #\" << test << \": \" << ans << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n#pragma warning(disable : 4244 4267 4018 4996 4800)\n\/\/#pragma comment( linker, \"\/stack:10000000\" )\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"c.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    ll n, k;\n    in >> n >> k;\n    map<ll, ll> m;\n    m[n] = 1;\n    ll l, r;\n    while (true) {\n      auto it = m.end();\n      --it;\n      ll w = it->first;\n      ll cnt = it->second;\n      l = w \/ 2, r = max(0LL, w - 1) \/ 2;\n      if (k > cnt) {\n        m.erase(it);\n        m[l] += cnt;\n        m[r] += cnt;\n        k -= cnt;\n      } else\n        break;\n    }\n    out << \"Case #\" << test << \": \" << l << ' ' << r << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n#pragma warning(disable : 4244 4267 4018 4996 4800)\n\/\/#pragma comment( linker, \"\/stack:10000000\" )\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"a.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    string s;\n    int k;\n    in >> s >> k;\n    vi v(s.size());\n    int res = 0;\n    bool possible = true;\n    for (int i = 0; i < s.size(); ++i) {\n      int cnt = 0;\n      for (int j = i - 1; j >= i - k + 1 && j >= 0; --j)\n        cnt += v[j];\n      if ((cnt & 1) == (s[i] == '+')) {\n        if (i <= s.size() - k)\n          v[i] = 1, ++res;\n        else\n          possible = false;\n      }\n    }\n    out << \"Case #\" << test << \": \";\n    if (!possible)\n      out << \"IMPOSSIBLE\";\n    else\n      out << res;\n    out << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"b.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    int n, p;\n    in >> n >> p;\n    vi r(n);\n    for (int &x : r)\n      in >> x;\n    vvi q(n, vi(p));\n    for (vi &v : q)\n      for (int &x : v)\n        in >> x;\n    int res = 0;\n    if (n == 1) {\n      for (int i = 0; i < p; ++i) {\n        int x = q[0][i] \/ r[0];\n        if (x > 0 && 10 * q[0][i] >= 9 * x * r[0] &&\n            10 * q[0][i] <= 11 * x * r[0]) {\n          ++res;\n          continue;\n        }\n        ++x;\n        if (10 * q[0][i] >= 9 * x * r[0] && 10 * q[0][i] <= 11 * x * r[0])\n          ++res;\n      }\n    } else {\n      vi perm(p);\n      for (int i = 0; i < p; ++i)\n        perm[i] = i;\n      do {\n        int cur = 0;\n        for (int i = 0; i < p; ++i) {\n          int h1 = 10 * q[0][i] \/ (9 * r[0]);\n          int l1 = (10 * q[0][i] - 1) \/ (11 * r[0]) + 1;\n          int h2 = 10 * q[1][perm[i]] \/ (9 * r[1]);\n          int l2 = (10 * q[1][perm[i]] - 1) \/ (11 * r[1]) + 1;\n          if (l1 <= h2 && l2 <= h1)\n            ++cur;\n          \/*int x = q[0][i] \/ r[0];\n          if (x >= 0 &&\n              10 * q[0][i] >= 9 * x * r[0] && 10 * q[0][i] <= 11 * x * r[0] &&\n              10 * q[1][perm[i]] >= 9 * x * r[1] && 10 * q[1][perm[i]] <= 11 * x\n          * r[1]) {\n              ++cur;\n              continue;\n          }\n          ++x;\n          if (10 * q[0][i] >= 9 * x * r[0] && 10 * q[0][i] <= 11 * x * r[0] &&\n              10 * q[1][perm[i]] >= 9 * x * r[1] && 10 * q[1][perm[i]] <= 11 * x\n          * r[1])\n              ++cur;*\/\n        }\n        res = max(res, cur);\n      } while (next_permutation(begin(perm), end(perm)));\n    }\n    out << \"Case #\" << test << \": \" << res << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n#pragma warning(disable : 4244 4267 4018 4996 4800)\n\/\/#pragma comment( linker, \"\/stack:10000000\" )\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"a.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    int r, c;\n    in >> r >> c;\n    vs v(r);\n    vvi done(r, vi(c));\n    for (int i = 0; i < r; ++i) {\n      in >> v[i];\n    }\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j)\n        if (!done[i][j]) {\n          char ch = '?';\n          int ii, jj, t;\n          for (jj = j; jj < c; ++jj)\n            if (v[i][jj] != '?') {\n              if (ch == '?')\n                ch = v[i][jj], t = i;\n              else\n                break;\n            }\n          for (ii = i + 1; ii < r; ++ii) {\n            for (int k = j; k < jj; ++k)\n              if (v[ii][k] != '?') {\n                if (ch == '?')\n                  ch = v[ii][k], t = ii;\n                else {\n                  if (t == ii)\n                    jj = k;\n                  goto done;\n                }\n              }\n          }\n        done:\n          for (int x = i; x < ii; ++x)\n            for (int y = j; y < jj; ++y)\n              v[x][y] = ch, done[x][y] = 1;\n        }\n    }\n    out << \"Case #\" << test << \": \" << '\\n';\n    for (int i = 0; i < r; ++i)\n      out << v[i] << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n#pragma warning(disable : 4244 4267 4018 4996 4800)\n\/\/#pragma comment( linker, \"\/stack:10000000\" )\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"a.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    int d, n;\n    in >> d >> n;\n    \/\/ vi k(n), s(n);\n    double t = 0;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      in >> k >> s;\n      t = max(t, ((double)d - k) \/ s);\n    }\n    out.setf(ios::fixed);\n    out.precision(10);\n    out << \"Case #\" << test << \": \" << d \/ t << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"b.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nbool put(vector<char> &s, char a, char b, char c) {\n  for (int i = 0; i < s.size(); ++i) {\n    int ii = i + 1;\n    if (ii == s.size())\n      ii = 0;\n    if ((s[i] == b || s[i] == c) && (s[ii] == b || s[ii] == c)) {\n      s.insert(s.begin() + i + 1, a);\n      return true;\n    }\n  }\n  return false;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    int n, r, o, y, g, b, v;\n    in >> n >> r >> o >> y >> g >> b >> v;\n    if (test != 1)\n      out << \"\\n\";\n    out << \"Case #\" << test << \": \";\n\n    if (o == 0 && g == 0 && r == b && v == 0 && y == 0) {\n      for (int i = 0; i < r; ++i)\n        out << \"RB\";\n      continue;\n    }\n    if (o == 0 && b == 0 && g == 0 && r == y && v == 0) {\n      for (int i = 0; i < r; ++i)\n        out << \"RY\";\n      continue;\n    }\n    if (o == 0 && g == 0 && r == 0 && v == 0 && y == b) {\n      for (int i = 0; i < y; ++i)\n        out << \"YB\";\n      continue;\n    }\n\n    if (o == b && g == 0 && r == 0 && v == 0 && y == 0) {\n      for (int i = 0; i < o; ++i)\n        out << \"OB\";\n      continue;\n    }\n    if (o == 0 && b == 0 && g == r && v == 0 && y == 0) {\n      for (int i = 0; i < g; ++i)\n        out << \"GR\";\n      continue;\n    }\n    if (o == 0 && b == 0 && g == 0 && r == 0 && v == y) {\n      for (int i = 0; i < v; ++i)\n        out << \"VY\";\n      continue;\n    }\n    vector<char> s;\n    s.reserve(n);\n    if (r) {\n      s.push_back('R');\n      --r;\n      for (int i = 0; i < g; ++i) {\n        s.push_back('G');\n        s.push_back('R');\n        --r;\n      }\n      if (r < 0)\n        goto impossible;\n    }\n    if (b) {\n      s.push_back('B');\n      --b;\n      for (int i = 0; i < o; ++i) {\n        s.push_back('O');\n        s.push_back('B');\n        --b;\n      }\n      if (b < 0)\n        goto impossible;\n    }\n    if (y) {\n      s.push_back('Y');\n      --y;\n      for (int i = 0; i < v; ++i) {\n        s.push_back('V');\n        s.push_back('Y');\n        --y;\n      }\n      if (y < 0)\n        goto impossible;\n    }\n    while (r || y || b) {\n      bool res = false;\n      if (r && put(s, 'R', 'Y', 'B'))\n        --r, res = true;\n      if (y && put(s, 'Y', 'R', 'B'))\n        --y, res = true;\n      if (b && put(s, 'B', 'R', 'Y'))\n        --b, res = true;\n      if (!res)\n        goto impossible;\n    }\n    for (int i = 0; i < n; ++i) {\n      int ii = i + 1;\n      if (ii == n)\n        ii = 0;\n      assert(s[i] != s[ii]);\n      out << s[i];\n    }\n    continue;\n  impossible:\n    out << \"IMPOSSIBLE\";\n  }\n  return 0;\n}\n"}
{"target":"hmich","func":"#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdlib>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n#pragma warning(disable : 4244 4267 4018 4996 4800)\n\/\/#pragma comment( linker, \"\/stack:10000000\" )\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef pair<int, int> pii;\n\nistream &in = cin;\n\n\/\/ ostream & out = cout;\nofstream out(\"c.out\");\ntemplate <class T> void read(T &t) {\n  for (auto &x : t)\n    in >> x;\n}\ntemplate <class T> int sz(T const &t) { return (int)t.size(); }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int ntests;\n  in >> ntests;\n  for (int test = 1; test <= ntests; ++test) {\n    int n, q;\n    in >> n >> q;\n    vd e(n), s(n);\n    for (int i = 0; i < n; ++i)\n      in >> e[i] >> s[i];\n    double inf = 1e20;\n    vvd d(n, vd(n, inf));\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        int x;\n        in >> x;\n        if (x != -1)\n          d[i][j] = x;\n      }\n    }\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        for (int k = 0; k < n; ++k)\n          d[j][k] = min(d[j][k], d[j][i] + d[i][k]);\n    vvd time(n, vd(n));\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j)\n        if (d[i][j] > e[i]) {\n          d[i][j] = inf;\n          time[i][j] = inf;\n        } else\n          time[i][j] = d[i][j] \/ s[i];\n    }\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        for (int k = 0; k < n; ++k)\n          time[j][k] = min(time[j][k], time[j][i] + time[i][k]);\n    out << \"Case #\" << test << \": \";\n    for (int i = 0; i < q; ++i) {\n      int u, v;\n      in >> u >> v;\n      --u;\n      --v;\n      out.setf(ios::fixed);\n      out.precision(10);\n      out << time[u][v] << ' ';\n    }\n    out << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Bsmall.in\", \"r\", stdin);\n  freopen(\"Bsmall.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Blarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Blarge.ou\",\"w\",stdout);\n}\nll n, s;\nll a[30], b[30];\nvoid solve() {\n  memset(a, 0, sizeof a);\n  memset(b, 0, sizeof b);\n  ll s;\n  cin >> s;\n  int n = 0;\n  while (s > 0) {\n    n++;\n    a[n] = s % 10;\n    s \/= 10;\n  }\n  b[n] = a[n];\n  for (int i = n; i >= 1; i--) {\n    b[i] = a[i];\n    if (b[i] < b[i + 1]) {\n      int j = i;\n      while (b[j] < b[j + 1] && (j + 1) <= n) {\n        j++;\n        b[j]--;\n      }\n      for (int k = j - 1; k >= 1; k--)\n        b[k] = 9;\n      break;\n    }\n  }\n  while (b[n] == 0)\n    n--;\n  for (int i = n; i >= 1; i--)\n    cout << b[i];\n  cout << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Csmall1.in\", \"r\", stdin);\n  freopen(\"Csmall1.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Clarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Clarge.ou\",\"w\",stdout);\n}\nmap<ll, ll> mm;\nvoid solve() {\n  ll n, k, x, lastx;\n  mm.clear();\n  cin >> n >> k;\n  lastx = n;\n  mm[n] = 1;\n  while (k > 0) {\n    map<ll, ll>::reverse_iterator it = mm.rbegin();\n    ll x = it->first, y = it->second;\n    mm.erase(x);\n    x--;\n    lastx = x;\n    k -= y;\n    if (x % 2 == 0) {\n      if (mm.find(x \/ 2) != mm.end()) {\n        ll old = mm[x \/ 2];\n        mm[x \/ 2] = old + y * 2;\n      } else {\n        mm[x \/ 2] = y * 2;\n      }\n    } else {\n      if (mm.find(x \/ 2) != mm.end()) {\n        ll old = mm[x \/ 2];\n        mm[x \/ 2] = old + y;\n      } else {\n        mm[x \/ 2] = y;\n      }\n\n      if (mm.find(x \/ 2 + 1) != mm.end()) {\n        ll old = mm[x \/ 2 + 1];\n        mm[x \/ 2 + 1] = old + y;\n      } else {\n        mm[x \/ 2 + 1] = y;\n      }\n    }\n    \/\/\tmz = max((int) mm.size(), mz);\n  }\n  cout << ((lastx + 1) \/ 2) << \" \" << (lastx \/ 2) << endl;\n  \/\/ cout<<mz<<endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nvoid mf() {\n  freopen(\"Asmall.in\", \"r\", stdin);\n  freopen(\"Asmall.ou\", \"w\", stdout);\n}\nint n, k;\nstring st;\nvoid solve() {\n  cin >> st >> k;\n  n = st.length();\n  int res = 0;\n  for (int i = 0; i < n - k + 1; i++) {\n    if (st[i] == '-') {\n      res++;\n      for (int j = i; j <= i + k - 1; j++)\n        st[j] = (st[j] == '-') ? '+' : '-';\n    }\n  }\n  for (int i = n - k + 1; i < n; i++) {\n    if (st[i] == '-') {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  }\n  cout << res << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Bsmall3.in\", \"r\", stdin);\n  freopen(\"Bsmall3.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Blarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Blarge.ou\",\"w\",stdout);\n}\nint n, m;\nll a[57], c[57], b[57];\nll d[57][57];\n\nconst int maxn = 1e3 + 7;\nstruct Edge {\n  int u, v, c, f, rid;\n  Edge(int u, int v, int c, int f, int rid)\n      : u(u), v(v), c(c), f(f), rid(rid) {}\n};\nstruct maxFlow {\n\n  int N, src, tar;\n  vector<vector<Edge>> ke;\n  int prev[maxn], prevId[maxn];\n\n  maxFlow(int n, int src, int tar) : N(n), src(src), tar(tar), ke(n + 1){};\n\n  void addEdge(int u, int v, int c) {\n    int iu = ke[v].size(), iv = ke[u].size();\n    ke[u].push_back(Edge(u, v, c, 0, iu));\n    ke[v].push_back(Edge(v, u, 0, 0, iv));\n  }\n  bool findPath() {\n    for (int i = 1; i <= N; i++)\n      prev[i] = -1;\n    queue<int> q;\n    q.push(src);\n    prev[src] = src;\n    prevId[src] = -1;\n    while (!q.empty()) {\n      int x = q.front();\n      q.pop();\n      for (int i = 0; i < ke[x].size(); i++) {\n        Edge &e = ke[x][i];\n        if (prev[e.v] != -1)\n          continue;\n        if (e.c > e.f) {\n          prev[e.v] = x;\n          prevId[e.v] = i;\n          \/\/ if(e.v == tar) return true;\n          q.push(e.v);\n        }\n      }\n    }\n    return prev[tar] != -1;\n  }\n  int getMaxFlow() {\n    int ans = 0;\n    while (findPath()) {\n      int res = 1e9, x = tar;\n      int i = prev[x];\n      while (x != src) { \/\/ i->x\n        Edge &e = ke[i][prevId[x]];\n        res = min(res, e.c - e.f);\n        x = i;\n        i = prev[x];\n      }\n      ans += res;\n      \/\/ incFlow\n      x = tar;\n      i = prev[x];\n      while (x != src) { \/\/ i->x\n        Edge &e = ke[i][prevId[x]];\n        e.f += res;\n        Edge &re = ke[x][e.rid];\n        re.f -= res;\n        x = i;\n        i = prev[x];\n      }\n    }\n    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n    return ans;\n  }\n};\n\nbool behon(double x, double y) {\n  if (x <= y)\n    return true;\n  \/\/ if(abs(x-y) <=1e-6) return true;\n  return false;\n}\nll form(ll b[]) {\n  int mid, l = floor(b[1] * 0.9f \/ a[1]), r = ceil(b[1] * 1.1f \/ a[1]), rr = 0;\n  \/\/ cout<<l<<\" \"<<r<<endl;\n  for (int i = l; i <= r; i++) {\n    bool ok = true;\n    for (int j = 1; j <= n; j++) {\n      ll v = a[j] * i;\n      if (behon(v * 0.9f, b[j]) && behon(b[j], v * 1.1f))\n        continue;\n      ok = false;\n      break;\n    }\n    if (ok)\n      return 1;\n  }\n  return 0;\n}\nint check(ll x, ll y) {\n  ll l = floor(x * 0.9f \/ a[1]) - 1, r = ceil(x * 1.1f \/ a[1]) + 1;\n  \/\/ cout<<l<<\" \"<<r<<endl;\n  for (int i = l; i <= r; i++) {\n    bool ok = true;\n    ll a1 = a[1] * i, a2 = a[2] * i;\n    if (behon(a1 * 0.9f, x) && behon(x, a1 * 1.1f)) {\n    } else\n      ok = false;\n    if (behon(a2 * 0.9f, y) && behon(y, a2 * 1.1f)) {\n    } else\n      ok = false;\n    if (ok)\n      return 1;\n  }\n  return 0;\n}\nvoid solve() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++)\n    cin >> a[i];\n  for (int j = 1; j <= m; j++)\n    cin >> b[j];\n  if (n == 1) {\n    int rr = 0;\n    for (int i = 1; i <= m; i++) {\n      ll l = floor(b[i] * 0.9f \/ a[1]), r = ceil(b[i] * 1.1f \/ a[1]);\n      for (int j = l; j <= r; j++) {\n        ll v = j * a[1];\n        if (behon(v * 0.9f, b[i]) && behon(b[i], v * 1.1f)) {\n          rr++;\n          break;\n        }\n      }\n    }\n    cout << rr << endl;\n    return;\n  }\n  for (int j = 1; j <= m; j++)\n    cin >> c[j];\n\n  for (int i = 1; i <= m; i++) {\n    for (int j = 1; j <= m; j++) {\n      d[i][j] = check(b[i], c[j]);\n      \/\/\tcout<<d[i][j]<<\" \";\n    }\n    \/\/ cout<<endl;\n  }\n\n  int s = 1, t = m * 2 + 2;\n  maxFlow flow(t, s, t);\n  for (int i = 1; i <= m; i++)\n    flow.addEdge(s, i + 1, 1);\n  for (int i = 1; i <= m; i++)\n    flow.addEdge(i + m + 1, t, 1);\n  for (int i = 1; i <= m; i++)\n    for (int j = 1; j <= m; j++) {\n      if (d[i][j] == 1) {\n        flow.addEdge(i + 1, j + m + 1, 1);\n      }\n    }\n  cout << flow.getMaxFlow() << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nstring let = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Asmall4.in\", \"r\", stdin);\n  freopen(\"Asmall4.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Alarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Alarge.ou\",\"w\",stdout);\n}\nint n, m;\nint a[50][50];\nint xmin[50], ymin[50], xmax[59], ymax[59];\nbool check(int x0, int x1, int y0, int y1, int v) {\n  for (int i = x0; i <= x1; i++)\n    for (int j = y0; j <= y1; j++) {\n      if (a[i][j] == v || a[i][j] == 0)\n        continue;\n      return false;\n    }\n  return true;\n}\nvoid drawFull(int x0, int x1, int y0, int y1, int v) {\n  for (int i = x0; i <= x1; i++)\n    for (int j = y0; j <= y1; j++) {\n      a[i][j] = v;\n    }\n}\nvoid draw(int x, int y) {\n  for (int v = 1; v <= 26; v++)\n    if (xmin[v] != 40) {\n      int xmi = min(x, xmin[v]), xma = max(x, xmax[v]), ymi = min(y, ymin[v]),\n          yma = max(y, ymax[v]);\n\n      if (check(xmi, xma, ymi, yma, v)) {\n        xmin[v] = min(xmin[v], x);\n        xmax[v] = max(xmax[v], x);\n        ymin[v] = min(ymin[v], y);\n        ymax[v] = max(ymax[v], y);\n        drawFull(xmi, xma, ymi, yma, v);\n        return;\n      }\n    }\n}\n\nvoid solve() {\n  cin >> n >> m;\n  cin.ignore(1);\n  for (int i = 1; i <= n; i++) {\n    string s;\n    getline(cin, s);\n    for (int j = 1; j <= m; j++) {\n      a[i][j] = (s[j - 1] == '?' ? 0 : (s[j - 1] - 'A') + 1);\n    }\n  }\n  for (int i = 1; i <= 26; i++) {\n    xmin[i] = ymin[i] = 40;\n    xmax[i] = ymax[i] = 0;\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      if (a[i][j] > 0) {\n        int v = a[i][j];\n        xmin[v] = min(xmin[v], i);\n        xmax[v] = max(xmax[v], i);\n        ymin[v] = min(ymin[v], j);\n        ymax[v] = max(ymax[v], j);\n      }\n    }\n  for (int v = 1; v <= 26; v++) {\n    for (int i = xmin[v]; i <= xmax[v]; i++)\n      for (int j = ymin[v]; j <= ymax[v]; j++)\n        a[i][j] = v;\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      if (a[i][j] == 0) {\n        draw(i, j);\n      }\n    }\n  cout << endl;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      int xx = a[i][j] - 1;\n      string s = \"\";\n      s += let[xx];\n      cout << s.c_str();\n    }\n    cout << endl;\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  \/\/ cout<<let.length()<<endl;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nconst int maxn = 1007;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Asmall.in\", \"r\", stdin);\n  freopen(\"Asmall.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Alarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Alarge.ou\",\"w\",stdout);\n}\nstruct data {\n  double k, s;\n};\ndata a[maxn];\ndouble d;\nint n;\nbool increaseCompare(const data &left, const data &right) {\n  return left.k < right.k; \/\/ false->swap\n}\nvoid solve() {\n  cin >> d >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].k >> a[i].s;\n  }\n  sort(a, a + n, increaseCompare);\n  double maxTime = -1e9;\n  for (int i = n - 1; i >= 0; i--) {\n    double time = (d - a[i].k) \/ a[i].s;\n    maxTime = max(time, maxTime);\n  }\n  cout << setprecision(9) << fixed;\n  double ans = d \/ maxTime;\n  cout << ans << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n\n  freopen(\"Bsmall.in\", \"r\", stdin);\n  freopen(\"Bsmall.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Blarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Blarge.ou\",\"w\",stdout);\n}\nbool fr[6][6];\nstring color[6] = {\"R\", \"O\", \"Y\", \"G\", \"B\", \"V\"};\nvector<int> ke[10];\n\/\/ 0R 1O 2Y 3G 4B 5V 6R\nstruct data {\n  int type;\n  string s;\n};\nint n;\nint a[10];\nvector<data> ans[10];\nvoid init() {\n  memset(fr, true, sizeof fr);\n  for (int i = 0; i < 6; i++)\n    fr[i][i] = false;\n  for (int i = 0; i < 6; i++) {\n    int j = (i + 1) % 6;\n    fr[i][j] = false;\n    fr[j][i] = false;\n  }\n  fr[1][3] = fr[3][1] = false;\n  fr[1][5] = fr[5][1] = false;\n  fr[3][5] = fr[5][3] = false;\n  for (int i = 0; i < 6; i++) {\n    for (int j = 0; j < 6; j++)\n      if (fr[i][j])\n        ke[i].push_back(j);\n  }\n  \/\/ for(int i = 0;i<6;i++)\n  \/\/ \tcout<<ke[i].size()<<endl;\n}\nint cc[10];\nvoid solve() {\n  cin >> n;\n  for (int i = 0; i < 6; i++) {\n    cin >> a[i];\n  }\n  \/\/\/\/\/\/\/\/\n  for (int i = 0; i < 6; i++) {\n    int rr = 0, sz = ke[i].size();\n    for (int j : ke[i])\n      rr += a[j];\n\n    if (a[i] > rr) {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n\n    if (sz == 1 && a[i] == rr && a[i] != 0) {\n      if (a[i] + rr < n) {\n        cout << \"IMPOSSIBLE\" << endl;\n        return;\n      } else {\n        for (int t = 0; t < n; t++) {\n          int j = ke[i][0];\n          if (t % 2 == 0) {\n            cout << color[i];\n          } else {\n            cout << color[j];\n          }\n        }\n        cout << endl;\n        return;\n      }\n    }\n  }\n  for (int i = 0; i < 6; i++)\n    cc[i] = 0;\n\n  for (int i = 1; i < 6; i += 2) { \/\/ xet OVG\n    if (a[i] == 0)\n      continue;\n    data p;\n    p.type = ke[i][0];\n    int j = ke[i][0];\n    a[j] -= (a[i] + 1);\n    string s = color[j];\n    for (int t = 0; t < a[i]; t++) {\n      s += color[i] + color[j];\n    }\n    p.s = s;\n    ans[j].push_back(p);\n    cc[j]++;\n  }\n  for (int i = 0; i < 6; i += 2) {\n    if (a[i] == 0)\n      continue;\n    for (int t = 0; t < a[i]; t++) {\n      data p;\n      p.type = i;\n      p.s = color[i];\n      ans[i].push_back(p);\n    }\n    cc[i] += a[i];\n  }\n\n  int maxcc = max(cc[0], cc[2]);\n  maxcc = max(maxcc, cc[4]);\n  if (2 * maxcc > (cc[0] + cc[2] + cc[4])) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  int maxT = -1, minT1 = -1, minT2 = -1;\n  for (int i = 0; i < 6; i += 2) {\n    if (maxT == -1 && maxcc == cc[i]) {\n      maxT = i;\n    } else {\n      if (minT1 == -1) {\n        minT1 = i;\n      } else {\n        minT2 = i;\n      }\n    }\n  }\n  if (cc[minT1] < cc[minT2])\n    swap(minT1, minT2);\n  \/\/ RBY\n  int cRBY = cc[0] + cc[2] + cc[4] - 2 * maxcc;\n  for (int t = 0; t < cRBY; t++) {\n    data p = ans[maxT].back();\n    ans[maxT].pop_back();\n    cout << p.s;\n    p = ans[minT1].back();\n    ans[minT1].pop_back();\n    cout << p.s;\n    p = ans[minT2].back();\n    ans[minT2].pop_back();\n    cout << p.s;\n  }\n\n  while (!ans[maxT].empty()) {\n    data p = ans[maxT].back();\n    ans[maxT].pop_back();\n    cout << p.s;\n    if (!ans[minT1].empty()) {\n      p = ans[minT1].back();\n      ans[minT1].pop_back();\n      cout << p.s;\n    } else {\n      p = ans[minT2].back();\n      ans[minT2].pop_back();\n      cout << p.s;\n    }\n  }\n  cout << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  init();\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"hoangtuanh180593","func":"#include <bits\/stdc++.h>\ntypedef long long ll;\nusing namespace std;\n\nconst int mn = 107;\n\nvoid mf() {\n  \/\/ freopen(\"input.in\",\"r\",stdin);\n  \/\/ return;\n  freopen(\"Csmall3.in\", \"r\", stdin);\n  freopen(\"Csmall3.ou\", \"w\", stdout);\n\n  \/\/ freopen(\"Clarge.in\",\"r\",stdin);\n  \/\/ freopen(\"Clarge.ou\",\"w\",stdout);\n}\ndouble a[mn], b[mn];\ndouble f[mn][mn], d[mn][mn];\nint n, s, t, q;\nvoid solve() {\n  cin >> n >> q;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i] >> b[i];\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) {\n      cin >> d[i][j];\n      if (d[i][j] == -1)\n        d[i][j] = 1e15;\n      if (i == j)\n        d[i][j] = 0;\n    }\n  cin >> s >> t;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      f[i][j] = 1e15;\n  for (int i = 1; i <= n; i++) {\n    for (int j = i + 1; j <= n; j++) {\n      d[i][j] = d[j][i] = d[i][j - 1] + d[j - 1][j];\n    }\n  }\n  \/\/\/\/\n\n  f[1][1] = 0;\n  for (int i = 2; i <= n; i++) {\n    for (int j = 1; j < i; j++) {\n      if (d[j][i] <= a[j]) {\n        f[i][j] = min(f[i][j], f[i - 1][j] + d[i - 1][i] \/ b[j]);\n        f[i][i] = min(f[i][i], f[i][j]);\n      }\n    }\n    \/\/ d[i][i]\n  }\n  cout << setprecision(9) << fixed;\n  cout << f[n][n] << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int ntest;\n  cin >> ntest;\n  for (int nt = 1; nt <= ntest; nt++) {\n    cout << \"Case #\" << nt << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\ntypedef long long LL;\n\nint dig[20];\nint n;\nLL ans;\n\nbool dfs(int pos, int now, int small) {\n  if (pos == n - 1) {\n    return true;\n  }\n  int top = 9;\n  if (small == 0) {\n    if (dig[pos + 1] >= now) {\n      ans = ans * 10 + dig[pos + 1];\n      if (dfs(pos + 1, dig[pos + 1], 0)) {\n        return true;\n      }\n      ans \/= 10;\n    }\n    top = dig[pos + 1] - 1;\n  }\n  for (int i = top; i >= now; --i) {\n    ans = ans * 10 + i;\n    if (dfs(pos + 1, i, 1)) {\n      return true;\n    }\n    ans \/= 10;\n  }\n  return false;\n}\n\nint main() {\n  if (!0) {\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n  }\n  int t, T = 1;\n  LL x;\n\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%lld\", &x);\n    n = 0;\n    while (x) {\n      dig[n++] = x % 10;\n      x \/= 10;\n    }\n    reverse(dig, dig + n);\n    for (int i = dig[0]; i >= 0; --i) {\n      ans = i;\n      if (dfs(0, i, i != dig[0])) {\n        break;\n      }\n    }\n    printf(\"Case #%d: %lld\\n\", T++, ans);\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <map>\n\nusing namespace std;\n\ntypedef long long LL;\n\nmap<LL, LL> cnt;\nmap<LL, LL>::reverse_iterator it;\n\nint main() {\n  if (!0) {\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n  }\n  int t, T = 1;\n  LL n, m;\n\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%lld%lld\", &n, &m);\n    --m;\n    cnt.clear();\n    cnt[n] = 1;\n    while (m) {\n      it = cnt.rbegin();\n      LL seg = it->first;\n      LL num = min(it->second, m);\n      cnt[seg] -= num;\n      if (cnt[seg] == 0) {\n        cnt.erase(seg);\n      }\n      m -= num;\n      if (seg & 1) {\n        cnt[seg \/ 2] += num * 2;\n      } else {\n        cnt[seg \/ 2] += num;\n        cnt[seg \/ 2 - 1] += num;\n      }\n    }\n    it = cnt.rbegin();\n    LL seg = it->first;\n    LL mx = seg \/ 2, mn = seg \/ 2;\n    if (!(seg & 1)) {\n      --mn;\n    }\n    printf(\"Case #%d: %lld %lld\\n\", T++, mx, mn);\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint main() {\n  if (!0) {\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n  }\n  int t, T = 1, n, m;\n  char s[1010];\n  int f[1010];\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s%d\", s, &m);\n    n = strlen(s);\n    for (int i = 0; i < n; ++i) {\n      if (s[i] == '+') {\n        f[i] = 0;\n      } else {\n        f[i] = 1;\n      }\n    }\n    int ans = 0;\n    for (int i = 0; i <= n - m; ++i) {\n      if (f[i] == 1) {\n        for (int j = 0; j < m; ++j) {\n          f[i + j] ^= 1;\n        }\n        ++ans;\n      }\n    }\n    for (int i = n - m + 1; i < n; ++i) {\n      if (f[i] == 1) {\n        ans = -1;\n      }\n    }\n    if (ans == -1) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", T++);\n    } else {\n      printf(\"Case #%d: %d\\n\", T++, ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint a[60], it[60];\nint n, m, ans;\n\nstruct seg {\n  int s, e;\n\n  bool operator<(const seg ff) const { return e < ff.e; }\n} f[60][60];\n\nbool yes() {\n  int mn = 2147483640, mx = 0;\n  for (int i = 0; i < n; ++i) {\n    mn = min(mn, f[i][it[i]].e);\n    mx = max(mx, f[i][it[i]].s);\n  }\n  \/\/    printf(\"mx %d mn %d \\n\", mx, mn);\n  return mn >= mx;\n}\n\nbool out() {\n  for (int i = 0; i < n; ++i) {\n    if (it[i] == m) {\n      return true;\n    }\n  }\n  return false;\n}\n\nint main() {\n  if (!0) {\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n  }\n  int t, T = 1;\n\n  scanf(\"%d\", &t);\n  while (t--) {\n    ans = 0;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", &a[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        int d;\n        scanf(\"%d\", &d);\n        int s = (int)floor(10.0 * d \/ 11 \/ a[i]);\n        if (s * a[i] * 11 < d * 10) {\n          ++s;\n        }\n        int e = (int)ceil(10.0 * d \/ 9 \/ a[i]);\n        if (e * a[i] * 9 > d * 10) {\n          --e;\n        }\n        if (s > e) {\n          s = e = 0;\n        }\n        f[i][j].s = s;\n        f[i][j].e = e;\n        \/\/                printf(\"%d %d\\n\", s, e);\n      }\n      sort(f[i], f[i] + m);\n    }\n    memset(it, 0, sizeof(it));\n    for (int i = 0; i < n; ++i) {\n      while (it[i] < m && f[i][it[i]].e == 0) {\n        ++it[i];\n      }\n    }\n\n    \/\/        for (int i = 0; i < n; ++i) {\n    \/\/            for (int j = 0; j < m; ++j) {\n    \/\/                printf(\" ( %d , %d ) \", f[i][j].s, f[i][j].e);\n    \/\/            }\n    \/\/            printf(\"\\n\");\n    \/\/        }\n    while (!out()) {\n      if (yes()) {\n        ++ans;\n        for (int i = 0; i < n; ++i) {\n          \/\/                    printf(\"%d \", it[i]);\n          ++it[i];\n        }\n        \/\/                printf(\"\\n\");\n      } else {\n        int mn = 2147483640;\n        for (int i = 0; i < n; ++i) {\n          mn = min(mn, f[i][it[i]].e);\n        }\n        for (int i = 0; i < n; ++i) {\n          if (f[i][it[i]].e == mn) {\n            \/\/                        printf(\"i %d ( %d, %d)\\n\", i,\n            \/\/                        f[i][it[i]].s, f[i][it[i]].e);\n            ++it[i];\n          }\n        }\n      }\n    }\n    printf(\"Case #%d: %d\\n\", T++, ans);\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <map>\n\nusing namespace std;\n\nchar f[30][30];\nint n, m;\n\nint main() {\n  if (!0) {\n    freopen(\"in\", \"r\", stdin);\n    freopen(\"out\", \"w\", stdout);\n  }\n  int t, T = 1;\n\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%s\", f[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (f[i][j] != '?') {\n          for (int k = j - 1; k >= 0; --k) {\n            if (f[i][k] == '?') {\n              f[i][k] = f[i][j];\n            } else {\n              break;\n            }\n          }\n          for (int k = j + 1; k < m; ++k) {\n            if (f[i][k] == '?') {\n              f[i][k] = f[i][j];\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      if (f[i][0] != '?') {\n        for (int k = i - 1; k >= 0; --k) {\n          if (f[k][0] == '?') {\n            for (int j = 0; j < m; ++j) {\n              f[k][j] = f[i][j];\n            }\n          } else {\n            break;\n          }\n        }\n        for (int k = i + 1; k < n; ++k) {\n          if (f[k][0] == '?') {\n            for (int j = 0; j < m; ++j) {\n              f[k][j] = f[i][j];\n            }\n          } else {\n            break;\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", T++);\n    for (int i = 0; i < n; ++i) {\n      printf(\"%s\\n\", f[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint T, t = 1;\n\nint l, n;\nint d[1010], f[1010];\ndouble mt;\n\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    mt = 0;\n    scanf(\"%d%d\", &l, &n);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d%d\", &d[i], &f[i]);\n      double tmp = 1.0 * (l - d[i]) \/ f[i];\n      mt = max(mt, tmp);\n    }\n    printf(\"Case #%d: %.6f\\n\", t++, 1.0 * l \/ mt);\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint T, t = 1;\n\nint n, R, O, Y, G, B, V;\nchar ans[1010];\nint d[10];\nchar f[10];\n\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &R, &O, &Y, &G, &B, &V);\n    if (R >= Y && R >= B) {\n      d[0] = R;\n      f[0] = 'R';\n      if (Y >= B) {\n        d[1] = Y;\n        f[1] = 'Y';\n        d[2] = B;\n        f[2] = 'B';\n      } else {\n        d[2] = Y;\n        f[2] = 'Y';\n        d[1] = B;\n        f[1] = 'B';\n      }\n    } else if (Y >= R && Y >= B) {\n      d[0] = Y;\n      f[0] = 'Y';\n      if (R >= B) {\n        d[1] = R;\n        f[1] = 'R';\n        d[2] = B;\n        f[2] = 'B';\n      } else {\n        d[2] = R;\n        f[2] = 'R';\n        d[1] = B;\n        f[1] = 'B';\n      }\n    } else {\n      d[0] = B;\n      f[0] = 'B';\n      if (R >= Y) {\n        d[1] = R;\n        f[1] = 'R';\n        d[2] = Y;\n        f[2] = 'Y';\n      } else {\n        d[2] = R;\n        f[2] = 'R';\n        d[1] = Y;\n        f[1] = 'Y';\n      }\n    }\n    int idx = 0;\n    int m = d[0] - d[1];\n    for (int i = 0; i < d[2]; ++i) {\n      ans[idx++] = f[0];\n      ans[idx++] = f[1];\n      if (m) {\n        --m;\n        ans[idx++] = f[0];\n      }\n      ans[idx++] = f[2];\n    }\n    for (int i = 0; i < d[1] - d[2]; ++i) {\n      ans[idx++] = f[0];\n      ans[idx++] = f[1];\n    }\n    if (idx != n) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t++);\n    } else {\n      ans[idx] = '\\0';\n      printf(\"Case #%d: %s\\n\", t++, ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"House93","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint T, t = 1;\n\nint n, q;\nint housekm[110], housesp[110];\nint dis[110][110];\nint querys[110], querye[110];\ndouble ans[110];\ndouble dp[110];\n\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d%d\", &housekm[i], &housesp[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        scanf(\"%d\", &dis[i][j]);\n      }\n    }\n    for (int i = 0; i < q; ++i) {\n      scanf(\"%d%d\", &querys[i], &querye[i]);\n      --querys[i];\n      --querye[i];\n      for (int j = 0; j < n; ++j) {\n        dp[j] = -1;\n      }\n      dp[querys[i]] = 0;\n      for (int j = 0; j < n; ++j) {\n        int last = housekm[j];\n        for (int k = j + 1; k < n; ++k) {\n          last -= dis[k - 1][k];\n          if (last >= 0) {\n            if (dp[k] < 0 ||\n                dp[k] > dp[j] + 1.0 * (housekm[j] - last) \/ housesp[j]) {\n              dp[k] = dp[j] + 1.0 * (housekm[j] - last) \/ housesp[j];\n            }\n          } else {\n            break;\n          }\n        }\n      }\n      ans[i] = dp[querye[i]];\n    }\n    printf(\"Case #%d:\", t++);\n    for (int i = 0; i < q; ++i) {\n      printf(\" %f\", ans[i]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nlong long makeNum(int d, int len) {\n  long long res = 0;\n  for (int i = 0; i < len; i++) {\n    res = res * 10 + d;\n  }\n  return res;\n}\nlong long make10(int d, int len) {\n  long long res = d;\n  for (int i = 0; i < len - 1; i++) {\n    res = res * 10;\n  }\n  return res;\n}\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"BSOut.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  long long N;\n  for (int ca = 1; ca <= T; ca++) {\n    cin >> N;\n    long long ans = 0;\n    int nowlen = 18;\n    while (nowlen > 0) {\n      for (int i = 9; i >= 1; i--) {\n\n        long long a = 0;\n        a = makeNum(i, nowlen);\n        if (a <= N) {\n          long long b = make10(i, nowlen);\n          ans += b;\n          N -= b;\n          break;\n        }\n      }\n      nowlen--;\n    }\n\n    cout << \"Case #\" << ca << \": \" << ans << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <queue>\nusing namespace std;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"CSOut.txt\", \"w\", stdout);\n\n  int T, N, K;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    cin >> N >> K;\n    priority_queue<int> pq;\n    pq.push(N);\n    int now;\n    for (int i = 0; i < K - 1; i++) {\n      now = (pq.top());\n      pq.pop();\n      if (now % 2 == 0) {\n        pq.push(now \/ 2);\n        pq.push((now - 1) \/ 2);\n      } else {\n        pq.push(now \/ 2);\n        pq.push(now \/ 2);\n      }\n      \/\/ cout << now << \"\\n\";\n    }\n    now = (pq.top());\n    int A, B;\n    if (now % 2 == 0) {\n      A = now \/ 2;\n      B = (now - 1) \/ 2;\n    } else {\n      A = now \/ 2;\n      B = now \/ 2;\n    }\n    cout << \"Case #\" << ca << \": \";\n    cout << A << \" \" << B << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"ASOut.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  int N, K;\n  string str;\n  for (int ca = 1; ca <= T; ca++) {\n    cin >> str >> K;\n    int flag = 1, ans = 0;\n    for (int i = 0; i + K - 1 < str.length(); i++) {\n\n      if (str[i] == '-') {\n        for (int j = i; j < i + K; j++) {\n          if (str[j] == '-')\n            str[j] = '+';\n          else\n            str[j] = '-';\n        }\n        ans++;\n      }\n    }\n    for (int i = 0; i < str.length(); i++) {\n      if (str[i] == '-')\n        flag = 0;\n    }\n    cout << \"Case #\" << ca << \": \";\n    if (flag == 0)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\nint use[10];\nint data[3][10];\nint tar[10];\nint ans = 0, N, P;\n\nvoid dfs(int now, int ok) {\n  if (now == P) {\n    ans = max(ans, ok);\n    return;\n  }\n  for (int i = 0; i < P; i++) {\n    if (use[i] == 0) {\n      use[i] = 1;\n      int isOK = 0;\n      double a, b, x, y;\n      a = data[0][now] \/ 1.1;\n      b = data[0][now] \/ 0.9;\n\n      \/\/ cout <<\"a: \"<< a <<\" b:\" <<b;\n      int C1, C2;\n      C1 = a \/ tar[0];\n      C2 = b \/ tar[0];\n      \/\/ cout << \"C1: \" <<C1 <<\" C2:\" <<C2 <<\"\\n\";\n      for (int j = C1; j <= C2; j++) {\n        x = tar[1] * j * 1.1;\n        y = tar[1] * j * 0.9;\n        a = tar[0] * j * 1.1;\n        b = tar[0] * j * 0.9;\n        if (x >= data[1][i] && y <= data[1][i] && a >= data[0][now] &&\n            b <= data[0][now]) {\n          isOK = 1;\n          break;\n        }\n      }\n      dfs(now + 1, isOK + ok);\n      use[i] = 0;\n    }\n  }\n}\nint main() {\n  int T;\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"BSout.txt\", \"w\", stdout);\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n\n    cin >> N >> P;\n    for (int i = 0; i < N; i++)\n      cin >> tar[i];\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> data[i][j];\n      }\n    }\n    ans = 0;\n    if (N == 2)\n      dfs(0, 0);\n    else {\n      double a, b, x, y;\n\n      for (int i = 0; i < P; i++) {\n        a = data[0][i] \/ 1.1;\n        b = data[0][i] \/ 0.9;\n        int C1, C2;\n        C1 = a \/ tar[0];\n        C2 = b \/ tar[0];\n        for (int j = C1; j <= C2; j++) {\n          a = tar[0] * j * 1.1;\n          b = tar[0] * j * 0.9;\n          if (a >= data[0][i] && b <= data[0][i]) {\n            ans++;\n            break;\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << ca << \": \" << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  char ch[30][30];\n  int T, R, C;\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"Asout.txt\", \"w\", stdout);\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    cin >> R >> C;\n    for (int i = 0; i < R; i++) {\n      cin >> ch[i];\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (ch[i][j] != '?') {\n\n          for (int k = i + 1; k < R; k++) {\n            if (ch[k][j] == '?') {\n              ch[k][j] = ch[i][j];\n            } else\n              break;\n          }\n          for (int k = i - 1; k >= 0; k--) {\n            if (ch[k][j] == '?') {\n              ch[k][j] = ch[i][j];\n            } else\n              break;\n          }\n        }\n      }\n    }\n    for (int j = 0; j < C; j++) {\n      if (ch[0][j] != '?') {\n        for (int k = j - 1; k >= 0; k--) {\n\n          if (ch[0][k] == '?') {\n            for (int i = 0; i < R; i++) {\n              ch[i][k] = ch[i][j];\n            }\n          } else\n            break;\n        }\n        for (int k = j + 1; k < C; k++) {\n\n          if (ch[0][k] == '?') {\n            for (int i = 0; i < R; i++) {\n              ch[i][k] = ch[i][j];\n            }\n          } else\n            break;\n        }\n      }\n    }\n\n    cout << \"Case #\" << ca << \":\\n\";\n    for (int i = 0; i < R; i++)\n      cout << ch[i] << \"\\n\";\n  }\n\n  return 0;\n}\n\n\/*\n3\n3 3\nG??\n?C?\n??J\n*\/\n"}
{"target":"HTC","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <vector>\nusing namespace std;\nstruct XD {\n  double a, b;\n  XD(double _a, double _b) : a(_a), b(_b) {}\n};\nint N;\ndouble D;\nvector<XD> v;\nint check(double V) {\n  double needS = D \/ V, S;\n  for (int i = 0; i < N; i++) {\n    if (V > v[i].b) {\n      S = v[i].a \/ (V - v[i].b);\n      if (needS > S) {\n        return 0;\n      }\n    }\n  }\n  return 1;\n}\nint main() {\n  int T;\n  \/\/ freopen(\"A-large.in\",\"r\",stdin);\n  \/\/ freopen(\"ALout.txt\",\"w\",stdout);\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    v.clear();\n    cin >> D >> N;\n    double a, b;\n    for (int i = 0; i < N; i++) {\n      cin >> a >> b;\n      v.push_back(XD(a, b));\n    }\n\n    double left = 0, right = 1e15, mid;\n    for (int i = 0; i < 100000; i++) {\n      mid = (left + right) \/ 2;\n      if (check(mid)) {\n        left = mid;\n      } else\n        right = mid;\n    }\n    cout << \"Case #\" << ca << \": \";\n    printf(\"%.7lf\\n\", left);\n  }\n\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <vector>\nusing namespace std;\n\nint main() {\n\n  \/\/ freopen(\"A-large.in\",\"r\",stdin);\n  \/\/ freopen(\"ALout.txt\",\"w\",stdout);\n  int T;\n  int R, O, Y, G, B, V, N;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    cin >> N;\n    cin >> R >> O >> Y >> G >> B >> V;\n    cout << \"Case #\" << ca << \": \";\n    int flag = 1;\n    if (R > Y + B)\n      flag = 0;\n    if (Y > R + B)\n      flag = 0;\n    if (B > R + Y)\n      flag = 0;\n    if (flag == 0) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (R == Y && R == B) {\n      for (int i = 0; i < R; i++) {\n        cout << \"RYB\";\n      }\n      cout << \"\\n\";\n      continue;\n    }\n    if (R >= B && R >= Y) {\n      for (int i = 0; i < R; i++) {\n\n        cout << \"R\";\n        if (i < B)\n          cout << \"B\";\n        if (i >= R - Y)\n          cout << \"Y\";\n      }\n    } else if (B >= R && B >= Y) {\n      for (int i = 0; i < B; i++) {\n\n        cout << \"B\";\n        if (i < R)\n          cout << \"R\";\n        if (i >= B - Y)\n          cout << \"Y\";\n      }\n    } else if (Y >= B && Y >= R) {\n      for (int i = 0; i < Y; i++) {\n\n        cout << \"Y\";\n        if (i < B)\n          cout << \"B\";\n        if (i >= Y - R)\n          cout << \"R\";\n      }\n    }\n\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"HTC","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <vector>\nusing namespace std;\n\ndouble matrix[105][105];\nstruct XD {\n  int a;\n  double b;\n  XD(int _a, double _b) : a(_a), b(_b) {}\n};\nstruct Horse {\n  int a, b;\n  Horse(int _a, int _b) : a(_a), b(_b) {}\n};\nvector<XD> nG[105];\nqueue<int> q;\nint inq[105], N;\ndouble dis[105];\ndouble SSSP(int st, int ed) {\n  for (int i = 0; i < N; i++) {\n    dis[i] = 1e15;\n  }\n  dis[st] = 0;\n  q.push(st);\n  int now;\n  \/\/  cout << \"start\\n\";\n  while (!q.empty()) {\n\n    now = q.front();\n    q.pop();\n    inq[now] = 0;\n    int nxt;\n    double nlen;\n    for (int i = 0; i < nG[now].size(); i++) {\n      nxt = nG[now][i].a;\n      nlen = nG[now][i].b;\n      \/\/  cout << \"nxt: \" << nxt;\n      \/\/  cout << \" \" << dis[nxt] ;\n      \/\/  cout << \" \" << dis[now] + nlen<<\"\\n\";\n      if (dis[now] + nlen + 1e-7 < dis[nxt]) {\n        dis[nxt] = dis[now] + nlen;\n        if (inq[nxt] == 0) {\n          q.push(nxt);\n          inq[nxt] = 1;\n        }\n      }\n    }\n  }\n  return dis[ed];\n}\nint main() {\n\n  \/\/ freopen(\"A-large.in\",\"r\",stdin);\n  \/\/ freopen(\"ALout.txt\",\"w\",stdout);\n  vector<Horse> v;\n  int T;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    int Q;\n    cin >> N >> Q;\n    v.clear();\n    int a, b;\n    for (int i = 0; i < N; i++) {\n      cin >> a >> b;\n      v.push_back(Horse(a, b));\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> matrix[i][j];\n      }\n      matrix[i][i] = 0;\n      for (int j = 0; j < N; j++) {\n        if (matrix[i][j] < 0)\n          matrix[i][j] = 1e10;\n      }\n    }\n    for (int k = 0; k < N; k++) {\n      for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++) {\n\n          if (matrix[i][j] > matrix[i][k] + matrix[k][j]) {\n\n            matrix[i][j] = matrix[i][k] + matrix[k][j];\n          }\n        }\n      }\n    }\n    \/* for(int i=0;i<N;i++){\n\n         for(int j=0;j<N;j++){\n\n             cout << matrix[i][j] << \" \";\n         }\n         cout << \"\\n\";\n     }*\/\n    for (int i = 0; i < N; i++)\n      nG[i].clear();\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        if (i == j)\n          continue;\n        if (matrix[i][j] <= v[i].a) {\n          if (matrix[i][j] > 0) {\n            nG[i].push_back(XD(j, matrix[i][j] \/ (double)v[i].b));\n            \/\/ cout << \"j: \" << j << \" \" << matrix[i][j] \/ (double)v[i].b\n            \/\/ <<\"\\n\";\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << ca << \":\";\n    for (int i = 0; i < Q; i++) {\n\n      cin >> a >> b;\n      a--;\n      b--;\n      printf(\" %.7lf\", SSSP(a, b));\n    }\n    cout << \"\\n\";\n  }\n\n  return 0;\n}\n\/*\n3\n3 1\n2 3\n2 4\n4 4\n-1 1 -1\n-1 -1 1\n-1 -1 -1\n*\/\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  std::uint64_t n = 0;\n\n  std::fscanf(ifile, \"%lld\", &n);\n\n  std::vector<int> number;\n\n  while (0 != n) {\n    number.push_back(n % 10);\n    n \/= 10;\n  }\n\n  auto a = number.front();\n  auto index = -1;\n  for (auto i = 1u; i < number.size(); ++i) {\n    if (number[i] > a) {\n      index = i;\n      --number[i];\n      a = number[i];\n    } else {\n      a = std::min(a, number[i]);\n    }\n  }\n\n  if (-1 != index) {\n    if (0 == number.back())\n      number.pop_back();\n    for (auto i = 0; i < index; ++i)\n      number[i] = 9;\n  }\n\n  std::reverse(number.begin(), number.end());\n\n  ofile << \"Case #\" << _case << \": \";\n  for (auto v : number)\n    ofile << v;\n  ofile << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  std::uint64_t n = 0;\n  std::uint64_t k = 0;\n\n  std::fscanf(ifile, \"%d %d\", &n, &k);\n\n  auto base = k + 1;\n  while (0 != ((base - 1) & base))\n    base &= (base - 1);\n\n  if (base == k + 1)\n    base >>= 1;\n\n  auto range_no = base;\n  auto na = (n - base + 1);\n  auto range_size = na \/ range_no;\n  auto diff = na - range_size * range_no;\n  auto range_id = k - base;\n  auto space = range_id < diff ? range_size + 1 : range_size;\n  --space;\n\n  auto min = space \/ 2;\n  auto max = (space + 1) \/ 2;\n\n  ofile << \"Case #\" << _case << \": \" << max << \" \" << min << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  char str[1001];\n  int data[1001];\n  int adj[1001];\n  int n = 0;\n  int k = 0;\n  int counter = 0;\n  int sum = 0;\n\n  std::fscanf(ifile, \"%1000s %d\", str, &k);\n\n  for (n = 0; n < 1001; ++n) {\n    if (0 == str[n])\n      break;\n    data[n] = '-' == str[n] ? 0 : 1;\n    adj[n] = 0;\n  }\n\n  for (auto i = 0; i < n; ++i) {\n    sum += adj[i];\n    data[i] = (sum + data[i]) & 1;\n    if (0 == data[i] && i < (n - k + 1)) {\n      ++counter;\n      ++sum;\n      data[i] = 1;\n      --adj[i + k];\n    }\n  }\n\n  for (auto i = 0; i < n; ++i)\n    if (0 == data[i]) {\n      ofile << \"Case #\" << _case << \": IMPOSSIBLE\\n\";\n      return;\n    }\n\n  ofile << \"Case #\" << _case << \": \" << counter << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  std::uint64_t n = 0;\n  std::uint64_t p = 0;\n  std::uint64_t v = 0;\n  std::vector<std::uint64_t> etalon;\n  std::vector<std::uint64_t> index;\n  std::vector<std::vector<std::pair<std::uint64_t, std::uint64_t>>> packages;\n  std::uint64_t counter = 0;\n\n  std::fscanf(ifile, \"%ld %ld\", &n, &p);\n\n  etalon.resize(n);\n  packages.resize(n);\n  index.resize(n);\n\n  for (auto i = 0; i < n; ++i) {\n    index[i] = 0;\n    std::fscanf(ifile, \"%ld\", &etalon[i]);\n  }\n\n  for (auto i = 0; i < n; ++i) {\n    packages[i].reserve(p);\n    auto e = etalon[i];\n    std::uint64_t minE = e - std::uint64_t(e * 0.1);\n    std::uint64_t maxE = e * 1.1;\n    for (auto j = 0; j < p; ++j) {\n      std::fscanf(ifile, \"%ld\", &v);\n      auto minP = v \/ maxE;\n      auto maxP = v \/ minE;\n      if (minP * maxE != v)\n        ++minP;\n      if (minP > maxP)\n        continue;\n      packages[i].push_back(std::make_pair(minP, maxP));\n    }\n    std::sort(packages[i].begin(), packages[i].end(),\n              [](const std::pair<std::uint64_t, std::uint64_t> &a,\n                 const std::pair<std::uint64_t, std::uint64_t> &b) {\n                if (a.first < b.first)\n                  return true;\n                else if (a.first > b.first)\n                  return false;\n                else\n                  return (a.second < b.second);\n              });\n  }\n\n  auto s = 1u;\n  auto exit = false;\n  while (s <= 1000000) {\n    bool is_set = true;\n\n    for (auto i = 0; is_set && i < n; ++i) {\n      auto idx = index[i];\n      while ((idx < packages[i].size()) && (packages[i][idx].second < s))\n        ++idx;\n      if (idx >= packages[i].size()) {\n        exit = true;\n        break;\n      }\n      index[i] = idx;\n      is_set = packages[i][idx].first <= s;\n    }\n\n    if (exit)\n      break;\n\n    if (!is_set) {\n      ++s;\n    } else {\n      for (auto i = 0; i < n; ++i)\n        ++index[i];\n      ++counter;\n    }\n  }\n\n  ofile << \"Case #\" << _case << \": \" << counter << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  std::int64_t row = 0;\n  std::int64_t col = 0;\n  char buf[30];\n  std::unordered_map<char, int> minX;\n  std::unordered_map<char, int> minY;\n  std::unordered_map<char, int> maxX;\n  std::unordered_map<char, int> maxY;\n\n  std::fscanf(ifile, \"%ld %ld\", &row, &col);\n\n  std::vector<std::vector<char>> cake;\n\n  cake.resize(row);\n  for (auto y = 0; y < row; y++) {\n    std::fscanf(ifile, \"%29s\", &buf);\n    cake[y].resize(col);\n    for (auto x = 0; x < col; x++) {\n      auto ch = buf[x];\n      cake[y][x] = ch;\n      if (ch != '?') {\n        if (minX.end() != minX.find(ch)) {\n          minX[ch] = std::min(x, minX[ch]);\n          minY[ch] = std::min(y, minY[ch]);\n          maxX[ch] = std::max(x, maxX[ch]);\n          maxY[ch] = std::max(y, maxY[ch]);\n        } else {\n          minX[ch] = x;\n          minY[ch] = y;\n          maxX[ch] = x;\n          maxY[ch] = y;\n        }\n      }\n    }\n  }\n\n  for (auto iter : minX) {\n    auto ch = iter.first;\n\n    bool exit = false;\n    for (auto x = minX[ch] - 1; !exit && x >= 0; --x) {\n      for (auto y = minY[ch]; !exit && y <= maxY[ch]; ++y)\n        exit = cake[y][x] != '?';\n      if (!exit)\n        --minX[ch];\n    }\n\n    exit = false;\n    for (auto x = maxX[ch] + 1; !exit && x < col; ++x) {\n      for (auto y = minY[ch]; !exit && y <= maxY[ch]; ++y)\n        exit = cake[y][x] != '?';\n      if (!exit)\n        ++maxX[ch];\n    }\n\n    exit = false;\n    for (auto y = minY[ch] - 1; !exit && y >= 0; --y) {\n      for (auto x = minX[ch]; !exit && x <= maxX[ch]; ++x)\n        exit = cake[y][x] != '?';\n      if (!exit)\n        --minY[ch];\n    }\n\n    exit = false;\n    for (auto y = maxY[ch] + 1; !exit && y < row; ++y) {\n      for (auto x = minX[ch]; !exit && x <= maxX[ch]; ++x)\n        exit = cake[y][x] != '?';\n      if (!exit)\n        ++maxY[ch];\n    }\n\n    for (auto x = minX[ch]; x <= maxX[ch]; ++x)\n      for (auto y = minY[ch]; y <= maxY[ch]; ++y)\n        cake[y][x] = ch;\n  }\n\n  ofile << \"Case #\" << _case << \":\\n\";\n  for (auto y = 0; y < row; ++y) {\n    for (auto x = 0; x < col; ++x)\n      ofile << cake[y][x];\n    ofile << \"\\n\";\n  }\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  std::int64_t d = 0;\n  std::int64_t n = 0;\n  std::int64_t start = 0;\n  std::int64_t speed = 0;\n  long double result = 0;\n  long double tmp_result = 0;\n\n  std::fscanf(ifile, \"%ld %ld\", &d, &n);\n\n  for (auto i = 0; i < n; ++i) {\n    std::fscanf(ifile, \"%ld %ld\", &start, &speed);\n    tmp_result = static_cast<long double>(d - start);\n    tmp_result \/= speed;\n    \/\/ if((0 == result) || (result > tmp_result))\n    if (tmp_result > result)\n      result = tmp_result;\n  }\n\n  result = d \/ result;\n\n  ofile << \"Case #\" << _case << \": \" << result << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n  ofile << std::setprecision(6) << std::fixed;\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nstruct color_t {\n  int mask{0};\n  int rank;\n  int counter;\n  char letter{'.'};\n};\n\nint rank[6];\n\nvoid add_rank(int mask, int value) {\n  if (mask & 1 << 0) {\n    rank[0] += value;\n    rank[1] += value;\n    rank[5] += value;\n  }\n\n  if (mask & 1 << 1) {\n    rank[3] += value;\n    rank[4] += value;\n    rank[5] += value;\n  }\n\n  if (mask & 1 << 2) {\n    rank[1] += value;\n    rank[2] += value;\n    rank[3] += value;\n  }\n}\n\nvoid decrease_rank(int mask) {\n  if (mask & 1 << 0) {\n    --rank[0];\n    --rank[1];\n    --rank[5];\n  }\n\n  if (mask & 1 << 1) {\n    --rank[3];\n    --rank[4];\n    --rank[5];\n  }\n\n  if (mask & 1 << 2) {\n    --rank[1];\n    --rank[2];\n    --rank[3];\n  }\n}\n\nvoid solve(int _case) {\n\n  int n;\n  color_t colors[6];\n\n  colors[0].mask = 1 << 0;\n  colors[0].rank = 0;\n  colors[0].letter = 'R';\n  colors[1].mask = 1 << 0 | 1 << 2;\n  colors[1].rank = 1;\n  colors[1].letter = 'O';\n  colors[2].mask = 1 << 2;\n  colors[2].rank = 2;\n  colors[2].letter = 'Y';\n  colors[3].mask = 1 << 2 | 1 << 1;\n  colors[3].rank = 3;\n  colors[3].letter = 'G';\n  colors[4].mask = 1 << 1;\n  colors[4].rank = 4;\n  colors[4].letter = 'B';\n  colors[5].mask = 1 << 1 | 1 << 0;\n  colors[5].rank = 5;\n  colors[5].letter = 'V';\n\n  std::fscanf(ifile, \"%d %d %d %d %d %d %d\", &n, &colors[0].counter,\n              &colors[1].counter, &colors[2].counter, &colors[3].counter,\n              &colors[4].counter, &colors[5].counter);\n\n  for (auto i = 0; i < 6; ++i)\n    rank[i] = 0;\n\n  add_rank(1 << 0, colors[0].counter);\n  add_rank(1 << 0 | 1 << 2, colors[1].counter);\n  add_rank(1 << 2, colors[2].counter);\n  add_rank(1 << 2 | 1 << 1, colors[3].counter);\n  add_rank(1 << 1, colors[4].counter);\n  add_rank(1 << 1 | 1 << 0, colors[5].counter);\n\n  for (auto i = 0; i < 6; ++i)\n    for (auto j = 0; j < 6 - 1; ++j)\n      if ((0 != colors[j + 1].counter) &&\n          ((0 == colors[j].counter) ||\n           rank[colors[j].rank] < rank[colors[j + 1].rank]))\n        std::swap(colors[j], colors[j + 1]);\n\n  int mask = 0;\n  int first = 0;\n  int last = 0;\n  int total = 0;\n  std::string result;\n\n  result.reserve(n);\n  for (auto k = 0; k < n; ++k) {\n    bool found = false;\n    for (auto i = 0; i < 6; ++i) {\n      if (0 == colors[i].counter)\n        break;\n      if (colors[i].mask & mask)\n        continue;\n      if (result.empty())\n        first = colors[i].mask;\n      last = colors[i].mask;\n      result += colors[i].letter;\n      mask = colors[i].mask;\n      decrease_rank(colors[i].mask);\n      --colors[i].counter;\n      bool update = true;\n      for (auto f = i; update && (f < 6); ++f) {\n        update = false;\n        for (auto j = i; j < 6 - 1; ++j)\n          if ((0 != colors[j + 1].counter) &&\n              ((0 == colors[j].counter) ||\n               (rank[colors[j].rank] < rank[colors[j + 1].rank]) ||\n               ((rank[colors[j].rank] == rank[colors[j + 1].rank]) &&\n                (colors[j + 1].mask & first)))) {\n            std::swap(colors[j], colors[j + 1]);\n            update = true;\n          }\n      }\n      found = true;\n      break;\n    }\n    if (!found) {\n      ofile << \"Case #\" << _case << \": IMPOSSIBLE\\n\";\n      return;\n    }\n  }\n\n  if ((1 != n) && (first & last))\n    ofile << \"Case #\" << _case << \": IMPOSSIBLE\\n\";\n  else\n    ofile << \"Case #\" << _case << \": \" << result << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n  ofile << std::setprecision(6) << std::fixed;\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"Hurski","func":"\n#include <algorithm>\n#include <bitset>\n#include <chrono>\n#include <cmath>\n#include <cstdint>\n#include <cstdio>\n#include <ctime>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <math.h>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <vector>\n\nFILE *ifile = nullptr;\nstd::ofstream ofile;\n\nvoid solve(int _case) {\n  int n;\n  int q;\n\n  std::pair<int, int> hourse[100];\n  long double result[100];\n  long double dp[100];\n  int distance[100][100];\n\n  std::fscanf(ifile, \"%d %d\", &n, &q);\n\n  for (auto i = 0; i < n; ++i)\n    std::fscanf(ifile, \"%d %d\", &hourse[i].first, &hourse[i].second);\n\n  for (auto i = 0; i < n; ++i)\n    for (auto j = 0; j < n; ++j)\n      std::fscanf(ifile, \"%d \", &distance[i][j]);\n\n  for (auto q1 = 0; q1 < q; ++q1) {\n    int from;\n    int to;\n\n    std::fscanf(ifile, \"%d %d\", &from, &to);\n\n    for (auto i = 0; i < n; ++i)\n      dp[i] = std::numeric_limits<long double>::max();\n\n    dp[0] = 0;\n\n    for (auto i = 0; i < (n - 1); ++i) {\n      long double range = hourse[i].first;\n      auto speed = hourse[i].second;\n      auto start = dp[i];\n      long double total = 0;\n      for (auto j = i; j < (n - 1); ++j) {\n        total += distance[j][j + 1];\n        if (range < total)\n          break;\n        dp[j + 1] = std::min(dp[j + 1], start + total \/ speed);\n      }\n    }\n\n    result[q1] = dp[n - 1];\n  }\n\n  ofile << \"Case #\" << _case << \":\";\n  for (auto i = 0; i < q; ++i)\n    ofile << \" \" << result[i];\n  ofile << \"\\n\";\n}\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  ifile = fopen(\"1.in\", \"r\");\n  ofile.open(\"output.out\");\n  ofile << std::setprecision(9);\n\n  int n = 0;\n  std::fscanf(ifile, \"%d\", &n);\n  for (auto i = 0; i < n; ++i)\n    solve(i + 1);\n\n  ofile.close();\n\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string n;\n    cin >> n;\n    char l = '0';\n    int s = n.length();\n    for (int j = 0; j < s; ++j) {\n      if (n[j] < l) {\n        --j;\n        int k = j;\n        while (k > 0 && n[k] == '1')\n          n[k] = '9', --k;\n        n[k] -= 1;\n        while (k > 0 && n[k - 1] > n[k])\n          n[k - 1] -= 1, n[k] = '9', --k;\n        for (int x = j + 1; x < s; ++x)\n          n[x] = '9';\n        break;\n      }\n      l = n[j];\n    }\n    int k = 0;\n    while (n[k] == '0')\n      ++k;\n    cout << \"Case #\" << i << \": \" << n.substr(k) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int j = 1; j <= t; ++j) {\n    ll n, k;\n    cin >> n >> k;\n    ll s = 0, i = -1;\n    while (s < k)\n      ++i, s += 1ll << i;\n    ll C = 1ll << i;\n    ll left = n - s + C;\n    ll pos = k - s + C;\n    ll base = left \/ (s - C + 1);\n    ll high = left % (s - C + 1);\n    if (pos <= high)\n      base += 1;\n    cout << \"Case #\" << j << \": \" << base \/ 2 << \" \" << (base - 1) \/ 2 << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int f = 0, n = s.length();\n    for (int j = 0; j < n - k + 1; ++j) {\n      if (s[j] == '-') {\n        ++f;\n        for (int l = j; l < j + k; ++l)\n          s[l] = (s[l] == '+' ? '-' : '+');\n      }\n    }\n    for (int j = 0; j < n; ++j)\n      if (s[j] == '-') {\n        f = -1;\n        break;\n      }\n    cout << \"Case #\" << i << \": \";\n    if (f == -1)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << f << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int n, p;\n    cin >> n >> p;\n    ll w[n];\n    for (int i = 0; i < n; ++i)\n      cin >> w[i];\n    pair<ll, ll> a[n][p];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        ll W;\n        cin >> W;\n        ll low = ceil(W \/ (w[i] * 1.1)), high = W \/ (w[i] * 0.9);\n        a[i][j] = make_pair(low, high);\n      }\n    }\n    if (n == 1) {\n      int ans = 0;\n      for (int i = 0; i < p; ++i)\n        if (a[0][i].first <= a[0][i].second)\n          ans++;\n      cout << \"Case #\" << i << \": \" << ans << \"\\n\";\n      continue;\n    }\n    int s[p];\n    for (int i = 0; i < p; ++i)\n      s[i] = i;\n    int ans = 0;\n    do {\n      int val = 0;\n      for (int i = 0; i < p; ++i) {\n        if (a[0][i].first > a[0][i].second ||\n            a[1][s[i]].first > a[1][s[i]].second)\n          continue;\n        if (a[0][i].first >= a[1][s[i]].first &&\n                a[0][i].first <= a[1][s[i]].second ||\n            a[1][s[i]].first >= a[0][i].first &&\n                a[1][s[i]].first <= a[0][i].second)\n          val++;\n      }\n      ans = max(ans, val);\n    } while (next_permutation(s, s + p));\n    cout << \"Case #\" << i << \": \" << ans << \"\\n\";\n    \/*        int ans=0;\n            bool mark[n][p];\n            memset(mark, false, sizeof mark);\n            for (int i=0; i<p; ++i) {\n                auto x=a[0][i];\n                int count=0;\n                for (int j=1; j<n; ++j) {\n                    for (int k=0; k<p; ++k)\n                        if (a[j][k].ff>=x.ff && a[j][k].ff<=x.ss ||\n       x.ff>=a[j][k].ff && x.ff<=a[j][k].ss) { count++; mark[] break;\n                        }\n                }\n            }*\/\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int r, c;\n    cin >> r >> c;\n    vector<vector<pii>> v;\n    string cake[r];\n    for (int i = 0; i < r; ++i)\n      cin >> cake[i];\n    for (int i = 0; i < r; ++i) {\n      vector<pii> vec;\n      for (int j = 0; j < c; ++j)\n        if (cake[i][j] != '?')\n          vec.push_back(make_pair(i, j));\n      if (!vec.empty())\n        v.push_back(vec);\n    }\n    int sr = 0;\n    int L = v.size();\n    for (int i = 0; i < L; ++i) {\n      int er = (i == L - 1 ? r - 1 : v[i][0].first);\n      int l = v[i].size();\n      int sc = 0;\n      for (int j = 0; j < l; ++j) {\n        int ec = (j == l - 1 ? c - 1 : v[i][j].second);\n        for (int x = sr; x <= er; ++x)\n          for (int y = sc; y <= ec; ++y)\n            cake[x][y] = cake[v[i][j].first][v[i][j].second];\n        sc = v[i][j].second + 1;\n      }\n      sr = v[i][0].first + 1;\n    }\n    cout << \"Case #\" << i << \":\\n\";\n    for (int i = 0; i < r; ++i)\n      cout << cake[i] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    ll d, n;\n    cin >> d >> n;\n    double mt = 0;\n    for (int j = 0; j < n; ++j) {\n      ll k, s;\n      cin >> k >> s;\n      mt = max(mt, (d - k) \/ static_cast<double>(s));\n    }\n    printf(\"Case #%d: %.10f\\n\", i, d \/ mt);\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    int ma = n \/ 2;\n    cout << \"Case #\" << i << \": \";\n    if (r > ma || y > ma || b > ma) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    vector<pair<int, char>> V;\n    V.push_back(make_pair(r, 'R')), V.push_back(make_pair(y, 'Y')),\n        V.push_back(make_pair(b, 'B'));\n    sort(V.begin(), V.end());\n    char s[n + 1];\n    int p = 0;\n    int a = V[2].first;\n    while (a--)\n      s[p] = V[2].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);\n    a = V[1].first;\n    while (a--)\n      s[p] = V[1].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);\n    a = V[0].first;\n    while (a--)\n      s[p] = V[0].second, p = (p + 2) % n, p = (p == 0 ? 1 : p);\n    for (int i = 0; i < n; ++i)\n      cout << s[i];\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ibrahim5253","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\n\/\/#define scd static_cast<double>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\nusing pill = pair<int, ll>;\nusing vvi = vector<vi>;\n\nll gcd(ll a, ll b) {\n  ll t;\n  while ((t = a % b) != 0) {\n    a = b;\n    b = t;\n  }\n  return b;\n}\n\nll fast_exp(ll base, ll n, ll m) {\n  if (n == 0)\n    return 1;\n  ll t = fast_exp(base, n \/ 2, m);\n  if (n % 2 == 0)\n    return (t * t) % m;\n  else\n    return (((t * t) % m) * base) % m;\n}\n\nbool is_set(int i, ll mask) { return (mask >> i) & 1; }\n\nint count_bits(ll mask) {\n  int ans = 0;\n  for (int i = 0; i < 64; ++i)\n    if (is_set(i, mask))\n      ++ans;\n  return ans;\n}\n\nint first_bit(ll mask) {\n  int i = 0;\n  while (i < 64)\n    if (is_set(i++, mask))\n      return i - 1;\n  return -1;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int n, q;\n    cin >> n >> q;\n    ll e[n], s[n];\n    for (int i = 0; i < n; ++i)\n      cin >> e[i] >> s[i];\n    ll d[n][n];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        cin >> d[i][j];\n    {\n      int u, v;\n      cin >> u >> v;\n      --u, --v;\n      double dp[n];\n      dp[0] = 0;\n      for (int i = 1; i < n; ++i) {\n        dp[i] = 1e12;\n        ll dist = 0;\n        for (int j = i - 1; j >= 0; --j) {\n          dist += d[j][j + 1];\n          if (e[j] > dist)\n            dp[i] = min(dp[i], dp[j] + dist \/ static_cast<double>(s[j]));\n        }\n      }\n      printf(\"Case #%d: %.10f\\n\", i, dp[v]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <set>\n#include <string>\n\nusing namespace std;\n\nvoid solve(void);\n\nchar num[22];\n\nint main(int argc, const char *argv[]) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%s\", num);\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\nvoid solve(void) {\n\n  char ansBuf[20];\n  int ansInd = 0;\n\n  int len = strlen(num);\n  for (int k = 0; k < len; k++) {\n    num[k] -= '0';\n  }\n  num[len] = '9' + 1;\n  if (len == 1) {\n    printf(\"%d\", num[0]);\n    return;\n  }\n\n  int lastStepUp = 0;\n  for (int nowInd = 1; nowInd < len + 1; nowInd++) {\n\n    int bakNum = num[nowInd - 1];\n    int nowNum = num[nowInd];\n    if (bakNum < nowNum) {\n      lastStepUp = nowInd;\n    }\n    if (bakNum <= nowNum) {\n      ansBuf[ansInd] = '0' + bakNum;\n      ansInd++;\n    } else {\n      if (bakNum == 1) {\n        for (int k = 0; k < len - 1; k++) {\n          ansBuf[k] = '9';\n        }\n        len--;\n        break;\n      }\n      ansBuf[lastStepUp] = '0' + bakNum - 1;\n      for (int k = lastStepUp + 1; k < len; k++) {\n        ansBuf[k] = '9';\n      }\n      break;\n    }\n  }\n  ansBuf[len] = '\\0';\n  printf(\"%s\", ansBuf);\n  return;\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <set>\n#include <string>\n\nusing namespace std;\n\nvoid solve(void);\npair<long long, long long> solveLR(pair<long long, long long> nk);\n\nlong long n;\nlong long k;\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/Qual2017-C\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/Qual2017-C\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%lld %lld\", &n, &k);\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\nvoid solve(void) {\n  pair<long long, long long> ans = solveLR(make_pair(n, k));\n  printf(\"%lld %lld\", ans.first, ans.second);\n  return;\n}\n\npair<long long, long long> solveLR(pair<long long, long long> nk) {\n  if (nk.first == nk.second) {\n    return make_pair(0, 0);\n  }\n  if (nk.second == 1) {\n    if (nk.first % 2 == 0) {\n      return make_pair(nk.first \/ 2, nk.first \/ 2 - 1);\n    } else {\n      return make_pair(nk.first \/ 2, nk.first \/ 2);\n    }\n  }\n\n  long long newN, newK;\n  newN = nk.first - 1;\n  newK = nk.second - 1;\n  if (newN % 2 == 0) {\n    newN = newN \/ 2;\n  } else if (newK % 2 == 0) {\n    newN = newN \/ 2;\n  } else {\n    newN = newN \/ 2 + 1;\n  }\n\n  if (newK % 2 == 0) {\n    newK = newK \/ 2;\n  } else {\n    newK = newK \/ 2 + 1;\n  }\n  return solveLR(make_pair(newN, newK));\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <set>\n#include <string>\n\nusing namespace std;\n\nvoid solve(void);\nchar gyaku(char p);\nbool flip(char *str, char type, int *counter);\nbool chkAllChar(char *str, char type);\n\nint flipflip(char *targetStr, char type);\n\nchar input[1002];\nint k;\nint len;\nchar minusStr[1002];\nint minusCnt, plusCnt;\nchar plusStr[1002];\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/Qual2017-A\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/Qual2017-A\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    memset(input, 0, sizeof(input));\n    scanf(\"%s %d\", input, &k);\n    len = strlen(input);\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\nvoid solve(void) {\n\n  strcpy(minusStr, input);\n  strcpy(plusStr, input);\n  \/\/    minusCnt = flipflip(minusStr,'-');\n  plusCnt = flipflip(plusStr, '+');\n\n  \/\/    printf(\"+:%d, -:%d\",plusCnt, minusCnt);\n  int ans = plusCnt;\n  if (ans == 20000) {\n    printf(\"IMPOSSIBLE\");\n  } else {\n    printf(\"%d\", ans);\n  }\n}\n\nint flipflip(char *targetStr, char type) {\n  int counter = 0;\n  int nowInd = 0;\n  while (1) {\n    if (chkAllChar(targetStr, type)) { \/\/\u7d42\u4e86\u3057\u3066\u3044\u308b\n      return counter;\n    }\n    while (targetStr[nowInd] == type) {\n      nowInd++;\n    }                    \/\/'+'\u3092\u8d70\u67fb\u3059\u308b\u3002\n    if (nowInd == len) { \/\/\u7d42\u4e86\u3057\u3066\u3044\u308b\n      return counter;\n    }\n\n    if (nowInd >=\n        len - k +\n            1) \/\/\u7d42\u4e86\u3057\u3066\u304a\u3089\u305a\u3001\u6700\u5f8c\u306b\u56de\u305b\u308b\u3068\u3053\u308d\u4ee5\u4e0a\u307e\u3067\u6765\u3066\u3057\u307e\u3063\u305f\u3089\u3067\u304d\u306a\u304b\u3063\u305f\u3068\u3059\u308b\u3002\n      return 20000;\n    if (flip(&targetStr[nowInd], type, &counter)) {\n      return counter;\n    }\n  }\n  \/\/    printf(\"%d, %d\",*Cnt,okflag);\n  return 20000;\n}\n\nbool chkAllChar(char *str, char type) {\n  if (strchr(str, gyaku(type)) == NULL) {\n    return true; \/\/\u7d42\u4e86\u3057\u3066\u3044\u308b\u3002\n  } else {\n    return false;\n  }\n}\n\nbool flip(char *str, char type, int *counter) {\n  \/\/    printf(\"flipping:%s\\n\",str);\n  if (chkAllChar(str, type)) {\n    return true;\n  }\n\n  for (int ind = 0; ind < k; ind++) {\n    str[ind] = gyaku(str[ind]);\n  }\n  (*counter)++;\n  \/\/    printf(\"flipped:%s\\n\",str);\n\n  if (chkAllChar(str, type)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nchar gyaku(char p) {\n  if (p == '+') {\n    return '-';\n  } else {\n    return '+';\n  }\n}\n"}
{"target":"ihahi","func":"#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(void);\nbool match(pair<int, int> a, pair<int, int> b);\n\nint N, P;\n\nint R[50];\nint Q[50][50];\n\n\/\/ int MAX[50][50];\n\/\/ int MIN[50][50];\nvector<pair<int, int>> pkg[50];\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/R1A-2017-B\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/R1A-2017-B\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    printf(\"Case #%d: \", cnt + 1);\n    scanf(\"%d %d\", &N, &P);\n    for (int k = 0; k < N; k++) {\n      scanf(\"%d\", &R[k]);\n    }\n    for (int l = 0; l < N; l++) {\n      for (int k = 0; k < P; k++) {\n        scanf(\"%d\", &Q[l][k]);\n      }\n    }\n    solve();\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\ntemplate <typename T> void remove(std::vector<T> &vector, unsigned int index) {\n  vector.erase(vector.begin() + index);\n}\n\nvoid solve(void) {\n  for (int y = 0; y < N; y++) {\n    pkg[y].clear();\n    for (int x = 0; x < P; x++) {\n      pair<int, int> a;\n      a.first = (int)ceil((double)Q[y][x] \/ (1.1 * (double)R[y]));\n      a.second = (int)floor((double)Q[y][x] \/ (0.9 * (double)R[y]));\n      if (a.second >= a.first) {\n        pkg[y].push_back(a);\n      }\n      \/\/            MIN[y][x] = (int)ceil((double)Q[y][x] \/ (1.1*(double)R[y]));\n      \/\/            MAX[y][x] = (int)floor((double)Q[y][x] \/\n      \/\/            (0.9*(double)R[y]));\n    }\n    sort(pkg[y].begin(), pkg[y].end());\n    \/\/        cout << pkg[y].size() << endl;\n    \/\/        printf(\"\\n\");\n  }\n\n  if (N == 1) {\n    printf(\"%d\", pkg[0].size());\n    return;\n  }\n  int ans = 0;\n  int s1 = 0;\n  int s2 = 0;\n  while (1) {\n    if (pkg[0].size() == 0 || pkg[1].size() == 0) {\n      printf(\"%d\", ans);\n      return;\n    }\n    \/\/        printf(\"%d,%d\",s1,s2);\n    if (match(pkg[0][s1], pkg[1][s2])) {\n      remove(pkg[0], s1);\n      remove(pkg[1], s2);\n      ans++;\n      s1 = 0;\n      s2 = 0;\n    } else {\n      if (pkg[0][s1].first < pkg[1][s2].first) {\n        s2++;\n        if (s2 == pkg[1].size()) {\n          s1++;\n          s2--;\n          if (s1 == pkg[0].size()) {\n            printf(\"%d\", ans);\n            return;\n          }\n        }\n      } else {\n        s1++;\n        if (s1 == pkg[0].size()) {\n          s2++;\n          s1--;\n          if (s2 == pkg[1].size()) {\n            printf(\"%d\", ans);\n            return;\n          }\n        }\n      }\n    }\n  }\n}\n\nbool match(pair<int, int> a, pair<int, int> b) {\n  if ((a.first >= b.first && a.first <= b.second) ||\n      (b.first >= a.first && b.first <= a.second))\n    return true;\n  return false;\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(void);\nvoid padFirstToLetter(int start, int x);\nbool chkAllQ(int y);\nvoid copyFrom(int fromRow, int toRow);\n\nint R, C;\n\nchar IN[26][26];\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/R1A-2017-A\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Users\/iwaisatoshi\/Dropbox\/17Todai\/CodeJam\/R1A-2017-A\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%d %d\", &R, &C);\n    for (int l = 0; l < R; l++) {\n      scanf(\"%s\", &IN[l][0]);\n    }\n    printf(\"Case #%d:\\n\", cnt + 1);\n    solve();\n    \/\/        printf(\"\\n\");\n  }\n  return 0;\n}\n\nvoid solve(void) {\n  for (int y = 0; y < R; y++) {\n    padFirstToLetter(0, y);\n    \/*        for(int x=0;x<C;x++){\n                printf(\"%c\",IN[y][x]);\n            }\n            printf(\"\\n\");*\/\n  }\n\n  char nearestCom[26];\n  int nearestFilled = 0;\n  for (int y = 0; y < R; y++) {\n    if (chkAllQ(y)) {\n      if (y == 0) {\n        int from = 1;\n        while (chkAllQ(from)) {\n          from++;\n        }\n        for (int to = 0; to <= from - 1; to++) {\n          copyFrom(from, to);\n        }\n        nearestFilled = from;\n        \/\/                y=from;\n      } else {\n        copyFrom(nearestFilled, y);\n        nearestFilled = y;\n      }\n    } else {\n      nearestFilled = y;\n    }\n  }\n  for (int y = 0; y < R; y++) {\n    for (int x = 0; x < C; x++) {\n      printf(\"%c\", IN[y][x]);\n    }\n    printf(\"\\n\");\n  }\n}\n\nvoid copyFrom(int fromRow, int toRow) {\n  for (int x = 0; x < C; x++) {\n    IN[toRow][x] = IN[fromRow][x];\n  }\n}\n\nbool chkAllQ(int y) {\n  for (int x = 0; x < C; x++) {\n    if (IN[y][x] != '?') {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid padFirstToLetter(int start, int y) {\n  if (start == C - 1) {\n    return;\n  }\n\n  char nowL = '?';\n  int pos = start;\n  for (int x = start; x < C; x++) {\n    if (IN[y][x] != '?') {\n      nowL = IN[y][x];\n      pos = x;\n      break;\n    }\n  }\n\n  if (nowL == '?') {\n    return;\n  }\n\n  for (int x = pos; x >= start; x--) {\n    IN[y][x] = nowL;\n  }\n  for (int x = pos + 1; x < C; x++) {\n    if (IN[y][x] == '?') {\n      IN[y][x] = nowL;\n    } else {\n      padFirstToLetter(x, y);\n    }\n  }\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <stdio.h>\n#include <string.h>\n\nint D, N;\nint K[1005];\nint S[1005];\nvoid solve(void);\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-A\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-A\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%d %d\", &D, &N);\n    for (int cnt = 0; cnt < N; cnt++) {\n      scanf(\"%d %d\", &K[cnt], &S[cnt]);\n    }\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n  }\n  return 0;\n}\n\nvoid solve(void) {\n  double minSpeed = (double)S[0] * (double)D \/ 1 + 1; \/\/ 100000000000000;\n  for (int cnt = 0; cnt < N; cnt++) {\n    double nowSpeed = ((double)S[cnt] * (double)D) \/ (double)(D - K[cnt]);\n    if (nowSpeed <= minSpeed) {\n      minSpeed = nowSpeed;\n    }\n  }\n  printf(\"%.6f\\n\", minSpeed);\n}\n"}
{"target":"ihahi","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\n\nint R, Y, B, O, G, V, N;\nchar buffer[1005];\nchar lastChar;\nchar firstChar;\nint bufInd;\n\nvoid solve(void);\nusing namespace std;\nbool my_greater(pair<char, int> l, pair<char, int> r);\nvoid setBuf(char k);\nvoid use(pair<char, int> *k);\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-B\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-B\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n  }\n  return 0;\n}\n\nvoid solve(void) {\n  bufInd = 0;\n  memset(buffer, 0, sizeof(char) * 1005);\n  vector<pair<char, int>> a;\n  a.push_back(make_pair('R', R - G));\n  a.push_back(make_pair('Y', Y - V));\n  a.push_back(make_pair('B', B - O));\n  firstChar = '0';\n  sort(a.begin(), a.end(), my_greater);\n\n  if (a[0].second >= a[1].second + a[2].second + 1) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  } else {\n    \/*        char lastChar=a[0].first;\n            printf(\"%c\",a[0].first);\n            a[0].second--;*\/\n    lastChar = '0'; \/\/ a[2].first;\n    firstChar = a[0].first;\n    for (int k = 0; k < N; k++) {\n      sort(a.begin(), a.end(), my_greater);\n      if (a[0].first != lastChar && a[0].second > 0) {\n        use(&a[0]);\n      } else if (a[1].first != lastChar && a[1].second > 0) {\n        use(&a[1]);\n      } else if (a[2].first != lastChar && a[2].second > 0) {\n        use(&a[2]);\n      } else {\n        printf(\"IMPOSSIBLE\\n\");\n        return;\n      }\n      \/\/            sort(a.begin(),a.end(),my_greater);\n    }\n    if (buffer[bufInd - 1] == buffer[0]) {\n      printf(\"OKASII %s\\n\", buffer);\n      return;\n    } else {\n      buffer[bufInd] = 0;\n      printf(\"%s\\n\", buffer);\n      return;\n    }\n  }\n  \/\/    printf(\"\\n\");\n}\n\nvoid use(pair<char, int> *k) {\n  setBuf(k->first);\n  \/\/                printf(\"%c\",a[0].first);\n  k->second--;\n  lastChar = k->first;\n}\n\nbool my_greater(pair<char, int> l, pair<char, int> r) {\n  if (l.second == r.second) {\n    if (firstChar == l.first) {\n      return true;\n    } else if (firstChar == r.first) {\n      return false;\n    }\n    return l.first < r.first;\n  } else {\n    return l.second > r.second;\n  }\n}\n\nvoid setBuf(char k) {\n  buffer[bufInd] = k;\n  bufInd++;\n}\n"}
{"target":"ihahi","func":"#include <iostream>\n#include <map>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\n\nint N; \/\/ cities\nint Q; \/\/ queries\nlong long E[100];\nlong long S[100];\n\nlong long D[100][100];\n\nlong long U[100];\nlong long K[100];\n\nusing namespace std;\n\nvector<pair<pair<int, int>, double>> times;\n\nmap<int, vector<pair<int, double>>> hours;\n\nmap<int, double> ansMap;\n\ndouble getMin(int n);\n\/\/ long long LEN[100];\n\nvoid solve(void);\n\nint main(int argc, const char *argv[]) {\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-C\/in.txt\", \"r\",\n          stdin);\n  freopen(\"\/Volumes\/4HOPE\/Dropbox\/17Todai\/CodeJam\/R1B-2017-C\/out.txt\", \"w\",\n          stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int cnt = 0; cnt < t; cnt++) {\n    scanf(\"%d %d\", &N, &Q);\n    for (int c_i = 0; c_i < N; c_i++) {\n      scanf(\"%lld %lld\", &E[c_i], &S[c_i]);\n    }\n    for (int y = 0; y < N; y++) {\n      for (int x = 0; x < N; x++) {\n        scanf(\"%lld\", &D[y][x]);\n      }\n    }\n    for (int k = 0; k < Q; k++) {\n      scanf(\"%lld %lld\", &U[k], &K[k]);\n    }\n    printf(\"Case #%d: \", cnt + 1);\n    solve();\n  }\n  return 0;\n}\n\nvoid solve(void) {\n  long long len = 0;\n  hours.clear();\n  ansMap.clear();\n  for (int s = 0; s < N; s++) {\n    len = 0;\n    for (int e = s + 1; e < N; e++) {\n      len += D[e - 1][e];\n      if (len > E[s]) {\n        break;\n      }\n      \/\/            times.push_back(make_pair(make_pair(s,e),(double)len\/(double)S[s]));\n      hours[e].push_back(make_pair(s, (double)len \/ (double)S[s]));\n    }\n  }\n  printf(\"%f\\n\", getMin(N - 1));\n}\n\/\/ n\u306b\u305f\u3069\u308a\u7740\u3051\u308b\u7d4c\u8def\u306e\u3046\u3061\u3001\u6700\u77ed\u306e\u3082\u306e\u3092\u63a2\u3059\ndouble getMin(int n) {\n  if (n == 0) {\n    return 0.0;\n  }\n  auto iter = ansMap.find(n);\n  if (iter != ansMap.end()) {\n    return ansMap[n];\n  }\n  vector<pair<int, double>> *vec = &hours[n];\n  double nowMin = 100000000000000;\n  for (pair<int, double> s : *vec) {\n    double nowTarget = getMin(s.first) + s.second;\n    if (nowTarget < nowMin) {\n      nowMin = nowTarget;\n    }\n  }\n  ansMap[n] = nowMin;\n  return nowMin;\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  cin >> t;\n  for (int aff = 0; aff < t; aff++) {\n    cout << \"Case #\" << aff + 1 << \": \";\n    ll n;\n    cin >> n;\n    ll was = n;\n    vi a;\n    while (n > 0) {\n      a.push_back(n % 10);\n      n \/= 10;\n    }\n    reverse((a).begin(), (a).end());\n    int l = a.size();\n    int d = -1;\n    for (int i = 0; i < l - 1; i++) {\n      if (a[i] > a[i + 1]) {\n        d = i;\n        break;\n      }\n    }\n    if (d == -1) {\n      cout << was << endl;\n      continue;\n    } else {\n      for (int i = d + 1; i < l; i++)\n        a[i] = 9;\n      a[d]--;\n      while (d > 0 && a[d] < a[d - 1]) {\n        a[d] = 9;\n        d--;\n        a[d]--;\n      }\n    }\n    int s = 0;\n    while (a[s] == 0)\n      s++;\n    for (int i = s; i < l; i++)\n      cout << a[i];\n    cout << endl;\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  cin >> t;\n  for (int aff = 0; aff < t; aff++) {\n    cout << \"Case #\" << aff + 1 << \": \";\n    ll n, k;\n    cin >> n >> k;\n    ll c1 = 1;\n    ll c2 = 0;\n    while (k > 0) {\n      ll nn = (n - 1) \/ 2;\n      ll nc1 = 0;\n      ll nc2 = 0;\n      ll mn = n \/ 2;\n      ll mx = n - mn;\n      if (k <= c2) {\n        cout << mx << ' ' << mn << endl;\n        break;\n      } else {\n        k -= c2;\n        if (mn == nn)\n          nc1 += c2;\n        else\n          nc2 += c2;\n        nc2 += c2;\n      }\n      mn = (n - 1) \/ 2;\n      mx = n - 1 - mn;\n      if (k <= c1) {\n        cout << mx << ' ' << mn << endl;\n        break;\n      } else {\n        k -= c1;\n        if (mx == nn)\n          nc1 += c1;\n        else\n          nc2 += c1;\n        nc1 += c1;\n      }\n      n = nn;\n      c1 = nc1;\n      c2 = nc2;\n    }\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  cin >> t;\n  for (int aff = 0; aff < t; aff++) {\n    cout << \"Case #\" << aff + 1 << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.size();\n    vi a(n, 1);\n    for (int i = 0; i < n; i++)\n      if (s[i] == '-')\n        a[i] = -1;\n\n    vi flip(n + 1, 0);\n    int cur = 1;\n    bool can = true;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (flip[i])\n        cur = -cur;\n      if (cur * a[i] == -1) {\n        if (i + k > n) {\n          can = false;\n        } else {\n          flip[i + k] = 1;\n          ans++;\n          cur = -cur;\n        }\n      }\n    }\n    if (!can)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << endl;\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\n\nvll a;\n\nint test1(ll nd) {\n  ll dev = nd % a[0];\n  if (dev == 0)\n    return 1;\n  else {\n    if (11 * (nd - dev) >= 10 * nd)\n      return 1;\n    if (10 * nd >= 9 * (nd - dev + a[0]))\n      return 1;\n    return 0;\n  }\n}\nint test2(ll nda, ll ndb) {\n  \/\/    vll t;\n  \/\/    ll da = nda % a[0];\n  \/\/    t.pb((nda-da)\/a[0]);\n  \/\/    t.pb((nda-da)\/a[0]+1);\n  \/\/    ll db = ndb % a[1];\n  \/\/    t.pb((ndb-db)\/a[1]);\n  \/\/    t.pb((ndb-db)\/a[1]+1);\n  \/\/    for(auto x : t) {\n  \/\/        ll ca = x*a[0];\n  \/\/        ll cb = x*a[1];\n  \/\/        if(nda*10 <= ca*11 && nda*10 >= ca*9 && ndb*10 <= cb*11 && ndb*10 >=\n  \/\/        cb*9) return 1;\n  \/\/    }\n  ll mx = min((10 * nda) \/ (9 * a[0]), (10 * ndb) \/ (9 * a[1]));\n  ll mn = max((10 * nda + 11 * a[0] - 1) \/ (11 * a[0]),\n              (10 * ndb + 11 * a[1] - 1) \/ (11 * a[1]));\n  if (mx >= mn)\n    return 1;\n  return 0;\n}\n\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int affu;\n  scanf(\"%d\", &affu);\n  for (int rruq = 0; rruq < affu; rruq++) {\n    printf(\"Case #%d: \", rruq + 1);\n    int n, p;\n    scanf(\"%d %d\", &n, &p);\n    a.resize(n);\n    vvll s(n, vll(p, 0));\n    for (int i = 0; i < n; i++)\n      scanf(\"%lld\", &a[i]);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        scanf(\"%lld\", &s[i][j]);\n    vi fac;\n    for (int i = 0; i < p; i++)\n      fac.push_back(i);\n    int ans = 0;\n    if (n == 1) {\n      for (int i = 0; i < p; i++) {\n        \/\/                cout<<s[0][i] << \"aag\" << test1(s[0][i])<<\"   \";\n        ans += test1(s[0][i]);\n      }\n    } else {\n      do {\n        int cur = 0;\n        for (int i = 0; i < p; i++) {\n          cur += test2(s[0][i], s[1][fac[i]]);\n        }\n        ans = max(ans, cur);\n\n      } while (std::next_permutation((fac).begin(), (fac).end()));\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int affu;\n  scanf(\"%d\\n\", &affu);\n  for (int rruq = 0; rruq < affu; rruq++) {\n    printf(\"Case #%d:\\n\", rruq + 1);\n    int r, c;\n    scanf(\"%d %d\\n\", &r, &c);\n    vector<string> a(r);\n    for (int i = 0; i < r; i++)\n      getline(cin, a[i]);\n    vi cnt(r, 0);\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < c; j++)\n        if (a[i][j] != '?')\n          cnt[i]++;\n    int p = 0;\n    while (p < r) {\n      int u = p;\n      while (cnt[p] == 0)\n        p++;\n      int m = p;\n      p++;\n      while (p < r && cnt[p] == 0)\n        p++;\n      char last = '?';\n      int s;\n      for (int i = 0; i < c; i++) {\n        if (a[m][i] != '?') {\n          last = a[m][i];\n          break;\n        }\n      }\n      for (int i = 0; i < c; i++) {\n        if (a[m][i] != '?')\n          last = a[m][i];\n        for (int j = u; j < p; j++) {\n          a[j][i] = last;\n        }\n      }\n    }\n    for (int i = 0; i < r; i++)\n      printf(\"%s\\n\", a[i].c_str());\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int iad = 0; iad < t; iad++) {\n    printf(\"Case #%d: \", iad + 1);\n    ld d;\n    int n;\n    cin >> d >> n;\n    ld maxt = 0;\n    for (int i = 0; i < n; i++) {\n      ld k, s;\n      cin >> k >> s;\n      maxt = max(maxt, (d - k) \/ s);\n    }\n    printf(\"%.10lf\\n\", (double)(d \/ maxt));\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int iad = 0; iad < t; iad++) {\n    printf(\"Case #%d: \", iad + 1);\n    int n;\n    int r, o, y, g, b, v;\n    string ans;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (r + y == 0) {\n      if (g > 0 || v > 0 || b != o) {\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      } else {\n        for (int i = 0; i < b; i++)\n          ans += \"BO\";\n        cout << ans << endl;\n        continue;\n      }\n    }\n    if (r + b == 0) {\n      if (g > 0 || o > 0 || y != v) {\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      } else {\n        for (int i = 0; i < y; i++)\n          ans += \"YV\";\n        cout << ans << endl;\n        continue;\n      }\n    }\n    if (b + y == 0) {\n      if (o > 0 || v > 0 || r != g) {\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      } else {\n        for (int i = 0; i < g; i++)\n          ans += \"RG\";\n        cout << ans << endl;\n        continue;\n      }\n    }\n    r -= g;\n    y -= v;\n    b -= o;\n    if (r < 0 || y < 0 || b < 0) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (r == 0 && g > 0) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (y == 0 && v > 0) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (b == 0 && o > 0) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    if (r + y < b || r + b < y || b + y < r) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    int cnt = r + y + b;\n    ans = string(cnt, '.');\n    int cur = 0;\n    if (2 * r == cnt) {\n      for (int i = 0; i < r; i++) {\n        ans[2 * i] = 'R';\n      }\n      for (int i = 0; i < r; i++) {\n        if (y > 0) {\n          ans[2 * i + 1] = 'Y';\n          y--;\n        } else\n          ans[2 * i + 1] = 'B';\n      }\n    } else if (2 * b == cnt) {\n      for (int i = 0; i < b; i++) {\n        ans[2 * i] = 'B';\n      }\n      for (int i = 0; i < b; i++) {\n        if (y > 0) {\n          ans[2 * i + 1] = 'Y';\n          y--;\n        } else\n          ans[2 * i + 1] = 'R';\n      }\n    } else if (2 * y == cnt) {\n      for (int i = 0; i < y; i++) {\n        ans[2 * i] = 'Y';\n      }\n      for (int i = 0; i < y; i++) {\n        if (r > 0) {\n          ans[2 * i + 1] = 'R';\n          r--;\n        } else\n          ans[2 * i + 1] = 'B';\n      }\n    } else {\n      for (int i = 0; i < cnt; i++) {\n        if (r > 0) {\n          ans[cur] = 'R';\n          r--;\n        } else if (y > 0) {\n          ans[cur] = 'Y';\n          y--;\n        } else if (b > 0) {\n          ans[cur] = 'B';\n          b--;\n        }\n        cur += 2;\n        if (cur >= cnt)\n          cur = 1;\n      }\n    }\n    if (g > 0) {\n      int k = 0;\n      while (ans[k] != 'R')\n        k++;\n      string bef = ans.substr(0, k);\n      string aft = ans.substr(k);\n      for (int i = 0; i < g; i++)\n        bef += \"RG\";\n      ans = bef + aft;\n    }\n    if (v > 0) {\n      int k = 0;\n      while (ans[k] != 'Y')\n        k++;\n      string bef = ans.substr(0, k);\n      string aft = ans.substr(k);\n      for (int i = 0; i < v; i++)\n        bef += \"YV\";\n      ans = bef + aft;\n    }\n    if (o > 0) {\n      int k = 0;\n      while (ans[k] != 'B')\n        k++;\n      string bef = ans.substr(0, k);\n      string aft = ans.substr(k);\n      for (int i = 0; i < o; i++)\n        bef += \"BO\";\n      ans = bef + aft;\n    }\n    cout << ans << endl;\n  }\n}\n"}
{"target":"ImBarD","func":"#include <algorithm>\n#include <cstring>\n#include <ctype.h>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef std::vector<ld> vld;\ntypedef std::vector<vld> vvld;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int>> vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int>> vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\nint main() {\n\n  freopen(\"input.txt\", \"rt\", stdin);\n  freopen(\"output.txt\", \"wt\", stdout);\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int iad = 0; iad < t; iad++) {\n    printf(\"Case #%d:\", iad + 1);\n    int n, q;\n    scanf(\"%d %d\", &n, &q);\n    vll st(n), sp(n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lld %lld\", &st[i], &sp[i]);\n    }\n    vvll d(n, vll(n, 0));\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        scanf(\"%lld\", &d[i][j]);\n    const ll INF = 1e18;\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        if (d[i][j] == -1)\n          d[i][j] = INF;\n    for (int k = 0; k < n; ++k)\n      for (int i = 0; i < n; ++i)\n        for (int j = 0; j < n; ++j)\n          if (d[i][k] < INF && d[k][j] < INF)\n            d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n    const ld INF2 = 1e18;\n    vvld dist(n, vld(n, 2 * INF2));\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        if (d[i][j] <= st[i])\n          dist[i][j] = (ld)d[i][j] \/ (ld)sp[i];\n      }\n    for (int k = 0; k < n; ++k)\n      for (int i = 0; i < n; ++i)\n        for (int j = 0; j < n; ++j)\n          if (dist[i][k] < INF2 && dist[k][j] < INF2)\n            dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n    for (int i = 0; i < q; i++) {\n      int u, v;\n      scanf(\"%d %d\", &u, &v);\n      u--;\n      v--;\n      printf(\" %.10lf\", (double)dist[u][v]);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nbool is_tidy(string s) {\n  int n = s.size();\n  for (int(i) = 0; (i) < (int)(n - 1); ++(i))\n    if (s[i] > s[i + 1])\n      return false;\n  return true;\n}\n\nll solve() {\n  string s;\n  cin >> s;\n\n  ll S = atoll(s.c_str());\n  if (is_tidy(s))\n    return S;\n\n  int n = s.size();\n\n  ll ret = -1;\n  for (int(i) = 0; (i) < (int)(n - 1); ++(i)) {\n    if (s[i] == '0')\n      continue;\n\n    string t = s.substr(0, i);\n    t += s[i] - 1;\n    while (t.size() < n)\n      t += \"9\";\n\n    if (is_tidy(t))\n      ret = max(ret, atoll(t.c_str()));\n  }\n\n  return ret;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t))\n    printf(\"Case #%d: %lld\\n\", t + 1, solve());\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst ll INF = 1234567890123LL;\n\nvoid solve() {\n  ll n, k;\n  cin >> n >> k;\n\n  ll maximum = 0, minimum = INF;\n\n  set<ll> s;\n  map<ll, ll> m;\n  ll done = 0;\n\n  s.insert(n);\n  m[n] = 1;\n  while (1) {\n    ll v = *s.rbegin();\n    \/\/ printf(\" v= %lld , m[v] = %lld\\n\", v,m[v]);\n\n    done += m[v];\n\n    ll a = (v - 1) \/ 2;\n    ll b = v - 1 - a;\n\n    if (done >= k) {\n      maximum = max(a, b);\n      minimum = min(a, b);\n      break;\n    }\n\n    m[a] += m[v];\n    m[b] += m[v];\n    s.erase(v);\n    s.insert(a);\n    s.insert(b);\n  }\n\n  assert(maximum >= minimum);\n  printf(\"%lld %lld\\n\", maximum, minimum);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d: \", t + 1);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nvoid solve() {\n  string s;\n  int k;\n  cin >> s >> k;\n\n  int n = s.size();\n  int ans = 0;\n  for (int(i) = 0; (i) < (int)(n - k + 1); ++(i)) {\n    if (s[i] == '-') {\n      for (int(j) = 0; (j) < (int)(k); ++(j))\n        s[i + j] = (s[i + j] == '+') ? '-' : '+';\n      \/\/ cout<<\"flip: \"<<i<<\" \"<<s<<endl;\n      ++ans;\n    }\n  }\n\n  bool valid = true;\n  for (int(i) = 0; (i) < (int)(n); ++(i))\n    valid &= (s[i] == '+');\n  if (valid)\n    printf(\"%d\\n\", ans);\n  else\n    printf(\"IMPOSSIBLE\\n\");\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d: \", t + 1);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nint R[50], Q[50][50];\nint dp[1 << 8][1 << 8] = {};\n\nint solve() {\n  memset(dp, 0, sizeof(dp));\n\n  int N, P;\n  cin >> N >> P;\n\n  for (int(i) = 0; (i) < (int)(N); ++(i))\n    cin >> R[i];\n  for (int(i) = 0; (i) < (int)(N); ++(i))\n    for (int(j) = 0; (j) < (int)(P); ++(j))\n      cin >> Q[i][j];\n\n  int ret = 0;\n  if (N == 1) {\n    for (int(i) = 0; (i) < (int)(P); ++(i)) {\n      int p = Q[0][i] \/ R[0];\n      for (ll k = 1; k <= 1000000; ++k) {\n        ll x = k * R[0];\n        if (9 * x <= 10 * Q[0][i] && 10 * Q[0][i] <= 11 * x) {\n          ++ret;\n          break;\n        }\n      }\n    }\n  }\n  if (N == 2) {\n    int ok[8][8] = {};\n    for (int(i) = 0; (i) < (int)(P); ++(i))\n      for (int(j) = 0; (j) < (int)(P); ++(j)) {\n        int p = Q[0][i] \/ R[0];\n        \/\/ printf(\" p =%d\\n\", p);\n        for (ll k = 1; k <= 1000000; ++k) {\n          ll x = k * R[0];\n          ll y = k * R[1];\n\n          if (9 * x <= 10 * Q[0][i] && 10 * Q[0][i] <= 11 * x &&\n              9 * y <= 10 * Q[1][j] && 10 * Q[1][j] <= 11 * y) {\n            \/\/ printf(\"ok (%d,%d)\\n\", i,j);\n            \/\/ printf(\"x, y %d %d\\n\", x,y);\n            ok[i][j] = 1;\n            break;\n          }\n        }\n      }\n\n    for (int(m1) = 0; (m1) < (int)(1 << P); ++(m1))\n      for (int(m2) = 0; (m2) < (int)(1 << P); ++(m2)) {\n        \/\/ \u6b21\u306bi\u3068j\u306e\u30da\u30a2\u3092\u63a1\u7528\n        for (int(i) = 0; (i) < (int)(P); ++(i))\n          for (int(j) = 0; (j) < (int)(P); ++(j)) {\n            if (m1 >> i & 1)\n              continue;\n            if (m2 >> j & 1)\n              continue;\n\n            if (ok[i][j])\n              dp[m1 + (1 << i)][m2 + (1 << j)] =\n                  max(dp[m1 + (1 << i)][m2 + (1 << j)], dp[m1][m2] + 1);\n          }\n      }\n\n    for (int(m1) = 0; (m1) < (int)(1 << P); ++(m1))\n      for (int(m2) = 0; (m2) < (int)(1 << P); ++(m2))\n        ret = max(ret, dp[m1][m2]);\n  }\n\n  return ret;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d: %d\\n\", t + 1, solve());\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nvoid solve() {\n  int r, c;\n  cin >> r >> c;\n  vector<string> s(r);\n  for (int(i) = 0; (i) < (int)(r); ++(i))\n    cin >> s[i];\n\n  \/\/ \/\/ \u5404\u884c\u306b\u4f55\u304b\u3057\u3089\u6587\u5b57\u304c\u3042\u308b\u304b\uff1f\n  \/\/ bool row=true;\n  \/\/ rep(i,r)\n  \/\/ {\n  \/\/     bool ok=false;\n  \/\/     rep(j,c)if(s[i][j]!='?') ok=true;\n  \/\/     row&=ok;\n  \/\/ }\n  \/\/\n  \/\/ \/\/ \u5404\u5217\u306b\u4f55\u304b\u3057\u3089\u6587\u5b57\u304c\u3042\u308b\u304b\uff1f\n  \/\/ bool column=true;\n  \/\/ rep(i,c)\n  \/\/ {\n  \/\/     bool ok=false;\n  \/\/     rep(j,r)if(s[j][i]!='?') ok=true;\n  \/\/     column&=ok;\n  \/\/ }\n\n  \/\/ \u6a2a\u306b\u4f38\u3070\u3059\n  for (int(i) = 0; (i) < (int)(r); ++(i))\n    for (int(j) = 0; (j) < (int)(c); ++(j)) {\n      if (s[i][j] != '?') {\n        int L = j, R = j;\n        while (L > 0 && s[i][L - 1] == '?')\n          --L;\n        while (R < c - 1 && s[i][R + 1] == '?')\n          ++R;\n\n        for (int k = L; k <= R; ++k)\n          s[i][k] = s[i][j];\n      }\n    }\n\n  for (int(i) = 0; (i) < (int)(r); ++(i)) {\n    if (s[i][0] != '?') {\n      int L = i, R = i;\n      while (L > 0 && s[L - 1][0] == '?')\n        --L;\n      while (R < r - 1 && s[R + 1][0] == '?')\n        ++R;\n\n      for (int j = L; j <= R; ++j) {\n        for (int(k) = 0; (k) < (int)(c); ++(k))\n          s[j][k] = s[i][k];\n      }\n    }\n  }\n  for (int(i) = 0; (i) < (int)(r); ++(i))\n    for (int(j) = 0; (j) < (int)(c); ++(j))\n      assert(s[i][j] != '?');\n\n  for (int(i) = 0; (i) < (int)(r); ++(i))\n    cout << s[i] << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d:\\n\", t + 1);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\ndouble solve() {\n  int d, n;\n  cin >> d >> n;\n\n  double t = 0;\n  for (int(i) = 0; (i) < (int)(n); ++(i)) {\n    int k, s;\n    cin >> k >> s;\n\n    double dist = d - k;\n    double tmp = dist \/ s;\n    t = max(t, tmp);\n  }\n\n  return d \/ t;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d: %.10f\\n\", t + 1, solve());\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nconst string ng = \"IMPOSSIBLE\";\n\nusing P = pair<int, char>;\n\nbool check(string s) {\n  int S = s.size();\n  if (s[0] == s[S - 1])\n    return false;\n  for (int(i) = 0; (i) < (int)(S - 1); ++(i))\n    if (s[i] == s[i + 1])\n      return false;\n  return true;\n}\n\nstring small_solve() {\n  int n, R, O, Y, G, B, V;\n  cin >> n >> R >> O >> Y >> G >> B >> V;\n\n  int m = max({R, Y, B});\n  if (2 * m > n) {\n    \/\/ printf(\" INPUT %d %d %d\\n\", R,Y,B);\n    return ng;\n  }\n  \/\/ return \" \";\n\n  vector<P> p;\n  p.push_back(P(R, 'R'));\n  p.push_back(P(Y, 'Y'));\n  p.push_back(P(B, 'B'));\n  sort((p).begin(), (p).end());\n\n  string s(n, ' ');\n  for (int(i) = 0; (i) < (int)(p[2].first); ++(i))\n    s[2 * i] = p[2].second;\n\n  int st = n - 1;\n  if (n % 2 == 1)\n    --st;\n  for (int(i) = 0; (i) < (int)(p[1].first); ++(i))\n    s[st - 2 * i] = p[1].second;\n\n  for (int(i) = 0; (i) < (int)(n); ++(i))\n    if (s[i] == ' ')\n      s[i] = p[0].second;\n\n  assert(check(s));\n\n  return s;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int(t) = 0; (t) < (int)(T); ++(t)) {\n    printf(\"Case #%d: \", t + 1);\n    cout << small_solve() << endl;\n  }\n  return 0;\n}\n"}
{"target":"imulan","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nconst double INF = 1e12;\n\nll d[100][100];\ndouble T[100][100];\n\nvoid solve() {\n  int n, q;\n  cin >> n >> q;\n\n  vector<int> e(n), s(n);\n  for (int(i) = 0; (i) < (int)(n); ++(i))\n    cin >> e[i] >> s[i];\n\n  for (int(i) = 0; (i) < (int)(n); ++(i))\n    for (int(j) = 0; (j) < (int)(n); ++(j)) {\n      int tmp;\n      cin >> tmp;\n      if (tmp == -1)\n        d[i][j] = LLONG_MAX \/ 4;\n      else\n        d[i][j] = tmp;\n    }\n\n  for (int(k) = 0; (k) < (int)(n); ++(k))\n    for (int(i) = 0; (i) < (int)(n); ++(i))\n      for (int(j) = 0; (j) < (int)(n); ++(j))\n        d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n\n  \/\/ rep(i,n)rep(j,n) printf(\" d[%d][%d] = %lld\\n\", i,j,d[i][j]);\n\n  fill(T[0], T[100], INF);\n  for (int(i) = 0; (i) < (int)(n); ++(i)) {\n    \/\/ i\u3092\u30b9\u30bf\u30fc\u30c8\u306b\u3059\u308b\u306e\u3067\u3001i\u306b\u3044\u308b\u99ac\u3092\u4f7f\u3046\n    for (int(j) = 0; (j) < (int)(n); ++(j)) {\n      if (i == j) {\n        T[i][i] = 0;\n        continue;\n      }\n\n      if (d[i][j] <= e[i])\n        T[i][j] = (double)d[i][j] \/ s[i];\n    }\n  }\n\n  for (int(k) = 0; (k) < (int)(n); ++(k))\n    for (int(i) = 0; (i) < (int)(n); ++(i))\n      for (int(j) = 0; (j) < (int)(n); ++(j))\n        T[i][j] = min(T[i][j], T[i][k] + T[k][j]);\n\n  for (int(QUERY) = 0; (QUERY) < (int)(q); ++(QUERY)) {\n    int u, v;\n    cin >> u >> v;\n    --u;\n    --v;\n\n    double ans = T[u][v];\n    assert(ans < INF);\n    printf(\" %.10f\", ans);\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  int cases;\n  cin >> cases;\n  for (int(t) = 0; (t) < (int)(cases); ++(t)) {\n    printf(\"Case #%d:\", t + 1);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/08 09:41:22 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string s;\n    cin >> s;\n    int dec = -1;\n    for (int j = 0; j < s.size() - 1; ++j) {\n      if (s[j] > s[j + 1]) {\n        dec = j;\n        break;\n      }\n    }\n    if (dec != -1) {\n      while (dec >= 0 && s[dec] > s[dec + 1]) {\n        --s[dec];\n        --dec;\n      }\n      for (int j = dec + 2; j < s.size(); ++j)\n        s[j] = '9';\n    }\n    while (s[0] == '0')\n      s.erase(0, 1);\n    cout << \"Case #\" << i << \": \" << s << endl;\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/08 18:38:40 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    long long n, k;\n    cin >> n >> k;\n    map<long long, long long> mp;\n    mp[n] = 1;\n    queue<long long> que;\n    que.push(n);\n    while (1) {\n      long long tis = que.front();\n      que.pop();\n      long long num = mp[tis];\n      if (num >= k) {\n        cout << \"Case #\" << i << \": \" << (tis \/ 2) << \" \" << ((tis - 1) \/ 2)\n             << endl;\n        break;\n      }\n      k -= num;\n      if (mp.find(tis \/ 2) == mp.end())\n        que.push(tis \/ 2);\n      if (tis % 2 == 0 && mp.find((tis - 1) \/ 2) == mp.end())\n        que.push((tis - 1) \/ 2);\n      mp[tis \/ 2] += num;\n      mp[(tis - 1) \/ 2] += num;\n    }\n  }\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/08 09:41:22 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 1010;\n\nchar s[maxn];\n\nint main() {\n  freopen(\"A-small-attempt0(1).in\", \"r\", stdin);\n  ;\n  freopen(\"A-small-attempt0(1).out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int k;\n    cin >> s >> k;\n    int n = strlen(s);\n    int ans = 0;\n    for (int j = 0; j <= n - k; ++j) {\n      if (s[j] == '-') {\n        ++ans;\n        for (int l = 0; l < k; ++l) {\n          if (s[j + l] == '-')\n            s[j + l] = '+';\n          else\n            s[j + l] = '-';\n        }\n      }\n    }\n    bool flag = 1;\n    for (int j = n - k + 1; j < n; ++j)\n      if (s[j] == '-')\n        flag = 0;\n    cout << \"Case #\" << i << \": \";\n    if (flag)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/15 09:44:05 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nconst double eps = 1e-9;\n\nint sgn(double x) {\n  if (fabs(x) < eps)\n    return 0;\n  if (x > 0)\n    return 1;\n  return -1;\n}\n\nint ri[10];\nint qi[10][10];\nint ans;\nbool vis[10];\nint n, p;\n\nvoid dfs(int st, int gs) {\n  if (st > p) {\n    ans = max(ans, gs);\n    return;\n  }\n  dfs(st + 1, gs);\n  for (int j = 1; j <= p; ++j) {\n    if (vis[j] == 0) {\n      int l = 0, r = 1e6 + 1;\n      while (l + 1 < r) {\n        int mid = (l + r) \/ 2;\n        double mi1 = (double)mid * ri[1] * 0.9;\n        double mi2 = (double)mid * ri[2] * 0.9;\n        if (sgn(qi[1][st] - mi1) > -1 && sgn(qi[2][j] - mi2) > -1)\n          l = mid;\n        else\n          r = mid;\n      }\n      double ma1 = (double)l * ri[1] * 1.1;\n      double ma2 = (double)l * ri[2] * 1.1;\n      if (sgn(ma1 - qi[1][st]) > -1 && sgn(ma2 - qi[2][j]) > -1) {\n        vis[j] = 1;\n        dfs(st + 1, gs + 1);\n        vis[j] = 0;\n      }\n    }\n  }\n  return;\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  ;\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    cin >> n >> p;\n    for (int j = 1; j <= n; ++j)\n      cin >> ri[j];\n    for (int j = 1; j <= n; ++j)\n      for (int k = 1; k <= p; ++k)\n        cin >> qi[j][k];\n    ans = 0;\n    if (n == 1) {\n      for (int j = 1; j <= p; ++j) {\n        int l = 0, r = 1e6 + 1;\n        while (l + 1 < r) {\n          int mid = (l + r) \/ 2;\n          double mi = (double)mid * ri[1] * 0.9;\n          if (sgn(qi[1][j] - mi) > -1)\n            l = mid;\n          else\n            r = mid;\n        }\n        double ma = (double)l * ri[1] * 1.1;\n        if (sgn(ma - qi[1][j]) > -1)\n          ++ans;\n      }\n    } else {\n      memset(vis, 0, sizeof vis);\n      dfs(1, 0);\n    }\n    cout << \"Case #\" << i << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/15 08:49:04 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 30;\n\nchar s[maxn][maxn];\nbool have[maxn];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int r, c;\n    cin >> r >> c;\n    memset(have, 0, sizeof have);\n    for (int j = 1; j <= r; ++j) {\n      cin >> (s[j] + 1);\n      for (int k = 1; k <= c; ++k)\n        if (s[j][k] != '?')\n          have[j] = 1;\n    }\n    for (int j = 1; j <= r; ++j) {\n      for (int k = 1; k < c; ++k)\n        if (s[j][k] != '?' && s[j][k + 1] == '?')\n          s[j][k + 1] = s[j][k];\n      for (int k = c; k > 1; --k)\n        if (s[j][k] != '?' && s[j][k - 1] == '?')\n          s[j][k - 1] = s[j][k];\n    }\n    for (int j = 1; j < r; ++j) {\n      if (have[j] == 1 && have[j + 1] == 0) {\n        have[j + 1] = 1;\n        for (int k = 1; k <= c; ++k)\n          s[j + 1][k] = s[j][k];\n      }\n    }\n    for (int j = r; j > 1; --j) {\n      if (have[j] == 1 && have[j - 1] == 0) {\n        have[j - 1] = 1;\n        for (int k = 1; k <= c; ++k)\n          s[j - 1][k] = s[j][k];\n      }\n    }\n    cout << \"Case #\" << i << \":\\n\";\n    for (int j = 1; j <= r; ++j)\n      cout << (s[j] + 1) << \"\\n\";\n  }\n  cout << flush;\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/22 23:57:01 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int d, n;\n    cin >> d >> n;\n    double ma = 0;\n    for (int j = 1; j <= n; ++j) {\n      int ki, si;\n      cin >> ki >> si;\n      int len = d - ki;\n      double ti = (double)len \/ (double)si;\n      ma = max(ti, ma);\n    }\n    double ans = (double)d \/ ma;\n    printf(\"Case #%d: %.6lf\\n\", i, ans);\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/23 00:23:02 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int n;\n    cin >> n;\n    pair<int, char> a[3];\n    for (int j = 0; j < 3; ++j) {\n      cin >> a[j].first;\n      int xx;\n      cin >> xx;\n    }\n    a[0].second = 'R';\n    a[1].second = 'Y';\n    a[2].second = 'B';\n    sort(a, a + 3);\n    cout << \"Case #\" << i << \": \";\n    if (a[2].first > a[0].first + a[1].first)\n      cout << \"IMPOSSIBLE\" << endl;\n    else {\n      vector<char> ans;\n      for (int j = 1; j <= a[2].first; ++j)\n        ans.push_back(a[2].second);\n      int st = 0;\n      for (int j = 1; j <= a[1].first; ++j) {\n        ans.insert(ans.begin() + st, a[1].second);\n        st += 2;\n      }\n      int j;\n      for (j = 1; j <= a[0].first; ++j) {\n        if (st == ans.size())\n          break;\n        ans.insert(ans.begin() + st, a[0].second);\n        st += 2;\n      }\n      st = 0;\n      for (; j <= a[0].first; ++j) {\n        ans.insert(ans.begin() + st, a[0].second);\n        st += 2;\n      }\n      for (int j = 0; j < ans.size(); ++j)\n        cout << ans[j];\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"ion","func":"\/* ***************************************\nAuthor        :Scau.ion\nCreated Time  :2017\/04\/23 00:52:23 UTC+8\nFile Name     :ion.cpp\n*************************************** *\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\nconst double inf = 1e18;\n\nint dis[110][110];\nint e[110], s[110];\ndouble mi[110];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  ;\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  ;\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    int n, q;\n    cin >> n >> q;\n    for (int j = 1; j <= n; ++j)\n      cin >> e[j] >> s[j];\n    for (int j = 1; j <= n; ++j) {\n      for (int k = 1; k <= n; ++k) {\n        cin >> dis[j][k];\n      }\n    }\n    int u, v;\n    cin >> u >> v;\n    mi[1] = 0;\n    for (int j = 2; j <= n; ++j)\n      mi[j] = inf;\n    for (int j = 1; j < n; ++j) {\n      int sum = 0;\n      for (int k = j + 1; k <= n; ++k) {\n        sum += dis[k - 1][k];\n        if (sum > e[j])\n          break;\n        double ti = (double)sum \/ (double)s[j];\n        mi[k] = min(mi[k], mi[j] + ti);\n      }\n    }\n    printf(\"Case #%d: %.6lf\\n\", i, mi[n]);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nbool f(int n) {\n  if (n < 10)\n    return true;\n  int a = n % 10;\n  int b = n % 100 \/ 10;\n  return f(n \/ 10) && (a >= b);\n}\n\nchar s[100];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n\n    \/\/ int g;\n    \/\/ scanf(\"%d\",&g);\n    \/\/ for(;!f(g);--g);\n    \/\/ printf(\"Case #%d: %d\\n\", tt, g);\n    \/\/ continue;\n\n    scanf(\"%s\", s);\n    int k;\n    for (k = 1; s[k] != 0; ++k) {\n      if (s[k] < s[k - 1])\n        break;\n    }\n    if (s[k] == 0) {\n      printf(\"Case #%d: %s\\n\", tt, s);\n      continue;\n    }\n\n    int i = max(0, k - 1);\n    for (int j = strlen(s) - 1; j > i; --j)\n      s[j] = '9';\n\n    for (; i >= 0; --i) {\n      if (i == 0 || s[i] > s[i - 1]) {\n        --s[i];\n        break;\n      }\n      s[i] = '9';\n    }\n\n    printf(\"Case #%d: %s\\n\", tt, s[0] == '0' ? s + 1 : s);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\n\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n\n    int n, k;\n    priority_queue<int> q;\n    scanf(\"%d%d\", &n, &k);\n    q.push(n);\n    while (--k) {\n      int x = q.top();\n      q.pop();\n      q.push(x \/ 2);\n      q.push((x - 1) \/ 2);\n    }\n\n    int v = q.top();\n    printf(\"Case #%d: %d %d\\n\", tt, v \/ 2, (v - 1) \/ 2);\n  }\n  return 0;\n}\n\n\/*\n12\n0 xoooooooooooox\n1 xoooooxoooooox 6 5\n2 xoooooxooxooox 3 2\n3 xooxooxooxooox 2 2\n4 xooxooxooxoxox 1 1\n5 xxoxooxooxoxox 1 0\n6 xxoxxoxooxoxox 1 0\n7 xxoxxoxxoxoxox 1 0\n                 0 0\n\nx------------x 12\nx-----1------x 6\nx-----1--2---x 5\nx--3--1--2---x 3\nx--3--1--2-4-x 2\nx5-3--1--2-4-x 2\n*\/\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nchar s[2000];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    int n = 0, k;\n    scanf(\"%s%d\", s, &k);\n    for (int i = strlen(s) - 1; i + 1 >= k; --i) {\n      if (s[i] == '-') {\n        ++n;\n        for (int j = 0; j < k; ++j) {\n          s[i - j] = (s[i - j] == '-' ? '+' : '-');\n        }\n      }\n      \/\/ printf(\"%c %s\\n\", s[i], s);\n    }\n    for (int j = 0; j < k; ++j) {\n      if (s[j] == '-') {\n        n = -1;\n      }\n    }\n\n    if (n < 0) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", tt);\n      continue;\n    }\n    printf(\"Case #%d: %d\\n\", tt, n);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint N, P;\nint s[200];\nint r[200][200];\nint b[200];\nint tb[200];\n\nint ll[200][200];\nint mm[200][200];\n\nbool dfs(int cur, int less, int most) { return 0; }\n\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &N, &P);\n    for (int i = 0; i < N; ++i)\n      scanf(\"%d\", &s[i]);\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j) {\n        scanf(\"%d\", &r[i][j]);\n      }\n      sort(r[i], r[i] + P);\n      for (int j = 0; j < P; ++j) {\n        ll[i][j] = ceil(1.0 * r[i][j] \/ (1.1 * s[i]));\n        mm[i][j] = floor(1.0 * r[i][j] \/ (0.9 * s[i]));\n      }\n    }\n\n    \/*\n    for(int i=0;i<N;++i) {\n      for(int j=0;j<P;++j) {\n        printf(\"[%4d,%4d] \", ll[i][j], mm[i][j]);\n      }\n      puts(\"\");\n    }\n    continue;\n    *\/\n\n    int ans = 0;\n    memset(b, 0, sizeof(b));\n\n    \/*\n    for(int i=0;i<P;++i)\n    {\n      int low = s[0]-(s[0]\/10);\n      int high = s[0]+((s[0]+9)\/10);\n\n      int most = r[0][i]\/low;\n      int less = (r[0][i]+high-1)\/high;\n\n      for(int k=less;k<=most;++k){\n        bool ok=true;\n        for(int j=0;j<N && ok;++j){\n          if (r[j][i]*10 < k*s[j]*9) ok=false;\n          if (r[j][i]*10 > k*s[j]*11) ok=false;\n        }\n        if (ok) {\n          ++ans;\n          break;\n        }\n      }\n\n    }\n    *\/\n\n    while (1) {\n      bool stop = false;\n      for (int i = 0; i < N; ++i) {\n        if (b[i] >= P)\n          stop = true;\n      }\n      if (stop)\n        break;\n\n      int cur = 0;\n      for (int i = 0; i < N; ++i) {\n        cur = max(cur, ll[i][b[i]]);\n      }\n\n      bool ok = true;\n      for (int i = 0; i < N; ++i) {\n        for (int j = b[i]; j <= P; ++j) {\n          if (j == P || cur < ll[i][j]) {\n            b[i] = j;\n            ok = false;\n            break;\n          }\n          if (ll[i][j] > mm[i][j]) {\n            continue;\n          }\n          if (cur <= mm[i][j]) {\n            tb[i] = j;\n            break;\n          }\n        }\n      }\n\n      \/\/ printf(\"%d: %d %d\\n\", cur, ok, b[0]);\n      if (!ok)\n        continue;\n\n      ++ans;\n      for (int i = 0; i < N; ++i) {\n        b[i] = tb[i] + 1;\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", tt, ans);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint n, m;\nchar s[50][50];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%s\", s[i]);\n\n    int ufx, ufy = 0;\n    for (int i = 0; i < n; ++i) {\n      ufx = 0;\n      bool fill = false;\n      for (int j = 0; j < m; ++j) {\n        if (s[i][j] == '?')\n          continue;\n        fill = true;\n        int st = ufx, ed = j + 1;\n        for (; ed < m && s[i][ed] == '?'; ++ed)\n          ;\n        for (int x = st; x < ed; ++x)\n          for (int y = ufy; y <= i; ++y)\n            s[y][x] = s[i][j];\n        ufx = ed;\n      }\n      if (fill)\n        ufy = i + 1;\n    }\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < m; ++j)\n        if (s[i][j] == '?') {\n          s[i][j] = s[i - 1][j];\n        }\n\n    printf(\"Case #%d:\\n\", tt);\n    for (int i = 0; i < n; ++i)\n      printf(\"%s\\n\", s[i]);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint n;\ndouble m, s[2000], d[2000];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%lf%d\", &m, &n);\n    double lo = 0;\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%lf%lf\", &d[i], &s[i]);\n      lo = max(lo, (m - d[i]) \/ s[i]);\n    }\n\n    \/\/ printf(\"%lf\\n\", lo);\n    printf(\"Case #%d: %.8lf\\n\", tt, m \/ lo);\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\/\/    0   1   2\nint N, R, O, Y, G, B, V;\nint s[2000];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n\n    printf(\"Case #%d: \", tt);\n\n    if (O > B || G > R || V > Y) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n\n    if (O == B && O > 0) {\n      if (O + B < N) {\n        puts(\"IMPOSSIBLE\");\n      } else {\n        for (; O > 0; --O)\n          printf(\"OB\");\n        puts(\"\");\n      }\n      continue;\n    }\n    if (G == R && G > 0) {\n      if (G + R < N) {\n        puts(\"IMPOSSIBLE\");\n      } else {\n        for (; G > 0; --G)\n          printf(\"RG\");\n        puts(\"\");\n      }\n      continue;\n    }\n    if (Y == V && V > 0) {\n      if (Y + V < N) {\n        puts(\"IMPOSSIBLE\");\n      } else {\n        for (; V > 0; --V)\n          printf(\"YV\");\n        puts(\"\");\n      }\n      continue;\n    }\n\n    B -= O;\n    R -= G;\n    Y -= V;\n    int m = B + R + Y;\n    if (B > R + Y || R > B + Y || Y > B + R) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    memset(s, -1, sizeof(s));\n\n    int maxc = 0, c = R, c2 = Y, mc2 = 1, mc3 = 2;\n    if (B > R && B > Y)\n      maxc = 2, c = B, mc3 = 0;\n    if (Y > B && Y > R)\n      maxc = 1, c = Y, c2 = R, mc2 = 0;\n    \/\/ printf(\"%d %d\\n\",c,c2);\n    \/\/ printf(\"%d %d %d\\n\",maxc,mc2,mc3);\n\n    for (int i = 0; i < c; i++) {\n      s[i * 2] = maxc;\n    }\n    for (int i = m - 1 - (m % 2), j = 0; j < c2; i -= 2, ++j) {\n      s[i] = mc2;\n    }\n    for (int i = 0; i < m; i++) {\n      if (s[i] < 0)\n        s[i] = mc3;\n    }\n\n    for (int i = 0; i < m; i++) {\n      if (s[i] == 0) {\n        printf(\"R\");\n        for (; G > 0; --G)\n          printf(\"GR\");\n        \/\/ printf(G>0?\"RGR\":\"R\");\n        \/\/ --G;\n      } else if (s[i] == 1) {\n        printf(\"Y\");\n        for (; V > 0; --V)\n          printf(\"VY\");\n        \/\/ printf(V>0?\"YVY\":\"Y\");\n        \/\/ --V;\n      } else {\n        printf(\"B\");\n        for (; O > 0; --O)\n          printf(\"OB\");\n        \/\/ printf(O>0?\"BOB\":\"B\");\n        \/\/ --O;\n      }\n    }\n    puts(\"\");\n    \/\/ for(int i=0;i<m;++i)\n    \/\/   printf(\"%d\",s[i]);\n    \/\/ puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"iPeter","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint N, Q, U, V;\nint e[200];\ndouble s[200];\nint d[200][200];\nint go[200];\n\ndouble ans[200];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 0; i < N; ++i)\n      scanf(\"%d%lf\", &e[i], &s[i]);\n    for (int i = 0; i < N; ++i)\n      for (int j = 0; j < N; ++j)\n        scanf(\"%d\", &d[i][j]);\n\n    for (int k = 0; k < N; ++k)\n      for (int i = 0; i < N; ++i)\n        for (int j = 0; j < N; ++j) {\n          if (i == j || d[i][k] < 0 || d[k][j] < 0)\n            continue;\n          if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {\n            d[i][j] = d[i][k] + d[k][j];\n          }\n        }\n\n    printf(\"Case #%d:\", tt);\n\n    for (; Q--;) {\n      scanf(\"%d%d\", &U, &V);\n      --U, --V;\n      for (int i = 0; i < N; ++i) {\n        ans[i] = -1;\n        go[i] = false;\n      }\n      ans[U] = 0;\n      \/\/ go[U]=true;\n\n      int cur = U;\n      while (1) {\n        go[cur] = true;\n        for (int i = 0; i < N; ++i) {\n          if (d[cur][i] > e[cur] || d[cur][i] < 0)\n            continue;\n          if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] \/ s[cur])\n            ans[i] = ans[cur] + d[cur][i] \/ s[cur];\n        }\n\n        double mind = -1;\n        for (int i = 0; i < N; ++i) {\n          if (go[i] || ans[i] < 0)\n            continue;\n          if (mind < 0 || mind > ans[i]) {\n            cur = i;\n            mind = ans[i];\n          }\n        }\n\n        if (mind < 0)\n          break;\n      }\n\n      printf(\" %lf\", ans[V]);\n    }\n\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nbool nondec(long long N) {\n  long long prev = 9;\n  while (N > 0) {\n    long long tmp = N % 10;\n    if (tmp > prev)\n      return false;\n    prev = tmp;\n    N \/= 10;\n  }\n  return true;\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  ofstream out(\"output-B-small.txt\");\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long N;\n    cin >> N;\n\n    for (long long i = N; i > 0; i--) {\n      if (nondec(i)) {\n        out << \"Case #\" << loop << \": \" << i << endl;\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  ofstream out(\"output-C-small1.txt\");\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long N, K;\n    cin >> N >> K;\n\n    map<long long, long long> m;\n    m[N] = 1;\n    while (true) {\n      auto it = m.end();\n      it--;\n      long long num = (*it).first;\n      long long cnt = (*it).second;\n\n      if (K > cnt) {\n        K -= cnt;\n        m[num \/ 2] += cnt;\n        m[(num - 1) \/ 2] += cnt;\n        m.erase(it);\n      } else {\n        cout << \"Case #\" << loop << \": \" << (num \/ 2) << ' ' << ((num - 1) \/ 2)\n             << endl;\n        out << \"Case #\" << loop << \": \" << (num \/ 2) << ' ' << ((num - 1) \/ 2)\n            << endl;\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  ofstream out(\"output-A-small.txt\");\n  for (long long loop = (1); loop <= (T); loop++) {\n    string S;\n    long long K;\n    cin >> S >> K;\n\n    long long ret = 0;\n    for (long long j = 0; j < (S.size() - K + 1); j++) {\n      if (S[j] == '+')\n        continue;\n      ret++;\n      for (long long k = 0; k < (K); k++) {\n        if (j + k >= S.size())\n          break;\n        S[j + k] = S[j + k] == '+' ? '-' : '+';\n      }\n    }\n\n    bool ok = true;\n    for (long long j = 0; j < (S.size()); j++) {\n      if (S[j] == '-') {\n        ok = false;\n        break;\n      }\n    }\n\n    out << \"Case #\" << loop << \": \" << (ok ? to_string(ret) : \"IMPOSSIBLE\")\n        << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nclass Graph {\nprivate:\n  class Edge {\n  public:\n    long long to;\n    long long cap;\n    long long rev;\n    Edge(long long to, long long cap, long long rev) {\n      this->to = to;\n      this->cap = cap;\n      this->rev = rev;\n    }\n  };\n\n  long long calcFlow(long long s, long long t, long long left) {\n    if (s == t)\n      return left;\n\n    visited[s] = true;\n\n    for (long long i = 0; i < (nextEdges[s].size()); i++) {\n      Edge &edge = nextEdges[s][i];\n      if (edge.cap == 0)\n        continue;\n      if (visited[edge.to])\n        continue;\n      long long flow = calcFlow(edge.to, t, min(left, edge.cap));\n      if (flow > 0) {\n        edge.cap -= flow;\n        nextEdges[edge.to][edge.rev].cap += flow;\n        return flow;\n      }\n    }\n\n    return 0;\n  }\n\n  vector<bool> visited;\n  vector<vector<Edge>> nextEdges, backUpNextEdges;\n\npublic:\n  Graph() {}\n  Graph(long long n) {\n    nextEdges.resize(n);\n    visited.resize(n);\n  }\n\n  void addEdge(long long node, long long to, long long cap) {\n    nextEdges[node].push_back(Edge(to, cap, nextEdges[to].size()));\n    nextEdges[to].push_back(Edge(node, 0, nextEdges[node].size() - 1));\n  }\n\n  long long calcMaxFlow(long long s, long long t) {\n    backUpNextEdges = nextEdges;\n\n    long long ret = 0;\n    while (true) {\n      for (long long i = 0; i < (nextEdges.size()); i++)\n        visited[i] = false;\n      long long flow = calcFlow(s, t, INT_MAX);\n      if (flow == 0)\n        break;\n      ret += flow;\n    }\n\n    nextEdges = backUpNextEdges;\n\n    return ret;\n  }\n};\n\nlong long p[60][60];\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  ofstream out(\"output-B-small.txt\");\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long N, P;\n    cin >> N >> P;\n\n    vector<long long> w;\n    inputVector(w, N);\n\n    for (long long i = 0; i < (N); i++)\n      for (long long j = 0; j < (P); j++) {\n        cin >> p[i][j];\n      }\n\n    long long ans = 0;\n    if (N == 2) {\n      Graph g(2 * P + 2);\n      for (long long i = 0; i < (P); i++) {\n        g.addEdge(0, i + 1, 1);\n        g.addEdge(P + i + 1, 2 * P + 1, 1);\n      }\n      for (long long i = 0; i < (P); i++)\n        for (long long j = 0; j < (P); j++) {\n          for (long long k = (1); k <= (1000000); k++) {\n            long long y = w[0] * k;\n            long long x = p[0][i];\n            if (x * 10 < y * 9)\n              continue;\n            if (x * 10 > y * 11)\n              continue;\n\n            y = w[1] * k;\n            x = p[1][j];\n            if (x * 10 < y * 9)\n              continue;\n            if (x * 10 > y * 11)\n              continue;\n\n            g.addEdge(i + 1, P + j + 1, 1);\n            break;\n          }\n        }\n\n      ans = g.calcMaxFlow(0, 2 * P + 1);\n    } else {\n      for (long long i = 0; i < (P); i++) {\n        for (long long k = (1); k <= (1000000); k++) {\n          long long y = w[0] * k;\n          long long x = p[0][i];\n          if (x * 10 < y * 9)\n            continue;\n          if (x * 10 > y * 11)\n            continue;\n\n          ans++;\n          break;\n        }\n      }\n    }\n\n    cout << \"Case #\" << loop << \": \" << ans << endl;\n    out << \"Case #\" << loop << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  ofstream out(\"output-A-small.txt\");\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long H, W;\n    cin >> H >> W;\n\n    vector<string> board;\n    inputVector(board, H);\n\n    for (long long y = 0; y < (H); y++) {\n      char prev = '?';\n      for (long long x = 0; x < (W); x++) {\n        if (board[y][x] != '?') {\n          prev = board[y][x];\n        } else {\n          board[y][x] = prev;\n        }\n      }\n    }\n\n    for (long long y = 0; y < (H); y++) {\n      char prev = '?';\n      for (long long x = W - 1; x >= 0; x--) {\n        if (board[y][x] != '?') {\n          prev = board[y][x];\n        } else {\n          board[y][x] = prev;\n        }\n      }\n    }\n\n    for (long long y = (1); y <= (H - 1); y++) {\n      for (long long x = 0; x < (W); x++) {\n        if (board[y][x] == '?') {\n          board[y][x] = board[y - 1][x];\n        }\n      }\n    }\n    for (long long y = H - 2; y >= 0; y--) {\n      for (long long x = 0; x < (W); x++) {\n        if (board[y][x] == '?') {\n          board[y][x] = board[y + 1][x];\n        }\n      }\n    }\n\n    cout << \"Case #\" << loop << \":\" << endl;\n    out << \"Case #\" << loop << \":\" << endl;\n    for (long long y = 0; y < (H); y++) {\n      cout << board[y] << endl;\n      out << board[y] << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long D, N;\n    cin >> D >> N;\n\n    vector<long long> K(N), S(N);\n    for (long long i = 0; i < (N); i++) {\n      cin >> K[i] >> S[i];\n    }\n\n    double time = 0;\n    for (long long i = 0; i < (N); i++) {\n      time = max(time, (double)(D - K[i]) \/ S[i]);\n    }\n\n    printf(\"Case #%d: %.6f\\n\", loop, D \/ time);\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    string ret = string(N, '.');\n    if (2 * R > N || 2 * Y > N || 2 * B > N)\n      ret = \"IMPOSSIBLE\";\n    else {\n      long long pt = 0;\n      for (long long j = 0; j < (3); j++) {\n        if (R + Y + B == 0)\n          break;\n        if (R >= Y && R >= B) {\n          for (long long i = 0; i < (R); i++) {\n            ret[pt] = 'R';\n            pt += 2;\n            if (pt >= N)\n              pt = 1;\n          }\n          R = 0;\n        } else if (Y >= R && Y >= B) {\n          for (long long i = 0; i < (Y); i++) {\n            ret[pt] = 'Y';\n            pt += 2;\n            if (pt >= N)\n              pt = 1;\n          }\n          Y = 0;\n        } else if (B >= R && B >= Y) {\n          for (long long i = 0; i < (B); i++) {\n            ret[pt] = 'B';\n            pt += 2;\n            if (pt >= N)\n              pt = 1;\n          }\n          B = 0;\n        }\n      }\n    }\n\n    cout << \"Case #\" << loop << \": \" << ret << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"iwashi31","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, -1, 0, 1};\n\nlong long nextInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nchar nextChar() {\n  char a;\n  cin >> a;\n  return a;\n}\ndouble nextDouble() {\n  double a;\n  cin >> a;\n  return a;\n}\nstring nextString() {\n  string a;\n  cin >> a;\n  return a;\n}\n\ntemplate <class T> void inputVector(vector<T> &v, long long n) {\n  v.resize(n);\n  for (long long i = 0; i < v.size(); i++)\n    cin >> v[i];\n}\n\nclass Info {\npublic:\n  long long node;\n  long long leftDist;\n  long long speed;\n  double time;\n\n  Info() {}\n  Info(long long node, long long leftDist, long long speed, double time) {\n    this->node = node;\n    this->leftDist = leftDist;\n    this->speed = speed;\n    this->time = time;\n  }\n\n  bool operator<(const Info &a) const { return time > a.time; }\n};\n\nsigned main() {\n  long long T;\n  cin >> T;\n\n  for (long long loop = (1); loop <= (T); loop++) {\n    long long N, Q;\n    cin >> N >> Q;\n\n    vector<long long> E(N), S(N);\n    for (long long i = 0; i < (N); i++)\n      cin >> E[i] >> S[i];\n\n    long long D[110][110];\n    for (long long i = 0; i < (N); i++)\n      for (long long j = 0; j < (N); j++)\n        cin >> D[i][j];\n\n    for (long long i = 0; i < (Q); i++) {\n      long long gomi;\n      cin >> gomi;\n      cin >> gomi;\n    }\n\n    vector<double> time(N, LLONG_MAX);\n    time[0] = 0;\n\n    priority_queue<Info> q;\n    q.push(Info(0, 0, 1, 0));\n    while (!q.empty()) {\n      auto nowinfo = q.top();\n      q.pop();\n\n      if (nowinfo.node == N - 1) {\n        printf(\"Case #%d: %.8f\\n\", loop, nowinfo.time);\n        break;\n      }\n\n      for (long long i = (nowinfo.node + 1); i <= (N - 1); i++) {\n        long long dist = D[nowinfo.node][i];\n        if (dist == -1)\n          continue;\n        if (dist <= nowinfo.leftDist) {\n          q.push(Info(i, nowinfo.leftDist - dist, nowinfo.speed,\n                      nowinfo.time + (double)dist \/ nowinfo.speed));\n        }\n        if (dist <= E[nowinfo.node]) {\n          q.push(Info(i, E[nowinfo.node] - dist, S[nowinfo.node],\n                      nowinfo.time + (double)dist \/ S[nowinfo.node]));\n        }\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nvi v;\nint m;\nll getVal(int id) {\n  ll val = 0;\n  int bf = 0;\n  for (int i = 0; i < id; i++) {\n    val *= 10;\n    if (bf > v[i])\n      return -1;\n    bf = v[i];\n    val += v[i];\n  }\n\n  if (bf >= v[id])\n    return -1;\n  val *= 10;\n  val += v[id] - 1;\n\n  for (int i = id + 1; i < m; i++) {\n    val *= 10;\n    val += 9;\n  }\n\n  return val;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int T;\n  cin >> T;\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    string s;\n    cin >> s;\n    v.clear();\n    for (int i = 0; i < s.size(); i++) {\n      v.push_back(s[i] - '0');\n    }\n\n    m = v.size();\n    if (m == 1) {\n      cout << v[0] << endl;\n      continue;\n    }\n    ll res = 0;\n    for (int i = 0; i < m - 1; i++) {\n      res *= 10;\n      res += 9;\n    }\n    ll tmp = v[0];\n    bool flg = false;\n    for (int i = 1; i < v.size(); i++) {\n      if (v[i - 1] > v[i])\n        flg = true;\n      tmp *= 10;\n      tmp += v[i];\n    }\n    if (!flg)\n      res = max(res, tmp);\n    for (int i = 0; i < v.size(); i++) {\n      ll val = getVal(i);\n      res = max(res, val);\n    }\n    cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nset<ll> mark;\nmap<ll, map<ll, ll>> dp;\nvoid dfs(ll n) {\n  if (n == 0 || mark.count(n))\n    return;\n  mark.insert(n);\n  if (n % 2) {\n    dfs(n \/ 2);\n    map<ll, ll> tmp;\n    for (auto i : dp[n \/ 2]) {\n      tmp[i.first] += 2 * i.second;\n    }\n    tmp[n] += 1;\n    dp[n] = tmp;\n  } else {\n    dfs(n \/ 2);\n    dfs(n \/ 2 - 1);\n    map<ll, ll> tmp;\n    for (auto i : dp[n \/ 2]) {\n      tmp[i.first] += i.second;\n    }\n    for (auto i : dp[n \/ 2 - 1]) {\n      tmp[i.first] += i.second;\n    }\n    tmp[n] += 1;\n    dp[n] = tmp;\n  }\n}\n\nvector<pair<ll, ll>> data;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int T;\n  cin >> T;\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    mark.clear();\n    dp.clear();\n    data.clear();\n    ll n, k;\n    cin >> n >> k;\n    dfs(n);\n    for (auto i : dp[n]) {\n      data.push_back(make_pair(i.first, i.second));\n    }\n    sort((data).rbegin(), (data).rend());\n\n    ll aux = -1;\n    for (auto i : data) {\n      if (k <= i.second) {\n        aux = i.first;\n        break;\n      } else {\n        k -= i.second;\n      }\n    }\n    assert(aux != -1);\n    if (aux % 2) {\n      cout << aux \/ 2 << \" \" << aux \/ 2 << endl;\n    } else {\n      cout << aux \/ 2 << \" \" << aux \/ 2 - 1 << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nvi v;\n\nvoid clean(int ini, int j) {\n  for (int i = ini; i < j; i++)\n    v[i] = 1 - v[i];\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n\n  int T;\n  cin >> T;\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    v.clear();\n    for (int i = 0; i < s.size(); i++)\n      v.push_back(s[i] == '+');\n    int res = 0;\n    bool flg = false;\n\n    int i = 0;\n    int j = v.size() - 1;\n    while (i <= j && !flg) {\n      \/\/\t\t\tcerr<<i << \" \"<<j<<endl;\n      \/\/\t\t\tcerr<<i+k<<\" \"<<j+1<<endl;\n      \/\/\t\t\tcerr<<j-k+1<<\" \"<<i<<endl;\n      \/\/\t\t\tcerr<<\"-----\"<<endl;\n      if (!v[i]) {\n        if (i + k > j + 1)\n          flg = true;\n        else {\n          clean(i, i + k);\n          i++;\n          res++;\n        }\n      } else if (!v[j]) {\n        int ini = j - k + 1;\n        if (ini < i)\n          flg = true;\n        else {\n          clean(ini, ini + k);\n          res++;\n          j--;\n        }\n      } else {\n        i++;\n        j--;\n      }\n    }\n    for (int i = 0; i < v.size(); i++)\n      if (!v[i])\n        flg = true;\n    if (flg)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\n\/\/ Fast O(|V|^3) flow, works for n ~ 5000 with no problem\n\/\/ Actual flow values in edges with cap > 0 (0 cap = residual)\n\ntypedef long long LL;\n\nstruct Edge {\n  int from, to, cap, flow, index;\n  Edge(int from, int to, int cap, int flow, int index)\n      : from(from), to(to), cap(cap), flow(flow), index(index) {}\n};\n\nstruct PushRelabel {\n  int N;\n  vector<vector<Edge>> G;\n  vector<LL> excess;\n  vector<int> dist, active, count;\n  queue<int> Q;\n\n  PushRelabel(int N)\n      : N(N), G(N), excess(N), dist(N), active(N), count(2 * N) {}\n\n  void AddEdge(int from, int to, int cap) {\n    G[from].push_back(Edge(from, to, cap, 0, G[to].size()));\n    if (from == to)\n      G[from].back().index++;\n    G[to].push_back(Edge(to, from, 0, 0, G[from].size() - 1));\n  }\n\n  void Enqueue(int v) {\n    if (!active[v] && excess[v] > 0) {\n      active[v] = true;\n      Q.push(v);\n    }\n  }\n\n  void Push(Edge &e) {\n    int amt = int(min(excess[e.from], LL(e.cap - e.flow)));\n    if (dist[e.from] <= dist[e.to] || amt == 0)\n      return;\n    e.flow += amt;\n    G[e.to][e.index].flow -= amt;\n    excess[e.to] += amt;\n    excess[e.from] -= amt;\n    Enqueue(e.to);\n  }\n\n  void Gap(int k) {\n    for (int v = 0; v < N; v++) {\n      if (dist[v] < k)\n        continue;\n      count[dist[v]]--;\n      dist[v] = max(dist[v], N + 1);\n      count[dist[v]]++;\n      Enqueue(v);\n    }\n  }\n\n  void Relabel(int v) {\n    count[dist[v]]--;\n    dist[v] = 2 * N;\n    for (int i = 0; i < G[v].size(); i++)\n      if (G[v][i].cap - G[v][i].flow > 0)\n        dist[v] = min(dist[v], dist[G[v][i].to] + 1);\n    count[dist[v]]++;\n    Enqueue(v);\n  }\n\n  void Discharge(int v) {\n    for (int i = 0; excess[v] > 0 && i < G[v].size(); i++)\n      Push(G[v][i]);\n    if (excess[v] > 0) {\n      if (count[dist[v]] == 1)\n        Gap(dist[v]);\n      else\n        Relabel(v);\n    }\n  }\n\n  LL GetMaxFlow(int s, int t) {\n    count[0] = N - 1;\n    count[N] = 1;\n    dist[s] = N;\n    active[s] = active[t] = true;\n    for (int i = 0; i < G[s].size(); i++) {\n      excess[s] += G[s][i].cap;\n      Push(G[s][i]);\n    }\n\n    while (!Q.empty()) {\n      int v = Q.front();\n      Q.pop();\n      active[v] = false;\n      Discharge(v);\n    }\n\n    LL totflow = 0;\n    for (int i = 0; i < G[s].size(); i++)\n      totflow += G[s][i].flow;\n    return totflow;\n  }\n};\n\nll q[55][55];\nll r[55];\nint n, p;\ntypedef pair<ll, ll> pll;\n\nbool cross(pll a, pll b) {\n  if (a.second < b.first)\n    return false;\n  if (a.first > b.second)\n    return false;\n  return true;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int ntest;\n  cin >> ntest;\n  for (int test = 1; test < ntest + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    cin >> n >> p;\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n      }\n    }\n\n    vector<vector<pair<ll, ll>>> data(n);\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        ll num = 10 * q[i][j];\n        ll denom = 11 * r[i];\n        ll lo = num % denom == 0 ? num \/ denom : num \/ denom + 1;\n        denom = 9 * r[i];\n        ll hi = num \/ denom;\n        if (lo <= hi) {\n          data[i].push_back(make_pair(lo, hi));\n        }\n      }\n    }\n    if (n == 1) {\n      cout << data[0].size() << endl;\n      continue;\n    }\n    PushRelabel pr = PushRelabel(2 * p + 3);\n    int source = 2 * p + 1;\n    int sink = source + 1;\n    for (int i = 0; i < data[0].size(); i++) {\n      for (int j = 0; j < data[1].size(); j++) {\n        if (cross(data[0][i], data[1][j])) {\n          pr.AddEdge(i, j + p, 1);\n        }\n      }\n      pr.AddEdge(source, i, 1);\n    }\n    for (int i = 0; i < data[1].size(); i++)\n      pr.AddEdge(i + p, sink, 1);\n\n    cout << pr.GetMaxFlow(source, sink) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nchar grid[55][55];\n\nint R, C;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int tt;\n  cin >> tt;\n  for (int ttt = 1; ttt < tt + 1; ttt++) {\n    cout << \"Case #\" << ttt << \":\" << endl;\n    cin >> R >> C;\n    int row = -1;\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        cin >> grid[i][j];\n        if (grid[i][j] != '?')\n          row = i;\n      }\n    }\n    assert(row != -1);\n    for (int i = 0; i < R; i++) {\n\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] != '?') {\n          for (int k = j + 1; k < C; k++) {\n            if (grid[i][k] != '?')\n              break;\n            grid[i][k] = grid[i][j];\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] != '?') {\n          for (int k = j - 1; k >= 0; k--) {\n            if (grid[i][k] != '?')\n              break;\n            grid[i][k] = grid[i][j];\n          }\n        }\n      }\n    }\n    for (int i = row + 1; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] == '?') {\n          grid[i][j] = grid[i - 1][j];\n        }\n      }\n    }\n    for (int i = row - 1; i >= 0; i--) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] == '?') {\n          grid[i][j] = grid[i + 1][j];\n        }\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        assert(grid[i][j] != '?');\n        cout << grid[i][j];\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nconst int MAXN = 1200;\nint n;\nll D;\nll phorse[MAXN];\ndouble vhorse[MAXN];\n\nbool check(double v) {\n\n  for (int i = 0; i < n; i++) {\n    if (vhorse[i] >= v)\n      continue;\n\n    double x = v * phorse[i] \/ (v - vhorse[i]);\n    if (x < D)\n      return false;\n  }\n  return true;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int T;\n\n  cin >> T;\n\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    cin >> D >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> phorse[i] >> vhorse[i];\n    }\n    double lo = 0.0;\n    double hi = 1e16;\n    for (int ii = 0; ii < 120; ii++) {\n      double mid = (lo + hi) \/ 2.0;\n      if (check(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    double res = (lo + hi) \/ 2.0;\n    cout << setprecision(12) << fixed << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nconst int MAXN = 1200;\nconst string OUT = \"IMPOSSIBLE\";\nint N, R, O, Y, G, B, V;\npair<int, char> arr[10];\nbool check(string res) {\n\n  for (int i = 0; i < res.size() - 1; i++) {\n    if (res[i] == res[i + 1])\n      return false;\n  }\n  return true;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int T;\n\n  cin >> T;\n\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    if (V > 0 && V >= Y) {\n      cout << OUT << endl;\n      continue;\n    }\n    if (G > 0 && G >= R) {\n      cout << OUT << endl;\n      continue;\n    }\n    if (O > 0 && O >= B) {\n      cout << OUT << endl;\n      continue;\n    }\n    \/*\n        arr[0] = mp(Y - V, V);\n        arr[1] = mp(R - G, G);\n        arr[2] = mp(B - O, O);*\/;\n    arr[0] = make_pair(Y, 'Y');\n    arr[1] = make_pair(R, 'R');\n    arr[2] = make_pair(B, 'B');\n    string res = \"\";\n    int ls = -1;\n    bool flg = true;\n    int ini = -1;\n    for (int i = 0; i < N; i++) {\n      int mx = 0;\n      int id = -1;\n      for (int j = 0; j < 3; j++) {\n        if (j == ls)\n          continue;\n        if (arr[j].first > mx) {\n          mx = arr[j].first;\n          id = j;\n        } else if (arr[j].first == mx && mx > 0 && j == ini) {\n          id = j;\n        }\n      }\n      if (i == 0)\n        ini = id;\n      \/\/ cerr<<arr[0].fst<<\" \"<<arr[1].fst<<\" \"<<arr[2].fst<<endl;\n      if (id == -1) {\n        flg = false;\n        break;\n      }\n      ls = id;\n      arr[id].first--;\n      res += arr[id].second;\n    }\n    if (!flg || res[0] == res[N - 1]) {\n      cout << OUT << endl;\n      continue;\n    }\n    cout << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Jael860","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\n\nconst int MAXN = 150;\nint n, q;\ndouble dp[MAXN][MAXN];\nll e[MAXN], s[MAXN], dist[MAXN][MAXN], adist[MAXN][MAXN];\nconst double INF = 1e18;\ndouble go(int pos, int curh) {\n  if (pos == n - 1) {\n    return 0.0;\n  }\n  if (dp[pos][curh] > -1.0)\n    return dp[pos][curh];\n  double len = 0.0;\n  double used = 0.0;\n  for (int i = curh; i < pos - 1; i++) {\n    used += dist[i][i + 1];\n  }\n  double res = INF;\n  for (int i = pos + 1; i < n; i++) {\n    len += dist[i - 1][i];\n    double val = INF;\n    if (len <= e[pos]) {\n      \/\/ cerr<<\"from \"<<pos<<\" \"<<i<<endl;\n      val = len \/ s[pos] + go(i, pos);\n      res = min(res, val);\n    }\n    if (used + len <= e[curh]) {\n      \/\/ cerr<<pos<<\" \"<<i<<endl;\n      val = len \/ s[curh] + go(i, curh);\n\n      res = min(res, val);\n    }\n  }\n  \/\/ cerr<<\"ans \"<<pos<<\" \"<<curh<<\" \"<<res<<endl;\n  return dp[pos][curh] = res;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int T;\n\n  cin >> T;\n\n  for (int test = 1; test < T + 1; test++) {\n    cout << \"Case #\" << test << \": \";\n    cin >> n >> q;\n    for (int i = 0; i < n; i++) {\n      cin >> e[i] >> s[i];\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> dist[i][j];\n      }\n    }\n    for (int i = 0; i < MAXN; i++)\n      for (int j = 0; j < MAXN; j++) {\n        dp[i][j] = -2.0;\n      }\n    int aa, aaa, aaaa;\n    cin >> aa >> aaa;\n    double res = go(0, 0);\n    cout << setprecision(12) << fixed << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"jasonwang924","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    string s;\n    cin >> s;\n    int j = 1;\n    while (s[0] == '0') {\n      s.erase(s.begin());\n    }\n    while (j < s.size()) {\n      if (s[j] < s[j - 1]) {\n        for (int k = j; k < s.size(); ++k) {\n          s[k] = '9';\n        }\n        --s[j - 1];\n        --j;\n        while (j > 0 && s[j] < s[j - 1]) {\n          s[j] = '9';\n          --s[j - 1];\n          --j;\n        }\n        break;\n      }\n      ++j;\n    }\n    while (s[0] == '0') {\n      s.erase(s.begin());\n    }\n    cout << \"Case #\" << i + 1 << \": \" << s << \"\\n\";\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <cmath>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    unsigned long long int n, k;\n    unsigned long long int k0 = 1;\n    cin >> n >> k;\n    while (k0 <= k \/ 2)\n      k0 *= 2;\n    unsigned long long int q, r, s;\n    q = (n - k0 + 1) \/ k0;\n    r = (n - k0 + 1) % k0;\n    if (k - k0 < r)\n      s = q + 1;\n    else\n      s = q;\n    cout << \"Case #\" << i + 1 << \": \" << s \/ 2 << ' ' << (s - 1) \/ 2 << '\\n';\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    string s;\n    int k;\n    int count = 0;\n    cin >> s >> k;\n    for (int j = 0; j < s.size() - k + 1; ++j) {\n      if (s[j] == '-') {\n        ++count;\n        s[j] = '+';\n        for (int l = j + 1; l < j + k; ++l) {\n          if (s[l] == '-')\n            s[l] = '+';\n          else\n            s[l] = '-';\n        }\n      }\n    }\n    bool valid = true;\n    for (int j = s.size() - k + 1; j < s.size(); ++j) {\n      if (s[j] == '-') {\n        valid = false;\n        break;\n      }\n    }\n    if (valid)\n      cout << \"Case #\" << i + 1 << \": \" << count << \"\\n\";\n    else\n      cout << \"Case #\" << i + 1 << \": IMPOSSIBLE\\n\";\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    int n, p;\n    cin >> n >> p;\n    vector<int> target;\n    for (int j = 0; j < n; ++j) {\n      int temp;\n      cin >> temp;\n      target.push_back(temp);\n    }\n    vector<vector<int>> table;\n    table.resize(n);\n    for (int j = 0; j < n; ++j) {\n      for (int k = 0; k < p; ++k) {\n        int temp;\n        cin >> temp;\n        table[j].push_back(temp);\n      }\n      sort(table[j].begin(), table[j].end());\n    }\n    vector<vector<int>> upper;\n    vector<vector<int>> lower;\n    upper.resize(n);\n    lower.resize(n);\n\n    for (int j = 0; j < n; ++j) {\n      for (int k = 0; k < p; ++k) {\n        upper[j].push_back(\n            floor((double)table[j][k] \/ (0.9 * (double)target[j])));\n        lower[j].push_back(\n            ceil((double)table[j][k] \/ (1.1 * (double)target[j])));\n        \/\/ cout<<upper[j][k]<< ' ' <<lower[j][k]<<'\\n';\n      }\n    }\n    vector<int> current;\n    for (int j = 0; j < n; ++j) {\n      current.push_back(0);\n    }\n    int count = 0;\n    for (int k = 0; k < p; ++k) {\n      if (upper[0][k] < lower[0][k])\n        continue;\n      bool flag = true;\n      bool flag2;\n      for (int j = 1; j < n; ++j) {\n        flag2 = false;\n        for (int l = current[j]; l < p; ++l) {\n          if (upper[j][l] >= lower[0][k] && upper[j][l] >= lower[j][l]) {\n            current[j] = l;\n            flag2 = true;\n            if (lower[j][l] <= upper[0][k]) {\n              ;\n              break;\n            } else {\n              flag = false;\n              break;\n            }\n          }\n        }\n        if (!flag2 || !flag)\n          break;\n      }\n      if (!flag2)\n        break;\n      if (flag) {\n        ++count;\n        for (int j = 1; j < n; ++j) {\n          ++current[j];\n        }\n      }\n    }\n    cout << \"case #\" << i + 1 << \": \" << count << '\\n';\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    int R, C;\n    cin >> R >> C;\n    vector<vector<char>> cake;\n    cake.resize(R);\n    for (int j = 0; j < R; ++j) {\n      string s;\n      cin >> s;\n      for (int k = 0; k < C; ++k) {\n        cake[j].push_back(s[k]);\n      }\n    }\n    for (int j = 0; j < R; ++j) {\n      for (int k = 0; k < C; ++k) {\n        if (cake[j][k] != '?') {\n          for (int l = k - 1; l >= 0; --l) {\n            if (cake[j][l] != '?')\n              break;\n            cake[j][l] = cake[j][k];\n          }\n        }\n      }\n    }\n    vector<bool> isempty;\n    isempty.resize(R);\n    for (int j = 0; j < R; ++j) {\n      if (cake[j][C - 1] == '?') {\n        int k;\n        bool flag = false;\n        for (k = C - 1; k >= 0; --k) {\n          if (cake[j][k] != '?') {\n            flag = true;\n            break;\n          }\n        }\n        char temp = cake[j][k];\n        if (flag) {\n          for (; k < C; ++k) {\n            cake[j][k] = temp;\n          }\n          isempty[j] = false;\n        } else {\n          isempty[j] = true;\n        }\n      }\n    }\n    for (int j = 0; j < R; ++j) {\n      if (!isempty[j]) {\n        for (int k = j - 1; k >= 0; --k) {\n          if (!isempty[k])\n            break;\n          cake[k] = cake[j];\n        }\n      }\n    }\n    if (isempty[R - 1]) {\n      for (int j = R - 1; j >= 0; --j) {\n        if (!isempty[j]) {\n          for (int k = j; k < R; ++k) {\n            cake[k] = cake[j];\n          }\n          break;\n        }\n      }\n    }\n    cout << \"case #\" << i + 1 << \":\\n\";\n    for (int j = 0; j < R; ++j) {\n      for (int k = 0; k < C; ++k) {\n        cout << cake[j][k];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <iomanip>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int z = 0; z < T; ++z) {\n    double d;\n    int n;\n    cin >> d >> n;\n    vector<double> k;\n    vector<double> s;\n    for (int i = 0; i < n; ++i) {\n      double temp;\n      cin >> temp;\n      k.push_back(temp);\n      cin >> temp;\n      s.push_back(temp);\n    }\n    double t = 0;\n    for (int i = 0; i < n; ++i) {\n      double ti = (d - k[i]) \/ s[i];\n      if (ti > t)\n        t = ti;\n    }\n    cout << \"Case #\" << z + 1 << \": \" << setprecision(9) << d \/ t << \"\\n\";\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int z = 0; z < T; ++z) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (n == 2) {\n      if (r > 1 || o > 1 || y > 1 || g > 1 || b > 1 || v > 1) {\n        cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n             << \"\\n\";\n        continue;\n      }\n      if (o == 1 && b == 0) {\n        cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n             << \"\\n\";\n        continue;\n      }\n      if (g == 1 && r == 0) {\n        cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n             << \"\\n\";\n        continue;\n      }\n      if (v == 1 && y == 0) {\n        cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n             << \"\\n\";\n        continue;\n      }\n      cout << \"Case #\" << z + 1 << \": \";\n      if (r == 1)\n        cout << 'R';\n      if (o == 1)\n        cout << 'O';\n      if (y == 1)\n        cout << 'Y';\n      if (g == 1)\n        cout << 'G';\n      if (b == 1)\n        cout << 'B';\n      if (v == 1)\n        cout << 'V';\n      cout << '\\n';\n      continue;\n    }\n    if (n == 3) {\n      if (r != 1 || y != 1 || b != 1) {\n        cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n             << \"\\n\";\n        continue;\n      } else {\n        cout << \"Case #\" << z + 1 << \": RYB\"\n             << \"\\n\";\n        continue;\n      }\n    }\n    if (o > b * 2 || g > r * 2 || v > y * 2) {\n      cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n           << \"\\n\";\n      continue;\n    }\n    int r2 = r - g * 2;\n    int y2 = y - v * 2;\n    int b2 = b - o * 2;\n    vector<pair<int, char>> table;\n    table.push_back(pair<int, char>(r2, 'R'));\n    table.push_back(pair<int, char>(y2, 'Y'));\n    table.push_back(pair<int, char>(b2, 'B'));\n\n    sort(table.begin(), table.end());\n\n    int total = r2 + y2 + b2;\n    if (table[2].first * 2 > total) {\n      cout << \"Case #\" << z + 1 << \": IMPOSSIBLE\"\n           << \"\\n\";\n      continue;\n    }\n    int remain = table[0].first + table[1].first - table[2].first;\n    string res, res2;\n    for (int i = 0; i < table[2].first; ++i) {\n      if (i < remain) {\n        res.push_back(table[2].second);\n        res.push_back(table[1].second);\n        res.push_back(table[0].second);\n      } else if (i < table[1].first) {\n        res.push_back(table[2].second);\n        res.push_back(table[1].second);\n      } else {\n        res.push_back(table[2].second);\n        res.push_back(table[0].second);\n      }\n    }\n    for (int i = 0; i < res.size(); ++i) {\n      if (res[i] == 'R') {\n        if (g > 0) {\n          res2.append(\"RGR\");\n          --g;\n        } else\n          res2.append(\"R\");\n      }\n      if (res[i] == 'Y') {\n        if (g > 0) {\n          res2.append(\"YVY\");\n          --g;\n        } else\n          res2.append(\"Y\");\n      }\n      if (res[i] == 'B') {\n        if (g > 0) {\n          res2.append(\"BOB\");\n          --g;\n        } else\n          res2.append(\"B\");\n      }\n    }\n\n    cout << \"Case #\" << z + 1 << \": \" << res2 << \"\\n\";\n  }\n}\n"}
{"target":"jasonwang924","func":"#include <iomanip>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int z = 0; z < T; ++z) {\n    int n, q;\n    cin >> n >> q;\n    vector<double> e;\n    vector<double> s;\n    vector<double> d;\n    for (int i = 0; i < n; ++i) {\n      double temp;\n      cin >> temp;\n      e.push_back(temp);\n      cin >> temp;\n      s.push_back(temp);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        double temp;\n        cin >> temp;\n        if (j == i + 1) {\n          d.push_back(temp);\n        }\n      }\n    }\n    double temp;\n    cin >> temp >> temp;\n\n    vector<vector<double>> t;\n    vector<vector<double>> dur;\n    t.resize(n - 1);\n    dur.resize(n - 1);\n    for (int i = 0; i < n - 1; ++i) {\n      t[i].resize(n - 1);\n      dur[i].resize(n - 1);\n    }\n\n    t[0][0] = d[0] \/ s[0];\n    dur[0][0] = e[0] - d[0];\n    for (int i = 1; i < n - 1; ++i) {\n      t[0][i] = 1e20;\n      dur[0][i] = -1;\n    }\n    for (int i = 1; i < n - 1; ++i) {\n      for (int j = 0; j < n - 1; ++j) {\n        if (j < i) {\n          if (dur[i - 1][j] < d[i]) {\n            t[i][j] = 1e20;\n            dur[i][j] = -1;\n          } else {\n            t[i][j] = t[i - 1][j] + d[i] \/ s[j];\n            dur[i][j] = dur[i - 1][j] - d[i];\n          }\n        } else if (j == i) {\n          double min = 1e20;\n          for (int x = 0; x < n - 1; ++x) {\n            if (t[i - 1][x] < min)\n              min = t[i - 1][x];\n          }\n          t[i][j] = min + d[i] \/ s[i];\n          dur[i][j] = e[i] - d[i];\n        } else {\n          t[i][j] = 1e20;\n          dur[i][j] = -1;\n        }\n      }\n    }\n    double mint = 1e20;\n    for (int i = 0; i < n - 1; ++i) {\n      if (t[n - 2][i] < mint)\n        mint = t[n - 2][i];\n    }\n    cout << \"Case #\" << z + 1 << \": \" << setprecision(9) << mint << \"\\n\";\n  }\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <cstring>\n\nint N;\n\nbool verdict(int n) {\n  char m[11];\n  sprintf(m, \"%d\", n);\n  int l = strlen(m);\n  for (int i = l - 1; i > 0; i--)\n    if (m[i - 1] > m[i])\n      return false;\n  return true;\n}\n\nint solve() {\n  for (int n = N; n >= 1; n--)\n    if (verdict(n))\n      return n;\n  return 1;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d\", &N);\n    int ans = solve();\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint N, K;\n\nint selected[1005], nmin[1005], nmax[1005];\n\nvoid init() { memset(selected, 0, sizeof(selected)); }\n\npair<int, int> solve() {\n  int cand, candmin, candmax;\n  for (int i = 0; i < K; i++) {\n    for (int j = 1; j <= N; j++) {\n      if (selected[j] == 0) {\n        int nl = 0;\n        for (int k = j - 1; k >= 1; k--) {\n          if (selected[k])\n            break;\n          nl++;\n        }\n        int nr = 0;\n        for (int k = j + 1; k <= N; k++) {\n          if (selected[k])\n            break;\n          nr++;\n        }\n        nmin[j] = min(nl, nr), nmax[j] = max(nl, nr);\n      }\n    }\n    candmin = -1, candmax = -1;\n    for (int j = 1; j <= N; j++) {\n      if (selected[j])\n        continue;\n      if (nmin[j] > candmin)\n        cand = j, candmin = nmin[j], candmax = nmax[j];\n      else if (nmin[j] == candmin && nmax[j] > candmax)\n        cand = j, candmin = nmin[j], candmax = nmax[j];\n    }\n    selected[cand] = 1;\n  }\n  return {nmax[cand], nmin[cand]};\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    init();\n    scanf(\"%d%d\", &N, &K);\n    auto ans = solve();\n    printf(\"Case #%d: %d %d\\n\", t, ans.first, ans.second);\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <cstring>\n\nchar S[1005];\nint K;\n\nint solve() {\n  int n = strlen(S);\n  int ret = 0;\n  for (int i = 0; i < n; i++) {\n    if (S[i] != '+' && i + K <= n) {\n      ret++;\n      for (int j = i; j < i + K; j++) {\n        S[j] = ((S[j] == '+') ? '-' : '+');\n      }\n    }\n  }\n  for (int i = 0; i < n; i++)\n    if (S[i] == '-')\n      return -1;\n  return ret;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%s%d\", S, &K);\n    int ans = solve();\n    printf(\"Case #%d: \", t);\n    if (ans == -1) {\n      printf(\"IMPOSSIBLE\\n\");\n    } else {\n      printf(\"%d\\n\", ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint N, P;\nll R[11], Q[11][11];\n\npair<ll, ll> find(ll gram, int idx) {\n  ll a = (100 * gram) \/ (R[idx] * 110);\n  ll q = (100 * gram) % (R[idx] * 110);\n  ll b = (100 * gram) \/ (R[idx] * 90);\n  if (q)\n    a++;\n  return {a, b};\n}\n\nint dp[11][333];\nint rec(int n, int m) {\n  int &ret = dp[n][m];\n  if (ret != -1)\n    return ret;\n  if (n == P)\n    return ret = 0;\n  ret = 0;\n  ret = max(ret, rec(n + 1, m));\n  for (int i = 0; i < P; i++) {\n    if (m & (1 << i))\n      continue;\n    pair<ll, ll> cand1 = find(Q[0][n], 0);\n    pair<ll, ll> cand2 = find(Q[1][i], 1);\n    if (cand1.second >= cand1.first && cand2.second >= cand2.first) {\n      bool found = false;\n      if (cand1.first <= cand2.first && cand2.first <= cand1.second)\n        found = true;\n      if (cand1.first <= cand2.second && cand2.second <= cand1.second)\n        found = true;\n      if (found)\n        ret = max(ret, 1 + rec(n + 1, m | (1 << i)));\n    }\n  }\n  return ret;\n}\n\nint solve() {\n  if (N == 1) {\n    int ret = 0;\n    for (int i = 0; i < P; i++) {\n      pair<ll, ll> cand = find(Q[0][i], 0);\n      if (cand.second - cand.first + 1 >= 1)\n        ret++;\n    }\n    return ret;\n  } else {\n    memset(dp, -1, sizeof(dp));\n    return rec(0, 0);\n  }\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d\", &N, &P);\n    for (int i = 0; i < N; i++)\n      scanf(\"%lld\", R + i);\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++)\n        scanf(\"%lld\", &Q[i][j]);\n    }\n    int ans = solve();\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cassert>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint R, C;\nchar G[33][33];\n\nchar ans[33][33];\nint n[33];\n\nvoid solve() {\n  memset(n, 0, sizeof(n));\n  for (int r = 0; r < R; r++) {\n    for (int c = 0; c < C; c++) {\n      if (G[r][c] != '?')\n        n[G[r][c] - 'A']++;\n    }\n  }\n  for (int i = 0; i < 26; i++) {\n    if (n[i] >= 2) {\n      char ch = i + 'A';\n      int minr = 33, minc = 33, maxr = 0, maxc = 0;\n      for (int r = 0; r < R; r++) {\n        for (int c = 0; c < C; c++) {\n          if (G[r][c] == ch) {\n            minr = min(minr, r), minc = min(minc, c);\n            maxr = max(maxr, r), maxc = max(maxc, c);\n          }\n        }\n      }\n      for (int r = minr; r <= maxr; r++) {\n        for (int c = minc; c <= maxc; c++) {\n          if (G[r][c] == '?')\n            G[r][c] = ch;\n          assert(G[r][c] == ch);\n        }\n      }\n    }\n  }\n  for (int i = 0; i < 26; i++) {\n    if (n[i] == 1) {\n      char ch = i + 'A';\n      int rr, cc;\n      for (int r = 0; r < R; r++)\n        for (int c = 0; c < C; c++)\n          if (G[r][c] == ch)\n            rr = r, cc = c;\n      int c = cc;\n      for (int c = cc - 1; c >= 0; c--) {\n        if (G[rr][c] != '?')\n          break;\n        G[rr][c] = ch;\n      }\n      for (int c = cc + 1; c < C; c++) {\n        if (G[rr][c] != '?')\n          break;\n        G[rr][c] = ch;\n      }\n    }\n  }\n  while (1) {\n    for (int r = 0; r < R; r++) {\n      bool filled = true;\n      for (int c = 0; c < C; c++)\n        if (G[r][c] == '?')\n          filled = false;\n      if (filled) {\n        if (r - 1 >= 0) {\n          bool all = true;\n          for (int c = 0; c < C; c++)\n            if (G[r - 1][c] != '?')\n              all = false;\n          if (all)\n            for (int c = 0; c < C; c++)\n              G[r - 1][c] = G[r][c];\n        }\n        if (r + 1 < R) {\n          bool all = true;\n          for (int c = 0; c < C; c++)\n            if (G[r + 1][c] != '?')\n              all = false;\n          if (all)\n            for (int c = 0; c < C; c++)\n              G[r + 1][c] = G[r][c];\n        }\n      }\n    }\n    bool finished = true;\n    for (int r = 0; r < R; r++)\n      for (int c = 0; c < C; c++)\n        if (G[r][c] == '?')\n          finished = false;\n    if (finished)\n      break;\n  }\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d\", &R, &C);\n    for (int r = 0; r < R; r++)\n      scanf(\"%s\", G[r]);\n    printf(\"Case #%d:\\n\", t);\n    solve();\n    for (int r = 0; r < R; r++) {\n      for (int c = 0; c < C; c++) {\n        printf(\"%c\", G[r][c]);\n      }\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll D, N, K[1005], S[1005];\n\ndouble solve() {\n  ll maxk = D - K[0], maxs = S[0];\n  for (int i = 0; i < N; i++) {\n    ll curk = D - K[i], curs = S[i];\n    if (maxk * curs < curk * maxs) {\n      maxk = curk;\n      maxs = curs;\n    }\n  }\n  return ((double)(D * maxs)) \/ maxk;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%lld%lld\", &D, &N);\n    for (int i = 0; i < N; i++)\n      scanf(\"%lld%lld\", K + i, S + i);\n    double ans = solve();\n    printf(\"Case #%d: %.9lf\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint N, R, O, Y, G, B, V;\nchar color[1005];\n\nstring solve() {\n  int numcolor = 0;\n  if (R)\n    numcolor++;\n  if (Y)\n    numcolor++;\n  if (B)\n    numcolor++;\n  if (numcolor == 1)\n    return \"IMPOSSIBLE\";\n  int maxn;\n  if (numcolor == 2)\n    maxn = N \/ numcolor;\n  else\n    maxn = (N + numcolor - 1) \/ numcolor;\n  string ret;\n  if (R > maxn || Y > maxn || B > maxn)\n    return ret = \"IMPOSSIBLE\";\n  else {\n    int pos = 0;\n    if (R) {\n      for (int i = 0; i < R; i++) {\n        color[pos % N] = 'R';\n        pos += 3;\n      }\n    }\n    if (Y) {\n      pos++;\n      for (int i = 0; i < Y; i++) {\n        color[pos % N] = 'Y';\n        pos += 3;\n      }\n    }\n    if (B) {\n      pos++;\n      for (int i = 0; i < B; i++) {\n        color[pos % N] = 'B';\n        pos += 3;\n      }\n    }\n    ret = string(color);\n  }\n  return ret;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n    string ans = solve();\n    printf(\"Case #%d: %s\\n\", t, ans.c_str());\n  }\n  return 0;\n}\n"}
{"target":"JAYS","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF = 1LL << 50;\n\nint N, Q;\nll E[105], S[105], D[105][105];\nint U[105], V[105];\n\ndouble dp[105][105];\ndouble rec(int city, int horse) {\n  double &ret = dp[city][horse];\n  if (ret != -1.0)\n    return ret;\n  if (city == N) {\n    ll distance = 0;\n    for (int i = horse; i < city; i++) {\n      distance += D[i][i + 1];\n    }\n    if (distance > E[horse])\n      return ret = INF;\n    else\n      ret = 0.0;\n  }\n  ret = INF;\n  double t1 = ((double)D[city][city + 1]) \/ S[horse];\n  double t2 = ((double)D[city][city + 1]) \/ S[city];\n  ret = min(ret, t1 + rec(city + 1, horse));\n  ret = min(ret, t2 + rec(city + 1, city));\n  return ret;\n}\n\ndouble solve() {\n  for (int i = 0; i < 105; i++)\n    for (int j = 0; j < 105; j++)\n      dp[i][j] = -1.0;\n  return rec(1, 1);\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 1; i <= N; i++)\n      scanf(\"%lld%lld\", E + i, S + i);\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++)\n        scanf(\"%lld\", &D[i][j]);\n    }\n    for (int i = 1; i <= Q; i++)\n      scanf(\"%d%d\", U + i, V + i);\n    double ans = solve();\n    printf(\"Case #%d: %.9lf\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint isTidy(int n) {\n  int last = 10;\n  while (n) {\n    int dig = n % 10;\n    n \/= 10;\n    if (dig <= last) {\n      last = dig;\n    } else {\n      return 0;\n    }\n  }\n  return 1;\n}\nset<int, greater<int>> dump;\nint main() {\n  for (int i = 1; i <= 1000; i++) {\n    if (isTidy(i)) {\n      dump.insert(i);\n    }\n  }\n\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    int n;\n    scanf(\"%d\", &n);\n    int x = *dump.lower_bound(n);\n    printf(\"Case #%d: %d\\n\", e + 1, x);\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef tuple<int, int, int> t3;\n\nbool vis[1000 + 2];\nint N, K;\n\nint countStalls(int index, int dir) {\n  int cnt = 0;\n  for (int i = index + dir; !vis[i]; i += dir) {\n    cnt++;\n  }\n  return cnt;\n}\n\nint getLeftmost() {\n  for (int i = 0; i <= N + 1; i++) {\n    if (!vis[i])\n      return i;\n  }\n}\n\nt3 compare_t3(t3 a, t3 b) { \/\/ index, ls, rs\n  int min_a = min(get<1>(a), get<2>(a));\n  int min_b = min(get<1>(b), get<2>(b));\n\n  if (min_a == min_b) {\n    int max_a = max(get<1>(a), get<2>(a));\n    int max_b = max(get<1>(b), get<2>(b));\n\n    if (max_a == max_b) {\n      if (get<0>(a) < get<0>(b)) {\n        return a;\n      } else {\n        return b;\n      }\n\n    } else if (max_a > max_b) {\n      return a;\n    } else {\n      return b;\n    }\n\n  } else if (min_a > min_b) {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nint main() {\n  int cases;\n\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    scanf(\"%d %d\", &N, &K);\n    memset(vis, 0, sizeof vis);\n    \/\/ printf(\"Case %d\\n\", e+1);\n    vis[0] = 1;\n    vis[N + 1] = 1;\n\n    int best_min = 0;\n    int best_max = 0;\n\n    for (int rep = 0; rep < K; rep++) {\n      t3 best_t3(N + 1, 0, 0);\n      \/\/ printf(\"Person %d\\n\", rep);\n      for (int s = 1; s <= N; s++) {\n        if (vis[s])\n          continue;\n        int ls = countStalls(s, -1);\n        int rs = countStalls(s, 1);\n        \/\/ printf(\"at s = %d, ls is %d rs is %d\\n\",s,ls,rs);\n        t3 cur_t3(s, ls, rs);\n        best_t3 = compare_t3(best_t3, cur_t3);\n      }\n\n      int idx = get<0>(best_t3);\n      \/\/ printf(\"Person %d chooses %d\\n\", rep,idx);\n      if (rep == K - 1) {\n        int ls = countStalls(idx, -1);\n        int rs = countStalls(idx, 1);\n\n        \/\/ printf(\"ls %d rs %d\\n\", ls, rs);\n\n        best_min = min(ls, rs);\n        best_max = max(ls, rs);\n      }\n      vis[idx] = 1;\n    }\n\n    printf(\"Case #%d: %d %d\\n\", e + 1, best_max, best_min);\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nvoid toggle(int *mask, int start, int k) {\n  int kmask = (1 << k) - 1;\n  *mask = (*mask) ^ (kmask << start);\n}\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    string str;\n    int N;\n    int K;\n    cin >> str >> K;\n\n    N = str.size();\n\n    int cnt = 0;\n    for (int i = 0; i + K - 1 < N; i++) {\n      if (str[i] == '+')\n        continue;\n      for (int j = 0; j < K; j++) {\n        str[i + j] = str[i + j] == '+' ? '-' : '+';\n      }\n      cnt++;\n    }\n\n    bool good = true;\n    for (int i = 0; i < N; i++) {\n      if (str[i] == '-') {\n        good = false;\n        break;\n      }\n    }\n\n    if (good) {\n      printf(\"Case #%d: %d\\n\", e + 1, cnt);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", e + 1);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint N, P;\n\nint input[52][52];\nint input_req[52];\n\ntypedef pair<int, int> pi;\ntypedef pair<pi, pi> ppi;\n\n\/\/ Applicable for middle nodes\npi toPi(int node) {\n  int i = (node - 1) \/ P;\n  int j = (node - 1) % P;\n  return pi(i + 1, j + 1);\n}\n\nvector<vector<set<int>>> input_can;\n\nint res[52][52];\nvector<vector<int>> adjList;\nvector<vector<int>> incList;\n\nbool vis[52 * 52];\nint pred[52 * 52];\n\nint main() {\n  int cases;\n\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    scanf(\"%d %d\", &N, &P);\n    input_can.assign(N * P + 2, vector<set<int>>(N * P + 2));\n\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%d\", &input_req[i]);\n    }\n\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= P; j++) {\n        scanf(\"%d\", &input[i][j]);\n\n        int inp = input[i][j];\n        int lo = ceil((double)inp \/ 1.1);\n        int hi = floor((double)inp \/ 0.9);\n\n        for (int s = lo; s <= hi; s++) {\n          if (s % input_req[i] == 0) {\n            input_can[i][j].insert(s \/ input_req[i]);\n            \/\/ printf(\"Can make %d servings with %d grams\\n\", s\/input_req[i],\n            \/\/ input[i][j]);\n          }\n        }\n      }\n    }\n\n    \/\/ Build graph\n    memset(res, 0, sizeof res);\n    adjList.assign(N * P + 2, vector<int>());\n    incList.assign(N * P + 2, vector<int>());\n\n    for (int i = 1; i < N; i++) {\n      for (int j = 1; j <= P; j++) {\n        int node = (i - 1) * P + j;\n        for (int k = 1; k <= P; k++) {\n          int adjNode = (i)*P + k;\n          for (auto can : input_can[i][j]) {\n            if (input_can[i + 1][k].count(can)) {\n              adjList[node].push_back(adjNode);\n              incList[adjNode].push_back(node);\n              res[node][adjNode] = 1;\n            }\n          }\n        }\n      }\n    }\n\n    for (int j = 1; j <= P; j++) {\n      if (input_can[1][j].size()) {\n        int node = j;\n        adjList[0].push_back(node);\n        incList[node].push_back(0);\n        res[0][node] = 1;\n      }\n    }\n    for (int j = 1; j <= P; j++) {\n      int node = (N - 1) * P + j;\n      adjList[node].push_back(N * P + 1);\n      incList[N * P + 1].push_back(node);\n      res[node][N * P + 1] = 1;\n    }\n\n    \/\/ DEBUG: Print graph\n    \/\/ for(int i = 0; i<=N*P+1; i++){\n    \/\/     printf(\"%d: \", i);\n    \/\/     for(auto adj : adjList[i]){\n    \/\/         printf(\"%d \", adj);\n    \/\/     }\n    \/\/     printf(\"\\n\");\n    \/\/ }\n\n    int cnt = 0;\n    while (1) {\n      bool found = false;\n\n      queue<pi> que;\n      memset(vis, 0, sizeof vis);\n      que.push(pi(0, -1));\n\n      while (!que.empty()) {\n        pi p = que.front();\n        que.pop();\n\n        int node = p.first;\n        int pre = p.second;\n\n        if (vis[node]) {\n          continue;\n        }\n        vis[node] = true;\n        pred[node] = pre;\n\n        if (node == N * P + 1) {\n          found = true;\n          break;\n        }\n\n        for (auto adj : adjList[node]) {\n          if (vis[adj])\n            continue;\n          if (res[node][adj]) {\n            que.push(pi(adj, node));\n          }\n        }\n        for (auto adj : incList[node]) {\n          if (vis[adj])\n            continue;\n          if (res[node][adj]) {\n            que.push(pi(adj, node));\n          }\n        }\n      }\n\n      if (!found) {\n        break;\n      } else {\n        \/\/ Edit res\n        int cur = N * P + 1;\n\n        while (1) {\n          int pre = pred[cur];\n          res[pre][cur] -= 1;\n          res[cur][pre] += 1;\n\n          if (pre == 0)\n            break;\n\n          cur = pre;\n        }\n\n        cnt++;\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", e + 1, cnt);\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar grid[25][25];\nint R, C;\n\nvoid floodVert(int row, int col, char c) {\n  for (int i = row - 1; i >= 0; i--) {\n    if (grid[i][col] != '?')\n      break;\n    grid[i][col] = c;\n  }\n  for (int i = row + 1; i < R; i++) {\n    if (grid[i][col] != '?')\n      break;\n    grid[i][col] = c;\n  }\n}\n\nvoid floodHor(int row, int col, char c) {\n  for (int j = col + 1; j < C; j++) {\n    if (grid[row][j] != '?')\n      break;\n    grid[row][j] = c;\n  }\n  for (int j = col - 1; j >= 0; j--) {\n    if (grid[row][j] != '?')\n      break;\n    grid[row][j] = c;\n  }\n}\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    scanf(\"%d %d\", &R, &C);\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        scanf(\" %c\", &grid[i][j]);\n      }\n    }\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] != '?') {\n          floodVert(i, j, grid[i][j]);\n        }\n      }\n    }\n\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] != '?') {\n          floodHor(i, j, grid[i][j]);\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", e + 1);\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        printf(\"%c\", grid[i][j]);\n      }\n      printf(\"\\n\");\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> pi;\npi input[1000];\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    int D, N;\n    scanf(\"%d %d\", &D, &N);\n    for (int i = 0; i < N; i++) {\n      int x, s;\n      scanf(\"%d %d\", &x, &s);\n      input[i] = pi(x, s);\n    }\n    sort(input, input + N);\n\n    double largest_time = 0;\n    for (int i = 0; i < N; i++) {\n      int dist = D - input[i].first;\n      int speed = input[i].second;\n      double t = (double)dist \/ (double)speed;\n      largest_time = max(largest_time, t);\n    }\n\n    double ans = (double)D \/ (double)largest_time;\n    printf(\"Case #%d: %f\\n\", e + 1, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint input[7];\nint N;\n\n\/\/ BYR\n\nint colors[1000]; \/\/ 0 for none\nint chars[7];\n\ntypedef pair<int, int> pi;\n\nbool check_color(int idx, int color) {\n  int left = (idx - 1 + N) % N;\n  int right = (idx + 1) % N;\n  if (colors[left] & color) {\n    return false;\n  }\n  if (colors[right] & color) {\n    return false;\n  }\n  return true;\n}\n\nbool found;\nint ans[1000];\nvoid f(int idx) {\n  if (idx == 0 && colors[idx]) {\n    found = true;\n    for (int i = 0; i < N; i++) {\n      ans[i] = colors[i];\n    }\n    return;\n  }\n  \/\/ printf(\"idx %d\\n\", idx);\n  for (int color = 1; color <= 6; color++) {\n    if (!input[color])\n      continue;\n    if (check_color(idx, color)) {\n      int old_val = colors[idx];\n      input[color]--;\n      colors[idx] = color;\n      f((idx + 1) % N);\n      colors[idx] = old_val;\n      input[color]++;\n      break;\n    }\n  }\n}\n\nint main() {\n  chars[0b001] = 'R';\n  chars[0b110] = 'G';\n  chars[0b100] = 'B';\n  chars[0b011] = 'O';\n  chars[0b010] = 'Y';\n  chars[0b101] = 'V';\n\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    int R, O, Y, G, B, V;\n    scanf(\"%d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n    input[0b001] = R;\n    input[0b110] = G;\n    input[0b100] = B;\n    input[0b011] = O;\n    input[0b010] = Y;\n    input[0b101] = V;\n    memset(colors, 0, sizeof colors);\n    found = false;\n\n    pi arr[3];\n    arr[0] = pi(input[0b001], 0b001);\n    arr[1] = pi(input[0b010], 0b010);\n    arr[2] = pi(input[0b100], 0b100);\n    sort(arr, arr + 3);\n\n    \/\/ printf(\"Got: \");\n    \/\/ for(int i = 0; i<3; i++){\n    \/\/     printf(\"%d %c\\n\", arr[i].first, chars[arr[i].second]);\n    \/\/ }\n\n    found = true;\n    for (int i = 0; i < N;) {\n      bool f = false;\n      for (int j = 2; j >= 0; j--) {\n        int clr = arr[j].second;\n        int num = arr[j].first;\n        if (!num)\n          continue;\n\n        if (check_color(i, clr)) {\n          colors[i++] = clr;\n          arr[j].first--;\n          f = true;\n        }\n      }\n      if (!f) {\n        found = false;\n        break;\n      }\n    }\n\n    for (int i = 0; i < N; i++) {\n      ans[i] = colors[i];\n    }\n\n    \/\/ f(0);\n    if (found) {\n      printf(\"Case #%d: \", e + 1);\n      for (int i = 0; i < N; i++) {\n        printf(\"%c\", chars[ans[i]]);\n      }\n      printf(\"\\n\");\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", e + 1);\n    }\n  }\n  return 0;\n}\n"}
{"target":"jddantes","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef tuple<int, int, ll> t3;\n\nint N;\n\nint input[100][100];\nint input_spd[100];\nint input_rem[100];\n\nmap<t3, double> memo;\n\ndouble f(int index, int spd, ll rem) {\n  if (index == N - 1) {\n    return 0;\n  }\n\n  t3 state(index, spd, rem);\n  auto itr = memo.find(state);\n  if (itr != memo.end()) {\n    return itr->second;\n  }\n\n  double best_ret = (1e200);\n\n  if (rem - input[index][index + 1] >= 0) {\n    double this_horse = (double)input[index][index + 1] \/ (double)spd +\n                        f(index + 1, spd, rem - input[index][index + 1]);\n    best_ret = min(best_ret, this_horse);\n  }\n\n  \/\/ Use this horse\n  if (input_rem[index] - input[index][index + 1] >= 0) {\n    double this_horse =\n        (double)input[index][index + 1] \/ (double)input_spd[index] +\n        f(index + 1, input_spd[index],\n          input_rem[index] - input[index][index + 1]);\n    best_ret = min(best_ret, this_horse);\n  }\n\n  memo[state] = best_ret;\n  return best_ret;\n}\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n\n  for (int e = 0; e < cases; e++) {\n    int Q;\n    scanf(\"%d %d\", &N, &Q);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d %d\", &input_rem[i], &input_spd[i]);\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        scanf(\"%d\", &input[i][j]);\n      }\n    }\n\n    printf(\"Case #%d:\", e + 1);\n    for (int q = 0; q < Q; q++) {\n      int src, dest;\n      scanf(\"%d %d\", &src, &dest);\n      memo.clear();\n      double ans = f(0, input_spd[0], input_rem[0]);\n      printf(\" %f\", ans);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <cstdio>\n#include <vector>\n\nusing namespace std;\n\nlong long pot[20];\nvector<long long> cs;\n\nlong long test(long long val) {\n  long long v = val;\n  int last = 9;\n  while (v > 0) {\n    \/\/ printf(\"%lld\\n\",v);\n    int at = v % 10;\n    v \/= 10;\n    if (last < at)\n      return 0;\n    else\n      last = at;\n  }\n  return val;\n}\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  pot[0] = 1;\n  for (int i = 1; i <= 18; i++) {\n    pot[i] = pot[i - 1] * 10LL;\n    \/\/ printf(\"%lld\\n\",pot[i]);\n  }\n  for (int cas = 0; cas < t; cas++) {\n    cs.clear();\n    long long a;\n    scanf(\"%lld\", &a);\n    \/\/ printf(\"%lld\\n\",a);\n    cs.push_back(a);\n    for (int i = 1; i <= 18; i++) {\n      long long aux = a % pot[i];\n      \/\/ printf(\"alive\\n\");\n      aux = a - aux - 1;\n      if (aux > 0) {\n        cs.push_back(aux);\n      }\n    }\n    long long ans = 0;\n    for (int i = 0; i < cs.size(); i++) {\n      ans = max(ans, test(cs[i]));\n    }\n    printf(\"Case #%d: %lld\\n\", cas + 1, ans);\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <cstdio>\n#include <map>\n#include <set>\nusing namespace std;\n\nmap<long long, long long> mp;\nset<long long> st;\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cas = 0; cas < t; cas++) {\n    mp.clear();\n    st.clear();\n    long long k, n;\n    scanf(\"%lld%lld\", &k, &n);\n    mp[k] = 1;\n    st.insert(-k);\n    while (n > 0) {\n      long long val = -(*st.begin());\n      st.erase(st.begin());\n      n -= mp[val];\n      long long tot = val - 1;\n      long long mn = min(tot \/ 2, tot - tot \/ 2);\n      long long mx = max(tot \/ 2, tot - tot \/ 2);\n      if (n <= 0) {\n        printf(\"Case #%d: %lld %lld\\n\", cas + 1, mx, mn);\n      } else {\n        st.insert(-mn);\n        st.insert(-mx);\n        mp[mn] += mp[val];\n        mp[mx] += mp[val];\n      }\n    }\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 1010;\n\nchar w[N];\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cas = 0; cas < t; cas++) {\n    int s;\n    scanf(\" %s%d\", w, &s);\n    int n = strlen(w);\n    int ans = 0;\n    for (int i = 0; i <= n - s; i++) {\n      if (w[i] == '-') {\n        ans++;\n        for (int j = 0; j < s; j++) {\n          if (w[i + j] == '-')\n            w[i + j] = '+';\n          else\n            w[i + j] = '-';\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (w[i] == '-')\n        ans = -1;\n    }\n    printf(\"Case #%d: \", cas + 1);\n    if (ans == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\nconst int inf = 0x3f3f3f3f;\n\nint need[100];\nvector<int> prod[100];\nint pos[100];\n\n\/*struct ev{\n    int st, ed, val;\n    ev(int a, int b, int c){\n        st = a;\n        ed = b;\n        val = c;\n    }\n};\n\n\nbool operator <(ev a, ev b){\n    if(a.st==b.st)return a.ed<b.ed;\n    return a.st>b.st\n}\npriority_queue <ev> pq;*\/\n\nint left(int k) { return ceil(((double)prod[k][pos[k]] \/ 1.1) \/ need[k]); }\nint right(int k) { return floor(((double)prod[k][pos[k]] \/ 0.9) \/ need[k]); }\n\nint main() {\n  int test;\n  scanf(\"%d\", &test);\n  for (int cas = 0; cas < test; cas++) {\n    long long ans = 0;\n    int n, p;\n    scanf(\"%d %d\", &n, &p);\n    for (int i = 0; i < n; i++) {\n      prod[i].clear();\n    }\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &need[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int a;\n        scanf(\"%d\", &a);\n        if ((ceil(((double)a \/ 1.1) \/ need[i])) <=\n            (floor(((double)a \/ 0.9) \/ need[i])))\n          prod[i].push_back(a);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      sort(prod[i].begin(), prod[i].end());\n    }\n    int ok = 1;\n    for (int i = 0; i < n; i++) {\n      pos[i] = (int)(prod[i].size()) - 1;\n      if (pos[i] < 0)\n        ok = 0;\n    }\n\n    while (ok) {\n      int mn = inf;\n      for (int i = 0; i < n; i++) {\n        mn = min(mn, right(i));\n      }\n      \/\/ printf(\"%d\\n\",mn);\n      int trye = 1;\n      for (int i = 0; i < n; i++) {\n        if (left(i) > mn)\n          trye = 0;\n      }\n      \/\/ printf(\"%d\",trye);\n      if (trye == 1) {\n        for (int i = 0; i < n; i++)\n          pos[i]--;\n        ans++;\n      } else {\n        for (int i = 0; i < n; i++) {\n          while (left(i) > mn && pos[i] >= 0)\n            pos[i]--;\n        }\n      }\n      for (int i = 0; i < n; i++) {\n        if (pos[i] < 0)\n          ok = 0;\n      }\n    }\n    printf(\"Case #%d: %lld\\n\", cas + 1, ans);\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\n\nconst int N = 30;\n\nchar grid[N][N];\n\nint main() {\n  int test;\n  scanf(\"%d\", &test);\n  for (int cas = 0; cas < test; cas++) {\n    long long ans = 0;\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        scanf(\" %c\", &grid[i][j]);\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 1; j < m; j++) {\n        if (grid[i][j] == '?' && grid[i][j - 1] != '?') {\n          grid[i][j] = grid[i][j - 1];\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = m - 2; j >= 0; j--) {\n        if (grid[i][j] == '?' && grid[i][j + 1] != '?') {\n          grid[i][j] = grid[i][j + 1];\n        }\n      }\n    }\n\n    for (int j = 0; j < m; j++) {\n      for (int i = 1; i < n; i++) {\n        if (grid[i][j] == '?' && grid[i - 1][j] != '?') {\n          grid[i][j] = grid[i - 1][j];\n        }\n      }\n    }\n    for (int j = 0; j < m; j++) {\n      for (int i = n - 2; i >= 0; i--) {\n        if (grid[i][j] == '?' && grid[i + 1][j] != '?') {\n          grid[i][j] = grid[i + 1][j];\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", cas + 1);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        printf(\"%c\", grid[i][j]);\n      }\n      printf(\"\\n\");\n    }\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cas = 1; cas <= t; cas++) {\n\n    int d, n;\n    scanf(\"%d %d\", &d, &n);\n\n    double time = 0;\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n      int s, v;\n      scanf(\"%d %d\", &s, &v);\n      time = max(time, 1.0 * (d - s) \/ (v));\n    }\n    ans = 1.0 * d \/ time;\n\n    printf(\"Case #%d: %lf\\n\", cas, ans);\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\n\nint qtd[6];\n\nmap<string, int> mp;\nchar aux[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cas = 1; cas <= t; cas++) {\n    \/\/ long long ans = 0;\n    int n;\n    scanf(\"%d\", &n);\n    mp[\"R\"] = 0;\n    mp[\"O\"] = 1;\n    mp[\"Y\"] = 2;\n    mp[\"G\"] = 3;\n    mp[\"B\"] = 4;\n    mp[\"V\"] = 5;\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &qtd[i]);\n    }\n    qtd[mp[\"R\"]] -= qtd[mp[\"G\"]];\n    qtd[mp[\"Y\"]] -= qtd[mp[\"V\"]];\n    qtd[mp[\"B\"]] -= qtd[mp[\"O\"]];\n    int ok = 1;\n    if (qtd[mp[\"R\"]] < 0 || qtd[mp[\"Y\"]] < 0 || qtd[mp[\"B\"]] < 0) {\n      ok = 0;\n    }\n    int mx = 0, id = 0;\n    int sum = 0;\n    for (int i = 0; i < 6; i += 2) {\n      if (mx < qtd[i]) {\n        mx = qtd[i];\n        id = i;\n      }\n      sum += qtd[i];\n    }\n    int id2, id3;\n    if (id == 0) {\n      id2 = 2;\n      id3 = 4;\n    } else if (id == 2) {\n      id2 = 0;\n      id3 = 4;\n    } else {\n      id2 = 0;\n      id3 = 2;\n    }\n    \/\/ printf(\"%d %d\\n\",sum-mx, mx);\n    string ans = \"\";\n    if (sum - mx < mx) {\n      ok = 0;\n    } else {\n\n      for (int i = 0; i < mx; i++) {\n        ans += aux[id];\n        if (qtd[id2] > qtd[id3]) {\n          ans += aux[id2];\n          qtd[id2]--;\n        } else {\n          ans += aux[id3];\n          qtd[id3]--;\n        }\n      }\n      while (qtd[id2] > 0 || qtd[id3] > 0) {\n        if (qtd[id2] > qtd[id3]) {\n          ans += aux[id2];\n          qtd[id2]--;\n        } else {\n          ans += aux[id3];\n          qtd[id3]--;\n        }\n      }\n    }\n    printf(\"Case #%d: \", cas);\n    if (ok) {\n      for (int i = 0; i < ans.size(); i++) {\n\n        while (ans[i] == 'R' && qtd[mp[\"G\"]] > 0) {\n          printf(\"RG\");\n          qtd[mp[\"G\"]]--;\n        }\n        while (ans[i] == 'B' && qtd[mp[\"O\"]] > 0) {\n          printf(\"BO\");\n          qtd[mp[\"O\"]]--;\n        }\n        while (ans[i] == 'Y' && qtd[mp[\"V\"]] > 0) {\n          printf(\"YV\");\n          qtd[mp[\"V\"]]--;\n        }\n        printf(\"%c\", ans[i]);\n      }\n      printf(\"\\n\");\n    } else {\n      puts(\"IMPOSSIBLE\");\n    }\n  }\n}\n"}
{"target":"jiang.zhi","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <memory.h>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\nconst int INF = 0x3f3f3f3f;\n\nconst int N = 110;\n\nint e[N], s[N];\nlong long dist[N][N];\nlong long reald[N];\ndouble dtime[N];\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cas = 1; cas <= t; cas++) {\n    long long ans = 0;\n    int n, q;\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d %d\", e + i, s + i);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%lld\", &dist[i][j]);\n      }\n    }\n    reald[0] = 0;\n    for (int i = 0; i < n - 1; i++) {\n      reald[i + 1] = reald[i] + dist[i][i + 1];\n    }\n    for (int i = 0; i < n; i++) {\n      \/\/ printf(\"%lld\\n\",reald[i]);\n    }\n    dtime[0] = 0;\n    for (int i = 1; i < n; i++) {\n      dtime[i] = 1e18;\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = i + 1; j < n; j++) {\n        if (reald[j] - reald[i] <= e[i]) {\n          long long d = reald[j] - reald[i];\n          dtime[j] = min(dtime[j], dtime[i] + d * 1.0 \/ s[i]);\n        }\n      }\n    }\n    int a, b;\n    scanf(\"%d %d\", &a, &b);\n\n    printf(\"Case #%d: %lf\\n\", cas, dtime[n - 1]);\n  }\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    string s;\n    cin >> s;\n    reverse(s.begin(), s.end());\n    int n = s.size();\n    for (int i = 1; i < n; i++) {\n      if (s[i] <= s[i - 1])\n        continue;\n      for (int j = 0; j < i; j++)\n        s[j] = '9';\n      int j = i;\n      while (s[j] == '0')\n        s[j] = '9', j++;\n      s[j]--;\n    }\n    while (s.back() == '0')\n      s.pop_back();\n    reverse(s.begin(), s.end());\n    printf(\"Case #%d: %s\\n\", ++cas, s.c_str());\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    LL n, k;\n    cin >> n >> k;\n    int d = 0;\n    for (LL v = 1; v <= k; v <<= 1)\n      d++;\n    printf(\"Case #%d: \", ++cas);\n    LL base = 1 << d;\n    if (n < base) {\n      puts(\"0 0\");\n      continue;\n    }\n    LL md = (n - (base - 1)) % base;\n    LL lx = (n - (base - 1)) \/ base, rx = lx;\n    int id = k - (1 << (d - 1)) + 1;\n    if (id <= md)\n      rx++;\n    if (id + (1 << (d - 1)) <= md)\n      lx++;\n    printf(\"%lld %lld\\n\", rx, lx);\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    string s;\n    int k, ans = 0;\n    cin >> s >> k;\n    for (int i = 0; i + k <= s.size(); i++) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; j++)\n          s[i + j] = s[i + j] == '-' ? '+' : '-';\n        ans++;\n      }\n    }\n    printf(\"Case #%d: \", ++cas);\n    if (s == string(s.size(), '+'))\n      printf(\"%d\\n\", ans);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing pii = pair<int, int>;\n\nint T, cas;\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  cin >> T;\n  while (T--) {\n    vector<vector<pii>> v;\n    vector<int> R;\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0, x; i < n; i++)\n      cin >> x, R.push_back(x);\n    int mx = p;\n    for (int i = 0; i < n; i++) {\n      v.push_back(vector<pii>());\n      for (int j = 0, x; j < p; j++) {\n        cin >> x;\n        int a = ceil(1 \/ 1.1 * x \/ R[i]), b = floor(1 \/ 0.9 * x \/ R[i]);\n        \/\/ while (1.0 * a * R[i] < 0.9 * x) a ++;\n        \/\/ while (1.0 * b * R[i] > 1.1 * x) b --;\n        \/\/ cout << a << \" \" << b << endl;\n        if (a <= b)\n          v.back().emplace_back(a, b);\n      }\n      sort(v[i].begin(), v[i].end());\n    }\n    int ans = 0;\n    while (true) {\n      int mnv = 0, mxv = 1e9, mnid, mxid, flag = 0;\n      for (int i = 0; i < n; i++)\n        if (v[i].size()) {\n          auto x = v[i].back();\n          if (x.first > mnv)\n            mnv = x.first, mnid = i;\n          if (x.second < mxv)\n            mxv = x.second, mxid = i;\n        } else\n          flag = 1;\n      if (flag)\n        break;\n      \/\/ cout << mnv << \" \" << mxv << endl;\n      if (mnv <= mxv) {\n        ans++;\n        for (int i = 0; i < n; i++)\n          v[i].pop_back();\n      } else {\n        v[mnid].pop_back();\n      }\n    }\n    printf(\"Case #%d: %d\\n\", ++cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\nint T, cas;\n\nstring convert(string s) {\n  int p, i;\n  for (p = 0, i = 0; s[i]; i++) {\n    if (s[i] != '?')\n      while (p <= i)\n        s[p++] = s[i];\n  }\n  if (!p)\n    return s;\n  while (s[--i] == '?')\n    s[i] = s[p - 1];\n  return s;\n}\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  cin >> T;\n  while (T--) {\n    vector<string> a;\n    int n, m;\n    cin >> n >> m;\n    int p = 0, i;\n    for (i = 0; i < n; i++) {\n      string s;\n      cin >> s;\n      s = convert(s);\n      a.push_back(s);\n      if (s[0] != '?')\n        while (p <= i)\n          a[p++] = a[i];\n    }\n    while (a[--i][0] == '?')\n      a[i] = a[p - 1];\n    printf(\"Case #%d:\\n\", ++cas);\n    for (auto s : a)\n      printf(\"%s\\n\", s.c_str());\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    int d, n;\n    cin >> d >> n;\n    double t = 0;\n    while (n--) {\n      int k, s;\n      cin >> k >> s;\n      t = max((1.0 * d - k) \/ s, t);\n    }\n    double ans = d \/ t;\n    printf(\"Case #%d: %.10f\\n\", ++cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\nint a[6];\nstring s = \"ROYGBV\";\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < 6; i++)\n      cin >> a[i];\n    string ans = \"\";\n    int flag = 0;\n    while (ans.size() < n) {\n      int mx = 0, c = 0;\n      for (int i = 0; i < 6; i++) {\n        if (s[i] == ans.back())\n          continue;\n        if (a[i] == mx && ans.size() && s[i] == ans[0])\n          mx = a[i], c = i;\n        if (a[i] > mx)\n          mx = a[i], c = i;\n      }\n      if (s[c] == ans.back() || a[c] == 0) {\n        flag = 1;\n        break;\n      }\n      ans.push_back(s[c]);\n      a[c]--;\n    }\n    \/\/ cout << ans << endl;\n    if (ans.size() > 1 && ans[0] == ans.back())\n      flag = 1;\n    printf(\"Case #%d: \", ++cas);\n    if (flag)\n      puts(\"IMPOSSIBLE\");\n    else\n      printf(\"%s\\n\", ans.c_str());\n  }\n  return 0;\n}\n"}
{"target":"jiian","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing LL = long long;\n\ndouble e[123], v[123], s[123], a[123][123], dp[123];\n\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"123.out\", \"w\", stdout);\n  int T, cas = 0;\n  cin >> T;\n  while (T--) {\n    int n, q;\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++)\n      cin >> e[i] >> v[i];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        cin >> a[i][j];\n    for (int i = 2; i <= n; i++)\n      s[i] = s[i - 1] + a[i - 1][i];\n    dp[1] = 0;\n    for (int i = 2; i <= n; i++)\n      dp[i] = 1e17;\n    for (int i = 0; i < n; i++)\n      for (int j = i + 1; j <= n; j++)\n        if (s[j] - s[i] <= e[i])\n          dp[j] = min(dp[j], dp[i] + (s[j] - s[i]) \/ v[i]);\n    int qu, qv;\n    cin >> qu >> qv;\n    printf(\"Case #%d: %.10f\\n\", ++cas, dp[n]);\n  }\n  return 0;\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nstring remove_leading_zeros(string m) {\n  string res;\n  bool zero = true;\n  for (int i = 0; i < (m.size()); i++) {\n    if (m[i] != '0')\n      zero = false;\n    if (!zero)\n      res += m[i];\n  }\n  return res;\n}\n\nstring solve(string m) {\n  for (int i = 0; i < (m.size() - 1); i++) {\n    if (m[i] > m[i + 1]) {\n      while (i > 0 && m[i - 1] >= m[i]) {\n        i--;\n      }\n      char c = m[i] - 1;\n      m[i] = c;\n      c = '9';\n      for (int j = (i + 1); j <= (m.size()); j++) {\n        m[j] = c;\n      }\n      break;\n    }\n  }\n  return m;\n}\n\nint main() {\n  string m;\n  int t, k;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    cin >> m;\n    m = solve(m);\n    m = remove_leading_zeros(m);\n\n    cout << \"Case #\" << (tt + 1) << \": \" << m << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\npair<long long, long long> separate(long long n) {\n  return make_pair(n \/ 2, n \/ 2 - (1 - n % 2));\n};\n\npair<long long, long long> solve2(long long s1, long long n1, long long s2,\n                                  long long n2, long long k) {\n  \/\/ printf(\"%lld %lld %lld %lld %lld\\n\", s1, n1, s2, n2, k);\n  \/* cout<<s1<<\" \";\n   cout<<n1<<\" \";\n   cout<<s2<<\" \";\n   cout<<n2<<\" \";\n   cout<<k<<\" \"<<endl;*\/\n  if (k <= n1) {\n    return separate(s1);\n  }\n  k -= n1;\n  if (k <= n2) {\n    return separate(s2);\n  }\n  k -= n2;\n\n  long long new_n1, new_n2, new_s1, new_s2;\n  pair<long long, long long> p1 = separate(s1);\n  pair<long long, long long> p2 = separate(s2);\n\n  new_s1 = max(p1.first, p1.second);\n  new_s1 = max(new_s1, p2.second);\n  new_s1 = max(new_s1, p2.first);\n\n  new_s2 = min(p1.first, p1.second);\n  new_s2 = min(new_s2, p2.second);\n  new_s2 = min(new_s2, p2.first);\n\n  new_n1 = 0;\n  new_n2 = 0;\n\n  if (p1.first == new_s1)\n    new_n1 += n1;\n  else\n    new_n2 += n1;\n\n  if (p1.second == new_s1)\n    new_n1 += n1;\n  else\n    new_n2 += n1;\n\n  if (p2.first == new_s1)\n    new_n1 += n2;\n  else\n    new_n2 += n2;\n\n  if (p2.second == new_s1)\n    new_n1 += n2;\n  else\n    new_n2 += n2;\n\n  return solve2(new_s1, new_n1, new_s2, new_n2, k);\n};\n\npair<long long, long long> solve(long long n, long long k) {\n  if (k == 1) {\n    return separate(n);\n  } else\n    return solve2(separate(n).first, 1, separate(n).second, 1, k - 1);\n};\n\nint main() {\n  string m;\n  long long t, n, k;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    cin >> n >> k;\n    pair<long long, long long> p = solve(n, k);\n\n    cout << \"Case #\" << (tt + 1) << \": \" << p.first << \" \" << p.second << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nchar opposite(char c) {\n  if (c == '-')\n    return '+';\n  else\n    return '-';\n}\n\nint main() {\n  string m;\n  int t, k;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    cin >> m >> k;\n\n    \/\/ cout<<m<<endl;\n    int sol = 0;\n    for (int i = 0; i < (m.size() - k + 1); i++) {\n      if (m[i] == '-') {\n        sol++;\n        for (int j = (i); j <= (i + k - 1); j++) {\n          m[j] = opposite(m[j]);\n        }\n      }\n    }\n    bool je = true;\n    for (int i = 0; i < (m.size()); i++) {\n      if (m[i] == '-') {\n        cout << \"Case #\" << (tt + 1) << \": IMPOSSIBLE\\n\";\n        je = false;\n        break;\n      }\n    }\n    if (je)\n      cout << \"Case #\" << (tt + 1) << \": \" << sol << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nchar opposite(char c) {\n  if (c == '-')\n    return '+';\n  else\n    return '-';\n}\n\nvector<long long> rece;\nvector<vector<long long>> pack;\nvector<vector<pair<long long, long long>>> ranges;\nvector<int> indicies;\nlong long t, n, p;\n\nbool porovnaj(const pair<long long, long long> &a,\n              const pair<long long, long long> &b) {\n  return a.first < b.first || (a.first == b.first && a.second < b.second);\n}\n\nint main() {\n  \/\/ string m;\n  cin >> t;\n\n  for (long long tt = 0; tt < t; tt++) {\n    cin >> n >> p;\n    rece.clear();\n    rece.resize(n);\n    pack.clear();\n    pack.resize(n, vector<long long>(p));\n    indicies.clear();\n    indicies.resize(n, 0);\n    ranges.clear();\n    ranges.resize(n, vector<pair<long long, long long>>(p));\n\n    for (int i = 0; i < (n); i++) {\n      cin >> rece[i];\n    }\n\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (p); j++) {\n        cin >> pack[i][j];\n      }\n    }\n\n    for (int i = 0; i < (n); i++) {\n      rece[i] *= 11 * 9;\n      for (int j = 0; j < (p); j++) {\n        long long mi = (pack[i][j] * 10) * 9;\n        long long ma = (pack[i][j] * 10) * 11;\n        \/\/ cout<<mi<<\" \"<<ma<<\" \"<<rece[i]<<endl;\n        long long mi2 = mi \/ rece[i];\n        long long ma2 = ma \/ rece[i];\n        if (mi % rece[i])\n          mi2++;\n        ranges[i][j] = make_pair(mi2, ma2);\n        \/\/   cout<<\"ranges \"<<i<<\" \"<< j<<\": \"<<mi2<<\", \"<<ma2<<endl;\n      }\n      \/\/ cout<<endl;\n    }\n\n    for (int i = 0; i < (n); i++) {\n      sort(ranges[i].begin(), ranges[i].end(), porovnaj);\n    }\n\n    int res = 0;\n\n    bool con = true;\n    while (con) {\n      long long max_mi = 0;\n      long long min_ma = 100000000ll;\n      for (int i = 0; i < (n); i++) {\n        int in = indicies[i];\n        max_mi = max(ranges[i][in].first, max_mi);\n        min_ma = min(ranges[i][in].second, min_ma);\n      }\n      if (max_mi <= min_ma) {\n        res++;\n        for (int i = 0; i < (n); i++) {\n          indicies[i]++;\n          \/\/ cout<<indicies[i]<<\" \"<<p<<endl;\n          if (indicies[i] >= p) {\n            con = false;\n            break;\n          }\n        }\n      } else {\n        for (int i = 0; i < (n); i++) {\n          int in = indicies[i];\n          if (ranges[i][in].second < max_mi) {\n            indicies[i]++;\n            if (indicies[i] >= p) {\n              con = false;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    cout << \"Case #\" << (tt + 1) << \": \" << res << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nchar opposite(char c) {\n  if (c == '-')\n    return '+';\n  else\n    return '-';\n}\n\nvector<pair<int, int>> starting;\nvector<char> chars;\nvector<string> pole;\n\nbool dynamika(int znak_cislo, vector<pair<int, int>> &dolne,\n              vector<pair<int, int>> &horne, int sucet) {\n\n  if (sucet > pole.size() * pole[0].size()) {\n    cout << pole.size() * pole[0].size() << endl;\n    return false;\n  }\n  if (znak_cislo == starting.size()) {\n    cout << \"trying to testing\" << endl;\n    if (sucet < pole.size() * pole[0].size()) {\n      return false;\n    }\n    cout << \"testing\" << endl;\n    vector<vector<char>> pole2 =\n        vector<vector<char>>(pole.size(), vector<char>(pole[0].size(), '?'));\n    for (int i = 0; i < (horne.size()); i++) {\n      cout << chars[i] << endl;\n      for (int x = dolne[i].first; x < horne[i].first; x++) {\n        for (int y = dolne[i].second; y < horne[i].second; y++) {\n          cout << x << \" \" << y << endl;\n          cout << pole2[y][x] << endl;\n          if (pole2[y][x] == '?') {\n            pole2[y][x] = chars[i];\n          } else {\n            return false;\n          }\n        }\n      }\n    }\n    \/\/ cout<<\"end testing\"<<endl;\n    for (int i = 0; i < (pole2[0].size()); i++) {\n      for (int j = 0; j < (pole2.size()); j++) {\n        cout << pole2[j][i];\n      }\n      cout << endl;\n    }\n    return true;\n  } else {\n    for (int x1 = 0; x1 < starting[znak_cislo].first + 1; x1++) {\n      for (int y1 = 0; y1 < (starting[znak_cislo].second + 1); y1++) {\n        dolne.push_back(make_pair(x1, y1));\n        for (int x2 = starting[znak_cislo].first + 1; x2 <= pole[0].size();\n             x2++) {\n          for (int y2 = starting[znak_cislo].second + 1; y2 <= pole.size();\n               y2++) {\n            horne.push_back(make_pair(x2, y2));\n            int vel = (x2 - x1) * (y2 - y1);\n            if (dynamika(znak_cislo + 1, dolne, horne, sucet + vel)) {\n              return true;\n            }\n            horne.pop_back();\n          }\n        }\n        dolne.pop_back();\n      }\n    }\n  }\n}\n\nvoid solve(vector<string> pole) {\n\n  for (int i = 0; i < pole[0].size(); i++) {\n    char c_last = '?';\n    bool has = false;\n    for (int j = 0; j < pole.size(); j++) {\n      if (pole[j][i] != '?')\n        c_last = pole[j][i];\n      pole[j][i] = c_last;\n    }\n\n    c_last = '?';\n    for (int j = pole.size() - 1; j >= 0; j--) {\n      if (pole[j][i] != '?') {\n        c_last = pole[j][i];\n        has = true;\n      }\n      pole[j][i] = c_last;\n    }\n\n    if (!has && i > 0) {\n      for (int j = 0; j < pole.size(); j++) {\n        pole[j][i] = pole[j][i - 1];\n      }\n    }\n  }\n\n  for (int i = pole[0].size() - 2; i >= 0; i--) {\n    char c_last = '?';\n    bool has = false;\n    for (int j = pole.size() - 1; j >= 0; j--) {\n      if (pole[j][i] != '?') {\n        c_last = pole[j][i];\n        has = true;\n      }\n      pole[j][i] = c_last;\n    }\n\n    if (!has) {\n      for (int j = 0; j < pole.size(); j++) {\n        pole[j][i] = pole[j][i + 1];\n      }\n    }\n  }\n\n  for (int i = 0; i < (pole.size()); i++) {\n    for (int j = 0; j < (pole[0].size()); j++) {\n      cout << pole[i][j];\n    }\n    cout << endl;\n  }\n}\n\nint main() {\n  \/\/ string m;\n  int t, k, m;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    chars.clear();\n    cout << \"Case #\" << (tt + 1) << \":\" << endl;\n    cin >> m >> k;\n    pole = vector<string>(m);\n    vector<pair<int, int>> startings;\n    for (int i = 0; i < (m); i++) {\n      cin >> pole[i];\n      for (int j = 0; j < (k); j++) {\n        if (pole[i][j] != '?') {\n          startings.push_back(make_pair(i, j));\n          chars.push_back(pole[i][j]);\n        }\n      }\n    }\n\n    solve(pole);\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nint main() {\n  \/\/ string m;\n  int t;\n  long long d, n;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    cin >> d >> n;\n    ld max_time = 0;\n    long long di, ki;\n    for (int i = 0; i < (n); i++) {\n      cin >> di >> ki;\n      di = d - di;\n      max_time = max((di \/ (ld)ki), max_time);\n    }\n\n    cout << std::fixed << std::setprecision(12) << d \/ max_time << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nstring daj_pismenko(int maxi) {\n  if (maxi == 0) {\n    return \"R\";\n  } else if (maxi == 2) {\n    return \"Y\";\n  } else {\n    return \"B\";\n  }\n}\n\npair<bool, string> skus_opravit(string co) {\n  int i = co.size() - 2;\n  bool bolo = false;\n  while (i > 0) {\n    if (co[i] != co[i + 1]) {\n      bolo = true;\n      break;\n    }\n    char c = co[i];\n    co[i] = co[i - 1];\n    co[i - 1] = c;\n    i -= 2;\n  }\n\n  return make_pair(bolo, co);\n}\n\nint main() {\n  \/\/ string m;\n  int t;\n  long long d, n;\n  cin >> t;\n  vector<int> kone(6);\n  for (int tt = 0; tt < t; tt++) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    cin >> n;\n    for (int i = 0; i < (6); i++) {\n      cin >> kone[i];\n    }\n    string vysl = \"\";\n    int posl = -1;\n    while (n--) {\n      vector<pair<int, int>> moznosti(6);\n      for (int i = 0; i < (6); i++) {\n        if (i != posl && kone[i] > 0)\n          moznosti.push_back(make_pair(kone[i], i));\n      }\n      int maxx = -4;\n      int maxi = -4;\n      for (int i = 0; i < (moznosti.size()); i++) {\n        if (moznosti[i].first > maxx) {\n          maxx = moznosti[i].first;\n          maxi = moznosti[i].second;\n        }\n      }\n      if (maxx == -4) {\n        vysl += daj_pismenko(posl);\n        kone[posl]--;\n        auto vy = skus_opravit(vysl);\n        \/\/ cout<<\"tu\"<<endl\n        if (vy.first == false) {\n          vysl = \"IMPOSSIBLE\";\n          break;\n        } else {\n          vysl = vy.second;\n        }\n      } else {\n\n        kone[maxi]--;\n        posl = maxi;\n        \/\/ cout<<maxi<<endl;\n        vysl += daj_pismenko(maxi);\n      }\n    }\n    \/\/ cout<<vysl<<endl;\n    if (vysl[0] == vysl[vysl.size() - 1]) {\n      string vyslc = vysl;\n      for (int i = 0; i < (vysl.size() - 1); i++) {\n        vyslc[i] = vysl[i + 1];\n      }\n      vyslc[vysl.size() - 1] = vysl[0];\n\n      auto vy = skus_opravit(vyslc);\n      \/\/ cout<<\"tu\"<<endl;\n      if (vy.first == false ||\n          vy.second[0] == vy.second[vy.second.size() - 1]) {\n        vysl = \"IMPOSSIBLE\";\n      } else {\n        vysl = vy.second;\n      }\n    }\n    cout << vysl << endl;\n  }\n}\n"}
{"target":"jodik","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <stdarg.h>\n#include <string>\n#include <tuple>\n#include <vector>\n\n\/\/ M_PI SI TREBA ODLOZIT\n\nusing namespace std;\n\ntypedef long double ld;\n\nint main() {\n  \/\/ string m;\n  int t;\n  int q, n;\n  cin >> t;\n  for (int tt = 0; tt < t; tt++) {\n    cout << \"Case #\" << (tt + 1) << \":\";\n    cin >> n >> q;\n    vector<pair<int, int>> horses(n);\n    vector<vector<int>> dist(n, vector<int>(n));\n    int e, s, u, v;\n    for (int i = 0; i < (n); i++) {\n      cin >> e >> s;\n      horses[i] = make_pair(e, s);\n    }\n\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++) {\n        cin >> e;\n        dist[i][j] = e;\n      }\n    }\n\n    for (int i = 0; i < (q); i++) {\n      cin >> u >> v;\n\n      \/\/ rychlost, zostatok_drahy, ubehnuty cas\n      vector<vector<long long>> cur_h;\n      vector<ld> cur_h_cas;\n      vector<long long> kon(2);\n      kon[0] = horses[0].second;\n      kon[1] = horses[0].first;\n      cur_h.push_back(kon);\n      cur_h_cas.push_back(0);\n      \/\/ cout<<kon[0]<<\" \"<<kon[1]<<\" \"<<kon[2]<<\" \"<<endl;\n      ld cas_novy_kon = 1000000000000000;\n      for (int j = (1); j <= (n - 1); j++) {\n        int draha = dist[j - 1][j];\n        vector<bool> to_keep(cur_h.size(), true);\n        cas_novy_kon = 1000000000000000;\n        for (int k = 0; k < (cur_h.size()); k++) {\n          cur_h[k][1] -= draha;\n          cur_h_cas[k] += draha \/ ((ld)cur_h[k][0]);\n          if (cur_h[k][1] < 0) {\n            to_keep[k] = false;\n          } else if (cas_novy_kon > cur_h_cas[k]) {\n            cas_novy_kon = cur_h_cas[k];\n          }\n        }\n        kon[0] = horses[j].second;\n        kon[1] = horses[j].first;\n        cur_h.push_back(kon);\n        cur_h_cas.push_back(cas_novy_kon);\n        \/\/ cout<<kon[0]<<\" \"<<kon[1]<<\" \"<<kon[2]<<\" \"<<endl;\n      }\n      cout << std::fixed << std::setprecision(12) << \" \" << cas_novy_kon;\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 1002;\nint t, digits;\nll n;\nbool dp[N][12];\nstring ans, nString;\n\nbool biggerThanN(string x) {\n  if (((int)(x).size()) < ((int)(nString).size()))\n    return false;\n  if (((int)(x).size()) > ((int)(nString).size()))\n    return true;\n  return x > nString;\n}\n\nstring conv(ll x) {\n  stringstream ss;\n  ss << x;\n  return ss.str();\n}\n\nvoid solve(int i, int p, string curr) {\n  if (biggerThanN(curr)) {\n    dp[i][p] = true;\n    return;\n  }\n  if (i <= digits + 1 and curr != \"\") {\n    if (((int)(curr).size()) > ((int)(ans).size()))\n      ans = curr;\n    if (((int)(curr).size()) == ((int)(ans).size()) and curr > ans)\n      ans = curr;\n  }\n  if (i == digits + 1)\n    return;\n  if (dp[i][p])\n    return;\n\n  for (int j = (p); j <= (int)(9); ++j)\n    solve(i + 1, j, curr + char(j + '0'));\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  for (int testCase = (1); testCase <= (int)(t); ++testCase) {\n    cin >> n;\n    digits = (int)log10(n) + 1;\n    nString = conv(n);\n\n    ans = \"\";\n    memset(dp, 0, sizeof dp);\n    solve(1, 1, \"\");\n    printf(\"Case #%d: \", testCase);\n    cout << (ans) << endl;\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 1002;\nint t, n, k;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  for (int testCase = (1); testCase <= (int)(t); ++testCase) {\n    scanf(\"%d%d\", &n, &k);\n\n    priority_queue<int, vi> q;\n    q.push(n);\n    for (int i = (1); i <= (int)(k - 1); ++i) {\n      int x = q.top();\n      q.pop();\n      if (x \/ 2)\n        q.push(x \/ 2);\n      if (x \/ 2 - (x % 2 == 0))\n        q.push(x \/ 2 - (x % 2 == 0));\n    }\n\n    int x = q.top();\n    int y = max(x \/ 2, x \/ 2 - (x % 2 == 0)),\n        z = min(x \/ 2, x \/ 2 - (x % 2 == 0));\n    printf(\"Case #%d: %d %d\\n\", testCase, y, z);\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 200002;\nint t, n, k;\nchar a[N];\n\nbool check() {\n  for (int i = (0); i <= (int)(n - 1); ++i)\n    if (a[i] == '-')\n      return false;\n  return true;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  for (int testCase = (1); testCase <= (int)(t); ++testCase) {\n    scanf(\"%s\", a);\n    n = strlen(a);\n    scanf(\"%d\", &k);\n\n    int ans = 0;\n    for (int i = (0); i <= (int)(n - k); ++i)\n      if (a[i] == '-') {\n        ++ans;\n        for (int j = (i); j <= (int)(i + k - 1); ++j)\n          a[j] = a[j] == '-' ? '+' : '-';\n      }\n\n    if (check())\n      printf(\"Case #%d: %d\\n\", testCase, ans);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", testCase);\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 52;\nint t, a[N][N], needed[N], id[N][N], uniq;\npii interval[N][N], intervalByID[N * N + 10];\n\nint n; \/\/ number of nodes\nint cap[1002 \/* maximum number of nodes*\/]\n       [1002 \/* maximum number of nodes*\/]; \/\/ capacity\nint path[1002 \/* maximum number of nodes*\/];\nint pathLength;\nbool visited[1002 \/* maximum number of nodes*\/];\n\nbool intersect(pii a, pii b) {\n  return (a.first >= b.first and a.first <= b.second) or\n         (a.second >= b.first and a.second <= b.second);\n}\n\n\/\/ Implement in anyway that get a path: DFS, BFS, Dijkstra...whatever\nint getPath(int StartNode, int TargetNode, int curLen, int maxcap,\n            pii currentInterval) {\n  path[curLen] = StartNode;\n  if (StartNode == TargetNode) {\n    pathLength = curLen + 1;\n    return maxcap;\n  }\n\n  int ret = 0;\n  visited[StartNode] = true;\n\n  for (int i = 0; i <= n + 1; i++) {\n    if (visited[i] || cap[StartNode][i] <= 0)\n      continue;\n    pii pos = intervalByID[i];\n    if (i and i <= n) {\n      if (!intersect(interval[pos.first][pos.second], currentInterval))\n        continue;\n    }\n\n    ret = getPath(i, TargetNode, curLen + 1, min(maxcap, cap[StartNode][i]),\n                  make_pair(max(currentInterval.first,\n                                interval[pos.first][pos.second].first),\n                            min(currentInterval.second,\n                                interval[pos.first][pos.second].second)));\n\n    if (ret > 0)\n      break; \/\/ We found a path with flow\n  }\n  return ret;\n}\n\nint maxFlow(int src, int sink, int numberOfNodes) {\n  int total_flow = 0;\n  n = numberOfNodes;\n\n  while (1) {\n    memset(visited, 0, sizeof visited);\n    int newflow =\n        getPath(src, sink, 0, 1000000000, make_pair(-1000000000, 1000000000));\n\n    if (!newflow)\n      break; \/\/ once no more paths, STOP\n\n    for (int i = (1); i <= (int)(pathLength - 1); ++i) {\n      int m = path[i - 1], n = path[i];\n\n      cap[m][n] -= newflow;\n      cap[n][m] += newflow; \/\/ Add reversed edge\n    }\n    total_flow += newflow;\n  }\n\n  return total_flow;\n}\n\nbool check(int i, int j) {\n  int mx = a[i][j] \/ needed[i] * needed[i];\n  if (a[i][j] + 1e-6 >= 0.9 * mx and a[i][j] - 1e-6 <= 1.1 * mx)\n    return true;\n  mx = a[i][j] \/ needed[i] * needed[i] - needed[i];\n  if (a[i][j] + 1e-6 >= 0.9 * mx and a[i][j] - 1e-6 <= 1.1 * mx)\n    return true;\n  mx = a[i][j] \/ needed[i] * needed[i] + needed[i];\n  if (a[i][j] + 1e-6 >= 0.9 * mx and a[i][j] - 1e-6 <= 1.1 * mx)\n    return true;\n  return false;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int test = (1); test <= (int)(t); ++test) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = (1); i <= (int)(n); ++i)\n      scanf(\"%d\", &needed[i]);\n    for (int i = (1); i <= (int)(n); ++i)\n      for (int j = (1); j <= (int)(m); ++j) {\n        scanf(\"%d\", &a[i][j]);\n        interval[i][j] = make_pair(ceil(a[i][j] \/ 1.1 \/ needed[i]),\n                                   a[i][j] \/ 0.9 \/ needed[i]);\n        id[i][j] = ++uniq;\n        intervalByID[id[i][j]] = make_pair(i, j);\n      }\n    intervalByID[0] = make_pair(-1000000000, 1000000000);\n\n    for (int i = (1); i <= (int)(n - 1); ++i)\n      for (int j = (1); j <= (int)(m); ++j)\n        if (check(i, j))\n          for (int k = (1); k <= (int)(m); ++k)\n            if (check(i + 1, k)) {\n              if (intersect(interval[i][j], interval[i + 1][k]))\n                cap[id[i][j]][id[i + 1][k]] = 1;\n            }\n\n    for (int j = (1); j <= (int)(m); ++j) {\n      if (check(1, j))\n        cap[0][id[1][j]] = 1;\n      if (check(n, j))\n        cap[id[n][j]][n * m + 1] = 1;\n    }\n    printf(\"Case #%d: %d\\n\", test, maxFlow(0, n * m + 1, n * m));\n\n    uniq = 0;\n    memset(cap, 0, sizeof cap);\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 50;\nint t, n, m;\nchar a[N][N];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int test = (1); test <= (int)(t); ++test) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = (0); i <= (int)(n - 1); ++i)\n      scanf(\"%s\", a[i]);\n\n    for (int i = (0); i <= (int)(n - 1); ++i) {\n      for (int j = (1); j <= (int)(m - 1); ++j)\n        if (a[i][j] == '?')\n          a[i][j] = a[i][j - 1];\n      for (int j = (m - 2); j >= (int)(0); --j)\n        if (a[i][j] == '?')\n          a[i][j] = a[i][j + 1];\n    }\n    for (int j = (0); j <= (int)(m - 1); ++j) {\n      for (int i = (1); i <= (int)(n - 1); ++i)\n        if (a[i][j] == '?')\n          a[i][j] = a[i - 1][j];\n      for (int i = (n - 2); i >= (int)(0); --i)\n        if (a[i][j] == '?')\n          a[i][j] = a[i + 1][j];\n    }\n\n    printf(\"Case #%d:\\n\", test);\n    for (int i = (0); i <= (int)(n - 1); ++i) {\n      for (int j = (0); j <= (int)(m - 1); ++j)\n        printf(\"%c\", a[i][j]);\n      puts(\"\");\n    }\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 100002;\nint t, d, n, pos[N], speed[N];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int test = (1); test <= (int)(t); ++test) {\n    scanf(\"%d%d\", &d, &n);\n    for (int i = (1); i <= (int)(n); ++i)\n      scanf(\"%d%d\", &pos[i], &speed[i]);\n\n    double maxT = 0;\n    for (int i = (1); i <= (int)(n); ++i)\n      maxT = max(maxT, 1.0 * (d - pos[i]) \/ speed[i]);\n\n    printf(\"Case #%d: %.6f\\n\", test, d \/ maxT);\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 100002;\nint t, n, r, o, y, g, b, v;\nchar ans[N];\n\nbool conflict(int i, int j) {\n  if (ans[i] == ans[j])\n    return true;\n  if ((ans[i] == 'R' or ans[i] == 'B' or ans[i] == 'Y') and\n      (ans[j] == 'R' or ans[j] == 'B' or ans[j] == 'Y'))\n    return false;\n  if (ans[i] == 'O' and ans[j] != 'B')\n    return true;\n  if (ans[i] == 'G' and ans[j] != 'R')\n    return true;\n  if (ans[i] == 'V' and ans[j] != 'Y')\n    return true;\n  swap(i, j);\n  if (ans[i] == 'O' and ans[j] != 'B')\n    return true;\n  if (ans[i] == 'G' and ans[j] != 'R')\n    return true;\n  if (ans[i] == 'V' and ans[j] != 'Y')\n    return true;\n  return false;\n}\n\nbool check() {\n  for (int i = (0); i <= (int)(n - 1); ++i)\n    if (conflict(i, (i + 1) % n))\n      return false;\n  return true;\n}\n\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int test = (1); test <= (int)(t); ++test) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    ans[n] = '\\0';\n    printf(\"Case #%d: \", test);\n\n    if (b >= o and r >= g and y >= v) {\n      int i = 0;\n      if (o) {\n        ans[i++] = 'B';\n        --b;\n        while (o) {\n          ans[i++] = 'O', --o;\n          if (b)\n            ans[i++] = 'B', --b;\n        }\n      }\n      if (g) {\n        ans[i++] = 'R';\n        --r;\n        while (g) {\n          ans[i++] = 'G', --g;\n          if (r)\n            ans[i++] = 'R', --r;\n        }\n      }\n      if (v) {\n        ans[i++] = 'Y';\n        --y;\n        while (v) {\n          ans[i++] = 'V', --v;\n          if (y)\n            ans[i++] = 'Y', --y;\n        }\n      }\n\n      int rr = r, bb = b, yy = y;\n      int j = i;\n      \/\/ rby\n      while (rr or bb or yy) {\n        if (rr)\n          ans[j++] = 'R', --rr;\n        if (bb)\n          ans[j++] = 'B', --bb;\n        if (yy)\n          ans[j++] = 'Y', --yy;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n\n      rr = r, bb = b, yy = y;\n      j = i;\n      \/\/ ryb\n      while (rr or bb or yy) {\n        if (rr)\n          ans[j++] = 'R', --rr;\n        if (yy)\n          ans[j++] = 'Y', --yy;\n        if (bb)\n          ans[j++] = 'B', --bb;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n\n      rr = r, bb = b, yy = y;\n      j = i;\n      \/\/ ybr\n      while (rr or bb or yy) {\n        if (yy)\n          ans[j++] = 'Y', --yy;\n        if (bb)\n          ans[j++] = 'B', --bb;\n        if (rr)\n          ans[j++] = 'R', --rr;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n\n      rr = r, bb = b, yy = y;\n      j = i;\n      \/\/ bry\n      while (rr or bb or yy) {\n        if (bb)\n          ans[j++] = 'B', --bb;\n        if (rr)\n          ans[j++] = 'R', --rr;\n        if (yy)\n          ans[j++] = 'Y', --yy;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n\n      rr = r, bb = b, yy = y;\n      j = i;\n      \/\/ yrb\n      while (rr or bb or yy) {\n        if (yy)\n          ans[j++] = 'Y', --yy;\n        if (rr)\n          ans[j++] = 'R', --rr;\n        if (bb)\n          ans[j++] = 'B', --bb;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n\n      rr = r, bb = b, yy = y;\n      j = i;\n      \/\/ byr\n      while (rr or bb or yy) {\n        if (bb)\n          ans[j++] = 'B', --bb;\n        if (yy)\n          ans[j++] = 'Y', --yy;\n        if (rr)\n          ans[j++] = 'R', --rr;\n      }\n      if (check()) {\n        puts(ans);\n        continue;\n      }\n      puts(\"IMPOSSIBLE\");\n    } else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"KhaleD","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef set<int> si;\ntypedef map<int, int> mii;\n\nconst int N = 102;\nint t, n, q, dist[N], speed[N], u, v;\nvector<vector<pii>> g(N);\nbool vis[N];\ndouble dp[N];\n\ndouble solve(int i) {\n  if (i == v)\n    return 0;\n  if (!((int)(g[i]).size()))\n    return 1000000000000000000ll;\n  if (vis[i])\n    return dp[i];\n  vis[i] = true;\n\n  dp[i] = 1000000000000000000ll;\n  double totalDist = g[i].back().second;\n  int j = g[i].back().first;\n  while (totalDist <= dist[i]) {\n    dp[i] = min(dp[i], totalDist \/ speed[i] + solve(j));\n    if (j == v)\n      break;\n    if (!((int)(g[j]).size()))\n      return dp[i];\n    totalDist += g[j].back().second;\n    j = g[j].back().first;\n  }\n  return dp[i];\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int test = (1); test <= (int)(t); ++test) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = (1); i <= (int)(n); ++i)\n      scanf(\"%d%d\", &dist[i], &speed[i]);\n    for (int i = (1); i <= (int)(n); ++i)\n      for (int j = (1); j <= (int)(n); ++j) {\n        int a;\n        scanf(\"%d\", &a);\n        if (a != -1)\n          g[i].push_back(make_pair(j, a));\n      }\n    while (q--) {\n      scanf(\"%d%d\", &u, &v);\n      memset(vis, 0, sizeof vis);\n      printf(\"Case #%d: %.6f\\n\", test, solve(u));\n    }\n\n    g.clear(), g.resize(N);\n  }\n}\n\n\/\/ freopen(\"input.txt\",\"r\",stdin);\n\/\/ freopen(\"output.txt\",\"w\",stdout);\n\/\/ ios::sync_with_stdio(0);cin.tie(0);\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 1;\n  cin >> t;\n\n  while (t--) {\n    cout << \"Case #\" << cc << \": \";\n    cc++;\n    long long n;\n    cin >> n;\n    for (long long i = n; i >= 1; i--) {\n      string s = \"\";\n      long long p = i;\n      while (p != 0) {\n        long long b = p % 10;\n        char c = b + '0';\n        s = c + s;\n        p \/= 10;\n      }\n      bool ch = 0;\n      for (long long j = 1; j < s.size(); j++) {\n        if (s[j] < s[j - 1]) {\n          ch = 1;\n          break;\n        }\n      }\n      if (!ch) {\n        cout << i << endl;\n        break;\n      }\n    }\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 1;\n  cin >> t;\n\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n\n    multiset<long long> st;\n    st.insert(n);\n    long long ret1, ret2;\n    for (long long i = 0; i < k; i++) {\n      multiset<long long>::iterator it = st.end();\n      it--;\n      long long b = *it;\n      st.erase(it);\n      long long a = b \/ 2, c = (b - 1) \/ 2;\n      st.insert(a);\n      st.insert(c);\n      ret1 = a, ret2 = c;\n    }\n    if (ret1 < ret2)\n      swap(ret1, ret2);\n    cout << \"Case #\" << cc << \": \" << ret1 << \" \" << ret2 << endl;\n    cc++;\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nlong long a[1005];\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t;\n  cin >> t;\n  long long cc = 1;\n\n  while (t--) {\n    string s;\n    long long k;\n    cin >> s >> k;\n\n    for (long long i = 0; i < ((long long)s.size()); i++) {\n      if (s[i] == '-')\n        a[i] = 1;\n      else\n        a[i] = 0;\n    }\n\n    long long cnt = 0;\n\n    for (long long i = ((long long)s.size()) - 1; i >= 0; i--) {\n      if (a[i] == 0)\n        continue;\n      if (i < k - 1)\n        break;\n      cnt++;\n      for (long long j = i, p = 0; p < k; p++, j--) {\n        a[j] = (a[j] + 1) % 2;\n      }\n    }\n\n    bool flag = 0;\n\n    for (long long i = 0; i < ((long long)s.size()); i++) {\n      \/\/ cout<<a[i]<<\" \";\n      if (a[i] == 1)\n        flag = 1;\n    }\n    cout << \"Case #\" << cc << \": \";\n    cc++;\n    if (flag)\n      cout << \"Impossible\\n\";\n    else\n      cout << cnt << endl;\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\nlong double eps = 0.000001;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nvector<long long> v, v1[3];\nlong long n, p;\n\nbool cmp(long double a, long double b) {\n  if (a - b > eps)\n    return 1;\n  return 0;\n}\n\nlong long DP[1 << 9][1 << 9];\nlong long go(long long mask, long long mask1) {\n  \/\/ cout<<mask<<\" \"<<mask1<<endl;\n  long long ret = 0;\n  if (DP[mask][mask1] != -1)\n    return DP[mask][mask1];\n  for (long long i = 0; i < p; i++) {\n    if (mask & (1 << i))\n      continue;\n    for (long long j = 0; j < p; j++) {\n      if (mask1 & (1 << j))\n        continue;\n      \/\/ double l=v[0]*0.9,h=v[0]*1.1;\n      long long lo = 0, hi = 1e7, mi = 0, ma = 0, ans = 0;\n      while (lo <= hi) {\n        long long mid = (lo + hi) \/ 2;\n        long double a = mid * 9 * v[0], b = mid * 11 * v[0];\n        \/\/ cout<<a<<\" \"<<v1[0][i]<<\" \"<<b<<endl;\n        if (a > v1[0][i] * 10) {\n\n          hi = mid - 1;\n        } else if (10 * v1[0][i] > b) {\n          lo = mid + 1;\n        } else {\n          ans = mid;\n          hi = mid - 1;\n        }\n      }\n      mi = ans;\n      ans = 0;\n      lo = 0, hi = 1e7;\n      while (lo <= hi) {\n        long long mid = (lo + hi) \/ 2;\n        long double a = mid * 9 * v[0], b = mid * 11 * v[0];\n        if (a > 10 * v1[0][i]) {\n\n          hi = mid - 1;\n        } else if (v1[0][i] * 10 > b) {\n          lo = mid + 1;\n        } else {\n          ans = mid;\n          lo = mid + 1;\n        }\n      }\n      ma = ans;\n      ans = 0;\n      lo = 0, hi = 1e7;\n      while (lo <= hi) {\n        long long mid = (lo + hi) \/ 2;\n        long double a = mid * 9 * v[1], b = mid * 11 * v[1];\n        if (a > v1[1][j] * 10) {\n\n          hi = mid - 1;\n        } else if (10 * v1[1][j] > b) {\n          lo = mid + 1;\n        } else {\n          ans = mid;\n          hi = mid - 1;\n        }\n      }\n      long long mi1 = ans;\n      ans = 0;\n      lo = 0, hi = 1e7;\n      while (lo <= hi) {\n        long long mid = (lo + hi) \/ 2;\n        long double a = mid * 9 * v[1], b = mid * 11 * v[1];\n        if (a > 10 * v1[1][j]) {\n\n          hi = mid - 1;\n        } else if (10 * v1[1][j] > b) {\n          lo = mid + 1;\n        } else {\n          ans = mid;\n          lo = mid + 1;\n        }\n      }\n      long long ma1 = ans;\n\n      \/\/ cout<<i<<\" \"<<j<<\" \"<<mi<<\" \"<<ma<<\" \"<<mi1<<\" \"<<ma1<<endl;\n\n      if (mi > ma1 || mi1 > ma)\n        continue;\n      if (ma == 0 || ma1 == 0)\n        continue;\n      ret = max(ret, 1 + go(mask | (1 << i), mask1 | (1 << j)));\n      \/\/ cout<<ret<<endl;\n    }\n  }\n  DP[mask][mask1] = ret;\n  return ret;\n}\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 0;\n  cin >> t;\n\n  while (t--) {\n    memset(DP, -1, sizeof(DP));\n    v.clear();\n    v1[0].clear();\n    v1[1].clear();\n    cin >> n >> p;\n\n    for (long long i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n\n      v.push_back(x);\n    }\n\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 0; j < p; j++) {\n        long long x;\n        cin >> x;\n\n        v1[i].push_back(x);\n      }\n    }\n\n    if (n == 1) {\n      long long cnt = 0;\n      for (long long i = 0; i < p; i++) {\n        long long l = v[0] * 9, h = v[0] * 11;\n        long long lo = 0, hi = 1e7, mi = 0, ma = 0, ans = 0;\n        while (lo <= hi) {\n          long long mid = (lo + hi) \/ 2;\n          long long a = mid * l, b = mid * h;\n          \/\/ cout<<a<<\" \"<<v1[0][i]<<\" \"<<b<<endl;\n          if (a > 10 * v1[0][i]) {\n\n            hi = mid - 1;\n          } else if (10 * v1[0][i] > b) {\n            lo = mid + 1;\n          } else {\n            ans = mid;\n            hi = mid - 1;\n          }\n        }\n        mi = ans;\n        ans = 0;\n        lo = 0, hi = 1e7;\n        while (lo <= hi) {\n          long long mid = (lo + hi) \/ 2;\n          long long a = mid * l, b = mid * h;\n          if (a > v1[0][i] * 10) {\n\n            hi = mid - 1;\n          } else if (v1[0][i] * 10 > b) {\n            lo = mid + 1;\n          } else {\n            ans = mid;\n            lo = mid + 1;\n          }\n        }\n        ma = ans;\n        if (ma < mi || ma == 0)\n          continue;\n        cnt++;\n      }\n      ++cc;\n      cout << \"Case #\" << cc << \": \" << cnt << endl;\n      continue;\n    }\n    ++cc;\n    cout << \"Case #\" << cc << \": \" << go(0, 0) << endl;\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nvector<string> v;\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 0;\n  cin >> t;\n\n  while (t--) {\n    v.clear();\n    long long r, c;\n    cin >> r >> c;\n\n    for (long long i = 0; i < r; i++) {\n      string s;\n      cin >> s;\n      v.push_back(s);\n    }\n\n    for (long long i = 0; i < v.size(); i++) {\n      bool ch = 0;\n      char c;\n      for (long long j = 0; j < v[i].size(); j++) {\n        if (v[i][j] != '?' && !ch) {\n          c = v[i][j];\n          for (long long k = 0; k < j; k++) {\n            v[i][k] = c;\n          }\n          ch = 1;\n          continue;\n        }\n        if (v[i][j] != '?') {\n          c = v[i][j];\n          continue;\n        }\n        if (ch)\n          v[i][j] = c;\n      }\n    }\n    for (long long i = 0; i < v.size(); i++) {\n      if (v[i][0] == '?')\n        continue;\n      for (long long j = i - 1; j >= 0; j--) {\n        if (v[j][0] != '?')\n          break;\n        for (long long k = 0; k < v[j].size(); k++) {\n          v[j][k] = v[j + 1][k];\n        }\n      }\n      for (long long j = i + 1; j < v.size(); j++) {\n        if (v[j][0] != '?')\n          break;\n        for (long long k = 0; k < v[j].size(); k++) {\n          v[j][k] = v[j - 1][k];\n        }\n      }\n    }\n    ++cc;\n    cout << \"Case #\" << cc << \": \\n\";\n    for (long long i = 0; i < v.size(); i++)\n      cout << v[i] << endl;\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 1;\n  cin >> t;\n\n  while (t--) {\n    long long d, n;\n    cin >> d >> n;\n\n    double tim = 0;\n    for (long long i = 0; i < n; i++) {\n      long long a, b;\n      cin >> a >> b;\n      double ti = (d - a) \/ ((double)b);\n      tim = max(ti, tim);\n    }\n    cout << setprecision(10) << fixed << \"Case #\" << cc << \": \" << d \/ tim\n         << endl;\n    cc++;\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nlong long ar[10055][3];\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n\n  long long cc = 1;\n  long long t;\n  cin >> t;\n  while (t--) {\n    memset(ar, 0, sizeof(ar));\n    long long n, r, o, y, v, g, b;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    if (r > b && r > y) {\n      for (long long i = 0; i < n - 1; i += 2) {\n        if (r > 0) {\n          ar[i][0] = 1;\n          r--;\n        }\n      }\n      for (long long i = 0; i < n; i += 2) {\n        if (ar[i][0] == 0 && b > 0) {\n          ar[i][1] = 1;\n          b--;\n        }\n      }\n\n      for (long long i = 1; i < n; i += 2) {\n        if (ar[i][0] == 0 && ar[i][1] == 0 && ar[i][2] == 0) {\n          if (b > 0) {\n            ar[i][1] = 1;\n            b--;\n          } else if (y > 0) {\n            ar[i][2] = 1;\n            y--;\n          }\n        }\n      }\n      if (r > 0 || b > 0 || y > 0) {\n        cout << \"Case #\" << cc << \": IMPOSSIBLE\\n\";\n        cc++;\n      } else {\n        cout << \"Case #\" << cc << \": \";\n        for (long long i = 0; i < n; i++) {\n          \/\/ cout<<i<<\" \"<<ar[i][0]<<\" \"<<ar[i][2]<<\" \"<<ar[i][1]<<endl;\n          if (ar[i][0] == 1) {\n            cout << \"R\";\n          }\n          if (ar[i][1] == 1) {\n            cout << \"B\";\n          }\n          if (ar[i][2] == 1) {\n            cout << \"Y\";\n          }\n        }\n        cout << endl;\n        cc++;\n      }\n    } else if (b > r && b > y) {\n      for (long long i = 0; i < n - 1; i += 2) {\n        if (b > 0) {\n          ar[i][0] = 1;\n          b--;\n        }\n      }\n      for (long long i = 0; i < n; i += 2) {\n        if (ar[i][0] == 0 && r > 0) {\n          ar[i][1] = 1;\n          r--;\n        }\n      }\n\n      for (long long i = 1; i < n; i += 2) {\n        if (ar[i][0] == 0 && ar[i][1] == 0 && ar[i][2] == 0) {\n          if (r > 0) {\n            ar[i][1] = 1;\n            r--;\n          } else if (y > 0) {\n            ar[i][2] = 1;\n            y--;\n          }\n        }\n      }\n      if (r > 0 || b > 0 || y > 0) {\n        cout << \"Case #\" << cc << \": IMPOSSIBLE\\n\";\n        cc++;\n      } else {\n        cout << \"Case #\" << cc << \": \";\n        for (long long i = 0; i < n; i++) {\n          \/\/ cout<<i<<\" \"<<ar[i][0]<<\" \"<<ar[i][2]<<\" \"<<ar[i][1]<<endl;\n          if (ar[i][1] == 1) {\n            cout << \"R\";\n          }\n          if (ar[i][0] == 1) {\n            cout << \"B\";\n          }\n          if (ar[i][2] == 1) {\n            cout << \"Y\";\n          }\n        }\n        cout << endl;\n        cc++;\n      }\n    } else {\n      for (long long i = 0; i < n - 1; i += 2) {\n        if (y > 0) {\n          ar[i][0] = 1;\n          y--;\n        }\n      }\n      for (long long i = 0; i < n; i += 2) {\n        if (ar[i][0] == 0 && r > 0) {\n          ar[i][1] = 1;\n          r--;\n        }\n      }\n\n      for (long long i = 1; i < n; i += 2) {\n        if (ar[i][0] == 0 && ar[i][1] == 0 && ar[i][2] == 0) {\n          if (r > 0) {\n            ar[i][1] = 1;\n            r--;\n          } else if (b > 0) {\n            ar[i][2] = 1;\n            b--;\n          }\n        }\n      }\n      if (r > 0 || b > 0 || y > 0) {\n        cout << \"Case #\" << cc << \": IMPOSSIBLE\\n\";\n        cc++;\n      } else {\n        cout << \"Case #\" << cc << \": \";\n        for (long long i = 0; i < n; i++) {\n          \/\/ cout<<i<<\" \"<<ar[i][0]<<\" \"<<ar[i][2]<<\" \"<<ar[i][1]<<endl;\n          if (ar[i][1] == 1) {\n            cout << \"R\";\n          }\n          if (ar[i][0] == 1) {\n            cout << \"Y\";\n          }\n          if (ar[i][2] == 1) {\n            cout << \"B\";\n          }\n        }\n        cout << endl;\n        cc++;\n      }\n    }\n  }\n}\n"}
{"target":"killjee","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef int ll;\ntypedef pair<long long, long long> pii;\ntypedef pair<long long, pair<long long, long long>> piii;\n\nconst long long mod = 1e9 + 7;\n\nlong long POWER[65];\nlong long power(long long a, long long b) {\n  long long ret = 1;\n  while (b) {\n    if (b & 1)\n      ret *= a;\n    a *= a;\n    if (ret >= mod)\n      ret %= mod;\n    if (a >= mod)\n      a %= mod;\n    b >>= 1;\n  }\n  return ret;\n}\nlong long inv(long long x) { return power(x, mod - 2); }\n\nvoid precompute() {\n  POWER[0] = 1;\n  for (long long i = 1; i < 63; i++)\n    POWER[i] = POWER[i - 1] << 1LL;\n}\n\nvector<long long> dis, sp;\ndouble DP[155];\nlong long a[155];\n\nll main() {\n  freopen(\"Task.in\", \"r\", stdin);\n  freopen(\"Task.out\", \"w\", stdout);\n  long long t, cc = 1;\n  cin >> t;\n\n  while (t--) {\n    dis.clear();\n    sp.clear();\n    long long n, q;\n    cin >> n >> q;\n    for (long long i = 0; i <= n; i++)\n      DP[i] = -1;\n    for (long long i = 0; i < n; i++) {\n      long long d, s;\n      cin >> d >> s;\n      dis.push_back(d);\n      sp.push_back(s);\n    }\n\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 0; j < n; j++) {\n\n        long long x;\n        cin >> x;\n        if (j - i == 1) {\n          a[i] = x;\n        }\n      }\n    }\n    long long u, v;\n    cin >> u >> v;\n\n    DP[0] = 0;\n    for (long long i = 0; i < n; i++) {\n      long long di = a[i];\n      for (long long j = i + 1; j < n; j++) {\n        if (di > dis[i])\n          break;\n        double ans = DP[i] + ((double)di) \/ sp[i];\n        if (DP[j] < 0) {\n          DP[j] = ans;\n          di += a[j];\n          continue;\n        }\n        DP[j] = min(DP[j], ans);\n        di += a[j];\n      }\n    }\n    cout << setprecision(10) << fixed << \"Case #\" << cc << \": \" << DP[n - 1]\n         << endl;\n    cc++;\n  }\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n#include <cstring>\n\nint main() {\n  int T;\n  int pos;\n  char input[30];\n  scanf(\"%d%*c\", &T);\n  for (int l = 1; l <= T; ++l) {\n    fgets(input, sizeof(input), stdin);\n    pos = 0;\n    int len = strlen(input);\n    input[--len] = '\\0';\n    for (int i = 1; i < len; ++i) {\n      if (input[i - 1] > input[i]) {\n        --input[pos];\n        for (int j = pos + 1; j < len; ++j)\n          input[j] = '9';\n        break;\n      } else if (input[i - 1] < input[i]) {\n        pos = i;\n      }\n    }\n    pos = 0;\n    while (input[pos] == '0')\n      ++pos;\n    printf(\"Case #%d: \", l);\n    for (int i = pos; i < len; ++i)\n      putchar(input[i]);\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n#include <queue>\n\nusing namespace std;\n\nint main() {\n  int T;\n  long long N, K, tmp;\n  scanf(\"%d\", &T);\n  for (int i = 1; i <= T; ++i) {\n    priority_queue<long long> q;\n    scanf(\"%ld %ld\", &N, &K);\n    q.push(N);\n    for (long long j = 1; j < K; ++j) {\n      tmp = q.top();\n      q.pop();\n      if (tmp == 1)\n        break;\n      q.push(tmp \/ 2);\n      q.push((tmp - 1) \/ 2);\n    }\n    tmp = q.top();\n    printf(\"Case #%d: %ld %ld\\n\", i, tmp \/ 2, (tmp - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n#include <cstring>\n\nint main() {\n  int T, K, ans;\n  bool a;\n  char input[1010];\n  scanf(\"%d%*c\", &T);\n  for (int i = 1; i <= T; ++i) {\n    ans = 0;\n    a = true;\n    scanf(\"%s %d%*c\", input, &K);\n    int len = strlen(input);\n    for (int j = 0; j <= len - K; ++j) {\n      if (input[j] == '-') {\n        for (int z = 0; z < K; ++z) {\n          if (input[j + z] == '-')\n            input[j + z] = '+';\n          else if (input[j + z] == '+')\n            input[j + z] = '-';\n        }\n        ++ans;\n      }\n    }\n    for (int j = len - K + 1; j < len; ++j) {\n      if (input[j] == '-') {\n        a = false;\n        break;\n      }\n    }\n    if (a)\n      printf(\"Case #%d: %d\\n\", i, ans);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", i);\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\nint N;\n\nstruct Node {\n  int l;\n  int h;\n} have[60][60];\n\nbool cmp(Node A, Node B) {\n  if (A.h == B.h)\n    return A.l < B.l;\n  return A.h < B.h;\n}\n\nint main() {\n  int T, ans, P, l, h, tmp, max;\n  int need[60];\n  bool edge[60][60][60];\n  scanf(\"%d\", &T);\n  for (int rr = 1; rr <= T; ++rr) {\n    scanf(\"%d %d\", &N, &P);\n    max = -1;\n    ans = 0;\n    for (int i = 0; i < N; ++i) {\n      scanf(\"%d\", &need[i]);\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j) {\n        scanf(\"%d\", &tmp);\n        tmp *= 10;\n        h = tmp \/ (9 * need[i]);\n        l = tmp \/ (11 * need[i]);\n        if (tmp % (11 * need[i]) > 0)\n          ++l;\n        if (l == 0)\n          ++l;\n        if (h < l)\n          h = l = -1;\n        have[i][j].l = l;\n        have[i][j].h = h;\n      }\n      sort(have[i], have[i] + P, cmp);\n    }\n\n    \/\/\/\t\tfor(int i=0;i<N;++i){\n    \/\/\t\t\tfor(int j=0;j<P;++j){\n    \/\/\t\t\t\tprintf(\"[%d,%d] \",have[i][j].l,have[i][j].h);\n    \/\/\t\t\t}\n    \/\/\t\t\tputs(\"\");\n    \/\/\t\t}\n\n    if (N == 2) {\n      int i = 0, j = 0;\n      while (i < P && have[0][i].l == -1)\n        ++i;\n      while (j < P && have[1][j].l == -1)\n        ++j;\n      while (i < P && j < P) {\n        \/\/\t\t\t\tprintf(\"i=%d j=%d\\n\",i,j);\n        if (have[0][i].h >= have[1][j].l && have[0][i].l <= have[1][j].l) {\n          ++i;\n          ++j;\n          ++ans;\n        } else if (have[1][j].h >= have[0][i].l &&\n                   have[1][j].l <= have[0][i].l) {\n          ++i;\n          ++j;\n          ++ans;\n        } else if (have[0][i].l >= have[1][j].l &&\n                   have[0][i].h <= have[1][j].h) {\n          ++i;\n          ++j;\n          ++ans;\n        } else if (have[0][i].l <= have[1][j].l &&\n                   have[0][i].h >= have[1][j].h) {\n          ++i;\n          ++j;\n          ++ans;\n        } else if (have[0][i].l > have[1][j].h) {\n          ++j;\n        } else if (have[1][j].l > have[0][i].h) {\n          ++i;\n        } else {\n          printf(\"else\\n\");\n        }\n      }\n    } else if (N == 1) {\n      int i = 0;\n      while (i < P && have[0][i].l == -1)\n        ++i;\n      ans = P - i;\n    } else {\n    }\n\n    \/*\t\tfor(int i=1;i<N;++i){\n                            j=k=0;\n                            while(have[i-1][j].l == -1) ++j;\n                            while(have[i][k].l == -1) ++k;\n                            while(j<P && k<P){\n                                    if(have[i-1][j].l <= have[i][k].l &&\n       have[i-1][j].h >= have[i][k].h){ edge[i-1][j][k] = true;\n                                            ++j;\n                                            ++k;\n                                    }\n                                    else if(have[i-1].h\n                            }\n                            for(int j=0;j<P;++j){\n                                    for(int k=1;k<P;++k){\n                                            if(have[i-1][j]\n                                    }\n                            }\n                    }*\/\n\n    printf(\"Case #%d: %d\\n\", rr, ans);\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n#include <cstring>\n\nint main() {\n  int T, R, C;\n  char a[30][30];\n  bool col[30];\n  scanf(\"%d\", &T);\n  for (int rr = 1; rr <= T; ++rr) {\n    scanf(\"%d %d\", &R, &C);\n    memset(a, 0, sizeof(a));\n    memset(col, false, sizeof(col));\n    for (int i = 0; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        scanf(\"%c\", &a[i][j]);\n        while ((a[i][j] < 'A' || a[i][j] > 'Z') && a[i][j] != '?')\n          scanf(\"%c\", &a[i][j]);\n        if (a[i][j] != '?')\n          col[j] = true;\n      }\n    }\n\n    for (int i = 1; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        if (a[i][j] == '?' && a[i - 1][j] != '?') {\n          a[i][j] = a[i - 1][j];\n        }\n      }\n    }\n    for (int i = R - 1; i > 0; --i) {\n      for (int j = 0; j < C; ++j) {\n        if (a[i][j] != '?' && a[i - 1][j] == '?') {\n          a[i - 1][j] = a[i][j];\n        }\n      }\n    }\n\n    for (int i = 1; i < C; ++i) {\n      if (!col[i] && col[i - 1]) {\n        for (int j = 0; j < R; ++j)\n          a[j][i] = a[j][i - 1];\n        col[i] = true;\n      }\n    }\n    for (int i = C - 2; i >= 0; --i) {\n      if (!col[i] && col[i + 1]) {\n        for (int j = 0; j < R; ++j)\n          a[j][i] = a[j][i + 1];\n        col[i] = true;\n      }\n    }\n\n    printf(\"Case #%d:\\n\", rr);\n    for (int i = 0; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        printf(\"%c\", a[i][j]);\n      }\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n\nint main() {\n  int T;\n  long long D, N, K, S;\n  double tmp;\n  double Max = 0;\n  scanf(\"%d\", &T);\n  for (int i = 1; i <= T; ++i) {\n    Max = 0;\n    scanf(\"%lld %lld\", &D, &N);\n    while (N--) {\n      scanf(\"%lld %lld\", &K, &S);\n      tmp = (double)(D - K) \/ (double)S;\n      Max = tmp > Max ? tmp : Max;\n    }\n    printf(\"Case #%d: %lf\\n\", i, (double)D \/ Max);\n  }\n  return 0;\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  int in[6];\n  int max = 0;\n  int N;\n  int pos;\n  for (int ii = 1; ii <= T; ++ii) {\n    printf(\"Case #%d: \", ii);\n    N = 0;\n    for (int i = 0; i < 6; ++i) {\n      scanf(\"%d\", &in[i]);\n      if (in[i] > max) {\n        max = in[i];\n        pos = i;\n      }\n      N += in[i];\n    }\n    if (max + max <= N) {\n      if (pos == 0) {\n        while (in[pos]) {\n          printf(\"R\");\n          --in[pos];\n          if (in[2] > in[4]) {\n            printf(\"Y\");\n            --in[2];\n          } else if (in[4]) {\n            --in[4];\n            printf(\"B\");\n          }\n        }\n        while (in[2]) {\n          printf(\"Y\");\n          --in[2];\n          if (in[4]) {\n            printf(\"B\");\n            --in[4];\n          }\n        }\n      } else if (pos == 2) {\n        while (in[pos]) {\n          printf(\"Y\");\n          --in[pos];\n          if (in[0] > in[4]) {\n            printf(\"R\");\n            --in[0];\n          } else if (in[4]) {\n            --in[4];\n            printf(\"B\");\n          }\n        }\n        while (in[0]) {\n          printf(\"R\");\n          --in[0];\n          if (in[4]) {\n            printf(\"B\");\n            --in[4];\n          }\n        }\n\n      } else if (pos == 4) {\n        while (in[pos]) {\n          printf(\"B\");\n          --in[pos];\n          if (in[2] > in[0]) {\n            printf(\"Y\");\n            --in[2];\n          } else if (in[0]) {\n            --in[0];\n            printf(\"R\");\n          }\n        }\n        while (in[2]) {\n          printf(\"Y\");\n          --in[2];\n          if (in[0]) {\n            printf(\"R\");\n            --in[0];\n          }\n        }\n      }\n      puts(\"\");\n    } else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n}\n"}
{"target":"king1224","func":"#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nstruct Horse {\n  long long left;\n  int speed;\n} H[110], tmpH;\n\ndouble dis[110][110];\nbool visit[110];\nvector<int> vec[110];\nint d;\ndouble ans;\n\nvoid BT(int s, Horse preH, double time) {\n  if (s == d) {\n    ans = time < ans ? time : ans;\n    return;\n  }\n  int next;\n  for (int i = 0; i < vec[s].size(); ++i) {\n    next = vec[s][i];\n    \/\/\t\t\t\tprintf(\"%d to %d: Not in If,\n    \/\/ time=%lf\\n\",s,next,time+dis[s][next]); \t\tif(!visit[next]){\n    Horse tmpH = preH;\n    if (preH.left >= dis[s][next]) {\n      \/\/\t\t\t\tvisit[next] = true;\n      preH.left -= dis[s][next];\n      \/\/\t\t\t\tprintf(\"%d to %d: used preH,\n      \/\/ time=%lf\\n\",s,next,time+dis[s][next]\/tmpH.speed);\n      BT(next, preH, time + dis[s][next] \/ preH.speed);\n      preH.left += dis[s][next];\n      \/\/\t\t\t\tvisit[next] = false;\n    }\n    tmpH = H[s];\n    if (H[s].left >= dis[s][next]) {\n      visit[next] = true;\n      H[s].left -= dis[s][next];\n      \/\/\t\t\t\tprintf(\"%d to %d: used newH,\n      \/\/ time=%lf\\n\",s,next,time+dis[s][next]\/tmpH.speed);\n      BT(next, H[s], time + dis[s][next] \/ H[s].speed);\n      H[s].left += dis[s][next];\n      visit[next] = false;\n    }\n    \/\/\t\t}\n  }\n}\n\nint main() {\n  int T;\n  int N, Q;\n  int s;\n  scanf(\"%d\", &T);\n  for (int ii = 1; ii <= T; ++ii) {\n    scanf(\"%d %d\", &N, &Q);\n    for (int i = 1; i <= N; ++i) {\n      scanf(\"%lld %d\", &H[i].left, &H[i].speed);\n      vec[i].clear();\n    }\n    for (int i = 1; i <= N; ++i) {\n      for (int j = 1; j <= N; ++j) {\n        scanf(\"%lf\", &dis[i][j]);\n        if (dis[i][j] != -1) {\n          vec[i].push_back(j);\n        }\n      }\n    }\n\n    printf(\"Case #%d:\", ii);\n    for (int i = 0; i < Q; ++i) {\n      ans = 9999999999999;\n      memset(visit, false, sizeof(visit));\n      scanf(\"%d %d\", &s, &d);\n      tmpH.left = 0;\n      visit[s] = true;\n      BT(s, tmpH, 0);\n      printf(\" %.8lf\", ans);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> Pi;\nint N, M, T, K, tc;\n\nint p[1050];\nvoid solve() {\n  string s;\n  cin >> s;\n  int len = s.size();\n  int x = -1;\n  for (int i = 0; i < len; i++) {\n    p[i + 1] = s[i] - '0';\n  }\n  for (int i = 1; i <= len - 1; i++) {\n    if (p[i] > p[i + 1]) {\n      x = i;\n      break;\n    }\n  }\n\n  if (x == -1) {\n    cout << s << endl;\n    return;\n  }\n  int y = -1;\n  for (int i = x; i >= 1; i--) {\n    if (p[i] > p[i - 1]) {\n      y = i;\n      break;\n    }\n  }\n\n  if (y == -1) {\n    for (int i = 0; i < len - 1; i++)\n      printf(\"9\");\n    printf(\"\\n\");\n    return;\n  }\n  p[y]--;\n\n  bool start = false;\n  for (int i = 0; i <= y; i++) {\n    if (p[i] != 0)\n      start = true;\n    if (start)\n      printf(\"%d\", p[i]);\n  }\n  for (int i = y + 1; i <= len; i++)\n    printf(\"9\");\n  printf(\"\\n\");\n}\n\nbool ascending(int x) {\n  int q[100];\n  int pos = 0;\n\n  while (x > 0) {\n    q[pos] = x % 10;\n    x \/= 10;\n    pos++;\n  }\n  for (int i = 0; i < pos - 1; i++) {\n    if (q[i] < q[i + 1]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvoid solve2() {\n  int x;\n  cin >> x;\n  for (int i = x; i >= 0; i--) {\n    if (ascending(i)) {\n      cout << i << endl;\n      return;\n    }\n  }\n}\n\nint main(void) {\n  freopen(\"output1.txt\", \"w\", stdout);\n  scanf(\"%d\", &tc);\n  for (int tcx = 1; tcx <= tc; tcx++) {\n    printf(\"Case #%d: \", tcx);\n    solve2();\n    \/\/ solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> Pi;\nint N, M, T, K, tc;\n\nvoid solve() {\n  ll n, k;\n  cin >> n >> k;\n  ll a, b, ac, bc; \/\/ a > b,\n  a = n;\n  ac = 1;\n  b = 0;\n  bc = 0;\n  bool hasb = false;\n  ll cur = 0;\n  while (true) {\n\n    if (hasb && a < b) {\n      swap(a, b);\n      swap(ac, bc);\n    }\n    \/\/ printf(\"%lld %lld [%d] %lld %lld\\n\",a,ac,hasb, b,bc);\n    if (cur + ac >= k) {\n      if (a % 2 == 0) {\n        printf(\"%lld %lld\\n\", a \/ 2, a \/ 2 - 1);\n        return;\n      } else {\n        printf(\"%lld %lld\\n\", a \/ 2, a \/ 2);\n        return;\n      }\n    }\n    if (hasb && cur + ac + bc >= k) {\n      if (b % 2 == 0) {\n        printf(\"%lld %lld\\n\", b \/ 2, b \/ 2 - 1);\n        return;\n      } else {\n        printf(\"%lld %lld\\n\", b \/ 2, b \/ 2);\n        return;\n      }\n    }\n\n    ll na, nb, nac, nbc;\n    nac = nbc = 0;\n    map<ll, ll> mp;\n    if (a % 2 == 0) {\n      mp[a \/ 2] += ac;\n      mp[a \/ 2 - 1] += ac;\n    } else {\n      mp[a \/ 2] += ac;\n      mp[a \/ 2] += ac;\n    }\n    if (hasb) {\n      if (b % 2 == 0) {\n        mp[b \/ 2] += bc;\n        mp[b \/ 2 - 1] += bc;\n      } else {\n        mp[b \/ 2] += bc;\n        mp[b \/ 2] += bc;\n      }\n    }\n    int cnt = 0;\n    for (auto e : mp) {\n      if (cnt == 0) {\n        na = e.first;\n        nac = e.second;\n        cnt++;\n      } else {\n        nb = e.first;\n        nbc = e.second;\n        cnt++;\n      }\n    }\n    if (cnt == 1)\n      hasb = false;\n    if (cnt == 2)\n      hasb = true;\n    if (cnt >= 3)\n      printf(\"!!!\");\n\n    cur += ac;\n    if (hasb)\n      cur += bc;\n\n    a = na;\n    b = nb;\n    ac = nac;\n    bc = nbc;\n  }\n}\n\nint main(void) {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &tc);\n  for (int tcx = 1; tcx <= tc; tcx++) {\n    printf(\"Case #%d: \", tcx);\n    solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> Pi;\nint N, M, T, K, tc;\nint p[1000];\nvoid solve() {\n  string s;\n  cin >> s >> K;\n  memset(p, 0, sizeof p);\n  int cur = 0;\n  int ans = 0;\n  for (int i = 0; i <= s.size() - K; i++) {\n    cur += p[i];\n    if (cur % 2 == 0 && s[i] == '-') {\n      ans++;\n      cur++;\n      p[i + K] = -1;\n    } else if (cur % 2 == 1 && s[i] == '+') {\n      ans++;\n      cur++;\n      p[i + K] = -1;\n    }\n  }\n  for (int i = s.size() - K + 1; i < s.size(); i++) {\n    cur += p[i];\n    if (cur % 2 == 0 && s[i] == '-') {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    } else if (cur % 2 == 1 && s[i] == '+') {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main(void) {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &tc);\n  for (int tcx = 1; tcx <= tc; tcx++) {\n    printf(\"Case #%d: \", tcx);\n    solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> Pi;\ntypedef pair<ll, ll> Pll;\nint N, M, K, tc;\nll r[150];\nll p[150][150];\nset<Pll> cur[150];\nPll range[150][150];\nstruct event {\n  ll n;\n  ll x;\n  ll y;\n  ll t;\n};\n\nbool cmp(event e1, event e2) {\n  if (e1.n == e2.n)\n    return e1.t > e2.t;\n  return e1.n < e2.n;\n}\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\nstruct fraction {\n  ll x, y;\n  fraction() {\n    x = 0;\n    y = 1;\n  }\n  fraction(ll _x, ll _y) {\n    x = _x;\n    y = _y;\n    ll g = gcd(x, y);\n    x = x \/ g;\n    y = y \/ g;\n  }\n\n  ll ceil() { return (x + y - 1) \/ y; }\n  ll floor() { return x \/ y; }\n  void print() { printf(\"%lld\/%lld\", x, y); }\n  fraction operator*(fraction a) {\n    fraction res = fraction(a.x * x, a.y * y);\n    return res;\n  }\n};\n\nvoid solve2() {\n  for (int i = 0; i < 150; i++)\n    for (int j = 0; j < 150; j++)\n      range[i][j] = {-1, -1};\n  for (int i = 0; i < 150; i++)\n    cur[i].clear();\n  memset(p, 0, sizeof p);\n  memset(r, 0, sizeof r);\n  scanf(\"%d%d\", &N, &M);\n  for (int i = 1; i <= N; i++)\n    scanf(\"%lld\", r + i);\n  for (int i = 1; i <= N; i++) {\n    for (int j = 1; j <= M; j++)\n      scanf(\"%lld\", &p[i][j]);\n  }\n\n  ll ans = 0;\n\n  vector<int> v;\n  for (int i = 1; i <= M; i++)\n    v.push_back(i);\n\n  for (int i = 1; i <= N; i++) {\n    for (int j = 1; j <= M; j++) {\n      fraction nl, nr;\n      nl = fraction(p[i][j], r[i]);\n      nl = nl * fraction(10, 11);\n      nr = fraction(p[i][j], r[i]);\n      nr = nr * fraction(10, 9);\n\n      ll nleft = nl.ceil();\n      ll nright = nr.floor();\n      if (nleft > nright)\n        continue;\n      range[i][j] = {nleft, nright};\n      event t1, t2;\n      \/\/ 1 \uc774\uba74 \ub4e4\uc5b4\uc624\uace0 -1\uc774\uba74 \ub098\uac10\n      \/\/ printf(\"[%lld,%lld]\\n\",nleft,nright);\n    }\n  }\n\n  if (N == 1) {\n    for (int j = 1; j <= M; j++) {\n      if (range[1][j].first != -1 && range[1][j].second != -1)\n        ans++;\n    }\n    printf(\"%lld\\n\", ans);\n    return;\n  }\n\n  do {\n    ll cnt = 0;\n    for (int j = 1; j <= M; j++) {\n      int jj = v[j - 1];\n      if (range[1][j].first == -1 || range[1][j].second == -1)\n        continue;\n      if (range[2][jj].first == -1 || range[2][jj].second == -1)\n        continue;\n      ll curl = range[1][j].first;\n      ll curr = range[1][j].second;\n      curl = max(curl, range[2][jj].first);\n      curr = min(curr, range[2][jj].second);\n      if (curl <= curr)\n        cnt++;\n    }\n    ans = max(cnt, ans);\n  } while (next_permutation(v.begin(), v.end()));\n\n  printf(\"%lld\\n\", ans);\n}\nvoid solve() {\n  for (int i = 0; i < 150; i++)\n    cur[i].clear();\n  memset(p, 0, sizeof p);\n  memset(r, 0, sizeof r);\n  scanf(\"%d%d\", &N, &M);\n  for (int i = 1; i <= N; i++)\n    scanf(\"%lld\", r + i);\n  for (int i = 1; i <= N; i++) {\n    for (int j = 1; j <= M; j++)\n      scanf(\"%lld\", &p[i][j]);\n  }\n\n  ll ans = 0;\n  vector<event> v;\n  for (int i = 1; i <= N; i++) {\n    for (int j = 1; j <= M; j++) {\n      fraction nl, nr;\n      nl = fraction(p[i][j], r[i]);\n      nl = nl * fraction(10, 11);\n      nr = fraction(p[i][j], r[i]);\n      nr = nr * fraction(10, 9);\n      \/\/ nl = ((long double)1.0*p[i][j])\/(1.0*r[i]); nl *= (10.0\/11.0);\n      \/\/ nr = ((long double)1.0*p[i][j])\/(1.0*r[i]); nr *= (10.0\/9.0);\n      \/\/ cout << nl << \" \" << nr << endl;\n      ll nleft = nl.ceil();\n      ll nright = nr.floor();\n      if (nleft > nright)\n        continue;\n      \/\/ range[i][j] = {nleft,nright};\n      event t1, t2;\n      \/\/ 1 \uc774\uba74 \ub4e4\uc5b4\uc624\uace0 -1\uc774\uba74 \ub098\uac10\n      t1.n = nleft;\n      t1.y = i;\n      t1.x = j;\n      t1.t = 1;\n      t2.n = nright;\n      t2.y = i;\n      t2.x = j;\n      t2.t = -1;\n      \/\/ printf(\"[%lld,%lld]\\n\",nleft,nright);\n      v.push_back(t1);\n      v.push_back(t2);\n    }\n    \/\/ printf(\"\\n\");\n  }\n  sort(v.begin(), v.end(), cmp);\n\n  for (auto e : v) {\n    if (e.t == 1) {\n      cur[e.y].insert({e.n, e.x});\n    }\n    bool ok = true;\n    for (int i = 1; i <= N; i++) {\n      if (cur[i].size() == 0)\n        ok = false;\n    }\n    if (ok) {\n      ans++;\n      for (int i = 1; i <= N; i++) {\n        Pll die = *(cur[i].begin());\n        \/\/\tprintf(\"%lld \",p[i][die.Se]);\n        cur[i].erase(die);\n      }\n      \/\/ printf(\"\\n\");\n    }\n    if (e.t == -1) {\n      if (cur[e.y].find({e.n, e.x}) != cur[e.y].end())\n        cur[e.y].erase({e.n, e.x});\n    }\n  }\n\n  printf(\"%lld\\n\", ans);\n}\n\nint main(void) {\n  freopen(\"output2.txt\", \"w\", stdout);\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    solve2();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> Pi;\nint N, M, K, tc;\nchar p[40][40];\n\nvoid solve() {\n  scanf(\"%d%d\", &N, &M);\n  for (int i = 1; i <= N; i++)\n    scanf(\"%s\", p[i] + 1);\n\n  for (int i = 1; i <= N; i++) {\n    for (int j = 2; j <= M; j++) {\n\n      if (p[i][j] == '?') {\n        if (p[i][j - 1] != '?') {\n          p[i][j] = p[i][j - 1];\n        }\n      }\n    }\n  }\n\n  for (int i = 1; i <= N; i++) {\n    for (int j = M - 1; j >= 1; j--) {\n      if (p[i][j] == '?') {\n        if (p[i][j + 1] != '?') {\n          p[i][j] = p[i][j + 1];\n        }\n      }\n    }\n  }\n\n  for (int j = 1; j <= M; j++) {\n    for (int i = 2; i <= N; i++) {\n      if (p[i][j] == '?') {\n        if (p[i - 1][j] != '?') {\n          p[i][j] = p[i - 1][j];\n        }\n      }\n    }\n  }\n\n  for (int j = 1; j <= M; j++) {\n    for (int i = N - 1; i >= 1; i--) {\n      if (p[i][j] == '?') {\n        if (p[i + 1][j] != '?') {\n          p[i][j] = p[i + 1][j];\n        }\n      }\n    }\n  }\n  printf(\"\\n\");\n  for (int i = 1; i <= N; i++)\n    printf(\"%s\\n\", p[i] + 1);\n}\n\nint main(void) {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> Pi;\nint tc;\nvector<pair<double, double>> p;\nvoid solve() {\n  p.clear();\n  double D;\n  int N;\n  scanf(\"%lf%d\", &D, &N);\n  double mx = 0;\n\n  for (int i = 1; i <= N; i++) {\n    double k, s;\n    scanf(\"%lf%lf\", &k, &s);\n    p.push_back({D - k, s});\n  }\n  sort(p.begin(), p.end());\n  for (auto e : p) {\n    mx = max(e.first \/ e.second, mx);\n  }\n\n  printf(\"%.10lf\\n\", D \/ mx);\n}\n\nint main() {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\\n\", &tc);\n  for (int tt = 1; tt <= tc; tt++) {\n    printf(\"Case #%d: \", tt);\n    solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> Pi;\nint N, M, T, K, tc;\n\nvoid solve() {\n  scanf(\"%d\", &N);\n  int R, O, Y, G, B, V;\n  scanf(\"%d%d%d%d\", &R, &O, &Y, &G);\n  scanf(\"%d%d\", &B, &V);\n  if (R + B + Y == 1) {\n    if (R == 1)\n      printf(\"R\");\n    else if (B == 1)\n      printf(\"B\");\n    else if (Y == 1)\n      printf(\"Y\");\n    printf(\"\\n\");\n    return;\n  }\n  if (R + B < Y || B + Y < R || Y + R < B) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  char a, b, c;\n  a = 'R';\n  b = 'B';\n  c = 'Y';\n  int ac = R, bc = B, cc = Y;\n  if (ac < bc) {\n    swap(ac, bc);\n    swap(a, b);\n  }\n  if (ac < cc) {\n    swap(ac, cc);\n    swap(a, c);\n  }\n  if (bc < cc) {\n    swap(bc, cc);\n    swap(b, c);\n  }\n\n  char last = '1';\n  while (ac > 0) {\n    if (bc > cc) {\n      printf(\"%c%c\", a, b);\n      bc--;\n      ac--;\n      last = b;\n    } else {\n      printf(\"%c%c\", a, c);\n      cc--;\n      ac--;\n      last = c;\n    }\n  }\n  if (last == c) {\n    while (bc > 0 && cc > 0) {\n      printf(\"%c%c\", b, c);\n      bc--;\n      cc--;\n    }\n  } else if (last == b) {\n    while (cc > 0 && bc > 0) {\n      printf(\"%c%c\", c, b);\n      cc--;\n      bc--;\n    }\n  }\n  if (bc > 0)\n    printf(\"%c\", b);\n  if (cc > 0)\n    printf(\"%c\", c);\n\n  printf(\"\\n\");\n}\n\nint main() {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\\n\", &tc);\n  for (int tt = 1; tt <= tc; tt++) {\n    printf(\"Case #%d: \", tt);\n    solve();\n  }\n}\n"}
{"target":"kjp4155","func":"#include <algorithm>\n#include <assert.h>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <memory.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> Pi;\nint tc;\nvector<pair<double, double>> p;\nvoid solve() {\n  p.clear();\n  double D;\n  int N;\n  scanf(\"%lf%d\", &D, &N);\n  double mx = 0;\n\n  for (int i = 1; i <= N; i++) {\n    double k, s;\n    scanf(\"%lf%lf\", &k, &s);\n    p.push_back({D - k, s});\n  }\n  sort(p.begin(), p.end());\n  for (auto e : p) {\n    mx = max(e.first \/ e.second, mx);\n  }\n\n  printf(\"%.10lf\\n\", D \/ mx);\n}\n\nint main() {\n  freopen(\"output.txt\", \"w\", stdout);\n  scanf(\"%d\\n\", &tc);\n  for (int tt = 1; tt <= tc; tt++) {\n    printf(\"Case #%d: \", tt);\n    solve();\n  }\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\nstring tos(long long N) {\n  stringstream ss;\n  ss << N;\n  return ss.str();\n}\n\nlong long toll(string s) {\n  stringstream ss;\n  ss << s;\n  long long N;\n  ss >> N;\n  return N;\n}\n\nbool isTidy(long long N) {\n  stringstream ss;\n  ss << N;\n  string s = ss.str();\n  for (int i = 0, _n = (s.size() - 1); (i) < (int)_n; ++i) {\n    if (s[i] > s[i + 1])\n      return false;\n  }\n  return true;\n}\n\nlong long naive(long long N) {\n  for (long long i = N; i >= 1; i--) {\n    if (isTidy(i))\n      return i;\n  }\n  return 1;\n}\n\nlong long solve(long long N) {\n  string s = tos(N);\n  for (int i = 0, _n = (s.size() - 1); (i) < (int)_n; ++i) {\n    if (s[i] > s[i + 1]) {\n      s[i]--;\n      for (int j = (int)i + 1, _b = (int)(s.size()); (j) < _b; ++j)\n        s[j] = '9';\n      \/\/\t\t\tDD(s);\n      \/\/\t\t\tDD(toll(s));\n      return solve(toll(s));\n    }\n  }\n  return N;\n}\n\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long N;\n  \/\/\tRANGE(i, 1, 100000) {\n  \/\/\t\tll nans = naive(i);\n  \/\/\t\tll ans = solve(i);\n  \/\/\/\/\t\tDD(i);\n  \/\/\/\/\t\tDD(nans);\n  \/\/\/\/\t\tDD(ans);\n  \/\/\t\tif(nans!=ans) {\n  \/\/\t\t\tDD(i);\n  \/\/\t\t\tDD(nans);\n  \/\/\t\t\tDD(ans);\n  \/\/\t\t\tassert(nans==ans);\n  \/\/\t\t}\n  \/\/\t}\n  \/\/\treturn 0;\n\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> N;\n    \/\/\t\tll nans = naive(N);\n    long long ans = solve(N);\n    \/\/\t\tassert(nans==ans);\n    cout << \"Case #\" << ttt + 1 << \": \" << ans << endl;\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\nvector<long long> put(const vector<long long> &w) {\n  long long N = w.size();\n  long long bi = -1;\n  long long bMin = -1;\n  long long bMax = -1;\n  for (int i = 0, _n = (N); (i) < (int)_n; ++i) {\n    if (w[i])\n      continue;\n    long long Ls = 0, Rs = 0;\n    for (int j = i - 1; j >= 0; j--)\n      if (w[j])\n        break;\n      else\n        Ls++;\n    for (int j = i + 1; j < N; j++)\n      if (w[j])\n        break;\n      else\n        Rs++;\n    long long Min = min(Ls, Rs);\n    long long Max = max(Ls, Rs);\n    if (bMin < Min || (bMin == Min && bMax < Max)) {\n      bMin = Min;\n      bMax = Max;\n      bi = i;\n    }\n  }\n  assert(bi >= 0);\n  return {bi, bMin, bMax};\n}\n\n\/\/ return: min, max\nvector<long long> naive(long long N, long long K) {\n  vector<long long> w(N);\n  vector<long long> c;\n  for (int i = 0, _n = (K); (i) < (int)_n; ++i) {\n    c = put(w);\n    \/\/\t\tDD(c[0]);\n    w[c[0]] = 1;\n    \/\/\t\tDD(w);\n  }\n  return {c[1], c[2]};\n}\n\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long N, K;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> N >> K;\n    auto ans = naive(N, K);\n    cout << \"Case #\" << ttt + 1 << \": \" << ans[1] << \" \" << ans[0] << endl;\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long K;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> s >> K;\n    long long N = s.size();\n    int ans = 0;\n    for (int i = (int)0, _b = (int)(N - K + 1); (i) < _b; ++i) {\n      if (s[i] == '-') {\n        for (int j = 0, _n = (K); (j) < (int)_n; ++j)\n          s[i + j] = s[i + j] == '-' ? '+' : '-';\n        ans++;\n      }\n      \/\/\t\t\tDD(s);\n    }\n    if (count((s).begin(), (s).end(), '-')) {\n      cout << \"Case #\" << ttt + 1 << \": IMPOSSIBLE\" << endl;\n    } else {\n      cout << \"Case #\" << ttt + 1 << \": \" << ans << endl;\n    }\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long N, P;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> N >> P;\n    vector<long long> g(N);\n    vector<vector<long long>> p(N, vector<long long>(P));\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i)\n      cin >> g[i];\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i) {\n      for (int j = 0, _n = (P); (j) < (int)_n; ++j)\n        cin >> p[i][j];\n    }\n    long long ans = 0;\n    for (int cnt = (int)1, _b = (int)(1000001); (cnt) < _b; ++cnt) {\n      while (1) {\n        vector<long long> use(N, -1);\n        for (int i = 0, _n = (N); (i) < (int)_n; ++i) {\n          for (int pi = 0, _n = (P); (pi) < (int)_n; ++pi) {\n            if (p[i][pi] && g[i] * cnt * 90 <= p[i][pi] * 100 &&\n                p[i][pi] * 100 <= g[i] * cnt * 110) {\n              use[i] = pi;\n              break;\n            }\n          }\n        }\n        bool ok = find((use).begin(), (use).end(), -1) == use.end();\n        if (ok) {\n          for (int i = 0, _n = (N); (i) < (int)_n; ++i)\n            p[i][use[i]] = 0;\n          ans++;\n        } else\n          break;\n      }\n    }\n    cout << \"Case #\" << ttt + 1 << \": \" << ans << endl;\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long W, H;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> H >> W;\n    vector<string> m(H);\n    for (int i = 0, _n = (H); (i) < (int)_n; ++i)\n      cin >> m[i];\n    for (int y = 0, _n = (H); (y) < (int)_n; ++y) {\n      for (int x = 0, _n = (W); (x) < (int)_n; ++x) {\n        if (m[y][x] == '?' && 0 <= x - 1 && m[y][x - 1] != '?')\n          m[y][x] = m[y][x - 1];\n      }\n      for (int xx = 0, _n = (W); (xx) < (int)_n; ++xx) {\n        int x = W - 1 - xx;\n        if (m[y][x] == '?' && x + 1 < W && m[y][x + 1] != '?')\n          m[y][x] = m[y][x + 1];\n      }\n    }\n    for (int y = 0, _n = (H); (y) < (int)_n; ++y) {\n      if (m[y][0] == '?' && 0 <= y - 1 && m[y - 1][0] != '?')\n        m[y] = m[y - 1];\n    }\n    for (int yy = 0, _n = (H); (yy) < (int)_n; ++yy) {\n      int y = H - 1 - yy;\n      if (m[y][0] == '?' && y + 1 < H && m[y + 1][0] != '?')\n        m[y] = m[y + 1];\n    }\n    int ans = 0;\n    cout << \"Case #\" << ttt + 1 << \": \" << endl;\n    for (int y = 0, _n = (H); (y) < (int)_n; ++y) {\n      cout << m[y] << endl;\n    }\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long D, N, K, S;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> D >> N;\n    \/\/\t\tDD(ttt);\n    \/\/\t\tDD(D);\n    \/\/\t\tDD(N);\n    long double t = 0;\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i) {\n      cin >> K >> S;\n      long double lt = ((long double)D - K) \/ S;\n      \/\/\t\t\tDD(D-K);\n      \/\/\t\t\tDD(S);\n      \/\/\t\t\tDD(lt);\n      \/\/\t\t\tprintf(\"%.9Lf\\n\", lt);\n      t = max(t, lt);\n    }\n    \/\/\t\tDD(t);\n    long double ans = D \/ t;\n    printf(\"Case #%d: %.9Lf\\n\", ttt + 1, ans);\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long N, R, O, Y, G, B, V;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    vector<pair<int, char>> h = {\n        {R, 'R'},\n        {Y, 'Y'},\n        {B, 'B'},\n    };\n    sort((h).begin(), (h).end());\n    string ans = \"IMPOSSIBLE\";\n    if (h[2].first <= h[0].first + h[1].first) {\n      ans = \"\";\n      long long As = h[2].first;\n      vector<vector<string>> w(3, vector<string>(As));\n      for (int i = 0, _n = (As); (i) < (int)_n; ++i) {\n        w[0][i] = string(1, h[2].second);\n        w[1][i] = i < h[0].first ? string(1, h[0].second) : \"\";\n        w[2][i] = (As - 1 - i) < h[1].first ? string(1, h[1].second) : \"\";\n      }\n      for (int i = 0, _n = (As); (i) < (int)_n; ++i) {\n        for (int j = 0, _n = (3); (j) < (int)_n; ++j)\n          ans += w[j][i];\n      }\n    }\n    cout << \"Case #\" << ttt + 1 << \": \" << ans << endl;\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kojingharang","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <vector>\n\n#include <cassert>\n#include <cctype>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\n\n\/\/#define PII pair<ll, ll>\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const map<T0, T1> &v) {\n  for (typename map<T0, T1>::const_iterator p = v.begin(); p != v.end(); p++) {\n    os << p->first << \": \" << p->second << \" \";\n  }\n  return os;\n}\ntemplate <typename T0, typename T1>\nstd::ostream &operator<<(std::ostream &os, const pair<T0, T1> &v) {\n  os << v.first << \": \" << v.second << \" \";\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<T> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << \" \";\n  }\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const set<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const deque<T> &v) {\n  vector<T> tmp(v.begin(), v.end());\n  os << tmp;\n  return os;\n}\ntemplate <typename T>\nstd::ostream &operator<<(std::ostream &os, const vector<vector<T>> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    os << v[i] << endl;\n  }\n  return os;\n}\n\nstruct Dijkstra {\n  struct edge {\n    int to;\n    double cost;\n  };\n  vector<vector<edge>> G;\n  vector<double> V;\n  const double Max = 1LL << 60;\n  Dijkstra(int N) {\n    G = vector<vector<edge>>(N);\n    V = vector<double>(N, Max);\n  }\n  void add_edge(int v0, int v1, double cost) {\n    if (v0 < G.size() && v1 < G.size())\n      G[v0].push_back((edge){v1, cost});\n  }\n  typedef pair<double, long long> PII;\n  long long run(int S, int E) {\n    V[S] = 0;\n    priority_queue<PII> q;\n    q.push(make_pair(0, S));\n    while (q.size()) {\n      PII el = q.top();\n      q.pop();\n      if (el.second == E)\n        break;\n      if (-el.first > V[el.second])\n        continue;\n      for (int i = 0; i < (int)G[el.second].size(); i++) {\n        const edge &e = G[el.second][i];\n        if (V[e.to] > V[el.second] + e.cost) {\n          V[e.to] = V[el.second] + e.cost;\n          q.push(make_pair(-V[e.to], e.to));\n        }\n      }\n    }\n    if (E < 0)\n      return -1;\n    return V[E] == Max ? -1 : V[E];\n  }\n};\n\n\/*\n\n*\/\nint main() {\n  int test_cases;\n  cin >> test_cases;\n  long long N, Q;\n  string s;\n  for (int ttt = 0, _n = (test_cases); (ttt) < (int)_n; ++ttt) {\n    cin >> N >> Q;\n    vector<long long> En(N), Sp(N);\n    vector<vector<long long>> dist(N, vector<long long>(N)); \/\/ [i][j] i->j\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i)\n      cin >> En[i] >> Sp[i];\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i)\n      for (int j = 0, _n = (N); (j) < (int)_n; ++j)\n        cin >> dist[i][j];\n    long long dummy;\n    cin >> dummy >> dummy;\n\n    \/\/ node: (cityIdx, speedIdx)\n    Dijkstra d(N * N);\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i) {\n      long long L = 0;\n      for (int j = (int)i + 1, _b = (int)(N); (j) < _b; ++j) {\n        L += dist[j - 1][j];\n        if (dist[j - 1][j] == -1 || L > En[i])\n          break;\n\n        double t = (double)L \/ Sp[i];\n        \/\/\t\t\t\tDD(i);DD(j);DD(t);\n        \/\/ \u306e\u308a\u304b\u3048\u308b\n        d.add_edge(i * N + i, j * N + j, t);\n        \/\/ \u306e\u308a\u304b\u3048\u306a\u3044\n        d.add_edge(i * N + i, j * N + i, t);\n      }\n    }\n    d.run(0 * N + 0, -1);\n    double ans = 1e100;\n    \/\/\t\tDD(d.V);\n    for (int i = 0, _n = (N); (i) < (int)_n; ++i)\n      ans = min(ans, d.V[(N - 1) * N + i]);\n\n    printf(\"Case #%d: %.9f\\n\", ttt + 1, ans);\n    \/\/\t\treturn 0;\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nlong long f[1000][10];\nint n, m, k, cs, ans;\nint N;\nstring st;\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> st;\n    for (int w = 0; w < st.size(); w++) {\n      if (st[0] == '0')\n        break;\n      for (int i = 1; i < st.size(); i++) {\n        if (st[i] < st[i - 1]) {\n          st[i - 1]--;\n          for (int j = i; j < st.size(); j++)\n            st[j] = '9';\n          break;\n        }\n      }\n    }\n    if (st[0] == '0')\n      for (int i = 1; i < st.size(); i++)\n        cout << st[i];\n    else\n      cout << st;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nlong long f[1000][10];\nint n, m, k, cs, ans;\nint N, K;\nstring st;\nstruct Rec {\n  Rec() {}\n  Rec(int l, int r) : l(l), r(r) {\n    d = (r - l) \/ 2;\n    x = r - l - d;\n  }\n  int l, r, d, x;\n};\npriority_queue<Rec> Heap;\nbool operator<(Rec a, Rec b) {\n  if (a.d != b.d)\n    return a.d < b.d;\n  if (a.x != b.x)\n    return a.x < b.x;\n  return a.l > b.l;\n}\nint main() {\n  cin >> T;\n  while (T--) {\n    while (Heap.size())\n      Heap.pop();\n    printf(\"Case #%d: \", ++cs);\n    cin >> N >> K;\n    Heap.push(Rec(1, N));\n    int npos;\n    K--;\n    while (K--) {\n      Rec now = Heap.top();\n      Heap.pop();\n      npos = (now.l + now.r) \/ 2;\n      if (now.l <= npos - 1)\n        Heap.push(Rec(now.l, npos - 1));\n      if (npos + 1 <= now.r)\n        Heap.push(Rec(npos + 1, now.r));\n    }\n    \/\/ int Min = N + 1, Max = 0;\n    \/\/ while(Heap.size()){\n    \/\/ \tMin = min(Min, Heap.top().d);\n    \/\/ }\n    \/\/ cout << Heap.top().l<<\" \"<< Heap.top().r << endl;\n    cout << Heap.top().x << \" \" << Heap.top().d << endl;\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nstruct Rec {\n  int u, zt, num, dis;\n  Rec() {}\n  Rec(int u, int zt, int num, int dis) : u(u), zt(zt), num(num), dis(dis) {}\n};\nbool operator<(Rec a, Rec b) { return a.dis > b.dis; }\nint n, m, k, cs, ans;\nstring st;\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> st >> k;\n    int ans = 0;\n    for (int i = 0; i < st.size() - k + 1; i++) {\n      if (st[i] == '-') {\n        ans++;\n        for (int j = i; j < i + k; j++) {\n          if (st[j] == '-')\n            st[j] = '+';\n          else\n            st[j] = '-';\n        }\n      }\n    }\n    int ck = 1;\n    for (int i = 0; i < st.size(); i++) {\n      if (st[i] == '-')\n        ck = 0;\n    }\n    if (ck)\n      cout << ans << endl;\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nlong long f[1000][10];\nint n, m, k, cs, ans;\nint N, K;\nstring st;\nint Hd, Ad, Hk, Ak, B, D;\nstruct Rec {\n  int Hd, Ad, Hk, Ak;\n  Rec(int Hd, int Ad, int Hk, int Ak) : Hd(Hd), Ad(Ad), Hk(Hk), Ak(Ak) {}\n  Rec() {}\n};\nint operator<(Rec a, Rec b) {\n  if (a.Hd == b.Hd && a.Ad == b.Ad && a.Hk == b.Hk)\n    return a.Ak < b.Ak;\n  if (a.Hd == b.Hd && a.Ad == b.Ad)\n    return a.Hk < b.Hk;\n  if (a.Hd == b.Hd)\n    return a.Ad < b.Ad;\n  return a.Hd < b.Hd;\n}\nmap<Rec, int> dis;\n\nvoid Push(queue<Rec> &Q, Rec w, int turn) {\n  w.Hd -= w.Ak;\n  if (w.Hd <= 0)\n    return;\n  \/\/ cout << w.Ak <<\" \"<< w.Ad <<\" \"<<w.Hk << \" \"<< w.Hd<<\" \"<<turn<<endl;\n  if (dis.find(w) != dis.end())\n    return;\n  dis[w] = turn;\n  Q.push(w);\n}\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> Hd >> Ad >> Hk >> Ak >> B >> D;\n    if ((Ak - D) > Hd) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    queue<Rec> Q;\n    Q.push(Rec(Hd, Ad, Hk, Ak));\n    dis.clear();\n    dis[Rec(Hd, Ad, Hk, Ak)] = 0;\n    int ck = 1;\n    while (Q.size()) {\n      Rec nxt = Q.front();\n      Q.pop();\n      int turn = dis[nxt] + 1;\n      Rec cure = nxt;\n      cure.Hd = Hd;\n      Push(Q, cure, turn);\n\n      Rec attack = nxt;\n      attack.Hk -= nxt.Ad;\n      \/\/ if  (attack.Hk == 1){\n      \/\/ cout <<\"!\"<< nxt.Hk<<\" \"<< nxt.Hd << endl;\n      \/\/ }\n      if (attack.Hk <= 0) {\n        \/\/ cout << nxt.Hk <<\" \"<<nxt.Hd<<endl;\n        ans = turn;\n        ck = 0;\n        break;\n      }\n      Push(Q, attack, turn);\n\n      Rec buff = nxt;\n      buff.Ad += B;\n      Push(Q, buff, turn);\n\n      Rec debuff = nxt;\n      debuff.Ak = max(0, debuff.Ak - D);\n      Push(Q, debuff, turn);\n    }\n    if (!ck)\n      cout << ans << endl;\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nlong long f[1000][10];\nint n, m, k, cs, ans;\nint N, K;\nstring st;\nchar mp[100][100];\nint L[100], R[100], U[100], D[100];\nvector<int> color;\nvoid pushl(int id) {\n  while (L[id] > 1) {\n    int ck = 1;\n    for (int i = U[id]; ck && i <= D[id]; i++) {\n      ck &= (mp[i][L[id] - 1] == '?');\n    }\n    if (ck)\n      L[id]--;\n    else\n      break;\n  }\n}\nvoid pushr(int id) {\n  while (R[id] < m) {\n    int ck = 1;\n    for (int i = U[id]; ck && i <= D[id]; i++) {\n      ck &= (mp[i][R[id] + 1] == '?');\n    }\n    if (ck)\n      R[id]++;\n    else\n      break;\n  }\n}\nvoid pushu(int id) {\n  while (U[id] > 0) {\n    int ck = 1;\n    for (int i = L[id]; ck && i <= R[id]; i++) {\n      ck &= (mp[U[id] - 1][i] == '?');\n    }\n    if (ck)\n      U[id]--;\n    else\n      break;\n  }\n}\nvoid pushd(int id) {\n  while (D[id] < n) {\n    int ck = 1;\n    for (int i = L[id]; ck && i <= R[id]; i++) {\n      ck &= (mp[D[id] + 1][i] == '?');\n    }\n    if (ck)\n      D[id]++;\n    else\n      break;\n  }\n}\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \\n\", ++cs);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n      cin >> (mp[i] + 1);\n    for (int i = 0; i <= 27; i++) {\n      L[i] = U[i] = 10000;\n      R[i] = D[i] = -1;\n    }\n    color.clear();\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= m; j++) {\n        if (mp[i][j] == '?')\n          continue;\n        int id = mp[i][j] - 'A';\n        color.push_back(id);\n        L[id] = min(L[id], j);\n        R[id] = max(R[id], j);\n        U[id] = min(U[id], i);\n        D[id] = max(D[id], i);\n      }\n    for (int i = 0; i < color.size(); i++) {\n      pushl(color[i]);\n      pushr(color[i]);\n      pushu(color[i]);\n      pushd(color[i]);\n      for (int x = U[color[i]]; x <= D[color[i]]; x++)\n        for (int y = L[color[i]]; y <= R[color[i]]; y++)\n          mp[x][y] = 'A' + color[i];\n    }\n    for (int i = 1; i <= n; i++) {\n      cout << (mp[i] + 1) << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 310, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\nlong long f[Maxn][Maxn][2], vis[Maxn][Maxn][2];\nint a[Maxn];\nint n, m, k, cs, ans;\nstruct Rec {\n  int a, b, l;\n} w[Maxn];\n\/\/ int check(double speed){\n\/\/ \trep(i,1,N){\n\/\/ \t\tif (v[i] <= speed){\n\/\/ \t\t\tif (D - S[i]) \/ v[i]\n\/\/ \t\t}\n\/\/ \t}\n\/\/ }\nint s[Maxn], v[Maxn], D, N;\ndouble t;\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> D >> N;\n    t = -1;\n    for (int i = 1; i <= N; i++) {\n      cin >> s[i] >> v[i];\n      \/\/ cout<< s[i] <<\" \"<<v[i] << endl;\n      t = max(t, 1. * (D - s[i]) \/ v[i]);\n    }\n\n    \/\/ double l = 0, r = 1e9;\n    \/\/ while (r - l > 1e6){\n    \/\/ \tdouble mid = (l + r) \/ 2.0;\n    \/\/ \tif (check(mid)) l = mid;\n    \/\/ \telse r = mid;\n    \/\/ }\n    printf(\"%.6f\\n\", D \/ t);\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 3010, Maxk = 5010, Mo = 1e9 + 7, oo = INT_MAX >> 2;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\n\/\/ ll f[Maxn][Maxn][2],vis[Maxn][Maxn][2];\nint n, m, k, cs;\nstruct Rec {\n  int a, b, l;\n};\n\/\/ int check(double speed){\n\/\/ \trep(i,1,N){\n\/\/ \t\tif (v[i] <= speed){\n\/\/ \t\t\tif (D - S[i]) \/ v[i]\n\/\/ \t\t}\n\/\/ \t}\n\/\/ }\nint N, R, O, second, G, B, V;\nint num[10], ans[Maxn];\nvector<int> w[1010];\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> N;\n    for (int i = 0; i < 6; i++) {\n      cin >> num[i];\n    }\n    int Max = max(num[0], max(num[2], num[4]));\n    if (N - Max < Max) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    for (int i = 1; i <= 1000; i++)\n      w[i].clear();\n    int x = 0, i = 1;\n    if (Max == num[0]) {\n      x = 0;\n      for (; i <= num[2]; i++)\n        w[(i - 1) % num[x] + 1].push_back(2);\n      for (; i <= N - num[x]; i++)\n        w[(i - 1) % num[x] + 1].push_back(4);\n\n    } else if (Max == num[2]) {\n      x = 2;\n      for (; i <= num[0]; i++)\n        w[(i - 1) % num[x] + 1].push_back(0);\n      for (; i <= N - num[x]; i++)\n        w[(i - 1) % num[x] + 1].push_back(4);\n    } else {\n      x = 4;\n      for (; i <= num[0]; i++)\n        w[(i - 1) % num[x] + 1].push_back(0);\n      for (; i <= N - num[x]; i++)\n        w[(i - 1) % num[x] + 1].push_back(2);\n    }\n    ans[0] = 0;\n    for (int i = 1; i <= num[x]; i++) {\n      ans[++ans[0]] = x;\n      for (int j = 0; j < w[i].size(); j++)\n        ans[++ans[0]] = w[i][j];\n    }\n\n    \/\/ int ck = 0;\n    \/\/ ans[0] = -1;\n    \/\/ for (int i=1;i<=N;i++){\n    \/\/ \tint Max = 0;\n    \/\/ \tfor (int j = 0; j < 6; j ++){\n    \/\/ \t\tif (num[j] > Max && j != ans [i-1]){\n    \/\/ \t\t\tMax = num[j];\n    \/\/ \t\t\tans[i] = j;\n    \/\/ \t\t}\n    \/\/ \t}\n    \/\/ \tif (Max == 0){\n    \/\/ \t\tck = 1;\n    \/\/ \t}\n    \/\/ \tnum[ans[i]]--;\n    \/\/ }\n    \/\/ if (ans[1] == ans[N]) ck = 1;\n    \/\/ if(ck) puts(\"IMPOSSIBLE\");\n    \/\/ else {\n    for (int i = 1; i <= N; i++) {\n      if (ans[i] == 0)\n        cout << 'R';\n      if (ans[i] == 2)\n        cout << 'Y';\n      if (ans[i] == 4)\n        cout << 'B';\n    }\n    cout << endl;\n    \/\/ }\n    \/\/ printf(\"%.6f\\n\", D \/ t);\n  }\n  return 0;\n}\n"}
{"target":"kuzphi","func":"#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <fstream>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\nconst double pi = acos(-1.), eps = 1e-6;\nconst int Maxn = 110, Maxk = 5010, Mo = 1e9 + 7, oo = 2e9 + 1;\nconst int sp[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nint T;\nusing namespace std;\n\/\/ ll f[Maxn][Maxn][2],vis[Maxn][Maxn][2];\nint n, m, k, cs;\nstruct Rec {\n  int a, b, l;\n};\n\/\/ int check(double speed){\n\/\/ \trep(i,1,N){\n\/\/ \t\tif (v[i] <= speed){\n\/\/ \t\t\tif (D - S[i]) \/ v[i]\n\/\/ \t\t}\n\/\/ \t}\n\/\/ }\n\/\/ int N, R, O, Y, G, B, V;\nint N, Q;\nint num[10], ans[Maxn];\nlong long d[Maxn][Maxn];\nint S[Maxn], E[Maxn];\ndouble t[Maxn][Maxn];\nvector<int> w[1010];\nint main() {\n  cin >> T;\n  while (T--) {\n    printf(\"Case #%d: \", ++cs);\n    cin >> n >> Q;\n    for (int i = 1; i <= n; i++)\n      cin >> E[i] >> S[i];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        cin >> d[i][j];\n        if (d[i][j] == -1)\n          d[i][j] = oo;\n      }\n    for (int i = 1; i <= n; i++)\n      d[i][i] = 0;\n\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n    \/\/ rep(i,1,n){\n    \/\/ \trep(j,1,n) cout << d[i][j]<<\" \";\n    \/\/ \tcout << endl;\n    \/\/ }\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        if (d[i][j] > E[i])\n          t[i][j] = 1e100;\n        else\n          t[i][j] = 1. * d[i][j] \/ S[i];\n      }\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          t[i][j] = min(t[i][j], t[i][k] + t[k][j]);\n    for (int i = 1; i <= Q; i++) {\n      int u, v;\n      cin >> u >> v;\n      printf(\"%.7f\", t[u][v]);\n      if (i < Q)\n        cout << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"kyleyip","func":"#include <cstdio>\nusing namespace std;\nlong long f[30], ans, n, m;\nint a[30], l;\nvoid work() {\n  int j, i, k;\n  for (j = l; j >= 1; j--) {\n    if (a[j] < a[j + 1])\n      return;\n    if (a[j] == a[j + 1])\n      continue;\n    ans = 0;\n    for (k = l; k >= j + 1; k--) {\n      ans += a[k] * f[k];\n    }\n    ans += (a[j] - 1) * f[j];\n    for (i = 1; i < j; i++)\n      ans += 9 * f[i];\n  }\n  ans = m;\n  return;\n}\nint main() {\n  int i, j, k, test;\n  freopen(\"b.out\", \"w\", stdout);\n  f[1] = 1;\n  for (i = 2; i <= 19; i++)\n    f[i] = f[i - 1] * 10;\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%lld\", &n);\n    l = 0;\n    m = n;\n    while (n != 0) {\n      l++;\n      a[l] = n % 10;\n      n \/= 10;\n    }\n    a[l + 1] = 0;\n    work();\n    printf(\"Case #%d: %lld\\n\", kase, ans);\n  }\n  fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nbool a[1010];\nint b[1010];\nint t, n, k, j, l, c, m, i, max1, max2, maxi, now1, now2;\nint min(int a, int b) { return a < b ? a : b; }\nint max(int a, int b) { return a > b ? a : b; }\n\nint main() {\n  \/\/ freopen(\"c.out\",\"w\",stdout);\n  scanf(\"%d\", &t);\n  for (int kase = 1; kase <= t; kase++) {\n    scanf(\"%d%d\", &n, &k);\n    memset(a, 0, sizeof(a));\n    a[0] = 1;\n    a[n + 1] = 1;\n    for (i = 1; i <= k; i++) {\n      l = 1;\n      b[1] = 0;\n      for (j = 1; j <= n + 1; j++)\n        if (a[j] == 1)\n          b[++l] = j;\n      max1 = -1;\n      max2 = -1;\n      maxi = 0;\n      for (j = 1; j < l; j++) {\n        if (b[j + 1] - b[j] == 1)\n          continue;\n        c = (b[j + 1] + b[j] + 1) \/ 2 - 1;\n        for (m = 1; m <= 3; m++) {\n          now1 = min(c - b[j], b[j + 1] - c) - 1;\n          if (now1 < max1)\n            continue;\n          now2 = max(c - b[j], b[j + 1] - c) - 1;\n          if (now1 > max1) {\n            max1 = now1;\n            max2 = now2;\n            maxi = c;\n          } else {\n            if (now2 < max2)\n              continue;\n            if (now2 > max2) {\n              max2 = now2;\n              maxi = c;\n            } else if (c < maxi) {\n              maxi = c;\n            }\n          }\n          c++;\n        }\n      }\n      a[maxi] = 1;\n    }\n    printf(\"Case #%d: %d %d\\n\", kase, max2, max1);\n  }\n  \/\/ fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar s[1010];\nint t, l, ans, i, j, k, a[1010];\n;\nint main() {\n  \/\/ freopen(\"a.out\",\"w\",stdout);\n  scanf(\"%d\", &t);\n\n  for (int kase = 1; kase <= t; kase++) {\n    scanf(\"%s\", s);\n    scanf(\"%d\", &k);\n    ans = 0;\n    l = strlen(s);\n    for (i = 1; i <= l; i++)\n      if (s[i - 1] == '+')\n        a[i] = 1;\n      else\n        a[i] = 0;\n    bool flag = 0;\n    for (i = 1; i <= l; i++) {\n      if (a[i] == 1)\n        continue;\n      if (i + k - 1 > l) {\n        flag = 1;\n        break;\n      }\n      for (j = i; j < i + k; j++)\n        a[j] = 1 - a[j];\n      ans++;\n    }\n    if (flag)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", kase);\n    else\n      printf(\"Case #%d: %d\\n\", kase, ans);\n  }\n  \/\/ fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <cmath>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint test, n, p, i, j, l, r, a[100][100], b[100][100], c[100], num[100],\n    f[10010];\nbool cmp(int i, int j) {\n  if (b[1][i] < a[2][j])\n    return 0;\n  if (b[2][j] < a[1][i])\n    return 0;\n  \/\/ if (a[1][i]<=a[2][j]&&a[2][j]<=b[1][i]) return 1;\n  \/\/ if (a[1][i]<=b[2][j]&&b[2][j]<=b[1][i]) return 1;\n  \/\/ if (a[2][j]<=a[1][i]&&b[1][i]<=b[2][j]) return 1;\n  return 1;\n}\nint main() {\n  \/\/ freopen(\"b.in\",\"r\",stdin);\n  \/\/ freopen(\"b2.out\",\"w\",stdout);\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%d%d\", &n, &p);\n    for (i = 1; i <= n; i++)\n      scanf(\"%d\", &c[i]);\n    for (i = 1; i <= n; i++) {\n      num[i] = 0;\n      for (j = 1; j <= p; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        l = (ceil)((double)x \/ 1.1 \/ (double)c[i]);\n        r = (floor)((double)x \/ 0.9 \/ (double)c[i]);\n        if (l <= 0)\n          l = 1;\n        if (l <= r) {\n          ++num[i];\n          a[i][num[i]] = l;\n          b[i][num[i]] = r;\n        }\n      }\n    }\n    printf(\"Case #%d: \", kase);\n    int ans = num[1];\n    for (i = 1; i <= n; i++)\n      if (num[i] < ans)\n        ans = num[i];\n    if (ans == 0) {\n      printf(\"0\\n\");\n      continue;\n    }\n    if (n == 1) {\n      printf(\"%d\\n\", num[1]);\n      continue;\n    }\n    if (n == 2) {\n      ans = 0;\n      int m = 1 << num[2];\n      memset(f, 0, sizeof(f));\n      for (i = 1; i <= num[1]; i++)\n        for (j = 0; j < m; j++) {\n          for (int k = 1; k <= num[2]; k++)\n            if (!(j & (1 << (k - 1)))) {\n              \/\/ printf(\"111111111\\n\");\n              if (cmp(i, k)) {\n                \/\/ if (k==2) {printf(\"111111111 \");printf(\"%d\\n\",j);}\n                \/\/ printf(\"11111111\\n\");\n                int now = j | (1 << (k - 1));\n                if (f[now] < f[j] + 1) {\n                  f[now] = f[j] + 1;\n                } \/\/ printf(\"%d\\n\",now);}\n                if (ans < f[now])\n                  ans = f[now];\n              }\n            }\n        }\n      printf(\"%d\\n\", ans);\n    }\n  }\n  \/\/ fclose(stdin);fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nint test, r, c, i, j, k, a[100];\nchar s[100][100];\nbool used[100];\nint main() {\n  \/\/ freopen(\"a.in\",\"r\",stdin);\n  \/\/ freopen(\"a.out\",\"w\",stdout);\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%d%d\", &r, &c);\n    for (i = 1; i <= r; i++)\n      scanf(\"%s\", s[i]);\n    memset(used, 0, sizeof(used));\n    for (i = 1; i <= r; i++) {\n      char now = '?';\n      for (j = 0; j < c; j++) {\n        if (used[s[i][j] - 'A'])\n          continue;\n        if (s[i][j] == '?')\n          s[i][j] = now;\n        if (now != s[i][j])\n          now = s[i][j];\n      }\n      if (s[i][c - 1] == '?') {\n        continue;\n      }\n\n      for (j = c - 1; j >= 0; j--)\n        if (s[i][j] == '?')\n          s[i][j] = s[i][j + 1];\n      if (i == r)\n        continue;\n      a[0] = 0;\n      int num = 0;\n      for (j = 1; j < c; j++)\n        if (s[i][j] != s[i][j - 1])\n          a[++num] = j;\n      a[++num] = c;\n      for (k = 0; k < num; k++) {\n        used[s[i][a[k]] - 'A'] = 1;\n        bool flag = 1;\n        for (j = a[k]; j < a[k + 1]; j++)\n          if (s[i + 1][j] != '?') {\n            flag = 0;\n            break;\n          }\n        if (flag)\n          for (j = a[k]; j < a[k + 1]; j++)\n            s[i + 1][j] = s[i][a[k]];\n      }\n      \/\/ printf(\"      %s\\n\",s[i]);\n    }\n    for (i = r; i >= 1; i--) {\n      if (s[i][0] == '?') {\n        \/\/ printf(\"111111111111\\n\");\n        for (j = 0; j < c; j++)\n          s[i][j] = s[i + 1][j];\n      }\n    }\n    printf(\"Case #%d:\\n\", kase);\n    for (i = 1; i <= r; i++) {\n      printf(\"%s\\n\", s[i]);\n    }\n  }\n  \/\/ fclose(stdin);fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\nint test, n;\ndouble d, e[1010], t[1010];\nstruct kk {\n  double k, s;\n} a[1010];\nbool cmp(kk A, kk B) { return A.k < B.k || (A.k == B.k && A.s < B.s); }\nbool check(double x) {\n  for (int i = 1; i <= n; i++) {\n    \/\/ if (x<a[i].s+(1e-10)) continue;\n    double cur = d \/ x;\n    if (cur < e[i])\n      return 0;\n  }\n  return 1;\n}\nint main() {\n  freopen(\"a.in\", \"r\", stdin);\n  freopen(\"a.out\", \"w\", stdout);\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%lf%d\", &d, &n);\n    int i;\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lf%lf\", &a[i].k, &a[i].s);\n    }\n    \/\/ sort(a+1,a+n+1,cmp);\n    double ans = d \/ ((d - a[1].k) \/ a[1].s);\n    for (i = 1; i <= n; i++) {\n      \/\/ if (a[i].k<a[i+1].k&&a[i].s<a[i+1].s)\n      \/\/{\n      \/\/\tt[i]=(a[i+1].k-a[i].k)\/(a[i].s-a[i+1].s);\n      e[i] = (d - a[i].k) \/ a[i].s;\n      if (d \/ e[i] < ans)\n        ans = d \/ e[i];\n      \/\/ if (e[i]<d) ans=d;\n      \/\/}\n      \/\/ else t[i]=0;\n    }\n    \/*double l=0; double r=d;\n    while (l+1e-8<r)\n    {\n            double mid=(l+r)\/2.0;\n            if (check(mid)) l=mid;\n            else r=mid;\n    }*\/\n\n    printf(\"Case #%d: %.8lf\\n\", kase, ans);\n  }\n  fclose(stdin);\n  fclose(stdout);\n}\n"}
{"target":"kyleyip","func":"#include <cstdio>\nusing namespace std;\nint test, N, R, O, Y, G, B, V, t;\nchar a[6];\nint main() {\n  freopen(\"b.in\", \"r\", stdin);\n  freopen(\"b.out\", \"w\", stdout);\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n    if (R > Y + B || Y > R + B || B > R + Y) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", kase);\n      continue;\n    }\n\n    if (R >= Y && Y >= B) {\n      a[1] = 'R';\n      a[2] = 'Y';\n      a[3] = 'B';\n    } else if (R <= Y && Y <= B) {\n      a[1] = 'B';\n      a[2] = 'Y';\n      a[3] = 'R';\n    } else if (R >= B && B >= Y) {\n      a[1] = 'R';\n      a[2] = 'B';\n      a[3] = 'Y';\n    } else if (R <= B && B <= Y) {\n      a[1] = 'Y';\n      a[2] = 'B';\n      a[3] = 'R';\n    } else if (B >= R && R >= Y) {\n      a[1] = 'B';\n      a[2] = 'R';\n      a[3] = 'Y';\n    } else if (B <= R && R <= Y) {\n      a[1] = 'Y';\n      a[2] = 'R';\n      a[3] = 'B';\n    }\n    if (R < Y) {\n      t = R;\n      R = Y;\n      Y = t;\n    }\n    if (R < B) {\n      t = R;\n      R = B;\n      B = t;\n    }\n    if (Y < B) {\n      t = Y;\n      Y = B;\n      B = t;\n    }\n    \/\/ YRYR...BRBR....YBR.........R\n    \/\/ x+y+z=R,x+z=Y,y+z=B\n    \/\/ x=R-B,y=R-Y,z=Y+B-R\n    \/\/ printf(\"Case #%d: \",kase);\n    char s[1010];\n    int i;\n    int l = -1;\n    for (i = 1; i <= R - B; i++) {\n      s[++l] = a[2];\n      s[++l] = a[1];\n    }\n    \/\/ printf(\"%c%c\",a[2],a[1]);\n    for (i = 1; i <= R - Y; i++) {\n      s[++l] = a[3];\n      s[++l] = a[1];\n    }\n    \/\/ for (i=1;i<=R-B;i++) printf(\"%c%c\",a[3],a[1]);\n    for (i = 1; i <= Y + B - R; i++) {\n      s[++l] = a[2];\n      s[++l] = a[3];\n      s[++l] = a[1];\n    }\n    \/\/ for (i=1;i<=Y+B-R;i++) printf(\"%c%c%c\",a[2],a[3],a[1]);\n    printf(\"Case #%d: \", kase);\n    for (i = 0; i <= l; i++)\n      printf(\"%c\", s[i]);\n    printf(\"\\n\");\n  }\n  \/\/ fclose(stdin);fclose(stdout);\n}\n\n\/\/ f[7][7]:end,or\n\/\/ DP?\n\/\/ chain?\n\/\/ O = G = V = 0. (Each unicorn has only one hair color in its mane.)\n\/\/ only RYB:RYRYRY....RYRBRBRRRRRRRRR\n\/\/ RRR,B,Y    RYRBR\n\/\/ RBYRBRBRYRY....\n\/\/ RBYRBY...\n\/*A mane with only one color of hair appears to be that color. For example, a\nmane with only blue hairs is blue. A mane with red and yellow hairs appears\norange. A mane with yellow and blue hairs appears green. A mane with red and\nblue hairs appears violet. You have R, O, Y, G, B, and V unicorns with red,\norange, yellow, green, blue, and violet manes, respectively.*\/\n"}
{"target":"kyleyip","func":"#include <cstdio>\nusing namespace std;\nint test, sum[110], d[110][110], e[110], n, q, i, j, u, v;\ndouble s[110], f[110][110];\ndouble min(double a, double b) { return a < b ? a : b; }\nint main() {\n  freopen(\"c.in\", \"r\", stdin);\n  freopen(\"c.out\", \"w\", stdout);\n  scanf(\"%d\", &test);\n  for (int kase = 1; kase <= test; kase++) {\n    scanf(\"%d%d\", &n, &q);\n    for (i = 1; i <= n; i++)\n      scanf(\"%d%lf\", &e[i], &s[i]);\n    for (i = 1; i <= n; i++)\n      for (j = 1; j <= n; j++)\n        scanf(\"%d\", &d[i][j]);\n    scanf(\"%d%d\", &u, &v); \/\/ 1->n\n    sum[1] = 0;\n    for (i = 2; i <= n; i++)\n      sum[i] = sum[i - 1] + d[i - 1][i];\n    for (i = 2; i <= n; i++)\n      for (j = 1; j < i; j++)\n        f[i][j] = -1;\n    f[2][1] = (double)d[1][2] \/ s[1];\n    for (i = 2; i < n; i++)   \/\/ current postion\n      for (j = 1; j < i; j++) \/\/ which horse before\n      {\n        \/\/ switch to a new horse ?\n        \/\/ continue use the horse\uff1f\n        if (f[i][j] < 0)\n          continue;\n        double cur1 = -1, cur2 = -1;\n        if (e[j] >= sum[i + 1] - sum[j])\n          cur1 = f[i][j] + (double)d[i][i + 1] \/ s[j];\n        if (e[i] >= d[i][i + 1])\n          cur2 = f[i][j] + (double)d[i][i + 1] \/ s[i];\n        if (cur1 < 0 && cur2 < 0)\n          continue;\n        if (cur1 > 0) {\n          if (f[i + 1][j] < 0)\n            f[i + 1][j] = cur1;\n          else\n            f[i + 1][j] = min(f[i + 1][j], cur1);\n        }\n        if (cur2 > 0) {\n          if (f[i + 1][i] < 0)\n            f[i + 1][i] = cur2;\n          else\n            f[i + 1][i] = min(f[i + 1][i], cur2);\n        }\n      }\n    double ans = -1;\n    for (i = 1; i < n; i++) {\n      if (f[n][i] < 0)\n        continue;\n      if (ans < 0)\n        ans = f[n][i];\n      else\n        ans = min(ans, f[n][i]);\n    }\n    printf(\"Case #%d: %.8lf\\n\", kase, ans);\n  }\n  fclose(stdin);\n  fclose(stdout);\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nchar s[330];\nint T;\nint n;\nint a[111];\nvoid solve() {\n  scanf(\"%s\", s + 1);\n  n = strlen(s + 1);\n  for (int i = 1; i <= n; i++)\n    a[i] = s[i] - '0';\n\n  for (int i = 1; i <= n; i++) {\n    int x = a[i];\n    int ok = 1;\n    for (int j = i + 1; j <= n; j++) {\n      if (x > a[j]) {\n        ok = 0;\n        break;\n      }\n      if (x < a[j])\n        break;\n    }\n    if (!ok) {\n      a[i]--;\n      for (int j = i + 1; j <= n; j++)\n        a[j] = 9;\n      break;\n    }\n  }\n\n  int l = 1;\n  while (a[l] == 0)\n    l++;\n  for (int i = l; i <= n; i++)\n    putchar(a[i] + '0');\n  puts(\"\");\n}\nint main() {\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nstruct sta {\n  int l, r;\n  int len() const { return r - l + 1; }\n\n  bool operator<(const sta &oth) const {\n    return len() != oth.len() ? len() < oth.len() : l > oth.l;\n  }\n};\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  priority_queue<sta> q;\n  q.push((sta){1, n});\n  int ans1, ans2;\n  while (k--) {\n    sta u = q.top();\n    q.pop();\n    int l = u.l, r = u.r;\n    int m = (l + r) >> 1;\n    \/\/\t\tcerr<<l<<\" \"<<r<<\" \"<<m<<endl;\n    ans1 = max(m - l, r - m);\n    ans2 = min(m - l, r - m);\n    if (l <= m - 1)\n      q.push((sta){l, m - 1});\n    if (m + 1 <= r)\n      q.push((sta){m + 1, r});\n  }\n  printf(\"%d %d\\n\", ans1, ans2);\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 1111;\nint dp[maxn][maxn];\nchar s[maxn];\nint n, k;\nvoid solve() {\n  scanf(\"%s\", s + 1);\n  n = strlen(s + 1);\n  scanf(\"%d\", &k);\n\n  int ans = 0;\n  for (int i = 1; i + k - 1 <= n; i++) {\n    if (s[i] == '-') {\n      ans++;\n      for (int j = i; j <= i + k - 1; j++) {\n        if (s[j] == '-')\n          s[j] = '+';\n        else\n          s[j] = '-';\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++)\n    if (s[i] == '-') {\n      puts(\"IMPOSSIBLE\");\n      return;\n    }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 55;\nint n, m;\nint r[55];\nint q[55][55];\n\nbool check(int j) {\n\n  double mn = 1e9, mx = -1e9;\n  for (int i = 1; i <= n; i++) {\n    mx = max(mx, q[i][j] \/ (1.1 * r[i]));\n    mn = min(mn, q[i][j] \/ (0.9 * r[i]));\n  }\n\n  for (int i = max(int(mx) - 1, 1); i <= mn + 1; i++) {\n    bool ok = 1;\n    for (int k = 1; k <= n; k++) {\n      if (!(9 * r[k] * i <= 10 * q[k][j] && 10 * q[k][j] <= 11 * r[k] * i)) {\n        ok = 0;\n        break;\n      }\n    }\n    if (ok)\n      return true;\n  }\n  return false;\n}\nint calc() {\n  int ans = 0;\n  for (int j = 1; j <= m; j++) {\n    if (check(j))\n      ans++;\n  }\n  return ans;\n}\nint solve() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++)\n    cin >> r[i];\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++)\n      cin >> q[i][j];\n  if (n == 1) {\n    return calc();\n  } else {\n    sort(q[2] + 1, q[2] + 1 + m);\n    int ans = 0;\n    do {\n      ans = max(ans, calc());\n    } while (next_permutation(q[2] + 1, q[2] + 1 + m));\n    return ans;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cerr << t << endl;\n    printf(\"Case #%d: %d\\n\", t, solve());\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint n, m;\nchar mp[55][55];\n\nvoid fill_col(char *s) {\n  for (int i = 1; i <= m; i++) {\n    if (s[i] != '?') {\n      for (int j = i - 1; j >= 1; j--) {\n        if (s[j] == '?')\n          s[j] = s[i];\n        else\n          break;\n      }\n    }\n  }\n  for (int i = m; i >= 1; i--) {\n    if (s[i] != '?') {\n      for (int j = i + 1; j <= m; j++)\n        s[j] = s[i];\n      break;\n    }\n  }\n}\nvoid solve() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++)\n    scanf(\"%s\", mp[i] + 1);\n  for (int i = 1; i <= n; i++)\n    fill_col(mp[i]);\n  int T = 10;\n  while (T--) {\n    for (int i = 2; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        if (mp[i][j] == '?') {\n          mp[i][j] = mp[i - 1][j];\n        }\n      }\n    }\n    for (int i = n - 1; i >= 1; i--) {\n      for (int j = 1; j <= m; j++) {\n        if (mp[i][j] == '?') {\n          mp[i][j] = mp[i + 1][j];\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++)\n    puts(mp[i] + 1);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d:\\n\", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ndouble solve() {\n  double d;\n  int n;\n  scanf(\"%lf%d\", &d, &n);\n  double mxt = 0;\n  for (int i = 1; i <= n; i++) {\n    double k, s;\n    scanf(\"%lf%lf\", &k, &s);\n    double t = (d - k) \/ s;\n    mxt = max(mxt, t);\n  }\n  return d \/ mxt;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: %.10f\\n\", t, solve());\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 1010;\nint n;\nint R, O, Y, G, B, V;\n\/\/ O = R + Y\n\/\/ G = Y + B\n\/\/ V = B + R\nint mp[255], pri[22];\nstring calc(int n, int R, int O, int Y, int G, int B, int V) {\n  static char s[maxn];\n  char la = 0;\n  mp['R'] = 0;\n  mp['Y'] = 1;\n  mp['B'] = 2;\n\n  for (int i = 1; i <= n; i++) {\n    vector<pair<int, char>> vec;\n    if (la != 'R' && R)\n      vec.push_back({R, 'R'});\n    if (la != 'Y' && Y)\n      vec.push_back({Y, 'Y'});\n    if (la != 'B' && B)\n      vec.push_back({B, 'B'});\n    char c;\n    if (vec.empty())\n      return string(\"IMPOSSIBLE\");\n    auto cmp = [](pair<int, char> a, pair<int, char> b) {\n      if (a.first != b.first)\n        return a.first > b.first;\n      return pri[mp[a.second]] > pri[mp[b.second]];\n    };\n    sort(vec.begin(), vec.end(), cmp);\n    c = vec[0].second;\n    la = c;\n    s[i] = c;\n    \/\/\t\tcerr<<c;\n    if (c == 'R')\n      R--;\n    if (c == 'Y')\n      Y--;\n    if (c == 'B')\n      B--;\n  }\n  \/\/\tcerr<<endl;\n  s[n + 1] = '\\0';\n  if (s[1] == s[n])\n    return string(\"IMPOSSIBLE\");\n  else\n    return string(s + 1, s + 1 + n);\n}\n\nbool check(string s) {\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == s[(i + 1) % s.length()])\n      return false;\n  }\n  return true;\n}\n\nvoid solve() {\n  pri[0] = 0;\n  pri[1] = 1;\n  pri[2] = 2;\n\n  cin >> n >> R >> O >> Y >> G >> B >> V;\n  do {\n    string ans = calc(n, R, O, Y, G, B, V);\n    if (ans != \"IMPOSSIBLE\") {\n      printf(\"%s\\n\", ans.c_str());\n      if (!check(ans))\n        assert(0);\n      return;\n    }\n  } while (next_permutation(pri, pri + 3));\n  \/\/\tcout<<n<<\" \"<<R<<\" \"<<Y<<\" \"<<B<<endl;\n  puts(\"IMPOSSIBLE\");\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"kzoacn","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int maxn = 110;\nint n, q;\nint e[maxn], s[maxn];\nint d[maxn][maxn];\nint dis[maxn];\nvoid solve() {\n  cin >> n >> q;\n  for (int i = 1; i <= n; i++) {\n    cin >> e[i] >> s[i];\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      cin >> d[i][j];\n\n  dis[1] = 0;\n  for (int i = 2; i <= n; i++)\n    dis[i] = dis[i - 1] + d[i - 1][i];\n\n  \/*\tfor(int i=1;i<=n;i++)\n                  cerr<<dis[i]<<\" \";\n          cerr<<endl;\n  *\/\n  while (q--) {\n    int u, v;\n    cin >> u >> v;\n    static double dp[maxn];\n    for (int i = 1; i <= n; i++)\n      dp[i] = 1e30;\n    dp[1] = 0;\n    for (int i = 1; i < n; i++) {\n      int cur = 0;\n      for (int j = i + 1; j <= n; j++) {\n        if (e[i] < dis[j] - dis[i])\n          break;\n        \/\/\t\t\t\tcerr<<i<<\" \"<<j<<endl;\n        int delta = dis[j] - dis[i];\n        double t = 1.0 * delta \/ s[i];\n        dp[j] = min(dp[j], dp[i] + t);\n      }\n    }\n    printf(\"%.10f \", dp[n]);\n  }\n  puts(\"\");\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cerr << t << endl;\n    printf(\"Case #%d: \", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\n\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = false;\n\n\/\/ --------------------------------------------------------------------------------------\n\n\/\/ DECLARATIONS\ntemplate <typename T> void read(size_t n, T *a);\ntemplate <typename T> void read2(size_t n, size_t m, T **a);\n\n\/\/ IMPLEMENTATIONS\ntemplate <typename T> void read(size_t n, T *a) {\n  for (size_t i = 0; i < n; ++i) {\n    std::cin >> a[i];\n  }\n}\n\ntemplate <typename T> void read2(size_t n, size_t m, T **a) {\n  for (size_t i = 0; i < n; ++i) {\n    a[i] = new int[m];\n    for (size_t j = 0; j < m; ++j) {\n      std::cin >> a[i][j];\n    }\n  }\n}\n\nusing namespace std;\n\nint main(void) {\n  ui t;\n  cin >> t;\n  for (ui test = 1; test <= t; ++test) {\n    ull n;\n    cin >> n;\n    for (ull nn = n; nn <= n; --nn) {\n      bool found = true;\n      string s = to_string(nn);\n      char current = s[0];\n      for (size_t i = 1; i < s.size(); ++i) {\n        if (current <= s[i]) {\n          current = s[i];\n        } else {\n          found = false;\n          break;\n        }\n      }\n      if (found) {\n        cout << \"Case #\" << test << \": \" << nn << '\\n';\n        break;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\n\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = false;\n\n\/\/ --------------------------------------------------------------------------------------\n\n\/\/ DECLARATIONS\ntemplate <typename T> void read(size_t n, T *a);\ntemplate <typename T> void read2(size_t n, size_t m, T **a);\n\n\/\/ IMPLEMENTATIONS\ntemplate <typename T> void read(size_t n, T *a) {\n  for (size_t i = 0; i < n; ++i) {\n    std::cin >> a[i];\n  }\n}\n\ntemplate <typename T> void read2(size_t n, size_t m, T **a) {\n  for (size_t i = 0; i < n; ++i) {\n    a[i] = new int[m];\n    for (size_t j = 0; j < m; ++j) {\n      std::cin >> a[i][j];\n    }\n  }\n}\n\nusing namespace std;\n\nint main(void) {\n  ui t;\n  cin >> t;\n  for (ui test = 1; test <= t; ++test) {\n    ull n;\n    ull k;\n    cin >> n >> k;\n    queue<ull> q;\n    q.push(n);\n    q.push(n);\n    ull count = 0;\n    ull vsize = 2;\n    vector<ull> v;\n    while (count < k) {\n      q.pop();\n      ull qq = q.front();\n      if (qq) {\n        ++count;\n        v.push_back(qq \/ 2);\n        v.push_back((qq - 1) \/ 2);\n      }\n      if (v.size() == vsize) {\n        sort(v.begin(), v.end(), greater<ull>());\n        for (size_t i = 0; i < v.size(); ++i) {\n          q.push(v[i]);\n        }\n        vsize *= 2;\n        v = vector<ull>();\n      }\n    }\n    ull qq = q.front();\n    cout << \"Case #\" << test << \": \" << (qq \/ 2) << ' ' << ((qq - 1) \/ 2)\n         << '\\n';\n  }\n\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\n\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = false;\n\n\/\/ --------------------------------------------------------------------------------------\n\n\/\/ DECLARATIONS\ntemplate <typename T> void read(size_t n, T *a);\ntemplate <typename T> void read2(size_t n, size_t m, T **a);\n\n\/\/ IMPLEMENTATIONS\ntemplate <typename T> void read(size_t n, T *a) {\n  for (size_t i = 0; i < n; ++i) {\n    std::cin >> a[i];\n  }\n}\n\ntemplate <typename T> void read2(size_t n, size_t m, T **a) {\n  for (size_t i = 0; i < n; ++i) {\n    a[i] = new int[m];\n    for (size_t j = 0; j < m; ++j) {\n      std::cin >> a[i][j];\n    }\n  }\n}\n\nusing namespace std;\n\nint main(void) {\n  size_t t;\n  cin >> t;\n  for (size_t i = 1; i <= t; ++i) {\n    string s;\n    cin >> s;\n    size_t k;\n    cin >> k;\n    ui flips = 0;\n    for (size_t j = 0; j <= s.size() - k; ++j) {\n      if (s[j] == '-') {\n        ++flips;\n        for (size_t dj = 0; dj < k; ++dj) {\n          s[j + dj] = (s[j + dj] == '+') ? '-' : '+';\n        }\n      }\n    }\n    bool correct = true;\n    for (size_t i = s.size() - k; i < s.size(); ++i) {\n      if (s[i] == '-') {\n        correct = false;\n        break;\n      }\n    }\n\n    cout << \"Case #\" << i << \": \" << (correct ? to_string(flips) : \"IMPOSSIBLE\")\n         << '\\n';\n  }\n\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = true;\n\n\/\/ --------------------------------------------------------------------------------------\n\nusing namespace std;\n\nint main(void) {\n  int t;\n  cin >> t;\n  for (int test = 0; test < t; ++test) {\n    int n, p;\n    cin >> n >> p;\n    vector<int> r;\n    for (int i = 0; i < n; ++i) {\n      int temp;\n      std::cin >> temp;\n      r.push_back(temp);\n    }\n\n    vector<vector<int>> count(n, vector<int>(1145141, 0));\n\n    int smallest_num_servings = 1e6;\n    int largest_num_servings = 1;\n\n    int largest_q = 0;\n    for (int ing = 0; ing < n; ++ing) {\n      int min_q = 1e6;\n      int max_q = 0;\n      for (int pack = 0; pack < p; ++pack) {\n        int q;\n        std::cin >> q;\n        if (max_q < q) {\n          max_q = q;\n        }\n        if (min_q > q) {\n          min_q = q;\n        }\n        ++count[ing][q];\n      }\n      int smns = static_cast<int>(ceil(min_q \/ (r[ing] * 1.11)));\n      int lans = static_cast<int>(floor(max_q \/ (r[ing] * 0.89)));\n      if (smallest_num_servings > smns) {\n        smallest_num_servings = smns;\n      }\n      if (largest_num_servings < lans) {\n        largest_num_servings = lans;\n      }\n    }\n\n    int kits = 0;\n    for (int num_servings = smallest_num_servings;\n         num_servings <= largest_num_servings; ++num_servings) {\n      bool fulfilled = true;\n      vector<int> erase;\n      for (int ing = 0; ing < n; ++ing) {\n        int lower = static_cast<int>(ceil(r[ing] * num_servings * 0.9));\n        int higher =\n            static_cast<int>(min(floor(r[ing] * num_servings * 1.1), 1e6));\n        int argmax = -1;\n        int maxval = 0;\n        for (int ind = lower; ind <= higher; ++ind) {\n          if (count[ing][ind] > maxval) {\n            maxval = count[ing][ind];\n            argmax = ind;\n          }\n        }\n        if (argmax == -1) {\n          fulfilled = false;\n          break;\n        } else {\n          erase.push_back(argmax);\n        }\n      }\n      if (fulfilled) {\n        for (int j = 0; j < n; ++j) {\n          --count[j][erase[j]];\n        }\n        ++kits;\n        --num_servings;\n        if (kits == p) {\n          break;\n        }\n      }\n    }\n\n    cout << \"Case #\" << (test + 1) << \": \" << kits << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = true;\n\n\/\/ --------------------------------------------------------------------------------------\n\nusing namespace std;\n\nint main(void) {\n  int t;\n  cin >> t;\n  for (int test = 0; test < t; ++test) {\n    int r, c;\n    cin >> r >> c;\n    vector<string> v;\n    for (int i = 0; i < r; ++i) {\n      string s;\n      std::cin >> s;\n      v.push_back(s);\n    }\n    vector<bool> vv;\n    for (int i = 0; i < r; ++i) {\n      string qq = string(c, '?');\n      if (v[i] == qq) {\n        vv.push_back(true);\n      } else {\n        vv.push_back(false);\n        for (int j = 0; j < c; ++j) {\n          bool found = false;\n          if (v[i][j] == '?') {\n            for (int jj = j + 1; jj < c; ++jj) {\n              if (v[i][jj] != '?') {\n                for (int jjj = j; jjj < jj; ++jjj) {\n                  v[i][jjj] = v[i][jj];\n                }\n                found = true;\n                break;\n              }\n            }\n            if (!found) {\n              for (int jj = j - 1; jj >= 0; --jj) {\n                if (v[i][jj] != '?') {\n                  for (int jjj = jj + 1; jjj <= j; ++jjj) {\n                    v[i][jjj] = v[i][jj];\n                  }\n                  found = true;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; ++i) {\n      if (vv[i]) {\n        for (int ii = i + 1; ii < r; ++ii) {\n          if (!vv[ii]) {\n            for (int iii = i; iii < ii; ++iii) {\n              v[iii] = v[ii];\n            }\n            vv[i] = true;\n            break;\n          }\n        }\n        if (vv[i]) {\n          for (int ii = i - 1; ii >= 0; --ii) {\n            if (!vv[ii]) {\n              for (int iii = ii + 1; iii <= i; ++iii) {\n                v[iii] = v[ii];\n              }\n              vv[i] = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    cout << \"Case #\" << (test + 1) << \":\\n\";\n    for (int i = 0; i < r; ++i)\n      cout << v[i] << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = true;\n\n\/\/ --------------------------------------------------------------------------------------\n\nusing namespace std;\n\nint main(void) {\n  int t;\n  cin >> t;\n  for (int test = 0; test < t; ++test) {\n    double d;\n    int n;\n    cin >> d >> n;\n    vector<double> kv;\n    vector<double> sv;\n    for (int i = 0; i < n; ++i) {\n      double k, s;\n      cin >> k >> s;\n      kv.push_back(k);\n      sv.push_back(s);\n    }\n    double slowest_time = 0.0;\n    for (int i = 0; i < n; ++i) {\n      double dist = d - kv[i];\n      double tt = dist \/ sv[i];\n      if (slowest_time < tt) {\n        slowest_time = tt;\n      }\n    }\n\n    cout << setprecision(numeric_limits<double>::digits10 + 1);\n    cout << \"Case #\" << (test + 1) << \": \" << (d \/ slowest_time) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = true;\n\n\/\/ --------------------------------------------------------------------------------------\n\nusing namespace std;\n\nint main(void) {\n  int t;\n  cin >> t;\n  for (int test = 0; test < t; ++test) {\n    int n;\n    \/\/ red, ora, yel, gre, blu, vio\n    int colors[6];\n    char colorchars[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n    cin >> n;\n    for (int i = 0; i < 6; ++i) {\n      cin >> colors[i];\n    }\n    int red, ora, yel, gre, blu, vio;\n    red = colors[0];\n    ora = colors[1];\n    yel = colors[2];\n    gre = colors[3];\n    blu = colors[4];\n    vio = colors[5];\n\n    string s(n, '?');\n    \/\/ int* indices = new int[n];\n\n    if (ora == 0 && gre == 0 && vio == 0) {\n      int countmax = max({red, yel, blu});\n      size_t argmax = 0;\n      for (int i = 0; i < 3; ++i) {\n        if (countmax == colors[2 * i]) {\n          argmax = 2 * i;\n          break;\n        }\n      }\n      for (size_t pos = 0; pos < n; ++pos) {\n        s[pos] = colorchars[argmax];\n        \/\/ indices[pos] = argmax;\n        --colors[argmax];\n        countmax = 0;\n        if (pos < n - 1) {\n          size_t next_argmax = 7;\n          for (int i = 0; i < 3; ++i) {\n            if (2 * i == argmax) {\n              continue;\n            } else {\n              if (countmax < colors[2 * i]) {\n                countmax = colors[2 * i];\n                next_argmax = 2 * i;\n              }\n            }\n          }\n          argmax = next_argmax;\n          if (argmax == 7) {\n            break;\n          }\n        }\n      }\n      if (argmax == 7) {\n        s = \"IMPOSSIBLE\";\n      } else if (s[0] == s[n - 1]) {\n        if (n <= 3 || s[0] == s[n - 2] || s[n - 1] == s[n - 3]) {\n          s = \"IMPOSSIBLE\";\n        } else {\n          char last = s[n - 1];\n          char seco = s[n - 2];\n          s[n - 1] = seco;\n          s[n - 2] = last;\n        }\n      }\n      cout << \"Case #\" << (test + 1) << \": \" << s << '\\n';\n      \/\/ delete[] indices;\n    } else {\n      cout << \"Case #\" << (test + 1) << \": UNDEFINED\" << '\\n';\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"L3Sota","func":"\/\/ UNNECESSARY\n\/\/ #include\n\/\/ <chrono>\/\/std::chrono::\/system_clock\/steady_clock\/high_resolution_clock\/duration\n\/\/ #include\n\/\/ <cstdio>\/\/printf\/scanf\/fopen\/fclose\/fprintf\/fscanf\/snprintf\/putc\/puts\/getc\/gets\n\/\/ #include <fstream>\/\/ifstream\/ofstream\n\n\/\/ DATA STRUCTURES\n#include <array>\n#include <bitset>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <tuple>\n#include <valarray>\n#include <vector>\n\n\/\/ MISCELLANEOUS\n#include <algorithm> \/\/min\/max\/sort(rand-access it)\/merge\n#include <cassert>\n#include <climits> \/\/INT_MAX\/INT_MIN\/ULLONG_MAX\n#include <cmath> \/\/fmin\/fmax\/fabs\/sin(h)\/cos(h)\/tan(h)\/exp\/log\/pow\/sqrt\/cbrt\/ceil\/floor\/round\/trunc\n#include <cstdlib> \/\/abs\/atof\/atoi\/atol\/atoll\/strtod\/strtof\/..., srand\/rand, calloc\/malloc, exit, qsort\n#include <iomanip> \/\/setfill\/setw\/setprecision\/fixed\/scientific\n#include <iostream> \/\/cin\/cout\/wcin\/wcout\/left\/right\/internal\/dec\/hex\/oct\/fixed\/scientific\n#include <iterator>\n#include <limits> \/\/numeric_limits<type>::max\/min\/lowest\/epsilon\/infinity\/quiet_NaN\/signaling_NaN\n#include <new>\n#include <string> \/\/stoi\/stol\/stoul\/stoll\/stoull\/stof\/stod\/stold\/to_string\/getline\n#include <utility> \/\/pair\ntypedef unsigned int ui;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<ll, int> plli;\ntypedef std::pair<ull, int> puli;\ntypedef std::pair<double, int> pdi;\ntypedef std::pair<ll, ll> pllll;\ntypedef std::pair<ull, ull> pulul;\ntypedef std::pair<double, double> pdd;\ntypedef std::tuple<int, int, int> ti3;\ntypedef std::tuple<int, int, int, int> ti4;\n\nconst bool debug = true;\n\n\/\/ --------------------------------------------------------------------------------------\n\nusing namespace std;\n\nint main(void) {\n  int t;\n  cin >> t;\n  for (int test = 0; test < t; ++test) {\n    size_t n;\n    int q;\n    cin >> n >> q;\n    vector<double> distv, speedv;\n    for (int i = 0; i < n; ++i) {\n      double e, s;\n      cin >> e >> s;\n      distv.push_back(e);\n      speedv.push_back(s);\n    }\n    double **distm = new double *[n];\n    for (int i = 0; i < n; ++i) {\n      distm[i] = new double[n];\n      for (int j = 0; j < n; ++j) {\n        cin >> distm[i][j];\n      }\n    }\n    vector<int> starts, ends;\n    for (int i = 0; i < q; ++i) {\n      int s, e;\n      cin >> s >> e;\n      --s;\n      --e;\n      starts.push_back(s);\n      ends.push_back(e);\n    }\n\n    vector<double> dp(n, numeric_limits<double>::max());\n    dp[0] = 0.0;\n    for (size_t i = 0; i < n; ++i) { \/\/ start from i\n      double disttotal = 0.0;\n      for (size_t j = i + 1; j < n; ++j) { \/\/ attempt to reach j\n        disttotal += distm[j - 1][j];\n        if (disttotal > distv[i]) {\n          break;\n        } else {\n          if (dp[j] > dp[i] + disttotal \/ speedv[i]) {\n            dp[j] = dp[i] + disttotal \/ speedv[i];\n          }\n        }\n      }\n    }\n\n    cout << setprecision(numeric_limits<double>::digits10 + 1);\n    cout << \"Case #\" << (test + 1) << \": \" << dp.back() << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nlong long solve(long long n, int n_digit) {\n  long long res = 0;\n  for (int i = n_digit; i >= 1; --i) {\n    bool found = false;\n    for (int x = 9; x >= 1; --x) {\n      long long cur = res;\n      for (int it = 1; it <= i; ++it) {\n        cur = cur * 10 + x;\n      }\n      if (cur <= n) {\n        res = res * 10 + x;\n        found = true;\n        break;\n      }\n    }\n  }\n  return res;\n}\n\nbool ok(long long ans, long long n) {\n  if (ans > n)\n    return false;\n  int last = 9;\n  while (ans > 0) {\n    if (last < ans % 10)\n      return false;\n    last = ans % 10;\n    ans \/= 10;\n  }\n  return true;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    long long n;\n    cin >> n;\n    long long ans = solve(n, 18);\n    assert(ok(ans, n));\n    cout << \"Case #\" << tc << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    long long n, k;\n    cin >> n >> k;\n    map<long long, long long> cnt;\n    cnt[n] += 1;\n    long long ans = n;\n    while (k > 0) {\n      long long gap = cnt.rbegin()->first;\n      long long num = cnt[gap];\n      ans = gap;\n      k -= num;\n      cnt.erase(--cnt.end());\n      if (gap % 2 == 0) {\n        cnt[gap \/ 2] += num;\n        cnt[gap \/ 2 - 1] += num;\n      } else {\n        cnt[gap \/ 2] += num + num;\n      }\n    }\n    \/\/ ans = cnt.rbegin()->first;\n    long long L = ans \/ 2;\n    long long R = ans - L - 1;\n    cout << \"Case #\" << tc << \": \" << max(L, R) << ' ' << min(L, R) << endl;\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = 0; i < s.size(); ++i)\n      if (s[i] == '-') {\n        if (i + k > s.size()) {\n          ans = -1;\n          break;\n        }\n        ans += 1;\n        for (int j = i; j < i + k; ++j) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n      }\n    cout << \"Case #\" << tc << \": \";\n    if (ans != -1)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 55;\nconst int P = 55;\n\nstruct Package {\n  int id;\n  int L, R;\n\n  Package() {}\n\n  Package(int id, int has, int each) {\n    this->id = id;\n    L = ceil(has * 10.0 \/ 11 \/ each);\n    R = floor(has * 10.0 \/ 9 \/ each);\n  }\n\n  bool operator<(const Package &o) const {\n    if (R != o.R)\n      return R < o.R;\n    return L < o.L;\n  }\n};\n\nbool incL(const Package &a, const Package &b) {\n  if (a.L != b.L)\n    return a.L < b.L;\n  return a.R < b.R;\n}\n\nstruct Bucket {\n  multiset<Package> a[N];\n  int ingredient_count;\n\n  Bucket() { ingredient_count = 0; }\n\n  void reset() {\n    ingredient_count = 0;\n    for (int i = 0; i < N; ++i)\n      a[i].clear();\n  }\n\n  void insert(Package p) {\n    a[p.id].insert(p);\n    if (a[p.id].size() == 1) {\n      ingredient_count += 1;\n    }\n  }\n\n  void erase(Package p) {\n    auto it = a[p.id].find(p);\n    if (it == a[p.id].end())\n      return;\n    a[p.id].erase(it);\n    if (a[p.id].size() == 0) {\n      ingredient_count -= 1;\n    }\n  }\n\n  vector<Package> grab_kit() {\n    vector<Package> res;\n    for (int i = 1; i <= ingredient_count; ++i) {\n      res.push_back(*a[i].begin());\n    }\n    return res;\n  }\n} bucket[N * P];\n\nPackage a[N][P];\nvector<pair<Package, int>> events[N * P];\n\nvoid erase_all(Package p) {\n  for (int i = p.L; i <= p.R; ++i) {\n    bucket[i].erase(p);\n  }\n}\n\nint n, p;\nint r[N];\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    vector<int> values;\n\n    cin >> n >> p;\n    for (int i = 1; i <= n; ++i)\n      cin >> r[i];\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= p; ++j) {\n        int q;\n        cin >> q;\n        a[i][j] = Package(i, q, r[i]);\n        values.push_back(a[i][j].L);\n        values.push_back(a[i][j].R);\n      }\n    }\n\n    sort(values.begin(), values.end());\n    values.resize(unique(values.begin(), values.end()) - values.begin());\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= p; ++j) {\n        a[i][j].L = lower_bound(values.begin(), values.end(), a[i][j].L) -\n                    values.begin() + 1;\n        a[i][j].R = lower_bound(values.begin(), values.end(), a[i][j].R) -\n                    values.begin() + 1;\n      }\n    }\n\n    int max_r = 0;\n\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= p; ++j) {\n        if (a[i][j].L <= a[i][j].R) {\n          events[a[i][j].L].push_back(make_pair(a[i][j], +1));\n          events[a[i][j].R].push_back(make_pair(a[i][j], -1));\n          max_r = max(max_r, a[i][j].R);\n        }\n      }\n    }\n    int ans = 0;\n    for (int pos = 0; pos <= max_r; ++pos) {\n      for (auto e : events[pos])\n        if (e.second == +1) {\n          auto it = e.first;\n          for (int i = it.L; i <= it.R; ++i) {\n            bucket[i].insert(it);\n          }\n          for (int i = it.L; i <= it.R; ++i) {\n            if (bucket[i].ingredient_count == n) {\n              vector<Package> kit = bucket[i].grab_kit();\n              for (auto each : kit) {\n                erase_all(each);\n              }\n              ans += 1;\n              break;\n            }\n          }\n        }\n\n      for (auto e : events[pos])\n        if (e.second == -1) {\n          auto it = e.first;\n          for (int i = it.L; i <= it.R; ++i) {\n            bucket[i].erase(it);\n          }\n        }\n      events[pos].clear();\n    }\n\n    cout << \"Case #\" << tc << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 55;\n\nchar a[N][N];\nint n, m;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    int m, n;\n    cin >> m >> n;\n    for (int i = 1; i <= m; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        cin >> a[i][j];\n      }\n    }\n    for (int i = 1; i <= m; ++i) {\n      for (int j = 2; j <= n; ++j) {\n        if (a[i][j] == '?' && a[i][j - 1] != '?')\n          a[i][j] = a[i][j - 1];\n      }\n      for (int j = n - 1; j >= 1; --j) {\n        if (a[i][j] == '?' && a[i][j + 1] != '?')\n          a[i][j] = a[i][j + 1];\n      }\n    }\n    for (int j = 1; j <= n; ++j) {\n      for (int i = 2; i <= m; ++i) {\n        if (a[i][j] == '?' && a[i - 1][j] != '?')\n          a[i][j] = a[i - 1][j];\n      }\n      for (int i = m - 1; i >= 1; --i) {\n        if (a[i][j] == '?' && a[i + 1][j] != '?')\n          a[i][j] = a[i + 1][j];\n      }\n    }\n\n    cout << \"Case #\" << tc << \":\" << endl;\n    for (int i = 1; i <= m; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        cout << a[i][j];\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    long long D;\n    int n;\n    cin >> D >> n;\n    vector<long long> pos(n), speed(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> pos[i] >> speed[i];\n    }\n    \/\/ time_catch = (pos2 - pos1) \/ (v1 - v2)\n    \/\/ time_catch <= (D - pos2) \/ v2\n    double answer = 1e18;\n    for (int i = 0; i < n; ++i) {\n      double time_catch = 1.0 * (D - pos[i]) \/ speed[i];\n      double max_speed = pos[i] \/ time_catch + speed[i];\n      answer = min(answer, max_speed);\n    }\n    assert(answer < 1e17);\n    cout << setprecision(6) << fixed << \"Case #\" << tc << \": \" << answer\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1111;\n\nstruct State {\n  int a[3];\n\n  State(int first) {\n    a[0] = a[1] = a[2] = 0;\n    a[first] = 1;\n  }\n\n  bool operator<(const State &o) const {\n    for (int i = 0; i < 3; ++i)\n      if (a[i] != o.a[i]) {\n        return a[i] < o.a[i];\n      }\n    return false;\n  }\n};\n\nset<State> was[3][3];\nvector<int> save;\nint has[9];\nint n;\nbool success;\n\nclock_t start;\n\nchar to_char(int x) {\n  if (x == 0)\n    return 'R';\n  if (x == 1)\n    return 'Y';\n  assert(x == 2);\n  return 'B';\n}\n\nvoid go(int first, int last, State cur) {\n  \/\/ if ((double)(clock() - start) \/ CLOCKS_PER_SEC > 15) return;\n  if (success)\n    return;\n  if (was[first][last].count(cur))\n    return;\n\n  was[first][last].insert(cur);\n  if (cur.a[0] + cur.a[1] + cur.a[2] == n) {\n    if (first != last) {\n      assert(save[0] != save.back());\n      assert(save.size() == n);\n      success = true;\n      int cnt[3] = {0, 0, 0};\n      for (int i = 0; i < n; ++i) {\n        cout << to_char(save[i]);\n        cnt[save[i]] += 1;\n        if (i + 1 < n)\n          assert(save[i] != save[i + 1]);\n      }\n      assert(save[n - 1] != save[0]);\n      for (int i = 0; i < 3; ++i) {\n        if (cnt[i] != has[i]) {\n          cerr << i << ' ' << cnt[i] << ' ' << has[i] << endl;\n          assert(0);\n        }\n      }\n      cout << endl;\n    }\n    return;\n  }\n  int cand[2] = {-1, -1};\n  for (int nxt = 0; nxt < 3; ++nxt)\n    if (nxt != last && cur.a[nxt] < has[nxt]) {\n      if (cand[0] == -1)\n        cand[0] = nxt;\n      else\n        cand[1] = nxt;\n    }\n  if (cand[1] != -1 &&\n      has[cand[0]] - cur.a[cand[0]] < has[cand[1]] - cur.a[cand[1]]) {\n    swap(cand[0], cand[1]);\n  }\n  for (int i = 0; i < 2; ++i)\n    if (cand[i] != -1) {\n      int nxt = cand[i];\n      cur.a[nxt] += 1;\n      save.push_back(nxt);\n      go(first, nxt, cur);\n      save.pop_back();\n      cur.a[nxt] -= 1;\n    }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    start = clock();\n    cin >> n;\n    vector<int> a(6);\n    for (int i = 0; i < 6; ++i) {\n      cin >> a[i];\n    }\n    has[0] = a[0];\n    has[1] = a[2];\n    has[2] = a[4];\n    sort(a.begin(), a.end());\n    cout << \"Case #\" << tc << \": \";\n    if (a[3] + a[4] < a[5]) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    success = false;\n    for (int i = 0; i < 3; ++i) {\n      for (int j = 0; j < 3; ++j) {\n        was[i][j].clear();\n      }\n    }\n    for (int i = 0; i < 3; ++i)\n      if (has[i]) {\n        save.clear();\n        save.push_back(i);\n        go(i, i, State(i));\n      }\n    if (!success) {\n      assert(0);\n      cout << \"IMPOSSIBLE\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"ladpro98","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 111;\n\nint max_dist[N];\nint speed[N];\nint start[N], finish[N];\nint d[N][N];\n\nint n, q;\n\nbool is_small_dataset() {\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j)\n      if (i + 1 != j) {\n        if (d[i][j] != -1)\n          return false;\n      }\n  }\n  if (q != 1)\n    return false;\n  if (start[1] != 1)\n    return false;\n  if (finish[1] != n)\n    return false;\n  return true;\n}\n\nvoid do_small(int tc) {\n  vector<double> dp(n + 1, 1e18);\n  dp[1] = 0;\n  for (int i = 1; i < n; ++i) {\n    long long sum_dist = 0;\n    for (int j = i; j < n; ++j) {\n      sum_dist += d[j][j + 1];\n      if (sum_dist > max_dist[i])\n        break;\n      dp[j + 1] = min(dp[j + 1], dp[i] + 1.0 * sum_dist \/ speed[i]);\n    }\n  }\n  cout << setprecision(6) << fixed << \"Case #\" << tc << \": \" << dp[n] << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; ++i) {\n      cin >> max_dist[i];\n      cin >> speed[i];\n    }\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        cin >> d[i][j];\n      }\n    }\n    for (int i = 1; i <= q; ++i) {\n      cin >> start[i] >> finish[i];\n    }\n\n    if (is_small_dataset()) {\n      do_small(tc);\n    } else {\n      \/\/ do_large();\n    }\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\nll memo[20][10][2];\nstring N;\n\nll nCr(int n, int r) {\n  if (n - r < r)\n    return nCr(n, n - r);\n  ll res = 1;\n  for (int i = 0; i < (int)(r); i++)\n    res *= n - i;\n  for (int i = 0; i < (int)(r); i++)\n    res \/= i + 1;\n  return res;\n}\n\nll dp(int k, int x, int f) {\n  if (memo[k][x][f] != -1)\n    return memo[k][x][f];\n  if (k == 0 && x == 0 && f == 0)\n    return memo[k][x][f] = 0;\n\n  ll res = 0;\n  if (f == 1 && N.length() - k > 0) {\n    res = nCr(9 - x + N.length() - k, 9 - x);\n  } else {\n    for (int i = max(1, x); i <= N[k]; ++i) {\n      res += dp(k + 1, i, 1);\n    }\n    res += dp(k + 1, N[k], 0);\n  }\n\n  return memo[k][x][f] = res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    cin >> N;\n    for (int i = 0; i < (int)(20); i++)\n      for (int j = 0; j < (int)(10); j++)\n        for (int k = 0; k < (int)(2); k++)\n          memo[i][j][k] = -1;\n    int d = N.length();\n    ll res = dp(d, N[d - 1], 1);\n    cout << \"Case #\" << t + 1 << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pp;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\nstruct Compare {\n  bool operator()(const pp &lhs, const pp &rhs) {\n    if (lhs.first != rhs.first)\n      return lhs.first < rhs.first;\n    return lhs.second > rhs.second;\n  }\n};\n\npair<int, int> solve(int N, int K) {\n  priority_queue<pp, vector<pp>, Compare> que;\n  que.push(make_pair(N, 0));\n  pair<int, int> res;\n\n  for (int i = 0; i < (int)(K); i++) {\n    auto p = que.top();\n    que.pop();\n    \/\/ cout << p.first << \" \" << p.second << endl;\n    int tmp = (p.first - 1) \/ 2;\n    if (i == K - 1) {\n      res = make_pair(p.first - 1 - tmp, tmp);\n    } else {\n      if (tmp) {\n        que.push(make_pair(tmp, p.second));\n      }\n      if (p.first - 1 - tmp) {\n        que.push(make_pair(p.first - 1 - tmp, p.second + tmp + 1));\n      }\n    }\n  }\n\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int N, K;\n    cin >> N >> K;\n    pair<int, int> res = solve(N, K);\n    cout << \"Case #\" << t + 1 << \": \" << res.first << \" \" << res.second << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\nint solve(const string &S, int K) {\n  int N = S.length();\n  vector<int> a(N);\n  for (int i = 0; i < (int)(N); i++) {\n    if (S[i] == '+')\n      a[i] = 0;\n    else\n      a[i] = 1;\n  }\n  int res = 0;\n  for (int i = 0; i < (int)(N - K + 1); i++) {\n    if (a[i] % 2) {\n      ++res;\n      for (int j = 0; j < (int)(K); j++)\n        ++a[i + j];\n    }\n  }\n  for (int i = N - K + 1; i < N; ++i) {\n    if (a[i] % 2)\n      return -1;\n  }\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    string S;\n    int K;\n    cin >> S >> K;\n    int res = solve(S, K);\n    cout << \"Case #\" << t + 1 << \": \"\n         << (res == -1 ? \"IMPOSSIBLE\" : to_string(res)) << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\ntypedef int Weight;\ntypedef int Flow;\n\nstruct Edge {\n  int src, dest, rev;\n  Flow cap;\n  Weight cost;\n  bool operator<(const Edge &rhs) const { return cost > rhs.cost; }\n  Edge(int s, int d) : src(s), dest(d) { ; }\n  Edge(int s, int d, Weight c) : src(s), dest(d), cost(c) { ; }\n  Edge(int s, int d, int r, Flow cp, Weight cst)\n      : src(s), dest(d), rev(r), cap(cp), cost(cst) {\n    ;\n  }\n};\n\ntypedef vector<Edge> Edges;\ntypedef vector<Edges> Graph;\ntypedef vector<Weight> Array;\ntypedef vector<Array> Matrix;\n\nvoid add_edge(Graph &g, int src, int dest, Flow cap) {\n  g[src].push_back((Edge){src, dest, (int)g[dest].size(), cap, 0});\n  g[dest].push_back((Edge){dest, src, (int)g[src].size() - 1, 0, 0});\n}\n\nFlow dfs(Graph &g, vector<bool> &used, int v, int t, Flow f) {\n  if (v == t)\n    return f;\n  used[v] = true;\n  for (Edge &e : g[v]) {\n    if (!used[e.dest] && e.cap > 0) {\n      Flow d = dfs(g, used, e.dest, t, min(f, e.cap));\n      if (d > 0) {\n        e.cap -= d;\n        g[e.dest][e.rev].cap += d;\n        return d;\n      }\n    }\n  }\n  return 0;\n}\n\nFlow ford_fulkerson(Graph &g, int s, int t) {\n  Flow flow = 0;\n  for (;;) {\n    vector<bool> used(g.size(), false);\n    Flow f = dfs(g, used, s, t, INF);\n    if (f == 0)\n      return flow;\n    flow += f;\n  }\n}\n\nbool check(int Ri, int Qij, int k) {\n  if (9 * k * Ri > 10 * Qij)\n    return false;\n  if (10 * Qij > 11 * k * Ri)\n    return false;\n  return true;\n}\n\npair<int, int> f(int Ri, int Qij) {\n  int a = (ld)(Qij) \/ (ld)(1.1 * Ri);\n  int b = (ld)(Qij) \/ (ld)(0.9 * Ri);\n  if (!check(Ri, Qij, a))\n    ++a;\n  if (check(Ri, Qij, b + 1))\n    ++b;\n  return make_pair(a, b);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int N, P;\n    cin >> N >> P;\n    vector<int> R(N);\n    vector<vector<int>> Q(N, vector<int>(P));\n    for (int i = 0; i < (int)(N); i++)\n      cin >> R[i];\n    for (int i = 0; i < (int)(N); i++)\n      for (int j = 0; j < (int)(P); j++)\n        cin >> Q[i][j];\n\n    vector<vector<pair<int, int>>> tmp(N, vector<pair<int, int>>(P));\n    for (int i = 0; i < (int)(N); i++)\n      for (int j = 0; j < (int)(P); j++)\n        tmp[i][j] = f(R[i], Q[i][j]);\n\n    Graph g(N * P + 2);\n    int source = N * P;\n    int sink = N * P + 1;\n    for (int j = 0; j < (int)(P); j++) {\n      if (tmp[0][j].first > tmp[0][j].second)\n        continue;\n      add_edge(g, source, j, 1);\n    }\n    for (int i = 0; i < (int)(N - 1); i++)\n      for (int j = 0; j < (int)(P); j++)\n        for (int k = 0; k < (int)(P); k++) {\n          if (tmp[i][j].first > tmp[i][j].second)\n            continue;\n          if (tmp[i + 1][k].first > tmp[i + 1][k].second)\n            continue;\n          if (max(tmp[i][j].first, tmp[i + 1][k].first) <=\n              min(tmp[i][j].second, tmp[i + 1][k].second)) {\n            add_edge(g, i * P + j, (i + 1) * P + k, 1);\n          }\n        }\n    for (int j = 0; j < (int)(P); j++) {\n      if (tmp[N - 1][j].first > tmp[N - 1][j].second)\n        continue;\n      add_edge(g, (N - 1) * P + j, sink, 1);\n    }\n\n    \/*\n    REP(i,N) {\n      REP(j,P) cout << \"(\" << tmp[i][j].first << \",\" << tmp[i][j].second << \")\";\n      cout << endl;\n    }\n\n    REP(i,N * P + 2) {\n      cout << i << \": \";\n      for(Edge e: g[i]) {\n        if(!e.cap) continue;\n        cout << e.dest << \",\";\n      }\n      cout << endl;\n    }\n    *\/\n\n    int res = ford_fulkerson(g, source, sink);\n\n    cout << \"Case #\" << t + 1 << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\nvector<string> solve(const vector<string> &cake) {\n  int R = cake.size();\n  int C = cake[0].length();\n  vector<string> res = cake;\n\n  for (int i = 0; i < (int)(R); i++) {\n    int pos = -1;\n    for (int j = 0; j < (int)(C); j++)\n      if (res[i][j] != '?') {\n        pos = j;\n        break;\n      }\n    if (pos == -1)\n      continue;\n    for (int j = 0; j < (int)(C); j++) {\n      if (res[i][j] == '?') {\n        res[i][j] = res[i][pos];\n      } else {\n        pos = j;\n      }\n    }\n  }\n\n  int tmp = 0;\n  while (res[tmp][0] == '?')\n    ++tmp;\n  for (int i = 0; i < (int)(tmp); i++)\n    res[i] = res[tmp];\n\n  for (int i = 0; i < (int)(R - 1); i++)\n    if (res[i + 1][0] == '?')\n      res[i + 1] = res[i];\n\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int R, C;\n    cin >> R >> C;\n    vector<string> cake(R);\n    for (int i = 0; i < (int)(R); i++)\n      cin >> cake[i];\n\n    vector<string> res = solve(cake);\n    cout << \"Case #\" << t + 1 << \":\" << endl;\n    for (int i = 0; i < (int)(R); i++)\n      cout << res[i] << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = 1e9;\nconst ld EPS = 1e-8;\n\nld solve(int D, const vector<int> &K, const vector<int> &S) {\n  int N = K.size();\n  vector<ld> t(N);\n  for (int i = 0; i < (int)(N); i++)\n    t[i] = (ld)(D - K[i]) \/ S[i];\n  sort(t.rbegin(), t.rend());\n  ld res = D \/ t[0];\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int D, N;\n    cin >> D >> N;\n    vector<int> K(N), S(N);\n    for (int i = 0; i < (int)(N); i++)\n      cin >> K[i] >> S[i];\n    ld res = solve(D, K, S);\n    cout << \"Case #\" << fixed << setprecision(10) << t + 1 << \": \" << res\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstring solve_small(int R, int O, int Y, int G, int B, int V) {\n  if (O || G || V)\n    return \"IMPOSSIBLE\";\n  if (R + Y < B || Y + B < R || B + R < Y)\n    return \"IMPOSSIBLE\";\n\n  vector<pair<int, string>> tmp(3);\n  tmp[0] = make_pair(R, \"R\");\n  tmp[1] = make_pair(Y, \"Y\");\n  tmp[2] = make_pair(B, \"B\");\n  sort((tmp).begin(), (tmp).end());\n\n  string s1;\n  for (int i = 0; i < (int)(tmp[1].first - tmp[0].first); i++)\n    s1 += tmp[1].second;\n  for (int i = 0; i < (int)(tmp[0].first); i++) {\n    s1 += tmp[0].second;\n    s1 += tmp[1].second;\n  }\n\n  string res;\n  for (int i = 0; i < (int)(tmp[2].first); i++) {\n    res += tmp[2].second;\n    res += s1[i];\n  }\n  res += s1.substr(tmp[2].first);\n\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    string res = solve_small(R, O, Y, G, B, V);\n    cout << \"Case #\" << t + 1 << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"lan496","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst ld INF = 1e11;\n\nld solve_small(const vector<int> &E, const vector<int> &S,\n               const vector<vector<int>> &D) {\n  int N = E.size();\n  vector<ll> acm(N, 0);\n  for (int i = 0; i < (int)(N - 1); i++)\n    acm[i + 1] = acm[i] + D[i][i + 1];\n\n  vector<vector<ld>> dp(N, vector<ld>(N + 1, INF));\n  dp[0][N] = 0;\n  for (int i = 0; i < (int)(N); i++)\n    for (int j = 0; j < (int)(N + 1); j++) {\n      if (dp[i][j] == INF)\n        continue;\n      for (int k = i + 1; k < N; ++k) {\n        if (acm[k] - acm[i] > E[i])\n          continue;\n        dp[k][i] = min(dp[k][i], dp[i][j] + (ld)(acm[k] - acm[i]) \/ S[i]);\n      }\n    }\n\n  ld res = INF;\n  for (int j = 0; j < (int)(N); j++)\n    res = min(res, dp[N - 1][j]);\n  return res;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < (int)(T); t++) {\n    int N, Q;\n    cin >> N >> Q;\n    vector<int> E(N), S(N);\n    for (int i = 0; i < (int)(N); i++)\n      cin >> E[i] >> S[i];\n    vector<vector<int>> D(N, vector<int>(N));\n    for (int i = 0; i < (int)(N); i++)\n      for (int j = 0; j < (int)(N); j++)\n        cin >> D[i][j];\n    vector<int> U(Q), V(Q);\n    for (int i = 0; i < (int)(Q); i++) {\n      cin >> U[i] >> V[i];\n      --U[i];\n      --V[i];\n    }\n\n    cout << \"Case #\" << t + 1 << \":\";\n    for (int i = 0; i < (int)(Q); i++) {\n      ld res = solve_small(E, S, D);\n      cout << \" \" << fixed << setprecision(10) << res;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nchar str[20];\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int ii = 1; ii <= t; ii++) {\n    scanf(\"%s\", str);\n    int len = strlen(str), pos;\n    pos = len - 1;\n    while (pos > 0) {\n      int x = pos;\n      for (int i = 0; i < pos; i++) {\n        if (str[i] > str[i + 1]) {\n          x = i;\n          break;\n        }\n      }\n      if (x == pos) {\n        break;\n      }\n      str[x] = str[x] - 1;\n      for (int i = x + 1; i < len; i++) {\n        str[i] = '9';\n      }\n      pos = x;\n    }\n    if (str[0] == '0') {\n      printf(\"Case #%d: %s\\n\", ii, str + 1);\n    } else {\n      printf(\"Case #%d: %s\\n\", ii, str);\n    }\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nstruct NODE {\n  __int64 x, cnt;\n  bool operator<(const struct NODE &a) const { return x > a.x; }\n} nodes[5], temp[5];\n\n__int64 n, k;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int ii = 1; ii <= t; ii++) {\n    scanf(\"%I64d%I64d\", &n, &k);\n    nodes[0].x = n;\n    nodes[0].cnt = 1;\n    int cou = 1;\n    while (k) {\n      if (nodes[0].cnt >= k) {\n        printf(\"Case #%d: %I64d %I64d\\n\", ii, nodes[0].x \/ 2,\n               (nodes[0].x - 1) \/ 2);\n        break;\n      } else {\n        k -= nodes[0].cnt;\n        if (nodes[0].x > 2) {\n          nodes[cou].x = (nodes[0].x - 1) \/ 2;\n          nodes[cou].cnt = nodes[0].cnt;\n          cou++;\n        }\n        if (nodes[0].x > 1) {\n          nodes[0].x = nodes[0].x \/ 2;\n        }\n      }\n      sort(nodes, nodes + cou);\n      int cc = 0;\n      for (int i = 1; i < cou; i++) {\n        if (nodes[i].x == nodes[cc].x) {\n          nodes[cc].cnt += nodes[i].cnt;\n        } else {\n          cc++;\n          nodes[cc] = nodes[i];\n        }\n      }\n      cou = cc + 1;\n    }\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nchar str[1010];\nint step[1010];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int t, x;\n  scanf(\"%d\", &t);\n  for (int ii = 1; ii <= t; ii++) {\n    scanf(\"%s%d\", str, &x);\n    memset(step, 0, sizeof(step));\n    int len = strlen(str);\n    int ans = 0;\n    int now = 0;\n    for (int i = 0; i <= len - x; i++) {\n      now = (now + step[i]) % 2;\n      if (!now && str[i] == '-') {\n        str[i] = '+';\n        now = 1;\n        step[i + x]++;\n        ans++;\n      } else if (now == 1 && str[i] == '+') {\n        now = 0;\n        step[i + x]++;\n        ans++;\n      }\n    }\n    int flag = 0;\n    for (int i = len - x + 1; i < len; i++) {\n      now = (now + step[i]) % 2;\n      if ((now && str[i] == '+') || (!now && str[i] == '-')) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ii);\n    } else {\n      printf(\"Case #%d: %d\\n\", ii, ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\/\/ freopen(\"\", \"r\", stdin);\n\/\/ freopen(\"\", \"w\", stdout);\n\/\/ printf(\"Case #%d: \", ii);\n\nint n, m;\nint num[55];\nint q[55][55];\nint ans;\nint vis[55];\n\nvoid dfs(int x, int cnt) {\n  ans = max(ans, cnt);\n  for (int i = x; i <= m; i++) {\n    int top = q[1][i] * 10.0 \/ (9.0 * num[1]),\n        down = ceil(q[1][i] * 10.0 \/ (11.0 * num[1])) + 0.1;\n    if (down > top) {\n      continue;\n    }\n    for (int j = 1; j <= m; j++) {\n      if (vis[j])\n        continue;\n      int top1 = q[2][j] * 10.0 \/ (0.9 * num[2]),\n          down1 = ceil(q[2][j] * 10.0 \/ (11.0 * num[2])) + 0.1;\n      if (down1 > top1) {\n        continue;\n      }\n      int x = max(down, down1), y = min(top, top1);\n      if (x <= y) {\n        vis[j] = 1;\n        dfs(i + 1, cnt + 1);\n        vis[j] = 0;\n      }\n    }\n  }\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int ii = 1; ii <= T; ii++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &num[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        scanf(\"%d\", &q[i][j]);\n      }\n    }\n    ans = 0;\n    if (n == 1) {\n      for (int i = 1; i <= m; i++) {\n        int top = q[1][i] * 10.0 \/ (9.0 * num[1]),\n            down = ceil(q[1][i] * 10.0 \/ (11.0 * num[1])) + 0.1;\n        if (down > top) {\n          continue;\n        }\n        ans++;\n      }\n    } else if (n == 2) {\n      for (int i = 1; i <= m; i++) {\n        int top = q[1][i] * 10.0 \/ (9.0 * num[1]),\n            down = ceil(q[1][i] * 10.0 \/ (11.0 * num[1])) + 0.1;\n        if (down > top) {\n          continue;\n        }\n        for (int j = 1; j <= m; j++) {\n          int top1 = q[2][j] * 10.0 \/ (9.0 * num[2]),\n              down1 = ceil(q[2][j] * 10.0 \/ (11.0 * num[2])) + 0.1;\n          if (down1 > top1) {\n            continue;\n          }\n          int x = max(down, down1), y = min(top, top1);\n          if (x <= y) {\n            vis[j] = 1;\n            dfs(i + 1, 1);\n            vis[j] = 0;\n          }\n        }\n      }\n    }\n    printf(\"Case #%d: %d\\n\", ii, ans);\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\/\/ freopen(\"\", \"r\", stdin);\n\/\/ freopen(\"\", \"w\", stdout);\n\/\/ printf(\"Case #%d: \", ii);\n\nchar str[30][30];\nint num[30];\n\nint main() {\n  freopen(\"A-small-attempt2.in\", \"r\", stdin);\n  freopen(\"A-small-attempt2.out\", \"w\", stdout);\n  int t;\n  int n, m;\n  scanf(\"%d\", &t);\n  for (int ii = 1; ii <= t; ii++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", str[i]);\n    }\n    memset(num, 0, sizeof(num));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        if (str[i][j] != '?') {\n          num[str[i][j] - 'A'] = 1;\n          for (int k = j - 1; k >= 0; k--) {\n            if (str[i][k] != '?') {\n              break;\n            }\n            str[i][k] = str[i][j];\n          }\n          for (int k = j + 1; k < m; k++) {\n            if (str[i][k] != '?') {\n              break;\n            }\n            str[i][k] = str[i][j];\n          }\n        }\n      }\n    }\n    for (int i = 1; i < n; i++) {\n      if (str[i][0] == '?') {\n        for (int j = 0; j < m; j++) {\n          str[i][j] = str[i - 1][j];\n        }\n      }\n    }\n    for (int i = n - 2; i >= 0; i--) {\n      if (str[i][0] == '?') {\n        for (int j = 0; j < m; j++) {\n          str[i][j] = str[i + 1][j];\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", ii);\n    for (int i = 0; i < n; i++) {\n      printf(\"%s\\n\", str[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\/\/ freopen(\"\", \"r\", stdin);\n\/\/ freopen(\"\", \"w\", stdout);\n\/\/ printf(\"Case #%d: \", ii);\n\nstruct NODE {\n  long long k, d;\n} nodes[1010];\n\nint main() {\n  freopen(\"A-small-attempt0(1).in\", \"r\", stdin);\n  freopen(\"A-small-attempt0(1).out\", \"w\", stdout);\n  int T;\n  int d, n;\n  scanf(\"%d\", &T);\n  for (int ii = 1; ii <= T; ii++) {\n    scanf(\"%d%d\", &d, &n);\n    struct NODE min1;\n    min1.k = -1;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d%d\", &nodes[i].d, &nodes[i].k);\n      if (min1.k == -1) {\n        min1.d = d - nodes[i].d;\n        min1.k = nodes[i].k;\n      } else if (min1.d * nodes[i].k < min1.k * (d - nodes[i].d)) {\n        min1.d = d - nodes[i].d;\n        min1.k = nodes[i].k;\n      }\n    }\n    printf(\"Case #%d: %.10lf\\n\", ii, d * min1.k * 1.0 \/ min1.d);\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\/\/ freopen(\"\", \"r\", stdin);\n\/\/ freopen(\"\", \"w\", stdout);\n\/\/ printf(\"Case #%d: \", ii);\n\nint color[6];\nchar str[1010];\nmap<int, char> mp;\npriority_queue<pair<int, char>> q;\n\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"B-small-attempt2.out\", \"w\", stdout);\n  int T;\n  int d, n;\n  pair<int, char> temp, newd, sp;\n  scanf(\"%d\", &T);\n  for (int ii = 1; ii <= T; ii++) {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &color[i]);\n    }\n    while (!q.empty()) {\n      q.pop();\n    }\n    temp.first = color[0];\n    temp.second = 'R';\n    q.push(temp);\n    temp.first = color[2];\n    temp.second = 'Y';\n    q.push(temp);\n    temp.first = color[4];\n    temp.second = 'B';\n    q.push(temp);\n    temp = q.top();\n    q.pop();\n    newd = q.top();\n    q.pop();\n    if (temp.first > newd.first + q.top().first) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ii);\n      continue;\n    }\n    mp[3] = temp.second;\n    temp.second = 3;\n    mp[2] = newd.second;\n    newd.second = 2;\n    sp = q.top();\n    q.pop();\n    mp[1] = sp.second;\n    sp.second = 1;\n    q.push(temp);\n    q.push(newd);\n    q.push(sp);\n    for (int i = 0; i < n; i++) {\n      temp = q.top();\n      q.pop();\n      if (i > 0 && str[i - 1] == mp[temp.second]) {\n        if (!q.empty()) {\n          newd = q.top();\n          q.pop();\n          q.push(temp);\n          temp = newd;\n        } else {\n          printf(\"error\\n\");\n        }\n      }\n      str[i] = mp[temp.second];\n      temp.first--;\n      if (temp.first > 0) {\n        q.push(temp);\n      }\n    }\n    if (str[n - 1] == str[0]) {\n      swap(str[n - 2], str[n - 1]);\n      if (str[n - 2] == str[n - 3] || str[n - 1] == str[0]) {\n        printf(\"error.\\n\");\n      }\n    }\n    for (int i = 1; i < n; i++) {\n      if (str[i] == str[i - 1]) {\n        printf(\"error.\\n\");\n      }\n    }\n    if (str[0] == str[n - 1]) {\n      printf(\"error.\\n\");\n    }\n    str[n] = '\\0';\n    printf(\"Case #%d: %s\\n\", ii, str);\n  }\n  return 0;\n}\n"}
{"target":"lastonephy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n\/\/ freopen(\"\", \"r\", stdin);\n\/\/ freopen(\"\", \"w\", stdout);\n\/\/ printf(\"Case #%d: \", ii);\n\nstruct NODE {\n  long long d, s;\n} nodes[110];\n\nint n, q;\nlong long mp[110][110];\nlong long dis[110];\nint f[110][110];\ndouble dp[110][110];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int T;\n  int a, b;\n  scanf(\"%d\", &T);\n  for (int ii = 1; ii <= T; ii++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%lld%lld\", &nodes[i].d, &nodes[i].s);\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        scanf(\"%lld\", &mp[i][j]);\n      }\n    }\n    dis[1] = 0;\n    for (int i = 2; i <= n; i++) {\n      dis[i] = dis[i - 1] + mp[i - 1][i];\n    }\n    while (q--) {\n      scanf(\"%d%d\", &a, &b);\n      memset(f, -1, sizeof(f));\n      dp[1][1] = 0;\n      f[1][1] = 0;\n      for (int i = 2; i <= n; i++) {\n        double min1 = 1000000000000000.0;\n        int flag = 0;\n        for (int j = 1; j < i; j++) {\n          if (f[i - 1][j] != -1 && nodes[j].d >= dis[i] - dis[j]) {\n            dp[i][j] = dp[j][j] + (dis[i] - dis[j]) * 1.0 \/ nodes[j].s;\n            f[i][j] = 0;\n            min1 = min(min1, dp[i][j]);\n            flag = 1;\n          }\n        }\n        if (flag) {\n          dp[i][i] = min1;\n          f[i][i] = 0;\n        }\n      }\n      double ans = 100000000000.0;\n      int vis = 0;\n      for (int i = 1; i <= n; i++) {\n        if (f[n][i] != -1) {\n          vis = 1;\n          ans = min(ans, dp[n][i]);\n        }\n      }\n      printf(\"Case #%d: %.10lf\\n\", ii, ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nchar str[50];\n\nbool containszero(int l) {\n  int i = 0;\n  while (str[i] == '0') {\n    i++;\n  }\n  while (i < l) {\n    if (str[i] == '0')\n      return true;\n    i++;\n  }\n  return false;\n}\nint main() {\n  \/\/ #ifndef ONLINE_JUDGE\n  \/\/        input;\n  \/\/        output;\n  \/\/    #endif\n  int n, i, j, k, l, m, t, s = 0, d;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    cin >> str;\n    bool p = 0;\n    l = strlen(str);\n    if (!containszero(l)) {\n      for (i = l - 1; i > 0; i--) {\n        if (str[i] < str[i - 1]) {\n          for (j = i; j < l; j++)\n            str[j] = '9';\n          str[i - 1] = (char)(str[i - 1] - 1);\n        }\n      }\n    }\n    while (containszero(l)) {\n      for (i = 0; i < l; i++) {\n        if (str[i] == '0') {\n          for (j = i; j < l; j++)\n            str[j] = '9';\n          str[i - 1] = (char)(str[i - 1] - 1);\n          break;\n        }\n      }\n      if (!containszero(l)) {\n        for (i = l - 1; i > 0; i--) {\n          if (str[i] < str[i - 1]) {\n            for (j = i; j < l; j++)\n              str[j] = '9';\n            str[i - 1] = (char)(str[i - 1] - 1);\n          }\n        }\n      }\n    }\n    printf(\"Case #%d: \", c++);\n    i = 0;\n    while (str[i] == '0') {\n      i++;\n      continue;\n    }\n    while (i < l) {\n      cout << str[i++];\n    }\n    printf(\"\\n\");\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nchar str[50];\n\nlong long pow2(int a, long long int b) {\n  long long x = 1, y = a;\n  while (b > 0) {\n    if (b % 2 == 1) {\n      x = (x * y);\n    }\n    y = (y * y);\n    b \/= 2;\n  }\n  return x;\n}\nLL dist[2];\nint main() {\n  \/\/ #ifndef ONLINE_JUDGE\n  \/\/        input;\n  \/\/        output;\n  \/\/    #endif\n  int i, j, l, m, t, s = 0, d;\n  LL n, k, x, x1, level, used, prevLevel, rem;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    cin >> n;\n    cin >> k;\n    x = n;\n    x1 = n;\n    level = log2(k);\n    dist[0] = 1;\n    dist[1] = 0;\n    LL tempx, tempx1;\n    LL tempdist[2];\n    for (i = 1; i <= level; i++) {\n      tempdist[0] = 0;\n      tempdist[1] = 0;\n      if (x & 1) {\n        tempx = x \/ 2;\n        tempx1 = tempx;\n        tempdist[0] = 2 * dist[0];\n      } else {\n        tempx = (x - 1) \/ 2;\n        tempx1 = tempx + 1;\n        tempdist[0] = dist[0];\n        tempdist[1] = dist[0];\n      }\n\n      if (dist[1] > 0) {\n        if (!(x1 & 1)) {\n          tempx = (x1 - 1) \/ 2;\n          tempx1 = x1 \/ 2;\n          tempdist[0] += dist[1];\n          tempdist[1] += dist[1];\n        } else {\n          tempx1 = x1 \/ 2;\n          tempdist[1] += 2 * dist[1];\n        }\n      }\n      x = tempx;\n      x1 = tempx1;\n      dist[0] = tempdist[0];\n      dist[1] = tempdist[1];\n    }\n    prevLevel = pow2(2, level) - 1;\n    rem = k - prevLevel;\n    \/\/ cout<<x<<' '<<x1<<' '<<dist[0]<<' '<<dist[1]<<endl;\n    if (rem > dist[1]) {\n      used = x;\n    } else {\n      used = x1;\n    }\n    \/\/ debug(prevLevel,rem,x,x1,used);\n    \/\/ cout<<used<<endl;\n    if (used & 1) {\n      cout << \"Case #\" << c++ << \": \" << used \/ 2 << \" \" << used \/ 2 << endl;\n    } else {\n      cout << \"Case #\" << c++ << \": \" << used \/ 2 << \" \" << (used - 1) \/ 2\n           << endl;\n    }\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nchar str[50];\n\nbool containszero(int l) {\n  int i = 0;\n  while (str[i] == '0') {\n    i++;\n  }\n  while (i < l) {\n    if (str[i] == '0')\n      return true;\n    i++;\n  }\n  return false;\n}\nint main() {\n  \/\/ #ifndef ONLINE_JUDGE\n  \/\/        input;\n  \/\/        output;\n  \/\/    #endif\n  int n, i, j, k, l, m, t, s = 0, d;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    cin >> str;\n    cin >> k;\n    int ans = 0;\n    l = strlen(str);\n    for (i = 0; i + k - 1 < l; i++) {\n      if (str[i] == '+')\n        continue;\n      s = 0;\n      for (j = i; s < k; s++, j++) {\n        if (str[j] == '-')\n          str[j] = '+';\n        else\n          str[j] = '-';\n      }\n      ans++;\n    }\n    for (i = 0; i < l; i++) {\n      if (str[i] == '-')\n        break;\n    }\n    if (i < l) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c++);\n    } else {\n      printf(\"Case #%d: %d\\n\", c++, ans);\n    }\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nint req[110], lb[110], ub[110];\nint q[110][110];\nint main() {\n\n  freopen(\"input1.txt\", \"r\", stdin);\n  ;\n  freopen(\"output_small.txt\", \"w\", stdout);\n  ;\n\n  int n, i, j, k, l, m, t, s = 0, d, r, ans, p;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    memset((req), (0), sizeof(req));\n    memset((lb), (0), sizeof(lb));\n    memset((ub), (0), sizeof(ub));\n    memset((q), (0), sizeof(q));\n    scanf(\"%d\", &n);\n    ;\n    scanf(\"%d\", &p);\n    ;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &req[i]);\n      ;\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++) {\n        scanf(\"%d\", &q[i][j]);\n        ;\n      }\n    }\n    for (i = 0; i < n; i++) {\n      sort(q[i], q[i] + p);\n    }\n    for (i = 0; i < n; i++) {\n      double nt = (9 * req[i]) \/ 10.0;\n      lb[i] = (int)nt;\n      if (lb[i] < nt)\n        lb[i]++;\n      ub[i] = (11 * req[i]) \/ 10;\n    }\n    int ns;\n    ans = 0;\n    bool vis[52][52];\n    memset((vis), (0), sizeof(vis));\n    \/\/ debugarr(q[1],2);\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++) {\n        if (q[i][j] < lb[i])\n          continue;\n        ns = q[i][j] \/ lb[i];\n        int mx = q[i][j] \/ ub[i];\n        if (mx * ub[i] < q[i][j]) {\n          mx++;\n        }\n        swap(mx, ns);\n        while (ns <= mx) {\n          bool f = 1;\n          \/\/ cout<<ns<<' '<<ns*lb[i]<<' '<<q[i][j]<<' '<<ns*ub[i]<<endl;;\n          vector<pair<int, int>> v;\n          v.clear();\n          for (int m = i + 1; m < n; m++) {\n            f = 0;\n            for (int o = 0; o < p; o++) {\n              \/\/ cout<<m<<' '<<o<<' '<<ns<<' '<<ns*lb[m]<<' '<<q[m][o]<<'\n              \/\/ '<<ns*ub[m]<<' '<<vis[m][o]<<endl;;\n              if (!vis[m][o] && ns * lb[m] <= q[m][o] &&\n                  ns * ub[m] >= q[m][o]) {\n                vis[m][o] = true;\n                v.push_back(make_pair(m, o));\n                f = 1;\n                break;\n              }\n            }\n            \/\/ cout<<f<<endl;\n            if (f == 0)\n              break;\n          }\n          if (f == 0) {\n            for (int o = 0; o < v.size(); o++) {\n              vis[v[o].first][v[o].second] = false;\n            }\n          } else {\n            ans++;\n\n            break;\n          }\n          ns++;\n        }\n      }\n      break;\n    }\n    printf(\"Case #%d: %d\\n\", c++, ans);\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nchar str[50][50];\nbool vis[50][50];\nint main() {\n  \/\/ #ifndef ONLINE_JUDGE\n  \/\/        input;\n  \/\/        output;\n  \/\/    #endif\n  int n, i, j, k, l, m, t, s = 0, d, r;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    scanf(\"%d\", &r);\n    ;\n    scanf(\"%d\", &l);\n    ;\n    memset((vis), (0), sizeof(vis));\n    for (i = 0; i < r; i++) {\n      cin >> str[i];\n    }\n    for (i = 0; i < r; i++) {\n      for (j = 0; j < l; j++) {\n        if (str[i][j] != '?' && !vis[i][j]) {\n          k = i - 1;\n          while (k >= 0 && str[k][j] == '?') {\n            str[k][j] = str[i][j];\n            vis[k][j] = true;\n            k--;\n          }\n          k = i + 1;\n          while (k < r && str[k][j] == '?') {\n            str[k][j] = str[i][j];\n            vis[k][j] = true;\n            k++;\n          }\n        }\n      }\n    }\n\n    memset((vis), (0), sizeof(vis));\n    for (i = 0; i < r; i++) {\n      for (j = 0; j < l; j++) {\n        if (str[i][j] != '?' && !vis[i][j]) {\n          k = j - 1;\n          while (k >= 0 && str[i][k] == '?') {\n            str[i][k] = str[i][j];\n            vis[i][k] = true;\n            k--;\n          }\n          k = j + 1;\n          while (k < l && str[i][k] == '?') {\n            str[i][k] = str[i][j];\n            vis[i][k] = true;\n            k++;\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", c++);\n    for (i = 0; i < r; i++) {\n      cout << str[i] << endl;\n    }\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\nint main() {\n\n  freopen(\"input.txt\", \"r\", stdin);\n  ;\n  \/\/ output;\n\n  int n, i, j, k, l, m, t, s = 0, d, p;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    scanf(\"%d\", &d);\n    ;\n    scanf(\"%d\", &n);\n    ;\n    double ans = 0.0;\n    double r;\n    \/\/ cout<<n<<endl;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &k);\n      ;\n      scanf(\"%d\", &s);\n      ;\n      double r = ((d - k) * 1.0) \/ s;\n      \/\/ cout<<k<<' '<<s<<' '<<r<<endl;\n      ans = max(ans, r);\n    }\n    printf(\"Case #%d: %0.6lf\\n\", c++, d \/ ans);\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\n\/\/ R O Y G B V\nvector<pair<int, int>> v;\nint main() {\n\n  freopen(\"input.txt\", \"r\", stdin);\n  ;\n  \/\/ output;\n\n  int n, i, j, k, l, m, t, s = 0, d, p;\n  scanf(\"%d\", &t);\n  ;\n  int c = 1;\n  while (t--) {\n    scanf(\"%d\", &n);\n    ;\n    int a[1010];\n    int b[1010];\n    v.clear();\n    for (i = 0; i < 6; i++) {\n      scanf(\"%d\", &a[i]);\n      ;\n    }\n    d = 0;\n    v.push_back(make_pair(a[0], 0));\n    v.push_back(make_pair(a[2], 2));\n    v.push_back(make_pair(a[4], 4));\n    if (v[2].first > v[0].first + v[1].first) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c++);\n      continue;\n    }\n    sort(v.begin(), v.end());\n    while (d < n) {\n      if (v[2].first > 0) {\n        a[d++] = v[2].second;\n        v[2].first--;\n\n        if (v[1].first > 0) {\n          a[d++] = v[1].second;\n          v[1].first--;\n        } else if (v[0].first > 0) {\n          a[d++] = v[0].second;\n          v[0].first--;\n          if (v[2].first == 0)\n            break;\n        }\n      } else {\n        break;\n      }\n      \/\/ debugarr(a,d);\n      \/\/ cout<<v[0].first<<endl;\n      \/\/ if(d==4) break;\n      \/\/ cout<<d<<endl;\n    }\n    s = 0;\n    \/\/ cout<<v[0].first<<' '<<v[0].second<<endl;\n    if (v[0].first > 0) {\n      for (i = 0; i < d; i++) {\n        b[s++] = a[i];\n        if (v[0].first > 0 && a[i + 1] != v[0].second) {\n          b[s++] = v[0].second;\n          v[0].first--;\n        }\n        \/\/ cout<<v[0].first<<endl;\n        \/\/ debugarr(b,s);\n      }\n      for (i = 0; i < s - 1; i++) {\n        if (b[i] == b[i + 1]) {\n          printf(\"Case #%d: IMPOSSIBLE\\n\", c++);\n          break;\n        }\n      }\n      if (i != s - 1)\n        continue;\n      if (b[s - 1] == b[0]) {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", c++);\n        continue;\n      }\n      printf(\"Case #%d: \", c++);\n      for (i = 0; i < s; i++) {\n        printf(\"%c\", colors[b[i]]);\n      }\n      cout << endl;\n    } else if (a[d - 1] == a[0]) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", c++);\n    } else {\n      printf(\"Case #%d: \", c++);\n      for (i = 0; i < d; i++) {\n        printf(\"%c\", colors[a[i]]);\n      }\n      cout << endl;\n    }\n  }\n  return (0);\n}\n"}
{"target":"lazyBit","func":"#include <bitset>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n\n#include <algorithm>\n#include <functional>\n#include <list>\n#include <map>\n#include <numeric>\n#include <utility>\n#include <vector>\n\/\/ #include <random>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\n\ntypedef long long LL;           \/\/ NOTES:int64\ntypedef unsigned long long ULL; \/\/ NOTES:uint64\ntypedef unsigned uint;\n\nconst double pi = acos(-1.0); \/\/ NOTES:pi\nconst double eps = 1e-11;     \/\/ NOTES:eps\nconst int MAXI = 0x7fffffff;\nconst int dx[] = {1, 0, -1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst char colors[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nconst char dz[] = \"SENW\";\nstruct debugger {\n  template <typename T> debugger &operator,(const T &v) {\n    cerr << v << \" \";\n    return *this;\n  }\n} dbg;\n\nvoid debugarr(int *arr, int n) {\n  cout << \"[\";\n  for (int i = 0; i < n; i++)\n    cout << arr[i] << \" \";\n  cout << \"]\" << endl;\n}\n\ndouble besttime[1010];\nLL c[110], d[110], dist[110][110], a[110], b[110], dd[110];\nlong double best[110][110];\nint main() {\n\n  freopen(\"input.txt\", \"r\", stdin);\n  ;\n  \/\/ output;\n\n  long long n, k, l, m, t, s = 0, p, q;\n  int i, j;\n  cin >> t;\n  int ct = 1;\n  while (t--) {\n    scanf(\"%lld\", &n);\n    ;\n    scanf(\"%lld\", &q);\n    ;\n    for (i = 0; i < n; i++) {\n      scanf(\"%lld\", &c[i]);\n      ;\n      scanf(\"%lld\", &d[i]);\n      ;\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        scanf(\"%lld\", &dist[i][j]);\n        ;\n      }\n    }\n    for (i = 0; i < q; i++) {\n      scanf(\"%lld\", &a[i]);\n      ;\n      scanf(\"%lld\", &b[i]);\n      ;\n    }\n    dd[0] = 0;\n    for (i = 1; i < n; i++) {\n      dd[i] = dd[i - 1] + dist[i - 1][i];\n    }\n    besttime[0] = 0.0;\n    long double r;\n    for (i = 1; i < n; i++) {\n      r = 1e18;\n      for (j = 0; j < i; j++) {\n        if (dd[i] - dd[j] <= c[j]) {\n          best[i][j] = besttime[j] + ((dd[i] - dd[j]) * 1.0) \/ d[j];\n        } else {\n          best[i][j] = 1e18;\n        }\n        r = min(r, best[i][j]);\n      }\n      besttime[i] = r;\n    }\n    \/\/ if(besttime[n-1]<0) {\n    \/\/ \tcerr<<n<<' '<<q<<endl;\n    \/\/ }\n    printf(\"Case #%d: %0.6lf\\n\", ct++, besttime[n - 1]);\n  }\n  return (0);\n}\n"}
{"target":"LEcry","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nchar s[200];\nint a[200];\nint ans[200];\nbool check(int *x, int *y, int n) {\n  for (int j = 0; j < n; ++j) {\n    if (x[j] == y[j])\n      continue;\n    if (x[j] < y[j])\n      return true;\n    return false;\n  }\n  return true;\n}\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    scanf(\" %s\", s);\n    int n = strlen(s);\n    if (n == 1) {\n      printf(\"Case #%d: %s\\n\", ++ri, s);\n      continue;\n    }\n    for (int i = 0; i < n; ++i)\n      a[i] = s[i] - '0';\n    for (int i = 0; i < n; ++i) {\n      for (int j = i; j < n; ++j)\n        ans[j] = a[i];\n      if (check(ans, a, n))\n        continue;\n      ans[i] = a[i] - 1;\n      for (int j = i + 1; j < n; ++j)\n        ans[j] = 9;\n      break;\n    }\n    printf(\"Case #%d: \", ++ri);\n    if (ans[0] == 0) {\n      for (int i = 1; i < n; ++i)\n        printf(\"%d\", ans[i]);\n      puts(\"\");\n    } else {\n      for (int i = 0; i < n; ++i)\n        printf(\"%d\", ans[i]);\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nmap<long long, long long> mp;\npriority_queue<long long> q;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    mp.clear();\n    while (!q.empty())\n      q.pop();\n    long long n, k;\n    scanf(\"%I64d%I64d\", &n, &k);\n    mp[n] = 1;\n    q.push(n);\n    long long ansl, ansr;\n    \/\/ printf(\"%I64d %I64d\\n\",n,k);\n    while (k) {\n      long long now = q.top();\n      q.pop();\n      while (!q.empty() && q.top() == now)\n        q.pop();\n      long long cnt = mp[now];\n\n      \/\/ printf(\"cnt:%I64d\\n\",cnt);\n      if (cnt >= k) {\n        ansl = (now - 1) \/ 2;\n        ansr = now \/ 2;\n        k = 0;\n        break;\n      }\n      mp[now] = 0;\n      k -= cnt;\n      if (now & 1) {\n        mp[now \/ 2] += cnt * 2;\n        q.push(now \/ 2);\n      } else {\n        mp[now \/ 2] += cnt;\n        q.push(now \/ 2);\n        mp[(now - 1) \/ 2] += cnt;\n        q.push((now - 1) \/ 2);\n      }\n    }\n    printf(\"Case #%d: %I64d %I64d\\n\", ++ri, ansr, ansl);\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nchar s[100050];\nint a[100050];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int tt, k, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    scanf(\" %s%d\", s, &k);\n    int n = strlen(s);\n    for (int i = 0; i < n; ++i)\n      a[i] = (s[i] == '+');\n    int flag = 0;\n    for (int i = 0; i < n; ++i) {\n      if (a[i] == 0) {\n        if (i + k > n) {\n          flag = -1;\n          break;\n        }\n        flag++;\n        for (int j = i; j < i + k; ++j)\n          a[j] = 1 - a[j];\n      }\n    }\n    printf(\"Case #%d: \", ++ri);\n    if (flag == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", flag);\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nmap<long long, long long> mp;\n\npriority_queue<long long> q;\nint req[1111], num[55][55];\nint tail[55];\nint mincal(int cnt, int per) {\n  int l, r;\n  l = 0, r = 1000000;\n  while (r - l > 1) {\n    int mid = (l + r) >> 1;\n    if (1.0 * per * mid * 1.1 + 1e-8 >= cnt)\n      r = mid;\n    else\n      l = mid;\n  }\n  if (1.0 * per * r * 0.9 - 1e-8 >= cnt)\n    return -1;\n  return r;\n}\nint maxcal(int cnt, int per) {\n  int l, r;\n  l = 0, r = 1000001;\n  while (r - l > 1) {\n    int mid = (l + r) >> 1;\n    if (1.0 * per * mid * 0.9 - 1e-8 <= cnt)\n      l = mid;\n    else\n      r = mid;\n  }\n  if (1.0 * per * l * 1.1 + 1e-8 <= cnt)\n    return -1;\n  return l;\n}\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%d\", &req[i]);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        scanf(\"%d\", &num[i][j]);\n      }\n      sort(num[i], num[i] + m);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n      tail[i] = 0;\n    }\n    while (true) {\n      int l, r;\n      l = 0, r = 1000000;\n      int minid = -1;\n      int one, cnt;\n      for (int i = 0; i < n; ++i) {\n        if (minid == -1 ||\n            (long long)cnt * req[i] > (long long)num[i][tail[i]] * one) {\n          minid = i;\n          cnt = num[i][tail[i]];\n          one = req[i];\n        }\n        int nowl, nowr;\n        nowl = mincal(num[i][tail[i]], req[i]);\n        nowr = maxcal(num[i][tail[i]], req[i]);\n        l = max(l, nowl);\n        r = min(r, nowr);\n      }\n      if (l <= r && r != 0) {\n        ans++;\n        for (int i = 0; i < n; ++i)\n          tail[i]++;\n      } else {\n        tail[minid]++;\n      }\n      int flag = 1;\n      for (int i = 0; i < n; ++i) {\n        if (tail[i] == m)\n          flag = 0;\n      }\n      if (flag == 0)\n        break;\n    }\n    printf(\"Case #%d: %d\\n\", ++ri, ans);\n  }\n}\n"}
{"target":"LEcry","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nmap<long long, long long> mp;\npriority_queue<long long> q;\nchar s[15][15];\nchar ans[15][15];\nint main() {\n  freopen(\"A-small-attempt0 (1).in\", \"r\", stdin);\n  freopen(\"A-small-attempt0 (1).out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i)\n      scanf(\" %s\", s[i]);\n    memset(ans, 0, sizeof(ans));\n    for (int i = 0; i < n; ++i) {\n      int now = 0;\n      int flag = 0;\n      for (int j = 0; j < m; ++j) {\n        if (s[i][j] != '?')\n          flag = 1;\n      }\n      if (flag == 0) {\n        if (i != 0) {\n          for (int j = 0; j < m; ++j)\n            ans[i][j] = ans[i - 1][j];\n        }\n      } else {\n        \/\/\t\t\t\tputs(\"222\");\n        while (s[i][now] == '?') {\n          now++;\n        }\n        for (int j = 0; j < now; ++j)\n          ans[i][j] = s[i][now];\n        while (now < m) {\n          int p = now;\n          while (p < m && (s[i][p] == s[i][now] || s[i][p] == '?')) {\n            ans[i][p] = s[i][now];\n\n            \/\/\t\t\t\t\t\tprintf(\"ip:%d %d %c\n            \/\/%c\\n\",i,p,ans[i][p],s[i][now]);\n            ++p;\n          }\n          \/\/\t\t\t\t\tprintf(\"%d %d %s %c\n          \/\/%c\\n\",i,p,ans[i],ans[i][0],ans[i][1]);\n          now = p;\n        }\n      }\n    }\n    \/\/\t\tfor(int i=0;i<n;++i)\n    \/\/\t\t\t\t\tprintf(\"%s\\n\",ans[i]);\n    for (int i = n - 1; i >= 0; --i) {\n      int flag = 0;\n      for (int j = 0; j < m; ++j) {\n        if (ans[i][j] != 0)\n          flag = 1;\n      }\n      if (flag == 0) {\n        if (i != n - 1) {\n          for (int j = 0; j < m; ++j)\n            ans[i][j] = ans[i + 1][j];\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", ++ri);\n    for (int i = 0; i < n; ++i)\n      printf(\"%s\\n\", ans[i]);\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"\/\/============================================================================\n\/\/ Name        : A.cpp\n\/\/ Author      :\n\/\/ Version     :\n\/\/ Copyright   : Your copyright notice\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nint k[100050], s[100050];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    int d, n;\n    scanf(\"%d%d\", &d, &n);\n    double ans = -1;\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d%d\", &k[i], &s[i]);\n      double tmp = 1.0 * d * s[i] \/ (1.0 * d - k[i]);\n      if (ans < 0 || tmp < ans)\n        ans = tmp;\n    }\n    printf(\"Case #%d: %.8lf\\n\", ++ri, ans);\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"\/\/============================================================================\n\/\/ Name        : A.cpp\n\/\/ Author      :\n\/\/ Version     :\n\/\/ Copyright   : Your copyright notice\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\nint R, O, Y, G, B, V;\n\/\/ RYB\n\/\/ O RY\n\/\/ G YB\n\/\/ V RB\nstruct node {\n  char c;\n  int num;\n  node() {}\n  node(char cc, int numm) {\n    c = cc;\n    num = numm;\n  }\n} s[5];\nbool cmp(node a, node b) { return a.num > b.num; }\nchar ans[100050];\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    int n;\n    scanf(\"%d\", &n);\n    scanf(\"%d%d%d%d%d%d\", &R, &O, &Y, &G, &B, &V);\n    printf(\"Case #%d: \", ++ri);\n    int flag = 1;\n    if (B < O)\n      flag = 0;\n    if (B == O && B != 0) {\n      if (R + Y + G + V != 0)\n        flag = 0;\n      else {\n        for (int i = 0; i < B; ++i) {\n          printf(\"BO\");\n        }\n        puts(\"\");\n        continue;\n      }\n    }\n\n    if (R < G)\n      flag = 0;\n    if (R == G && R != 0) {\n      if (B + Y + O + V != 0)\n        flag = 0;\n      else {\n        for (int i = 0; i < R; ++i) {\n          printf(\"RG\");\n        }\n        puts(\"\");\n        continue;\n      }\n    }\n\n    if (Y < V)\n      flag = 0;\n    if (Y == V && Y != 0) {\n      if (B + R + O + G != 0)\n        flag = 0;\n      else {\n        for (int i = 0; i < Y; ++i) {\n          printf(\"YV\");\n        }\n        puts(\"\");\n        continue;\n      }\n    }\n\n    Y -= V;\n    R -= G;\n    B -= O;\n    n -= 2 * (V + G + O);\n    \/\/\t\tprintf(\"n:%d %d\\n\",n,flag);\n    if (Y * 2 > n)\n      flag = 0;\n    if (R * 2 > n)\n      flag = 0;\n    if (B * 2 > n)\n      flag = 0;\n    if (flag == 0) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    s[0] = node('Y', Y);\n    s[1] = node('R', R);\n    s[2] = node('B', B);\n    sort(s, s + 3, cmp);\n    \/\/\t\tprintf(\"%d %d %d\\n\",s[0].num,s[1].num,s[2].num);\n    for (int i = 0; i < n; i += 2) {\n      if (s[0].num > 0) {\n        s[0].num--;\n        ans[i] = s[0].c;\n      } else if (s[1].num > 0) {\n        s[1].num--;\n        ans[i] = s[1].c;\n      } else {\n        s[2].num--;\n        ans[i] = s[2].c;\n      }\n    }\n    for (int i = 1; i < n; i += 2) {\n      if (s[0].num > 0) {\n        s[0].num--;\n        ans[i] = s[0].c;\n      } else if (s[1].num > 0) {\n        s[1].num--;\n        ans[i] = s[1].c;\n      } else {\n        s[2].num--;\n        ans[i] = s[2].c;\n      }\n    }\n    \/\/\t\tans[n]=0;\n    \/\/\t\tprintf(\"ans:%s %d %d %d\\n\",ans,O,G,V);\n    for (int i = 0; i < n; ++i) {\n      printf(\"%c\", ans[i]);\n      if (ans[i] == 'B') {\n        for (int j = 0; j < O; ++j) {\n          printf(\"OB\");\n        }\n        O = 0;\n      }\n      if (ans[i] == 'R') {\n        for (int j = 0; j < G; ++j) {\n          printf(\"GR\");\n        }\n        G = 0;\n      }\n      if (ans[i] == 'Y') {\n        for (int j = 0; j < V; ++j) {\n          printf(\"VY\");\n        }\n        V = 0;\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"LEcry","func":"\/\/============================================================================\n\/\/ Name        : A.cpp\n\/\/ Author      :\n\/\/ Version     :\n\/\/ Copyright   : Your copyright notice\n\/\/ Description : Hello World in C++, Ansi-style\n\/\/============================================================================\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n\nusing namespace std;\ndouble f[111][111];\nlong long dis[111][111];\nint e[111], s[111];\nint mp[111][111];\ndouble dp[111][111];\nbool bo[111][111];\nstruct node {\n  int x, y;\n  node() {}\n  node(int xx, int yy) { x = xx, y = yy; }\n} st[2111111];\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int tt, ri = 0;\n  scanf(\"%d\", &tt);\n  while (tt--) {\n    int n, q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; ++i)\n      scanf(\"%d%d\", &e[i], &s[i]);\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j) {\n        scanf(\"%d\", &mp[i][j]);\n        dis[i][j] = mp[i][j];\n      }\n    for (int k = 1; k <= n; ++k) {\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n          if (dis[i][k] < 0 || dis[k][j] < 0)\n            continue;\n          if (dis[i][j] < 0 || dis[i][k] + dis[k][j] < dis[i][j])\n            dis[i][j] = dis[i][k] + dis[k][j];\n        }\n      }\n    }\n\n    \/\/\t\tfor(int i=1;i<=n;++i){\n    \/\/\t\t\tfor(int j=1;j<=n;++j){\n    \/\/\t\t\t\tprintf(\"%I64d \",dis[i][j]);\n    \/\/\t\t\t}\n    \/\/\t\t\tputs(\"\");\n    \/\/\t\t}\n    printf(\"Case #%d:\", ++ri);\n    for (int cas = 0; cas < q; ++cas) {\n      int u, k;\n      scanf(\"%d %d\", &u, &k);\n      double f[111];\n      f[1] = 0;\n      for (int i = 2; i <= n; ++i) {\n        f[i] = -1;\n        for (int j = 1; j < i; ++j) {\n          if (dis[j][i] > e[j])\n            continue;\n          double tmp = f[j] + dis[j][i] * 1.0 \/ s[j];\n          if (f[i] < -1e-8 || tmp < f[i])\n            f[i] = tmp;\n        }\n      }\n      printf(\" %.8lf\", f[k]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nconst int MAX = 1e5 + 5;\n\nbool solve(int n) {\n  vector<int> dig;\n  while (n) {\n    dig.push_back(n % 10);\n    n \/= 10;\n  }\n  reverse(dig.begin(), dig.end());\n  for (int i = 1; i < dig.size(); ++i) {\n    if (dig[i] < dig[i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvector<int> v;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  for (int i = 1; i < MAX; ++i) {\n    if (solve(i)) {\n      v.push_back(i);\n    }\n  }\n  int t, n, ans;\n  cin >> t;\n  for (int T = 1; T <= t; ++T) {\n    cout << \"Case #\" << T << \": \";\n\n    cin >> n;\n    ans = -1;\n    for (int x : v) {\n      if (x <= n) {\n        ans = x;\n      } else {\n        break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nset<int> u, v;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t, n, k, a, b, c;\n  cin >> t;\n  for (int T = 1; T <= t; ++T) {\n    cout << \"Case #\" << T << \": \";\n\n    cin >> n >> k;\n    a = 0;\n    b = 0;\n    if (n == k) {\n      cout << b << \" \" << a << \"\\n\";\n      continue;\n    }\n    u.clear();\n    v.clear();\n    for (int i = 1; i <= n; ++i) {\n      u.insert(i);\n    }\n    v.insert(0);\n    v.insert(n + 1);\n    for (int i = 1; i <= k; ++i) {\n      a = -1, b = -1, c = 0;\n      for (int x : u) {\n        auto it = v.lower_bound(x);\n        int f = (*it) - x - 1;\n        \/\/ cout << (*it) << \" : \";\n        it--;\n        \/\/ cout << (*it) << \" : \";\n        int g = x - (*it) - 1;\n        if (min(f, g) > a) {\n          a = min(f, g);\n          b = max(f, g);\n          c = x;\n        } else if (min(f, g) == a) {\n          if (max(f, g) > b) {\n            a = min(f, g);\n            b = max(f, g);\n            c = x;\n          }\n        }\n        \/\/ cout << x << \" \" << f << \" \" << g << \"\\n\";\n      }\n      \/\/ cout << c << \"\\n\";\n      assert(c != 0);\n      u.erase(c);\n      v.insert(c);\n    }\n    cout << b << \" \" << a << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t, n, k, x, y, l;\n  cin >> t;\n  for (int T = 1; T <= t; ++T) {\n    cout << \"Case #\" << T << \": \";\n\n    string s, a;\n    cin >> s >> k;\n    n = s.length();\n    l = 1 << n;\n    x = INT_MAX;\n    for (int i = 0; i < l; ++i) {\n      a = s;\n      vector<int> b;\n      for (int j = 0; j < n; ++j) {\n        if (i & (1 << j)) {\n          b.push_back(j);\n        }\n      }\n      y = 0;\n      for (int j : b) {\n        if (j + k <= n) {\n          for (int u = j; u <= j + k - 1; ++u) {\n            if (a[u] == '-') {\n              a[u] = '+';\n            } else {\n              a[u] = '-';\n            }\n          }\n          y += 1;\n        } else {\n          y = INT_MAX;\n          break;\n        }\n      }\n      for (int j = 0; j < n; ++j) {\n        if (a[j] == '-') {\n          y = INT_MAX;\n          break;\n        }\n      }\n      x = min(x, y);\n    }\n    if (x == INT_MAX) {\n      cout << \"IMPOSSIBLE\\n\";\n    } else {\n      cout << x << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nconst int MAX = 51;\n\nint r[MAX];\nint q[MAX][MAX];\n\nbool chk(LL a, LL b, LL c) {\n  if (b >= 0) {\n    \/\/ printf(\"%lld %lld %lld\\n\", a, b, c);\n    LL x = a * b;\n    LL u = (10 * c) \/ 9;\n    LL v = (10 * c + 10) \/ 11;\n    assert(((9 * c) \/ 10) <= u);\n    assert(((11 * c) \/ 10) >= v);\n    return (v <= x && x <= u);\n  } else {\n    return false;\n  }\n}\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int T = 1; T <= t; ++T) {\n    printf(\"Case #%d: \", T);\n    int n, p;\n    scanf(\"%d %d\", &n, &p);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", &r[i]);\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        scanf(\"%d\", &q[i][j]);\n      }\n    }\n    int ans = 0;\n    if (n == 1) {\n      for (int j = 0; j < p; ++j) {\n        int u = q[0][j] \/ r[0];\n        if (chk(r[0], u - 1, q[0][j])) {\n          ans += 1;\n        } else if (chk(r[0], u, q[0][j])) {\n          ans += 1;\n        } else if (chk(r[0], u + 1, q[0][j])) {\n          ans += 1;\n        }\n      }\n    } else if (n == 2) {\n      vector<int> perm(p);\n      for (int i = 0; i < p; ++i) {\n        perm[i] = i;\n      }\n      do {\n        int val = 0;\n        for (int j = 0; j < p; ++j) {\n          int u = q[0][j] \/ r[0];\n          int v = q[1][perm[j]] \/ r[1];\n          \/\/ printf(\"%d %d\\n\", u, v);\n          for (int X = min(u, v) - 1; X <= max(u, v) + 1; ++X) {\n            if (chk(r[0], X, q[0][j]) && chk(r[1], X, q[1][perm[j]])) {\n              val += 1;\n              break;\n            }\n          }\n        }\n        ans = max(ans, val);\n      } while (next_permutation(perm.begin(), perm.end()));\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nconst int MAX = 30;\n\nstring s[MAX], a[MAX];\nint g[MAX][MAX];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int T = 1; T <= t; ++T) {\n    cout << \"Case #\" << T << \":\\n\";\n    int r, c;\n    cin >> r >> c;\n    for (int i = 0; i < r; ++i) {\n      cin >> s[i];\n      for (int j = 0; j < c; ++j) {\n        g[i][j] = (s[i][j] != '?');\n      }\n    }\n    for (int i = 0; i < r; ++i) {\n      a[i] = s[i];\n    }\n    for (int step = 1; step <= 5; ++step) {\n      for (int i = 0; i < r; ++i) {\n        for (int j = 0; j < c; ++j) {\n          if (g[i][j] == 1) {\n            int u = i, d = i, l = j, q = j + 1;\n            while (u >= 0) {\n              bool can = true;\n              for (int k = l; k < q; ++k) {\n                if (a[u][k] == '?' || a[u][k] == a[i][j]) {\n                  \/\/\n                } else {\n                  can = false;\n                  break;\n                }\n              }\n              if (!can)\n                break;\n              u -= 1;\n            }\n            while (d < r) {\n              bool can = true;\n              for (int k = l; k < q; ++k) {\n                if (a[d][k] == '?' || a[d][k] == a[i][j]) {\n                  \/\/\n                } else {\n                  can = false;\n                  break;\n                }\n              }\n              if (!can)\n                break;\n              d += 1;\n            }\n            if (step == 1) {\n              l -= 1;\n            }\n            while (step > 1 && l >= 0) {\n              bool can = true;\n              for (int k = u + 1; k <= d - 1; ++k) {\n                if (a[k][l] == '?' || a[k][l] == a[i][j]) {\n                  \/\/\n                } else {\n                  can = false;\n                  break;\n                }\n              }\n              if (!can)\n                break;\n              l -= 1;\n            }\n            while (q < c) {\n              bool can = true;\n              for (int k = u + 1; k <= d - 1; ++k) {\n                if (a[k][q] == '?' || a[k][q] == a[i][j]) {\n                  \/\/\n                } else {\n                  can = false;\n                  break;\n                }\n              }\n              if (!can)\n                break;\n              q += 1;\n            }\n            \/\/ printf(\"%c %d %d : %d %d %d %d\\n\", a[i][j], i, j, u+1, d-1, l+1,\n            \/\/ q-1);\n            for (int x = u + 1; x <= d - 1; ++x) {\n              for (int y = l + 1; y <= q - 1; ++y) {\n                a[x][y] = a[i][j];\n              }\n            }\n          }\n        }\n      }\n      \/\/ printf(\"\\n\");\n    }\n    bool done = true;\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        done &= (a[i][j] != '?');\n        if (s[i][j] != '?') {\n          assert(a[i][j] == s[i][j]);\n        }\n      }\n    }\n    assert(done);\n    for (int i = 0; i < r; ++i) {\n      cout << a[i] << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nconst int MAX = 1e3 + 3;\n\nvector<pll> go;\nLL timer[MAX];\n\nbool cmp(pll a, pll b) {\n  if (a.first == b.first) {\n    return a.second > b.second;\n  }\n  return a.first > b.first;\n}\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int T = 1; T <= t; ++T) {\n    printf(\"Case #%d: \", T);\n    long long d;\n    int n;\n    scanf(\"%lld %d\", &d, &n);\n    go.resize(n);\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%lld %lld\", &go[i].first, &go[i].second);\n    }\n    sort(go.begin(), go.end(), cmp);\n    LD tx = 1;\n    if (n == 1) {\n      tx = (d - go[0].first) \/ ((LD)go[0].second);\n    } else {\n      if (go[0].second >= go[1].second) {\n        tx = (d - go[1].first) \/ ((LD)go[1].second);\n      } else {\n        LD meet =\n            (go[0].first - go[1].first) \/ ((LD)go[1].second - (LD)go[0].second);\n        meet *= go[0].second;\n        meet += go[0].first;\n        \/\/ printf(\"%Lf\\n\", meet);\n        if (meet >= d) {\n          tx = max((d - go[1].first) \/ ((LD)go[1].second),\n                   (d - go[0].first) \/ ((LD)go[0].second));\n        } else {\n          tx = (d - meet) \/ ((LD)go[0].second);\n          \/\/ printf(\"%Lf \", tx);\n          tx += (go[0].first - go[1].first) \/\n                ((LD)go[1].second - (LD)go[0].second);\n          \/\/ printf(\"%Lf\\n\", tx);\n        }\n      }\n    }\n    LD ans = d;\n    ans \/= (LD)tx;\n    printf(\"%.12Lf\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nchar mp[7] = \"RYBOGV\";\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int T = 1; T <= t; ++T) {\n    printf(\"Case #%d: \", T);\n    int n, r, o, y, g, b, v;\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    vector<int> p(n, -1);\n    vector<pii> x;\n    x.push_back({r, 0});\n    x.push_back({y, 1});\n    x.push_back({b, 2});\n    sort(x.begin(), x.end());\n    reverse(x.begin(), x.end());\n    int can = 0;\n    for (int i = 0; i < n; i += 2) {\n      p[i] = x[0].second;\n      can += 1;\n      if (can == x[0].first) {\n        break;\n      }\n    }\n    vector<int> pos;\n    for (int i = 0; i < n; ++i) {\n      if (p[i] == -1) {\n        pos.push_back(i);\n      }\n    }\n    if (can < x[0].first) {\n      printf(\"IMPOSSIBLE\\n\");\n    } else {\n      int turn = 1, val = x[1].first, val2 = x[2].first;\n      for (int i : pos) {\n        if ((turn && val > 0) || val2 <= 0) {\n          p[i] = x[1].second;\n          val -= 1;\n          if (val <= val2) {\n            turn ^= 1;\n          }\n        } else {\n          p[i] = x[2].second;\n          val2 -= 1;\n          if (val2 <= val) {\n            turn ^= 1;\n          }\n        }\n      }\n      bool ans = 1;\n      for (int i = 0; i < n; ++i) {\n        if (p[i] == p[(i + 1) % n] || p[i] == p[(i - 1 + n) % n]) {\n          ans = 0;\n          break;\n        }\n      }\n      int cnt[3] = {0, 0, 0};\n      for (int i = 0; i < n; ++i) {\n        cnt[p[i]] += 1;\n      }\n      for (int i = 0; i < 3; ++i) {\n        for (int j = 0; j < 3; ++j) {\n          if (x[j].second == i) {\n            assert(cnt[i] == x[j].first);\n          }\n        }\n      }\n      if (ans) {\n        for (int i = 0; i < n; ++i) {\n          printf(\"%c\", mp[p[i]]);\n        }\n        printf(\"\\n\");\n      } else {\n        cerr << \"came\\n\" << r << \" \" << y << \" \" << b << \"\\n\";\n        printf(\"IMPOSSIBLE\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"likecs","func":"\/******************************************\n *    AUTHOR:         BHUVNESH JAIN        *\n *    INSTITUITION:   BITS PILANI, PILANI  *\n ******************************************\/\n#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\ntypedef pair<LL, LL> pll;\n\nconst int MAX = 105;\n\nLL g[MAX][MAX];\nvector<pll> go;\nint n, q, u, v;\nLD dp[MAX][MAX];\nLL dis[MAX];\n\nLD solve(int city, int last) {\n  if (city == n) {\n    return 0;\n  }\n  LD &res = dp[city][last];\n  if (res < 0) {\n    res = 1e18;\n    LD can;\n    LL sum = 0;\n    for (int i = city; i < n; ++i) {\n      sum += dis[i];\n      if (sum <= go[city].first) {\n        can = ((LD)sum) \/ ((LD)go[city].second);\n        \/\/ printf(\"C : %d %d %Lf\\n\", i+1, city, can);\n        can += solve(i + 1, i);\n        res = min(res, can);\n      }\n    }\n  }\n  return res;\n}\n\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int T = 1; T <= t; ++T) {\n    printf(\"Case #%d: \", T);\n    scanf(\"%d %d\", &n, &q);\n    go.resize(n + 1);\n    for (int i = 1; i <= n; ++i) {\n      scanf(\"%lld %lld\", &go[i].first, &go[i].second);\n    }\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        scanf(\"%lld\", &g[i][j]);\n        dp[i][j] = -1;\n      }\n      dis[i] = g[i][i + 1];\n    }\n    LD ans = 1e18, can;\n    LL sum = 0;\n    \/\/ printf(\"\\n\");\n    for (int i = 1; i < n; ++i) {\n      sum += dis[i];\n      if (sum <= go[1].first) {\n        can = ((LD)sum) \/ ((LD)go[1].second);\n        \/\/ printf(\"C : %d %d %Lf\\n\", i + 1, i, can);\n        can += solve(i + 1, i);\n        \/\/ printf(\"%d : %Lf\\n\", i, can);\n        ans = min(ans, can);\n      }\n    }\n    while (q--) {\n      scanf(\"%d %d\", &u, &v);\n      printf(\"%.10Lf\\n\", ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nint t;\nlong long x, ans;\n\nvoid dfs(const long long &k, const long long &x, const long long &now,\n         const int &b) {\n  if (k == 0) {\n    ans = ans > now ? ans : now;\n    return;\n  }\n  if (ans \/ 10 >= now * k + k)\n    return;\n  if (b)\n    dfs(k \/ 10, x - x \/ k * k, 10 * now + 9, b);\n  else {\n    int d = x \/ k;\n    for (int i = 0; i <= d; ++i)\n      if (i >= now % 10)\n        dfs(k \/ 10, x - x \/ k * k, 10 * now + i, i < d);\n  }\n}\n\nint main() {\n\n  freopen(\"B-small.in\", \"r\", stdin);\n  freopen(\"B-small.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int Case = 1; Case <= t; ++Case) {\n    scanf(\"%lld\", &x);\n    long long k = 1;\n    while (k <= x \/ 10)\n      k *= 10;\n    ans = 0;\n    dfs(k, x, 0, 0);\n    printf(\"Case #%d: %lld\\n\", Case, ans);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nclass Empty {\npublic:\n  long long l, r;\n\n  bool operator<(const Empty &other) const {\n    if (l != other.l)\n      return l > other.l;\n    return r > other.r;\n  }\n\n  Empty() {}\n\n  Empty(const long long &n) {\n    l = (n - 1) \/ 2;\n    r = (n - 1) \/ 2 + ((n - 1) & 1);\n  }\n};\n\nint t;\nlong long n, k;\nmap<Empty, long long> myMap, temp;\n\nEmpty solve(const long long &k) {\n  temp.clear();\n  long long k0 = k;\n  for (map<Empty, long long>::iterator it = myMap.begin(); it != myMap.end();\n       ++it) {\n    if (it->second >= k0)\n      return it->first;\n    assert(it->first.l <= it->first.r);\n    k0 -= it->second;\n    if (it->first.l != 0)\n      temp[Empty(it->first.l)] += it->second;\n    if (it->first.r != 0)\n      temp[Empty(it->first.r)] += it->second;\n  }\n  myMap = temp;\n  return solve(k0);\n}\n\nint main() {\n\n  freopen(\"C-small.in\", \"r\", stdin);\n  freopen(\"C-small.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int Case = 1; Case <= t; ++Case) {\n    scanf(\"%lld %lld\", &n, &k);\n    myMap.clear();\n    myMap[Empty(n)] = 1;\n    Empty ans = solve(k);\n    printf(\"Case #%d: %lld %lld\\n\", Case, ans.r, ans.l);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint t, n, k;\nchar inp[1005];\n\nint main() {\n\n  freopen(\"A-small.in\", \"r\", stdin);\n  freopen(\"A-small.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (int Case = 1; Case <= t; ++Case) {\n    scanf(\"%s %d\", inp, &k);\n    n = strlen(inp);\n    int ans = 0;\n    for (int i = 0; i < n; ++i)\n      if (inp[i] == '-' && i + k <= n && ++ans)\n        for (int j = 0; j < k; ++j)\n          inp[i + j] = inp[i + j] == '+' ? '-' : '+';\n    for (int i = 0; i < n; ++i)\n      if (inp[i] == '-')\n        ans = -1;\n    printf(\"Case #%d: \", Case);\n    if (ans == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nstruct Range {\n  int l, r;\n  vector<int> belong;\n};\n\nint n, p;\nint ns[55], ps[55][55];\nbool used[55][55];\n\nint main() {\n\n  freopen(\"B-small.in\", \"r\", stdin);\n  freopen(\"B-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; ++Case) {\n    scanf(\"%d %d\", &n, &p);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%d\", &ns[i]);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j)\n        scanf(\"%d\", &ps[i][j]);\n      sort(ps[i], ps[i] + p);\n    }\n    memset(used, false, sizeof(used));\n    int ans = 0;\n    for (int i = 0; i < p; ++i) {\n      vector<Range> now, _now;\n      Range t;\n      t.l = 0;\n      t.r = (int)1e7;\n      now.push_back(t);\n      for (int j = 0; j < n; ++j) {\n        _now.clear();\n        for (int k = 0; k < p; ++k) {\n          if (used[j][k])\n            continue;\n          int l = ceil(ps[j][k] \/ (1.1 * ns[j]));\n          int r = floor(ps[j][k] \/ (0.9 * ns[j]));\n          \/\/          printf(\"%d %d %d %d\\n\", j, k, l, r);\n          if (l > r)\n            continue;\n          for (int s = 0; s < now.size(); ++s) {\n            Range temp = now[s];\n            \/\/            printf(\"%d %d, \", temp.l, temp.r);\n            if (temp.l > r || temp.r < l)\n              continue;\n            temp.l = max(temp.l, l);\n            temp.r = min(temp.r, r);\n            temp.belong.push_back(k);\n            _now.push_back(temp);\n          }\n          \/\/          printf(\"\\n\");\n        }\n        now = _now;\n        if (now.size() == 0)\n          break;\n      }\n      if (now.size() == 0)\n        continue;\n      t = now[0];\n      assert(t.belong.size() == n);\n      for (int i = 0; i < t.belong.size(); ++i)\n        used[i][t.belong[i]] = true;\n      ++ans;\n    }\n    printf(\"Case #%d: %d\\n\", Case, ans);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nchar cake[30][30];\n\nint main() {\n\n  freopen(\"A-small.in\", \"r\", stdin);\n  freopen(\"A-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; ++Case) {\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%s\", cake[i]);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (cake[i][j] != '?') {\n          int j0 = j + 1;\n          while (j0 < m && cake[i][j0] == '?') {\n            cake[i][j0++] = cake[i][j];\n          }\n          j0 = j - 1;\n          while (j0 > -1 && cake[i][j0] == '?') {\n            cake[i][j0--] = cake[i][j];\n          }\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (cake[i][j] != '?') {\n          int i0 = i + 1;\n          while (i0 < n && cake[i0][j] == '?') {\n            cake[i0++][j] = cake[i][j];\n          }\n          i0 = i - 1;\n          while (i0 < n && cake[i0][j] == '?') {\n            cake[i0--][j] = cake[i][j];\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", Case);\n    for (int i = 0; i < n; ++i)\n      printf(\"%s\\n\", cake[i]);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nint d, n;\nint init[1005], s[1005];\n\nint main() {\n\n  freopen(\"A-small.in\", \"r\", stdin);\n  freopen(\"A-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; ++Case) {\n    scanf(\"%d %d\", &d, &n);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%d %d\", &init[i], &s[i]);\n    double minT = 0;\n    for (int i = n - 1; i > -1; --i) {\n      double temp = (1.0 * d - init[i]) \/ s[i];\n      minT = max(temp, minT);\n    }\n    printf(\"Case #%d: %.9lf\\n\", Case, d \/ minT);\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nstruct Color {\n  char c;\n  int x;\n\n  bool operator<(const Color &other) const { return x < other.x; }\n} color[10];\n\nint n, r, o, y, g, b, v;\nint ans[1005];\n\nint main() {\n\n  freopen(\"B-small.in\", \"r\", stdin);\n  freopen(\"B-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; ++Case) {\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: \", Case);\n    color[0].x = r;\n    color[0].c = 'R';\n    color[1].x = y;\n    color[1].c = 'Y';\n    color[2].x = b;\n    color[2].c = 'B';\n    sort(color, color + 3);\n    if (n \/ 2 < color[2].x) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    memset(ans, -1, sizeof(ans));\n    for (int i = 0; i < color[2].x; ++i)\n      ans[i << 1] = 2;\n    for (int i = 0; i < color[1].x; ++i)\n      ans[n - (i << 1) - (n & 1) - 1] = 1;\n    for (int i = 0; i < n; ++i)\n      if (ans[i] == -1)\n        ans[i] = 0;\n    for (int i = 0; i < n; ++i)\n      printf(\"%c\", color[ans[i]].c);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"LilacLu","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/#define LARGE\n\nconst int N = 105;\n\nint n, q;\nlong long dis[N][N], e[N], s[N];\ndouble dp[N][N];\n\nvoid floyd() {\n  for (int k = 0; k < n; ++k)\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        if (dis[i][k] != -1 && dis[k][j] != -1 &&\n            (dis[i][j] == -1 || dis[i][j] > dis[i][k] + dis[k][j]))\n          dis[i][j] = dis[i][k] + dis[k][j];\n}\n\ndouble bfs(const int &from, const int &to) {\n  deque<pair<int, int>> de;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < n; ++j)\n      dp[i][j] = 1e18;\n  for (int i = 0; i < n; ++i)\n    if (i != from && dis[from][i] != -1 && e[from] >= dis[from][i]) {\n      dp[from][i] = 1.0 * dis[from][i] \/ s[from];\n      de.push_back(make_pair(from, i));\n    }\n  while (!de.empty()) {\n    int horse = de.front().first;\n    int u = de.front().second;\n    \/\/    printf(\"%d %d %lf\\n\", horse, u, dp[horse][u]);\n    de.pop_front();\n    for (int i = 0; i < n; ++i) {\n      if (dis[u][i] == -1)\n        continue;\n      int remain = e[horse] - dis[horse][u];\n      if (remain >= dis[u][i]) {\n        if (dp[horse][i] > dp[horse][u] + 1.0 * dis[u][i] \/ s[horse]) {\n          dp[horse][i] = dp[horse][u] + 1.0 * dis[u][i] \/ s[horse];\n          de.push_back(make_pair(horse, i));\n        }\n      }\n      if (e[u] >= dis[u][i]) {\n        if (dp[u][i] > dp[horse][u] + 1.0 * dis[u][i] \/ s[u]) {\n          dp[u][i] = dp[horse][u] + 1.0 * dis[u][i] \/ s[u];\n          de.push_back(make_pair(u, i));\n        }\n      }\n    }\n  }\n  double ret = 1e18;\n  for (int i = 0; i < n; ++i)\n    ret = min(ret, dp[i][to]);\n  return ret;\n}\n\nint main() {\n\n  freopen(\"C-small.in\", \"r\", stdin);\n  freopen(\"C-small.out\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; ++Case) {\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%d %d\", &e[i], &s[i]);\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        scanf(\"%lld\", &dis[i][j]);\n    floyd();\n    printf(\"Case #%d:\", Case);\n    int u, v;\n    for (int i = 0; i < q; ++i) {\n      scanf(\"%d %d\", &u, &v);\n      printf(\" %.9lf\", bfs(u - 1, v - 1));\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n    char s[30];\n    scanf(\"%s\", s);\n    int L = strlen(s);\n    for (int i = L - 2; i >= 0; i--)\n      if (s[i + 1] < s[i]) {\n        s[i]--;\n        for (int j = i; j > 0; j--)\n          if (s[i] < '0') {\n            s[i - 1]--;\n            s[i] += 10;\n          }\n        for (int j = i + 1; j < L; j++)\n          s[j] = '9';\n      }\n    char res[30];\n    int k = 0;\n    while (s[k] == '0')\n      k++;\n    for (int i = k; i < L; i++)\n      res[i - k] = s[i];\n    res[L - k] = 0;\n    printf(\"%s\\n\", res);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nvoid ins(i64d x, i64d num, vector<pair<i64d, i64d>> &b) {\n  int id = -1;\n  for (int i = 0; i < b.size(); i++)\n    if (b[i].first == x)\n      id = i;\n  if (id == -1)\n    b.push_back(make_pair(x, num));\n  else\n    b[id].second += num;\n}\nint main() {\n  freopen(\"C-small-1-attempt2.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt2.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n    i64d n, k;\n    scanf(\"%lld %lld\", &n, &k);\n    i64d num = 1;\n    vector<pair<i64d, i64d>> a;\n    a.push_back(make_pair(n, 1));\n    while (k > num) {\n      k -= num;\n      num <<= 1;\n\n      vector<pair<i64d, i64d>> b;\n      for (int i = 0; i < a.size(); i++) {\n        i64d x = (a[i].first - 1) \/ 2;\n        ins(x, a[i].second, b);\n        ins(a[i].first - 1 - x, a[i].second, b);\n      }\n      a = b;\n    }\n    if (a.size() == 2 && a[0].first < a[1].first)\n      swap(a[0], a[1]);\n    i64d res = (k <= a[0].second) ? a[0].first : a[1].first;\n    if (res % 2 == 1)\n      printf(\"%lld %lld\\n\", (res - 1) \/ 2, (res - 1) \/ 2);\n    else\n      printf(\"%lld %lld\\n\", (res - 1) \/ 2 + 1, (res - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n    char s[2000] = {0};\n    int k;\n    scanf(\"%s %d\", s, &k);\n    int L = strlen(s);\n    int num = 0;\n    for (int i = 0; i <= L - k; i++)\n      if (s[i] == '-') {\n        for (int j = 0; j < k; j++)\n          if (s[i + j] == '-')\n            s[i + j] = '+';\n          else\n            s[i + j] = '-';\n        num++;\n      }\n    for (int i = L - k; i < L; i++)\n      if (s[i] == '-')\n        num = -1;\n    if (num == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", num);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint f[1005][1005] = {0}, c[1005][1005] = {0};\nint L[1005] = {0}, p[1005] = {0};\nint n, s, t, minv;\n\nint ford() {\n  int i, j, m, x;\n\n  for (i = 1; i <= n; i++) {\n    L[i] = 0;\n    p[i] = 0;\n  }\n  L[s] = 1;\n  while (1) {\n    i = 1;\n    while ((i <= n) && !((L[i] != 0) && (p[i] == 0)))\n      i++;\n    if (i > n)\n      return 1;\n    for (j = 1; j <= n; j++)\n      if ((L[j] == 0) && ((c[i][j] > 0) || (c[j][i] > 0))) {\n        if (f[i][j] < c[i][j])\n          L[j] = i;\n        if (f[j][i] > 0)\n          L[j] = -i;\n      }\n    p[i] = 1;\n    if (L[t] != 0)\n      break;\n  }\n  m = t;\n  minv = 32767;\n  while (m != s) {\n    j = m;\n    m = (int)abs(L[j]);\n    if (L[j] < 0)\n      x = f[j][m];\n    if (L[j] > 0)\n      x = c[m][j] - f[m][j];\n    if (x < minv)\n      minv = x;\n  }\n  return 0;\n}\n\nvoid change() {\n  int m, j;\n\n  m = t;\n  while (m != s) {\n    j = m;\n    m = (int)abs(L[j]);\n    if (L[j] < 0)\n      f[j][m] = f[j][m] - minv;\n    if (L[j] > 0)\n      f[m][j] = f[m][j] + minv;\n  }\n}\n\nint maxvflow() {\n  int del, success;\n\n  \/\/ s = 1; t = n;\n  success = 0;\n  while (1) {\n    success = ford();\n    if (success == 1) {\n      int maxv = 0;\n      for (int i = 1; i <= n; i++) {\n        if (f[i][t] != 0)\n          maxv += f[i][t];\n      }\n      return maxv;\n    } else\n      change();\n  }\n}\n\nint a[55][55], b[55][55];\nint nn, pp;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n\n    scanf(\"%d %d\", &nn, &pp);\n    int se[55];\n\n    for (int i = 0; i < nn; i++)\n      scanf(\"%d\", &se[i]);\n    for (int i = 0; i < nn; i++) {\n      for (int j = 0; j < pp; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        a[i][j] = ceil(x \/ 1.1 \/ se[i]);\n        b[i][j] = floor(x \/ 0.9 \/ se[i]);\n      }\n    }\n\n    memset(f, 0, sizeof(f));\n    memset(c, 0, sizeof(c));\n    memset(L, 0, sizeof(L));\n    memset(p, 0, sizeof(p));\n    n = nn * pp + 2;\n    s = n - 1;\n    t = n;\n    for (int i = 0; i < pp; i++)\n      if (a[0][i] <= b[0][i]) {\n        c[s][i + 1] = 1;\n      }\n    for (int i = 0; i < pp; i++)\n      if (a[nn - 1][i] <= b[nn - 1][i]) {\n        c[(nn - 1) * pp + i + 1][t] = 1;\n      }\n    for (int i = 1; i < nn; i++) {\n      for (int k = 0; k < pp; k++)\n        for (int y = 0; y < pp; y++) {\n          int aa = max(a[i - 1][k], a[i][y]);\n          int bb = min(b[i - 1][k], b[i][y]);\n          if (aa <= bb)\n            c[(i - 1) * pp + k + 1][i * pp + y + 1] = 1;\n        }\n    }\n    int maxv = maxvflow();\n    printf(\"%d\\n\", maxv);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d:\\n\", ca);\n    int r, c;\n    scanf(\"%d %d\", &r, &c);\n    char s[30][30];\n    for (int i = 0; i < r; i++)\n      scanf(\"%s\", s[i]);\n    for (int i = 0; i < r; i++) {\n      int j = 0;\n      int last = 0;\n      char x = s[i][0];\n      while (j < c) {\n        while (s[i][j] == '?' && j < c)\n          j++;\n        if (j < c) {\n          for (int k = last; k < j; k++)\n            s[i][k] = s[i][j];\n          x = s[i][j];\n          j++;\n          last = j;\n        }\n      }\n      if (last < c) {\n        for (int j = last; j < c; j++)\n          s[i][j] = x;\n      }\n    }\n    for (int i = 1; i < r; i++)\n      if (s[i][0] == '?') \/\/ black line\n      {\n        for (int j = 0; j < c; j++)\n          s[i][j] = s[i - 1][j];\n      }\n    for (int i = r - 1; i >= 0; i--)\n      if (s[i][0] == '?') {\n        for (int j = 0; j < c; j++)\n          s[i][j] = s[i + 1][j];\n      }\n    for (int i = 0; i < r; i++)\n      printf(\"%s\\n\", s[i]);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n    int d, n;\n    scanf(\"%d %d\", &d, &n);\n    double t = 0;\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      scanf(\"%d %d\", &k, &s);\n      t = max(t, (double)(d - k) \/ s);\n    }\n    printf(\"%lf\\n\", d \/ t);\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  \/\/ freopen(\"input.txt\" , \"r\" , stdin);\n  \/\/ freopen(\"output.txt\" , \"w\" , stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d: \", ca);\n    int n;\n    int r, o, y, g, b, v;\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    char s[1010] = {0};\n    if (r > n \/ 2 || y > n \/ 2 || b > n \/ 2) {\n      printf(\"IMPOSSIBLE\\n\");\n    } else {\n      int num[3] = {r, y, b};\n      char c[4] = \"RYB\";\n\n      if (y > r && y > b) {\n        num[0] = y;\n        num[1] = r;\n        c[0] = 'Y';\n        c[1] = 'R';\n      }\n      if (b > r && b > y) {\n        num[0] = b;\n        num[2] = r;\n        c[0] = 'B';\n        c[2] = 'R';\n      }\n\n      int i = 0;\n      if (num[0] > 0) {\n        while (i < n) {\n          s[i] = c[0];\n          i += 2;\n          num[0]--;\n          if (num[0] == 0)\n            break;\n        }\n      }\n      if (num[1] > 0) {\n        while (i < n) {\n          s[i] = c[1];\n          i += 2;\n          num[1]--;\n          if (num[1] == 0)\n            break;\n        }\n        if (num[1] > 0) {\n          i = 1;\n          while (i < n) {\n            s[i] = c[1];\n            i += 2;\n            num[1]--;\n            if (num[1] == 0)\n              break;\n          }\n        }\n      }\n      if (num[2] > 0) {\n        for (i = 0; i < n; i++)\n          if (s[i] == 0)\n            s[i] = c[2];\n      }\n      printf(\"%s\\n\", s);\n    }\n  }\n  return 0;\n}\n"}
{"target":"liymouse","func":"#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <string>\n#include <vector>\n\ntypedef long long i64d;\n\nusing namespace std;\n\ndouble s[110][110];\nint d[110][110];\nint n;\nvoid dij(int x, int he, int hs) {\n  int mark[110] = {0};\n  int dis[110] = {0};\n  for (int i = 0; i < n; i++)\n    if (d[x][i] == -1 || d[x][i] > he)\n      s[x][i] = -1;\n    else {\n      s[x][i] = (double)d[x][i] \/ hs;\n      dis[i] = d[x][i];\n    }\n  mark[x] = 1;\n  for (int i = 0; i < n; i++) {\n    int k = -1;\n    double mint = 1e20;\n    for (int j = 0; j < n; j++)\n      if (mark[j] == 0 && (s[x][j] > 0 && s[x][j] < mint)) {\n        k = j;\n        mint = s[x][j];\n      }\n    if (k == -1)\n      break;\n    mark[k] = 1;\n    for (int j = 0; j < n; j++)\n      if (mark[j] == 0 && (d[k][j] != -1 && dis[k] + d[k][j] <= he) &&\n          (s[x][j] < 0 || s[x][k] + (double)d[k][j] \/ hs < s[x][j])) {\n        s[x][j] = s[x][k] + (double)d[k][j] \/ hs;\n        dis[j] = dis[k] + d[k][j];\n      }\n  }\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  \/\/ freopen(\"B-large.in\" , \"r\" , stdin);\n  \/\/ freopen(\"B-large.out\" , \"w\" , stdout);\n  int cas;\n  scanf(\"%d\", &cas);\n  for (int ca = 1; ca <= cas; ca++) {\n    printf(\"Case #%d:\", ca);\n    int q;\n    int he[110], hs[110];\n\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d %d\", &he[i], &hs[i]);\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        scanf(\"%d\", &d[i][j]);\n        s[i][j] = -1;\n      }\n\n    for (int i = 0; i < n; i++) {\n      dij(i, he[i], hs[i]);\n    }\n\n    for (int k = 0; k < n; k++)\n      for (int i = 0; i < n; i++)\n        if (i != k)\n          for (int j = 0; j < n; j++)\n            if (j != i && j != k && s[i][k] > 0 && s[k][j] > 0 &&\n                (s[i][j] < 0 || s[i][k] + s[k][j] < s[i][j])) {\n              s[i][j] = s[i][k] + s[k][j];\n            }\n    for (int i = 0; i < q; i++) {\n      int x, y;\n      scanf(\"%d %d\", &x, &y);\n      printf(\" %lf\", s[x - 1][y - 1]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int INF = 0x7fffffff;\nconst long long INFF = 0x7fffffffffffffff;\nconst double pi = 3.141592653589793;\nconst double inf = 1e18;\nconst double eps = 1e-8;\nconst long long mod = 1e9 + 7;\n\/*************************************************************\/\nint a[20];\nint b[20];\nint main() {\n  long long n;\n  long long ans;\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    memset(a, 0, sizeof(a));\n    ans = 0;\n    cin >> n;\n    long long m = n;\n    int cnt = 0;\n    while (m > 0) {\n      a[cnt++] = m % 10;\n      m \/= 10;\n    }\n    for (int j = cnt - 1; j >= 1; j--) {\n      if (a[j - 1] < a[j]) {\n        a[j] -= 1;\n        while (j < cnt - 1) {\n          if (a[j + 1] > a[j]) {\n            a[j + 1] -= 1;\n            j++;\n          } else\n            break;\n        }\n        while (j >= 1) {\n          a[j - 1] = 9;\n          j--;\n        }\n      }\n    }\n    long long l = 1;\n    for (int j = 0; j < cnt; j++) {\n      ans += a[j] * l;\n      l *= 10;\n    }\n    printf(\"Case #%d: %lld\\n\", i, ans);\n  }\n  fclose(stdin);\n  fclose(stdout);\n\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int INF = 0x7fffffff;\nconst long long INFF = 0x7fffffffffffffff;\nconst double pi = 3.141592653589793;\nconst double inf = 1e18;\nconst double eps = 1e-8;\nconst long long mod = 1e9 + 7;\n\/*************************************************************\/\nint main() {\n  freopen(\"C-small-1-attempt1.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt1.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    int n, k;\n    cin >> n >> k;\n    priority_queue<int> q;\n    q.push(n);\n    for (int j = 0; j < k - 1; j++) {\n      int temp = q.top();\n      q.pop();\n      if (temp % 2 == 0) {\n        q.push((temp - 1) - (temp - 1) \/ 2);\n        q.push((temp - 1) \/ 2);\n      } else {\n        q.push((temp - 1) \/ 2);\n        q.push((temp - 1) \/ 2);\n      }\n    }\n    int a, b;\n    int temp = q.top();\n    if (temp % 2 == 0) {\n      a = (temp - 1) - (temp - 1) \/ 2;\n      b = (temp - 1) \/ 2;\n    } else {\n      b = a = (temp - 1) \/ 2;\n    }\n\n    printf(\"Case #%d: %d %d\\n\", i, a, b);\n  }\n  fclose(stdin);\n  fclose(stdout);\n\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int INF = 0x7fffffff;\nconst long long INFF = 0x7fffffffffffffff;\nconst double pi = 3.141592653589793;\nconst double inf = 1e18;\nconst double eps = 1e-8;\nconst long long mod = 1e9 + 7;\n\/*************************************************************\/\nint ans = 0;\nstring str;\nint k;\nvoid solve() {\n  int len = str.length();\n  for (int i = 0; i < len; i++) {\n    if (str[i] == '-') {\n      if (i + k > len) {\n        ans = -1;\n        break;\n      }\n      ans++;\n      for (int j = 0; j < k; j++) {\n        if (str[i + j] == '-')\n          str[i + j] = '+';\n        else\n          str[i + j] = '-';\n      }\n    }\n  }\n}\nint main() {\n  freopen(\"A-small-attempt5.in\", \"r\", stdin);\n  freopen(\"A-small-attempt5.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    ans = 0;\n    cin >> str >> k;\n    solve();\n    if (ans == -1)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", i, ans);\n    else\n      printf(\"Case #%d: %d\\n\", i, ans);\n  }\n  fclose(stdin);\n  fclose(stdout);\n\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int INF = 0x7fffffff;\nconst long long INFF = 0x7fffffffffffffff;\nconst double pi = 3.141592653589793;\nconst double inf = 1e18;\nconst double eps = 1e-8;\nconst long long mod = 1e9 + 7;\n\/*************************************************************\/\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  int N, P;\n  int Q[105][105];\n  int temp[105];\n  int R[105];\n  int kase;\n  cin >> kase;\n  for (int t = 1; t <= kase; t++) {\n    cin >> N >> P;\n    for (int i = 1; i <= N; i++)\n      cin >> R[i];\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= P; j++) {\n        cin >> Q[i][j];\n      }\n      sort(Q[i] + 1, Q[i] + 1 + P);\n    }\n    memset(temp, 0, sizeof(temp));\n    int ans = 0;\n    for (int j = 1; j <= 1000005; j++) {\n      bool flag = false;\n      for (int i = 1; i <= N; i++) {\n        long long d = ceil(0.9 * j * R[i]);\n        while (temp[i] <= P && Q[i][temp[i]] < d)\n          temp[i]++;\n        d = floor(1.1 * j * R[i]);\n        if (Q[i][temp[i]] > d || temp[i] > P) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        ans++;\n        j = j - 1;\n        for (int i = 1; i <= N; i++)\n          temp[i]++;\n      }\n      flag = true;\n      for (int i = 1; i <= N; i++)\n        if (temp[i] > P) {\n          flag = false;\n          break;\n        }\n      if (!flag)\n        break;\n    }\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n  fclose(stdin);\n  fclose(stdout);\n\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int INF = 0x7fffffff;\nconst long long INFF = 0x7fffffffffffffff;\nconst double pi = 3.141592653589793;\nconst double inf = 1e18;\nconst double eps = 1e-8;\nconst long long mod = 1e9 + 7;\n\/*************************************************************\/\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int kase;\n  cin >> kase;\n  char a[30][30];\n  for (int t = 1; t <= kase; t++) {\n    int n, m;\n    cin >> n >> m;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", &a[i]);\n    }\n    for (int j = 0; j < m; j++) {\n      for (int i = 0; i < n; i++) {\n        if (a[i][j] != '?') {\n          for (int k = i + 1; k < n; k++) {\n            if (a[k][j] == '?')\n              a[k][j] = a[i][j];\n            else\n              break;\n          }\n          for (int k = i - 1; k >= 0; k--) {\n            if (a[k][j] == '?')\n              a[k][j] = a[i][j];\n            else\n              break;\n          }\n        }\n      }\n    }\n    for (int j = 0; j < m; j++) {\n      if (a[0][j] != '?') {\n        for (int k = j - 1; k >= 0; k--) {\n          if (a[0][k] == '?') {\n            for (int i = 0; i < n; i++)\n              a[i][k] = a[i][j];\n          } else\n            break;\n        }\n        for (int k = j + 1; k < m; k++) {\n          if (a[0][k] == '?') {\n            for (int i = 0; i < n; i++)\n              a[i][k] = a[i][j];\n          } else\n            break;\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", a[i]);\n  }\n  fclose(stdin);\n  fclose(stdout);\n\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint T;\nint cas;\nint n;\n\nconst int maxn = 1005;\n\nint D;\nint k[maxn];\nint v[maxn];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.txt\", \"w\", stdout);\n  cin >> T;\n  cas = 0;\n  while (T--) {\n    cas++;\n    cin >> D >> n;\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d%d\", k + i, v + i);\n    }\n    double ans = 0.0;\n    for (int i = 1; i <= n; i++) {\n      ans = max(ans, 1.0 * (D - k[i]) \/ v[i]);\n    }\n    ans = 1.0 * D \/ ans;\n    printf(\"Case #%d: %.10lf\\n\", cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint T;\nint a[6]; \/\/ R O Y G B V\nint b[3] = {2, 3, 4};\nint c[3] = {0, 4, 5};\nint d[3] = {0, 1, 2};\nint s[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\npair<int, int> p[6];\nint rk[6];\n\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"B-small-attempt2.txt\", \"w\", stdout);\n  int cas = 0;\n\n  cin >> T;\n  while (T--) {\n    int pre = -1;\n    int n = 0;\n    cin >> n;\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", a + i);\n      p[i].first = -a[i];\n      p[i].second = i;\n      \/\/ n += a[i];\n    }\n    sort(p, p + 6);\n    for (int i = 0; i < 6; i++) {\n      rk[p[i].second] = i;\n      \/\/ cout << p[i].second << \" \" << i << endl;\n    }\n    bool flag = true;\n    string ans = \"\";\n    while (n > 0) {\n      int mx = 0;\n      int mxid = -1;\n      if (pre == -1) {\n        for (int i = 0; i < 6; i++) {\n          if (a[i] > mx || (a[i] == mx && rk[i] < rk[mxid]))\n            mxid = i, mx = a[i];\n        }\n      } else if (pre == 0) {\n        for (int i = 0; i < 3; i++) {\n          if (a[b[i]] > mx ||\n              (mxid >= 0 && a[b[i]] == mx && rk[b[i]] < rk[mxid]))\n            mxid = b[i], mx = a[b[i]];\n        }\n      } else if (pre == 1) {\n        mx = a[4];\n        mxid = 4;\n      } else if (pre == 2) {\n        for (int i = 0; i < 3; i++) {\n          if (a[c[i]] > mx ||\n              (mxid >= 0 && a[c[i]] == mx && rk[c[i]] < rk[mxid]))\n            mxid = c[i], mx = a[c[i]];\n        }\n      } else if (pre == 3) {\n        mx = a[0];\n        mxid = 0;\n      } else if (pre == 4) {\n        for (int i = 0; i < 3; i++) {\n          if (a[d[i]] > mx ||\n              (mxid >= 0 && a[d[i]] == mx && rk[d[i]] < rk[mxid]))\n            mxid = d[i], mx = a[d[i]];\n        }\n      } else if (pre == 5) {\n        mx = a[2];\n        mxid = 2;\n      }\n      if (mx == 0 || mxid < 0) {\n        flag = false;\n        break;\n      }\n      n--;\n      a[mxid]--;\n      pre = mxid;\n      ans += s[mxid];\n      \/\/ cout << a[0] << \" \" << a[2] << \" \" << a[4] << endl;\n      \/\/ cout << flag << \" \" << ans << endl;\n    }\n    n = ans.length();\n    \/\/ cout << flag << \" \" << ans << endl;\n    if (ans[0] == 'R') {\n      bool f = false;\n      for (int i = 0; i < 3; i++) {\n        if (ans[n - 1] == s[b[i]])\n          f = true;\n      }\n      flag &= f;\n    }\n    \/\/\tcout << flag << endl;\n    if (ans[0] == 'Y') {\n      bool f = false;\n      for (int i = 0; i < 3; i++) {\n        if (ans[n - 1] == s[c[i]])\n          f = true;\n      }\n      flag &= f;\n    }\n    \/\/\tcout << flag << endl;\n    if (ans[0] == 'B') {\n      bool f = false;\n      for (int i = 0; i < 3; i++) {\n        if (ans[n - 1] == s[d[i]])\n          f = true;\n      }\n      flag &= f;\n    }\n    \/\/\tcout << flag << endl;\n    if (ans[0] == 'O' && ans[n - 1] != 'B')\n      flag = false;\n    if (ans[0] == 'V' && ans[n - 1] != 'Y')\n      flag = false;\n    if (ans[0] == 'G' && ans[n - 1] != 'R')\n      flag = false;\n    printf(\"Case #%d: \", ++cas);\n    if (!flag)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"liyufeng","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint T, N;\nint Q;\n\nconst int maxn = 105;\n\nlong long D[maxn][maxn];\ndouble t[maxn][maxn];\nlong long E[maxn], S[maxn];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int cas = 0;\n  cin >> T;\n  while (T--) {\n    cin >> N >> Q;\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%lld%lld\", &E[i], &S[i]);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        D[i][j] = x;\n      }\n    }\n    for (int k = 1; k <= N; k++) {\n      for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= N; j++) {\n          if (D[i][k] >= 0 && D[k][j] >= 0 &&\n              (D[i][j] < 0 || (D[i][k] + D[k][j] < D[i][j])))\n            D[i][j] = D[i][k] + D[k][j];\n        }\n      }\n    }\n\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        if (D[i][j] >= 0 && D[i][j] <= E[i])\n          t[i][j] = D[i][j] \/ (1.0 * S[i]);\n        else\n          t[i][j] = -1;\n      }\n    }\n\n    for (int k = 1; k <= N; k++) {\n      for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= N; j++) {\n          if (t[i][k] >= 0 && t[k][j] >= 0 &&\n              (t[i][j] < 0 || (t[i][k] + t[k][j] < t[i][j])))\n            t[i][j] = t[i][k] + t[k][j];\n        }\n      }\n    }\n\n    printf(\"Case #%d:\", ++cas);\n    for (int i = 1; i <= Q; i++) {\n      int u, v;\n      scanf(\"%d%d\", &u, &v);\n      printf(\" %.10lf\", t[u][v]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int c = 1; c <= t; ++c) {\n    cout << \"Case #\" << c << \": \";\n    int n;\n    cin >> n;\n    int num = n;\n    vector<int> digs;\n    while (num > 0) {\n      digs.push_back(num % 10);\n      num \/= 10;\n    }\n    reverse(digs.begin(), digs.end());\n    int last = 0;\n    int i = 0;\n    while (i < digs.size() && digs[i] >= last) {\n      last = digs[i];\n      ++i;\n    }\n    if (i == digs.size())\n      cout << n << \"\\n\";\n    else {\n      --i;\n      --digs[i];\n      for (int j = i + 1; j < digs.size(); ++j)\n        digs[j] = 9;\n      reverse(digs.begin(), digs.end());\n      while (digs.size() > 1 && digs.back() == 0)\n        digs.pop_back();\n      reverse(digs.begin(), digs.end());\n      for (auto to : digs)\n        cout << to;\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    cout << \"Case #\" << i << \": \";\n    int n, k;\n    cin >> n >> k;\n    vector<bool> used(n + 5, 0);\n    int ind = 1, ls = -1, rs = -1;\n    used[0] = used[n + 1] = 1;\n    for (int c = 1; c <= k; ++c) {\n      ls = -1, rs = -1;\n      for (int i = 1; i <= n; ++i) {\n        if (used[i])\n          continue;\n        int l = i - 1, r = i + 1;\n        while (l > 0 && used[l] == 0)\n          --l;\n        while (r <= n && used[r] == 0)\n          ++r;\n        l = abs(l - i) - used[l];\n        r = abs(r - i) - used[r];\n        if (l > r)\n          swap(l, r);\n        if (l > ls) {\n          ind = i;\n          ls = l;\n          rs = r;\n        } else {\n          if (l == ls && r > rs) {\n            rs = r;\n            ind = i;\n          }\n        }\n      }\n      used[ind] = 1;\n    }\n    cout << rs << \" \" << ls << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    cout << \"Case #\" << i << \": \";\n    for (int i = 0; i <= s.size() - k; ++i) {\n      if (s[i] == '+')\n        continue;\n      ++ans;\n      for (int j = i; j < i + k; ++j) {\n        if (s[j] == '-')\n          s[j] = '+';\n        else\n          s[j] = '-';\n      }\n    }\n    bool fl = 1;\n    for (int i = 0; i < s.size(); ++i)\n      fl &= (s[i] == '+');\n    if (!fl)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"\n#include <bits\/stdc++.h>\n\nusing namespace std;\n\ndouble mas[100];\ndouble Q[100][100];\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    cout << \"Case #\" << i << \":\\n\";\n    long long n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i)\n      cin >> mas[i];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < p; ++j)\n        cin >> Q[i][j];\n    long long ans = 0;\n    if (n == 1) {\n      long long cur = 0;\n      for (int i = 0; i < p; ++i) {\n        set<long long> q;\n        for (int cc = 0; cc < n; ++cc) {\n          long long md = Q[cc][i] \/ 1.1;\n          md \/= mas[cc];\n          for (int jj = md + 5; jj >= md - 5; --jj) {\n            if (Q[cc][i] >= 0.9 * jj * mas[cc] &&\n                Q[cc][i] <= 1.1 * jj * mas[cc]) {\n              q.insert(jj);\n              break;\n            }\n          }\n        }\n        cur += (q.size() == 1);\n      }\n      ans = cur;\n      cout << ans << \"\\n\";\n    } else {\n      vector<double> aa(p);\n      for (int j = 0; j < p; ++j)\n        aa[j] = Q[1][j];\n      sort(aa.begin(), aa.end());\n      long long ans = 0;\n      do {\n        for (int j = 0; j < p; ++j) {\n          Q[1][j] = aa[j];\n        }\n        long long cur = 0;\n        for (int i = 0; i < p; ++i) {\n          int cnt = 0;\n          vector<pair<long long, long long>> q;\n          bool fl = 1;\n          for (int cc = 0; cc < n; ++cc) {\n            long long m2 = Q[cc][i] \/ 1.1;\n            m2 \/= mas[cc];\n            m2 += 3;\n            long long m1 = Q[cc][i] \/ 0.9;\n            m1 \/= mas[cc];\n            m1 -= 3;\n            \/\/ cout << m1 << \" \" << m2 << \"----\\n\";\n            while (m1 <= m2 && (Q[cc][i] < 0.9 * m1 * mas[cc] ||\n                                Q[cc][i] > 1.1 * m1 * mas[cc]))\n              ++m1;\n            while (m2 >= m1 && (Q[cc][i] < 0.9 * m2 * mas[cc] ||\n                                Q[cc][i] > 1.1 * m2 * mas[cc]))\n              --m2;\n            if (m1 > m2)\n              fl = 0;\n            \/\/ cout << Q[cc][i] << \" \" << 0.9 * m1 * mas[cc] << \"\\n\";\n            \/\/ cout << m1 << \" \" << m2 << \"\\n\";\n            q.push_back({m1, m2});\n          }\n          if (fl) {\n            \/\/ cout << i << \"\\n\";\n            sort(q.begin(), q.end());\n            long long rr = 1e18 + 6;\n            for (int i = 0; i < q.size(); ++i) {\n              rr = min(rr, q[i].second);\n            }\n            for (int i = 0; i < q.size(); ++i)\n              fl &= (q[i].first <= rr);\n            if (fl)\n              ++cur;\n          }\n        }\n        ans = max(cur, ans);\n      } while (next_permutation(aa.begin(), aa.end()));\n      cout << ans << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nbool check(const vector<string> &mas, int l) {\n  int que = 0;\n  for (int i = 0; i < mas.size(); ++i) {\n    if (mas[i][l] == '?')\n      ++que;\n  }\n  return que > 0;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    cout << \"Case #\" << i << \":\\n\";\n    int n, m;\n    cin >> n >> m;\n    vector<string> mas(n);\n    for (int i = 0; i < n; ++i)\n      cin >> mas[i];\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (mas[i][j] == '?')\n          continue;\n        int c = i + 1;\n        while (c < n && mas[c][j] == '?') {\n          mas[c][j] = mas[i][j];\n          ++c;\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (mas[i][j] == '?')\n          continue;\n        int c = i - 1;\n        while (c >= 0 && mas[c][j] == '?') {\n          mas[c][j] = mas[i][j];\n          --c;\n        }\n      }\n    }\n    for (int j = 0; j < m; ++j) {\n      int que = 0;\n      if (!check(mas, j)) {\n        string h = \"\";\n        for (int i = 0; i < n; ++i) {\n          h += mas[i][j];\n        }\n        int l = j - 1, r = j + 1;\n        while (l >= 0 && check(mas, l)) {\n          for (int i = 0; i < n; ++i)\n            mas[i][l] = h[i];\n          --l;\n        }\n        while (r < m && check(mas, r)) {\n          for (int i = 0; i < n; ++i)\n            mas[i][r] = h[i];\n          ++r;\n        }\n      }\n    }\n    for (int i = 0; i < n; ++i)\n      cout << mas[i] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nconst double EPS = 1e-9;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  cout << fixed << setprecision(7);\n  for (int qq = 1; qq <= t; ++qq) {\n    cout << \"Case #\" << qq << \": \";\n    int n;\n    long double d;\n    cin >> d >> n;\n    long double st[n], v[n];\n    for (int i = 0; i < n; ++i)\n      cin >> st[i] >> v[i];\n    long double mx = -1.0;\n    for (int i = 0; i < n; ++i)\n      mx = max(mx, (d - st[i]) \/ v[i]);\n    long double l = d \/ mx;\n    cout << l << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nconst double EPS = 1e-9;\nconst double INF = 1e15;\n\nbool check(const string &s) {\n  bool res = 0;\n  if (s.size() == 1)\n    return 0;\n  int sz = (int)s.size();\n  for (int i = 0; i <= s.size(); ++i) {\n    int j = (i + 1) % (sz);\n    if (s[i] == s[j])\n      res = 1;\n  }\n  return res;\n}\n\nvoid change(string &s) {\n  int sz = (int)s.size();\n  int i = 0;\n  for (i = 0; i <= s.size(); ++i) {\n    int j = (i + 1) % (sz);\n    if (s[i] == s[j]) {\n      int pr = (i - 1 + sz) % sz;\n      swap(s[pr], s[i]);\n      break;\n      i += 2;\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  cout << fixed << setprecision(7);\n  for (int qq = 1; qq <= t; ++qq) {\n    cout << \"Case #\" << qq << \": \";\n    int n;\n    cin >> n;\n    char C[3];\n    C[0] = 'R', C[1] = 'Y', C[2] = 'B';\n    vector<pair<int, int>> mas;\n    int cnt = 0;\n    for (int i = 0; i < 6; ++i) {\n      int a;\n      cin >> a;\n      if (i % 2 == 0) {\n        mas.push_back({a, cnt++});\n      }\n    }\n    sort(mas.begin(), mas.end());\n    string h;\n    char last = '-';\n    while (min(mas[1].first, mas[2].first) > 0) {\n      if (last != C[mas[2].second]) {\n        h += C[mas[2].second];\n        --mas[2].first;\n      } else {\n        h += C[mas[1].second];\n        --mas[1].first;\n      }\n      last = h.back();\n    }\n    sort(mas.begin(), mas.end());\n    for (int i = h.size(); i < n; ++i) {\n      if (last != C[mas[2].second]) {\n        h += C[mas[2].second];\n        --mas[2].first;\n      } else {\n        h += C[mas[1].second];\n        --mas[1].first;\n      }\n      last = h.back();\n      sort(mas.begin(), mas.end());\n    }\n    bool res = check(h);\n    if (!res) {\n      cout << h << \"\\n\";\n      continue;\n    }\n    bool kek = 0;\n    for (int tt = 0; tt < 1000; ++tt) {\n      change(h);\n      res = check(h);\n      if (!res) {\n        cout << h << \"\\n\";\n        kek = 1;\n        break;\n      }\n    }\n    if (kek)\n      continue;\n    cout << \"IMPOSSIBLE\\n\";\n  }\n  return 0;\n}\n"}
{"target":"Loud.Scream","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nconst double EPS = 1e-9;\nconst double INF = 1e15;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  cout << fixed << setprecision(7);\n  for (int qq = 1; qq <= t; ++qq) {\n    cout << \"Case #\" << qq << \": \";\n    int n, q;\n    cin >> n >> q;\n    long double e[n], s[n];\n    for (int i = 0; i < n; ++i)\n      cin >> e[i] >> s[i];\n    long double g[n][n];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j) {\n        cin >> g[i][j];\n        if (g[i][j] < 0)\n          g[i][j] = INF;\n      }\n    for (int k = 0; k < n; ++k)\n      for (int i = 0; i < n; ++i)\n        for (int j = 0; j < n; ++j)\n          if (g[i][k] < INF && g[k][j] < INF)\n            g[i][j] = min(g[i][j], g[i][k] + g[k][j]);\n    for (int c = 0; c < q; ++c) {\n      int u, v;\n      cin >> u >> v;\n      --u, --v;\n      long double ans[n + 1];\n      ans[u] = 0.0;\n      for (int c = u + 1; c <= v; ++c) {\n        ans[c] = INF;\n        for (int j = c - 1; j >= u; --j) {\n          if (e[j] >= g[j][c])\n            ans[c] = min(ans[c], ans[j] + g[j][c] \/ s[j]);\n        }\n      }\n      cout << ans[v] << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"\/\/ Tidy Numbers.cpp : Defines the entry point for the console application.\n\/\/\n\n#include <iostream>\n#include <string>\nusing std::cin;\nusing std::cout;\nusing std::string;\nstring tenToPower(int n) {\n  string res = \"1\";\n  for (int i = 0; i < n; ++i)\n    res += '0';\n  return res;\n}\nstring ones(int n) {\n  string res = \"1\";\n  for (int i = 0; i < n; ++i)\n    res += '1';\n  return res;\n}\nstring nines(int n) {\n  string res = \"9\";\n  for (int i = 0; i < n; ++i)\n    res += '9';\n  return res;\n}\nbool isTidy(string s) {\n  bool ans = true;\n  for (int i = 1; i < s.size(); ++i)\n    ans = ans && s[i - 1] <= s[i];\n  return ans;\n}\nstring solve(string n) {\n  if (isTidy(n))\n    return n;\n  string one = ones(n.size() - 1);\n  string ten = tenToPower(n.size() - 1);\n  if (n < one && n >= ten)\n    return nines(n.size() - 2);\n  int i;\n  for (i = 1; i < n.size(); ++i) {\n    if (n[i - 1] > n[i]) {\n      n[i - 1]--;\n      break;\n    }\n  }\n  for (; i < n.size(); ++i)\n    n[i] = '9';\n  if (!isTidy(n))\n    return solve(n);\n  return n;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string s;\n    cin >> s;\n    cout << \"Case #\" << i << \": \";\n    cout << solve(s) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"\/\/ Bathroom Stalls.cpp : Defines the entry point for the console application.\n\/\/\n\n#include <algorithm>\n#include <iostream>\n\n#include <map>\nusing namespace std;\nclass Tree {\npublic:\n  struct Node {\n    int s, e, l, r;\n    Node *left, *right, *parent;\n    Node() {}\n    Node(int s, int e) : s(s), e(e) {\n      if ((e - s - 1) % 2) {\n        l = r = (e - s - 1) \/ 2;\n      } else {\n        r = (e - s - 1) \/ 2;\n        l = r - 1;\n      }\n      left = nullptr;\n      right = nullptr;\n      parent = nullptr;\n    }\n    void divide() {\n      int sr = (e - s) \/ 2;\n      left = new Node(s, sr);\n      right = new Node(sr, e);\n      left->parent = this;\n      right->parent = this;\n    }\n  };\n  Node *root;\n  Tree(int s, int e) { root = new Node(s, e); }\n  Node insert() {\n    Node *cur = root;\n    while (cur->left != nullptr) {\n      Node *tmp = cur->left;\n      int leftMin = min(cur->left->l, cur->left->r);\n      int leftMax = max(cur->left->l, cur->left->r);\n      int rightMin = min(cur->right->l, cur->right->r);\n      int rightMax = max(cur->right->l, cur->right->r);\n\n      if (leftMin < rightMin || (leftMin == rightMin && leftMax < rightMax))\n        tmp = cur->right;\n      cur = tmp;\n    }\n    Node res = *cur;\n    cur->divide();\n    update(cur);\n    return res;\n  }\n  void update(Node *cur) {\n    while (true) {\n      Node *tmp = cur->left;\n      int leftMin = min(cur->left->l, cur->left->r);\n      int leftMax = max(cur->left->l, cur->left->r);\n      int rightMin = min(cur->right->l, cur->right->r);\n      int rightMax = max(cur->right->l, cur->right->r);\n      if (leftMin < rightMin || (leftMin == rightMin && leftMax < rightMax)) {\n        tmp = cur->right;\n      }\n      cur->l = tmp->l;\n      cur->r = tmp->r;\n      if (cur->parent == nullptr)\n        break;\n      cur = cur->parent;\n    }\n  }\n};\n\nint main() {\n  long long int t, n, k;\n  Tree::Node res;\n  map<long long int, long long int> mapa;\n\n  cin >> t;\n  for (int j = 1; j <= t; ++j) {\n\n    cin >> n >> k;\n    mapa.clear();\n    mapa[n] = 1;\n    int res;\n    auto it = mapa.begin();\n    int ile = 0;\n    int sum = 0;\n    while (it != mapa.end() && it->first != 0) {\n      if (k > it->second)\n        k -= it->second;\n      else {\n        res = it->first;\n        break;\n      }\n      sum += it->second;\n      mapa[it->first \/ 2] += it->second;\n      ile++;\n\n      mapa[it->first - it->first \/ 2 - 1] += it->second;\n      it--;\n    }\n    cout << \"Case #\" << j << \": \" << max(res \/ 2, res - res \/ 2 - 1) << \" \"\n         << min(res \/ 2, res - res \/ 2 - 1) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"\/\/ Oversized Pancake Flipper.cpp : Defines the entry point for the console\n\/\/ application.\n\/\/\n\n#include <cstdio>\n#include <queue>\n#include <string>\nusing namespace std;\n\nint solve(string s, int k) {\n  queue<int> q;\n  int res = 0;\n  int i;\n  for (i = 0; i + k - 1 < s.length(); ++i) {\n    while (!q.empty() && q.front() < i)\n      q.pop();\n    if ((s[i] == '-' && q.size() % 2 == 0) || (s[i] == '+' && q.size() % 2)) {\n      q.push(i + k - 1);\n      res++;\n    }\n    s[i] = '+';\n  }\n  for (; i < s.length(); ++i) {\n    while (!q.empty() && q.front() < i)\n      q.pop();\n    if ((s[i] == '-' && q.size() % 2 == 0) || (s[i] == '+' && q.size() % 2))\n      s[i] = '-';\n    else\n      s[i] = '+';\n  }\n  bool allPlus = true;\n  for (int i = 0; i < s.length(); ++i)\n    allPlus = allPlus && s[i] == '+';\n  return allPlus ? res : -1;\n}\nint main() {\n  char c[10001];\n  int t, k;\n  scanf(\"%d\", &t);\n  for (int i = 1; i <= t; ++i) {\n    scanf(\"%s %d\", &c, &k);\n    string s(c);\n    int res = solve(s, k);\n    printf(\"Case #%d: \", i);\n    if (res < 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", res);\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"\/\/ Ratatouille.cpp : Defines the entry point for the console application.\n\/\/\n\n#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint ingredients[52];\nint pointers[52];\nvector<int> segments[52];\n\nint solve(int n) {\n  int res = 0;\n  for (int i = 0; i <= n; ++i)\n    pointers[i] = 0;\n  for (int i = 1;; i++) {\n    for (int j = 0; j < n; ++j)\n      while (pointers[j] < segments[j].size() &&\n             ingredients[j] * i * 9 > segments[j][pointers[j]] * 10)\n        pointers[j]++;\n    bool good = true;\n    for (int j = 0; j < n; ++j) {\n      if (pointers[j] >= segments[j].size()) {\n        return res;\n      }\n      if (!(ingredients[j] * i * 11 >= segments[j][pointers[j]] * 10 &&\n            ingredients[j] * i * 9 <= segments[j][pointers[j]] * 10))\n        good = false;\n    }\n    if (good) {\n      i--;\n      res++;\n      for (int j = 0; j < n; ++j)\n        pointers[j]++;\n    }\n  }\n  return res;\n}\nint main() {\n  int ts, n, p, tmp;\n  cin >> ts;\n  for (int t = 1; t <= ts; ++t) {\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i) {\n      cin >> ingredients[i];\n      segments[i].clear();\n    }\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < p; ++j) {\n        int a, b;\n        cin >> tmp;\n        segments[i].push_back(tmp);\n      }\n    for (int i = 0; i < n; ++i)\n      sort(segments[i].begin(), segments[i].end());\n    cout << \"Case #\" << t << \": \" << solve(n) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"\/\/ Alphabet Cake.cpp : Defines the entry point for the console application.\n\/\/\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\nchar tab[30][30];\nvoid fill(int r, int c) {\n  char last = '?';\n  for (int i = 0; i < r; ++i) {\n    last = '?';\n    for (int j = 0; j < c; ++j) {\n\n      if (tab[i][j] != '?') {\n        last = tab[i][j];\n        char c = tab[i][j];\n        int poz = j - 1;\n        while (poz >= 0 && tab[i][poz] == '?') {\n          tab[i][poz] = c;\n          poz--;\n        }\n      }\n      if (tab[i][j] == '?' && last != '?') {\n        tab[i][j] = last;\n      }\n    }\n  }\n\n  for (int i = 0; i < c; ++i) {\n    last = '?';\n    for (int j = 0; j < r; ++j) {\n      if (tab[j][i] != '?') {\n        last = tab[j][i];\n        char c = tab[j][i];\n        int poz = j - 1;\n        while (poz >= 0 && tab[poz][i] == '?') {\n          tab[poz][i] = c;\n          poz--;\n        }\n      }\n      if (tab[j][i] == '?' && last != '?')\n        tab[j][i] = last;\n    }\n  }\n}\nint main() {\n  int t, r, w;\n  cin >> t;\n  for (int i = 1; i <= t; ++i) {\n    string s;\n    cin >> r >> w;\n    for (int j = 0; j < r; ++j) {\n      cin >> s;\n      for (int k = 0; k < w; ++k)\n        tab[j][k] = s[k];\n      \/\/\tcout << s << \"\\n\";\n    }\n    fill(r, w);\n    cout << \"Case #\" << i << \":\\n\";\n    for (int j = 0; j < r; ++j) {\n      for (int k = 0; k < w; ++k)\n        cout << tab[j][k];\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"luki4824","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\nint n, d;\npair<double, double> horses[1001];\nvoid clear() {}\nvoid solve() {\n  double res = d \/ ((d - horses[0].first) \/ horses[0].second);\n  for (int i = 0; i < n; ++i) {\n    if (horses[i].first < d)\n      res = min(res, d \/ ((d - horses[i].first) \/ horses[i].second));\n  }\n  printf(\"%0.6lf\\n\", res);\n}\nvoid input() {\n  cin >> d >> n;\n  double a, b;\n  for (int i = 0; i < n; ++i) {\n    cin >> a >> b;\n    horses[i].first = a;\n    horses[i].second = b;\n  }\n  sort(horses, horses + n);\n}\nint main() {\n  int t, m, n;\n  cin >> t;\n  for (int k = 1; k <= t; ++k) {\n    clear();\n    input();\n    printf(\"Case #%d: \", k);\n    solve();\n  }\n}\n"}
{"target":"luki4824","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\nint n;\nint tab[8];\nvoid clear() {}\nchar toColor(int color) {\n  if (color == 1)\n    return 'R';\n  if (color == 2)\n    return 'Y';\n  if (color == 3)\n    return 'O';\n  if (color == 4)\n    return 'B';\n  if (color == 5)\n    return 'V';\n  if (color == 6)\n    return 'G';\n}\nstring solveOne() {\n  string res = \"\";\n  int z[3];\n  int last = -1;\n\n  z[0] = tab[1];\n  z[1] = tab[2];\n  z[2] = tab[4];\n  while (z[0] > 0 || z[1] > 0 || z[2] > 0) {\n    int first = -1;\n    if (res.length() > 0 && res[0] == 'R')\n      first = 0;\n    if (res.length() > 0 && res[0] == 'Y')\n      first = 1;\n    if (res.length() > 0 && res[0] == 'B')\n      first = 2;\n\n    int am = 0;\n    int poz = 0;\n    if (first != -1 && am < z[first] && first != last) {\n      poz = first;\n      am = z[first];\n    }\n    if (am < z[0] && 0 != last) {\n      poz = 0;\n      am = z[0];\n    }\n    if (am < z[1] && 1 != last) {\n      poz = 1;\n      am = z[1];\n    }\n    if (am < z[2] && 2 != last) {\n      poz = 2;\n      am = z[2];\n    }\n    \/\/ if(res.length()>0 && )\n    if (poz == last || z[poz] == 0) {\n      \/\/\tcout << poz << \" \" << last << \" \" << z[0] << \" \" << z[1] << \" \"\n      \/\/<< z[2] << \" \\n\" << res << \"\\n\";\n      return \"\";\n    }\n    last = poz;\n    z[poz]--;\n    if (poz == 0)\n      res += toColor(1);\n    if (poz == 1)\n      res += toColor(2);\n    if (poz == 2)\n      res += toColor(4);\n  }\n  if (res[0] == res[res.length() - 1])\n    return \"\";\n  return res;\n}\nstring solveOneColor(int c) {\n  string res = \"\";\n  int z[3];\n  int last = -1;\n  z[0] = tab[c];\n  z[1] = tab[7 - c];\n  z[2] = 0;\n  while (z[0] > 0 || z[1] > 0 || z[2] > 0) {\n    int first = -1;\n    if (res.length() > 0 && res[0] == toColor(c))\n      first = 0;\n    if (res.length() > 0 && res[0] == toColor(7 - c))\n      first = 1;\n\n    int am = 0;\n    int poz = 0;\n    if (first != -1 && am < z[first] && first != last) {\n      poz = first;\n      am = z[first];\n    }\n\n    if (am < z[0] && 0 != last) {\n      poz = 0;\n      am = z[0];\n    }\n    if (am < z[1] && 1 != last) {\n      poz = 1;\n      am = z[1];\n    }\n\n    if (poz == last || z[poz] == 0)\n      return \"\";\n    last = poz;\n    z[poz]--;\n    if (poz == 0)\n      res += toColor(c);\n    if (poz == 1)\n      res += toColor(7 - c);\n  }\n  if (res[0] == res[res.length() - 1])\n    return \"\";\n  return res;\n}\nstring solve() {\n  bool posible = true;\n  string res;\n  if (tab[3] == 0 && tab[5] == 0 && tab[6] == 0)\n    return solveOne();\n  if (tab[1] == 0 && tab[6] == 0 && tab[2] == 0 && tab[5] == 0)\n    return solveOneColor(4);\n  if (tab[1] == 0 && tab[6] == 0 && tab[4] == 0 && tab[3] == 0)\n    return solveOneColor(2);\n  if (tab[4] == 0 && tab[3] == 0 && tab[2] == 0 && tab[5] == 0)\n    return solveOneColor(1);\n\n  int last = 0;\n  if (tab[1] <= tab[6])\n    posible = false;\n  if (tab[2] <= tab[5])\n    posible = false;\n  if (tab[4] <= tab[3])\n    posible = false;\n  if (posible == false)\n    return \"\";\n  if (tab[6]) {\n    res += toColor(1);\n    last = 1;\n  }\n  for (int i = 0; i < tab[6]; ++i)\n    res += toColor(6) + \"\" + toColor(1);\n  if (tab[5]) {\n    res += toColor(2);\n    last = 2;\n  }\n  for (int i = 0; i < tab[5]; ++i)\n    res += toColor(5) + \"\" + toColor(2);\n  if (tab[3]) {\n    res += toColor(4);\n    last = 4;\n  }\n  for (int i = 0; i < tab[3]; ++i)\n    res += toColor(3) + \"\" + toColor(4);\n  int first;\n  if (res.length() > 0 && res[0] == 'R')\n    first = 0;\n  if (res.length() > 0 && res[0] == 'Y')\n    first = 1;\n  if (res.length() > 0 && res[0] == 'B')\n    first = 2;\n\n  int z[3];\n  z[0] = tab[1] - tab[6] - 1;\n  z[1] = tab[2] - tab[5] - 1;\n  z[2] = tab[4] - tab[3] - 1;\n  while (z[0] > 0 || z[1] > 0 || z[2] > 0) {\n    int am = 0;\n    int poz = 0;\n    if (am < z[first] && first != last) {\n      poz = first;\n      am = z[first];\n    }\n    if (am < z[0] && 0 != last) {\n      poz = 0;\n      am = z[0];\n    }\n    if (am < z[1] && 1 != last) {\n      poz = 1;\n      am = z[1];\n    }\n    if (am < z[2] && 2 != last) {\n      poz = 2;\n      am = z[2];\n    }\n    if (poz == last || z[poz] == 0)\n      return \"\";\n    last = poz;\n    z[poz]--;\n    if (poz == 0)\n      res += toColor(1);\n    if (poz == 1)\n      res += toColor(2);\n    if (poz == 2)\n      res += toColor(4);\n  }\n  if (res[0] == res[res.length() - 1])\n    return \"\";\n  return res;\n}\nint toIntColor(char c) {\n  if (c == 'R')\n    return 1;\n  if (c == 'Y')\n    return 2;\n  if (c == 'B')\n    return 4;\n  if (c == 'V')\n    return 5;\n  if (c == 'O')\n    return 3;\n  if (c == 'G')\n    return 6;\n}\nvoid check(string s) {\n  if (s.length() == 0)\n    return;\n  if (s.length() != n)\n    printf(\"Zly rozmiar\\n\");\n\n  char last = s[s.length() - 1];\n  for (int i = 0; i < s.length(); ++i) {\n    if (toIntColor(s[i]) & toIntColor(last))\n      printf(\"Blad\\n\");\n    last = s[i];\n  }\n}\nvoid input() {\n\n  cin >> n >> tab[1] >> tab[3] >> tab[2] >> tab[6] >> tab[4] >> tab[5];\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int k = 1; k <= t; ++k) {\n    clear();\n    input();\n    printf(\"Case #%d: \", k);\n    string res = solve();\n    \/\/ check(res);\n\n    if (res.length() == 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      cout << res << \"\\n\";\n  }\n}\n"}
{"target":"luki4824","func":"#include <algorithm>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <queue>\n#include <string>\n#include <vector>\n\nusing namespace std;\nstruct Node {\n  bool vis;\n  vector<pair<int, double>> edges;\n  double entertime;\n  double dis, speed;\n};\nstruct horse {\n  double time;\n  double dis;\n  int node;\n  double speed;\n  bool operator<(horse a) const {\n    if (a.time < time)\n      return true;\n    return false;\n  }\n};\nNode graph[101];\nint n, q;\nvoid clear() {\n  for (int i = 0; i < 101; ++i) {\n    \/\/ graph[i].dis = 0;\n    \/\/ graph[i].edges.clear();\n    graph[i].vis = false;\n    graph[i].entertime = -1;\n  }\n}\ndouble di(int b, int e) {\n  graph[b].entertime = 0;\n  priority_queue<horse> que;\n  horse h;\n\n  h.dis = graph[b].dis;\n  h.time = 0;\n  h.speed = graph[b].speed;\n  h.node = b;\n  que.push(h);\n  while (!que.empty()) {\n    h = que.top();\n    que.pop();\n    if (h.node == e)\n      return h.time;\n    if (!graph[h.node].vis && h.node != b) {\n      horse a;\n      a.time = h.time;\n      a.dis = graph[h.node].dis;\n      a.speed = graph[h.node].speed;\n      a.node = h.node;\n      que.push(a);\n      graph[h.node].vis = true;\n    }\n    for (auto it : graph[h.node].edges) {\n      if (it.second <= h.dis) {\n        horse a;\n        a.dis = h.dis - it.second; \/\/ -h.dis;\n        a.node = it.first;\n        a.speed = h.speed;\n        a.time = h.time + it.second \/ h.speed;\n        que.push(a);\n        if (graph[it.first].entertime == -1)\n          graph[it.first].entertime = a.time;\n        graph[it.first].entertime = min(graph[it.first].entertime, a.time);\n      }\n    }\n  }\n}\nvoid solve() {\n  int a, b;\n  while (q--) {\n    clear();\n    cin >> a >> b;\n    cout << setprecision(9) << di(a, b) << \" \";\n  }\n\n  cout << \"\\n\";\n}\nvoid input() {\n  double a;\n  cin >> n >> q;\n  for (int i = 1; i <= n; ++i)\n    cin >> graph[i].dis >> graph[i].speed;\n  for (int i = 1; i <= n; ++i) {\n    graph[i].edges.clear();\n    for (int j = 1; j <= n; ++j) {\n      cin >> a;\n      if (a != -1) {\n        graph[i].edges.push_back(make_pair(j, a));\n      }\n    }\n  }\n}\nint main() {\n  int t, m, n;\n  cin >> t;\n  for (int k = 1; k <= t; ++k) {\n    clear();\n    input();\n    printf(\"Case #%d: \", k);\n    solve();\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    string s, ans = \"\", pre = \"\", nine = \"\";\n    cin >> s;\n    if (s[0] != '1')\n      ans += char(s[0] - 1);\n    for (int i = 1, __ = s.size(); i < __; ++i) {\n      ans += \"9\";\n      nine += \"9\";\n    }\n    pre += s[0];\n    int ok = 1;\n    for (int i = 1, __ = s.size(); i < __; ++i) {\n      if (s[i] < s[i - 1]) {\n        ok = 0;\n        break;\n      }\n      nine.pop_back();\n      if (s[i] == s[i - 1]) {\n        pre += s[i];\n        continue;\n      }\n      ans = pre + char(s[i] - 1) + nine;\n      pre += s[i];\n    }\n    if (ok)\n      ans = s;\n    cout << ans << endl;\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    map<ll, ll, greater<ll>> mp;\n    cout << \"Case #\" << cas++ << \": \";\n    ll n, k;\n    cin >> n >> k;\n    mp[n] = 1;\n    ll ls = 0;\n    while (k > 0) {\n      ls = mp.begin()->first;\n      ll q = mp.begin()->second;\n      mp.erase(mp.begin());\n      mp[ls \/ 2] += q;\n      mp[(ls - 1) \/ 2] += q;\n      k -= q;\n    }\n    cout << ls \/ 2 << \" \" << (ls - 1) \/ 2 << endl;\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    vector<int> v(s.size(), 0);\n    for (int i = 0, __ = s.size(); i < __; ++i) {\n      v[i] = s[i] == '+';\n    }\n    int ans = 0, ok = 1;\n    for (int i = 0, __ = v.size(); i < __; ++i) {\n      if (v[i])\n        continue;\n      if (i + k > v.size()) {\n        ok = 0;\n        break;\n      }\n      ++ans;\n      for (int j = 0, __ = k; j < __; ++j) {\n        v[i + j] = 1 - v[i + j];\n      }\n    }\n    if (ok)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nbool ok(int a, int qa) {\n  return 0.9 <= (a \/ (double)qa) && (a \/ (double)qa) <= 1.1;\n}\n\nbool can(int a, int qa) {\n  int l = max(1.0, floor(a \/ (1.1 * qa)) - 3), r = ceil(a \/ (0.9 * qa)) + 3;\n  for (int i = l, __ = r + 1; i < __; ++i) {\n    if (ok(a, i * qa))\n      return 1;\n  }\n  return 0;\n}\n\nbool can(int a, int qa, int b, int qb) {\n  int la = max(1.0, floor(a \/ (1.1 * qa)) - 3), ra = ceil(a \/ (0.9 * qa)) + 3,\n      lb = max(1.0, floor(b \/ (1.1 * qb)) - 3), rb = ceil(b \/ (0.9 * qb)) + 3,\n      l = max(la, lb), r = min(ra, rb);\n  for (int i = l, __ = r + 1; i < __; ++i) {\n    if (ok(a, i * qa) && ok(b, i * qb))\n      return 1;\n  }\n  return 0;\n}\nint n, p;\nint q[111], mat[111][111];\n\nconst int mv = 500, me = 50 * 500;\nint ant[me], to[me], cap[me], adj[mv], z;\n\ninline void add(int a, int b, int c) {\n  \/\/ dbg(\"add\" _ a _ b _ c)\n  ant[z] = adj[a], to[z] = b, cap[z] = c, adj[a] = z++;\n  swap(a, b);\n  ant[z] = adj[a], to[z] = b, cap[z] = c, adj[a] = z++;\n}\n\nint level[mv], fila[mv], copy_adj[mv];\nint bfs(int src, int sink) {\n  memset(level, -1, sizeof level);\n  level[src] = 0;\n  int pos = 0, tam = 0;\n  fila[tam++] = src;\n  while (pos < tam) {\n    int now = fila[pos++];\n    for (int i = adj[now]; i != -1; i = ant[i]) {\n      if (cap[i] && level[to[i]] == -1) {\n        level[to[i]] = level[now] + 1;\n        fila[tam++] = to[i];\n      }\n    }\n  }\n  return level[sink] != -1;\n}\n\nint dfs(int no, int sink, int flow) {\n  \/\/ dbg(no _ sink _ flow)\n  if (no == sink)\n    return flow;\n  for (int &i = copy_adj[no]; i != -1; i = ant[i]) {\n    if (cap[i] && level[no] + 1 == level[to[i]]) {\n      int nflow = dfs(to[i], sink, min(flow, cap[i]));\n      if (nflow) {\n        cap[i] -= nflow, cap[i ^ 1] += nflow;\n        return nflow;\n      }\n    }\n  }\n  return 0;\n}\n\nint maxflow(int src, int sink) {\n  int mf = 0;\n  while (1) {\n    if (bfs(src, sink)) {\n      memcpy(copy_adj, adj, sizeof adj);\n      while (1) {\n        int add = dfs(src, sink, 1 << 30);\n        \/\/ dbg(add)\n        if (add)\n          mf += add;\n        else\n          break;\n      }\n    } else\n      break;\n  }\n  return mf;\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  int src = mv - 5, sink = mv - 4;\n  while (t--) {\n    memset(adj, -1, sizeof adj);\n    z = 0;\n    cout << \"Case #\" << cas++ << \": \";\n    cin >> n >> p;\n    for (int i = 0, __ = n; i < __; ++i)\n      cin >> q[i];\n    for (int i = 0, __ = n; i < __; ++i) {\n      for (int j = 0, __ = p; j < __; ++j) {\n        cin >> mat[i][j];\n        add(2 * (i * p + j), 2 * (i * p + j) + 1, 1);\n        if (i == 0) {\n          add(src, 2 * (i * p + j), 1);\n        } else {\n          for (int k = 0, __ = p; k < __; ++k) {\n            if (can(mat[i - 1][k], q[i - 1], mat[i][j], q[i]))\n              add(2 * ((i - 1) * p + k) + 1, 2 * (i * p + j), 1);\n          }\n        }\n        if (i + 1 == n && can(mat[i][j], q[i]))\n          add(2 * (i * p + j) + 1, sink, 1);\n      }\n    }\n    cout << maxflow(src, sink) << endl;\n  }\n  return 0;\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nset<char> st;\nint r, c;\nstring mat[20];\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \":\\n\";\n    st.clear();\n    cin >> r >> c;\n    for (int i = 0, __ = r; i < __; ++i) {\n      cin >> mat[i];\n      for (int j = 0, __ = c; j < __; ++j)\n        if (mat[i][j] != '?')\n          st.insert(mat[i][j]);\n    }\n    if (cas == 55) {\n      for (int i = 0, __ = r; i < __; ++i)\n        cerr << \">>> \" << mat[i] << endl;\n    }\n\n    for (auto ch : st) {\n      int x1 = 100, y1 = 100, x2 = -1, y2 = -1;\n      for (int i = 0, __ = r; i < __; ++i) {\n        for (int j = 0, __ = c; j < __; ++j) {\n          if (mat[i][j] == ch) {\n            x1 = min(x1, i);\n            x2 = max(x2, i);\n            y1 = min(y1, j);\n            y2 = max(y2, j);\n          }\n        }\n      }\n\n      for (int i = x1, __ = x2 + 1; i < __; ++i)\n        for (int j = y1, __ = y2 + 1; j < __; ++j)\n          mat[i][j] = ch;\n    }\n    for (auto ch : st) {\n      int x1 = 100, y1 = 100, x2 = -1, y2 = -1;\n      for (int i = 0, __ = r; i < __; ++i) {\n        for (int j = 0, __ = c; j < __; ++j) {\n          if (mat[i][j] == ch) {\n            x1 = min(x1, i);\n            x2 = max(x2, i);\n            y1 = min(y1, j);\n            y2 = max(y2, j);\n          }\n        }\n      }\n      bool ok = 1;\n      while (y1 > 0 && ok) {\n        for (int i = x1, __ = x2 + 1; i < __; ++i) {\n          if (mat[i][y1 - 1] != '?')\n            ok = 0;\n        }\n        if (ok) {\n          for (int i = x1, __ = x2 + 1; i < __; ++i) {\n            mat[i][y1 - 1] = ch;\n          }\n          --y1;\n        }\n      }\n      ok = 1;\n      while (y2 + 1 < c && ok) {\n        for (int i = x1, __ = x2 + 1; i < __; ++i) {\n          if (mat[i][y2 + 1] != '?')\n            ok = 0;\n        }\n        if (ok) {\n          for (int i = x1, __ = x2 + 1; i < __; ++i) {\n            mat[i][y2 + 1] = ch;\n          }\n          ++y2;\n        }\n      }\n    }\n    for (auto ch : st) {\n      int x1 = 100, y1 = 100, x2 = -1, y2 = -1;\n      for (int i = 0, __ = r; i < __; ++i) {\n        for (int j = 0, __ = c; j < __; ++j) {\n          if (mat[i][j] == ch) {\n            x1 = min(x1, i);\n            x2 = max(x2, i);\n            y1 = min(y1, j);\n            y2 = max(y2, j);\n          }\n        }\n      }\n      bool ok = 1;\n      while (x2 + 1 < r && ok) {\n        for (int j = y1, __ = y2 + 1; j < __; ++j) {\n          if (mat[x2 + 1][j] != '?')\n            ok = 0;\n        }\n        if (ok) {\n          for (int j = y1, __ = y2 + 1; j < __; ++j) {\n            mat[x2 + 1][j] = ch;\n          }\n          ++x2;\n        }\n      }\n      ok = 1;\n      while (x1 > 0 && ok) {\n        for (int j = y1, __ = y2 + 1; j < __; ++j) {\n          if (mat[x1 - 1][j] != '?')\n            ok = 0;\n        }\n        if (ok) {\n          for (int j = y1, __ = y2 + 1; j < __; ++j) {\n            mat[x1 - 1][j] = ch;\n          }\n          --x1;\n        }\n      }\n    }\n\n    for (int i = 0, __ = r; i < __; ++i)\n      cout << mat[i] << endl;\n  }\n  return 0;\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> ii;\nii h[11111];\n\nint n, d;\n\nbool can(long double s) {\n  bool ok = 1;\n  for (int i = 0, __ = n; i < __; ++i) {\n    if (s < h[i].second || (fabs(s - h[i].second) < 1e-8))\n      continue;\n    long double rel = s - h[i].second, t = h[i].first \/ rel, nd = t * s;\n    if (nd < d)\n      return 0;\n  }\n  return 1;\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cin >> d >> n;\n    for (int i = 0, __ = n; i < __; ++i) {\n      cin >> h[i].first >> h[i].second;\n      if (cas == 37)\n        cerr << \">>>> \" << h[i].first << \" , \" << h[i].second << endl;\n    }\n    long double lo = 1e-6, hi = 1e40;\n    for (int inter = 0, __ = 5000; inter < __; ++inter) {\n      long double m = (lo + hi) \/ 2;\n      if (can(m))\n        lo = m;\n      else\n        hi = m;\n    }\n    cout << \"Case #\" << cas++ << \": \" << setprecision(10) << fixed << hi\n         << endl;\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair<int, char> ic;\n\nchar ans[11111];\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    \/\/ r y b\n    memset(ans, 0, sizeof ans);\n    std::vector<ic> vet;\n    vet.push_back(ic(r, 'R'));\n    vet.push_back(ic(b, 'B'));\n    vet.push_back(ic(y, 'Y'));\n    \/\/ ic a = ic(r, 'R')\n    sort(vet.begin(), vet.end(), greater<ic>());\n    ans[n] = 0;\n    int i = 0, ok = 1;\n    for (int k = 0, __ = 3; k < __; ++k) {\n      for (int l = 0, __ = vet[k].first; l < __; ++l) {\n        while (ans[i]) {\n          if (ans[i] == vet[k].second)\n            ok = 0;\n          i = (i + 1) % n;\n        }\n        ans[i] = vet[k].second;\n        if (l + 1 < vet[k].first)\n          i = (i + 2) % n;\n        else\n          i = (i + 1) % n;\n      }\n    }\n    for (int i = 0, __ = n; i < __; ++i) {\n      if (ans[i] == ans[(i + 1) % n])\n        ok = 0;\n    }\n    if (!ok)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << ans << endl;\n  }\n}\n"}
{"target":"luucasv","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair<ld, int> ii;\n\nstruct horse {\n  ld e, s;\n};\n\nconst int ms = 111;\nconst ld inf = 1e20;\n\nint n;\nhorse h[ms];\nlong double calc[ms], dist[ms][ms];\nint step;\n\nlong double dijkstra(int at, int ed) {\n  priority_queue<ii, vector<ii>, greater<ii>> pq;\n  pq.push(ii(0, at));\n  for (int i = 0, __ = n; i < __; ++i)\n    calc[i] = inf;\n  calc[at] = 0;\n  while (!pq.empty()) {\n    ii tp = pq.top();\n    pq.pop();\n    if (tp.first > calc[tp.second])\n      continue;\n    if (tp.second == ed)\n      break;\n    for (int i = 0, __ = n; i < __; ++i) {\n      if (i == tp.second || dist[tp.second][i] > h[tp.second].e)\n        continue;\n      ld ndist = tp.first + dist[tp.second][i] \/ h[tp.second].s;\n      if (ndist < calc[i]) {\n        pq.push(ii(ndist, i));\n        calc[i] = ndist;\n      }\n    }\n  }\n  return calc[ed];\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \":\";\n    int q;\n    cin >> n >> q;\n    for (int i = 0, __ = n; i < __; ++i)\n      cin >> h[i].e >> h[i].s;\n    for (int i = 0, __ = n; i < __; ++i) {\n      for (int j = 0, __ = n; j < __; ++j) {\n        cin >> dist[i][j];\n        if (dist[i][j] < 0)\n          dist[i][j] = inf;\n      }\n      dist[i][i] = 0;\n    }\n    for (int k = 0, __ = n; k < __; ++k)\n      for (int i = 0, __ = n; i < __; ++i)\n        for (int j = 0, __ = n; j < __; ++j)\n          dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n\n    for (int i = 0, __ = q; i < __; ++i) {\n      int u, v;\n      cin >> u >> v;\n      --u, --v;\n      cout << \" \" << setprecision(10) << fixed << dijkstra(u, v);\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nbool judge(long long k) {\n  int x = k % 10;\n  k \/= 10;\n  while (k) {\n    int nx = k % 10;\n    if (nx > x) {\n      return false;\n    }\n    x = nx;\n    k \/= 10;\n  }\n  return true;\n}\n\nlong long pow10(int k) {\n  long long ret = 1;\n  for (int i = 0; i < k; i++) {\n    ret *= 10;\n  }\n  return ret;\n}\nlong long calc(long long k, int p) {\n  long long ret = 0;\n  for (int i = 0; i < p; i++) {\n    ret += 9LL * pow10(i);\n    k \/= 10;\n  }\n\n  long long u = k % 10;\n  if (u == 0) {\n    return -1;\n  }\n  u -= (p != 0);\n  ret += u * pow10(p);\n  k \/= 10;\n\n  for (int i = p + 1; i <= 22; i++) {\n    long long x = k % 10;\n    long long v = min(x, u);\n    ret += v * pow10(i);\n    u = v;\n    k \/= 10;\n  }\n  return ret;\n}\n\nlong long solve(long long k) {\n  \/\/    if (judge(k)) {\n  \/\/        return k;\n  \/\/    }\n  long long ret = 0;\n  for (int i = 0; i <= 20; i++) {\n    long long now = calc(k, i);\n    \/\/        cout<<i<<\" \"<<now<<endl;\n    ret = max(ret, now);\n  }\n\n  return ret;\n}\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    long long k;\n    cin >> k;\n    long long ret = solve(k);\n\n    cout << \"Case #\" << cas << \": \" << ret << endl;\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\npriority_queue<long long> que[2];\nlong long mx, mi;\n\nvoid pop(int x) {\n  long long u = que[x].top();\n  que[x].pop();\n  mx = u \/ 2;\n  mi = u \/ 2 - (x == 0);\n  que[mx & 1].push(mx);\n  que[mi & 1].push(mi);\n}\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    long long n, k;\n    cin >> n >> k;\n\n    for (int i = 0; i < 2; i++) {\n      while (!que[i].empty()) {\n        que[i].pop();\n      }\n    }\n\n    que[n & 1].push(n);\n\n    for (int i = 1; i <= k; i++) {\n      if (que[0].empty()) {\n        pop(1);\n      } else if (que[1].empty()) {\n        pop(0);\n      } else {\n        long long odd = que[1].top();\n        long long even = que[0].top();\n        if (odd > even) {\n          pop(1);\n        } else {\n          pop(0);\n        }\n      }\n    }\n\n    cout << \"Case #\" << cas << \": \" << mx << \" \" << mi << endl;\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nint solve(char *s, int k) {\n  int ret = 0;\n  int n = (int)strlen(s);\n  for (int i = 0; i + k <= n; i++) {\n    if (s[i] == '-') {\n      ret++;\n      for (int j = 0; j < k; j++) {\n        s[i + j] = (s[i + j] == '+') ? '-' : '+';\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '-') {\n      return 0x3f3f3f3f;\n    }\n  }\n  return ret;\n}\n\nint main() {\n  \/\/    freopen(\"in.txt\",\"r\",stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  scanf(\"%d\", &T);\n\n  for (int cas = 1; cas <= T; cas++) {\n    char s[1005];\n    char p[1005];\n    int k;\n    scanf(\"%s %d\", s, &k);\n    int n = strlen(s);\n    strcpy(p, s);\n    int first = solve(p, k);\n\n    strcpy(p, s);\n    for (int i = 0, j = n - 1; i <= j; i++, j--) {\n      swap(p[i], p[j]);\n    }\n    int second = solve(p, k);\n\n    int ret = min(first, second);\n\n    if (ret != 0x3f3f3f3f) {\n      printf(\"Case #%d: %d\\n\", cas, ret);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n    }\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nlong long need[100];\n\nlong long num[100][100];\n\nset<long long> vec[100][100];\n\nvoid calc(long long num, long long need, int i, int j) {\n  for (long long e = 1;; e++) {\n    long long now = e * need;\n    if (now * 0.9 <= num && now * 1.1 >= num) {\n      vec[i][j].insert(e);\n    }\n\n    if (now * 0.9 > num) {\n      break;\n    }\n  }\n}\n\nint index(int m, int i, int j) { return (i - 1) * m + j; }\n\nconst int N = 100;\nbool g[N][N], vis[N];\nint nx, ny, cx[N], cy[N];\nbool dfs(int u) {\n  for (int i = 1; i <= ny; i++) {\n    if (g[u][i] && !vis[i]) {\n      vis[i] = true;\n      if (cy[i] == -1 || dfs(cy[i])) {\n        cy[i] = u;\n        cx[u] = i;\n        return true;\n      }\n    }\n  }\n  return false;\n}\nint MaxMatch() {\n  int ret = 0;\n  memset(cx, -1, sizeof(cx));\n  memset(cy, -1, sizeof(cy));\n  for (int i = 1; i <= nx; i++) {\n    if (cx[i] == -1) {\n      memset(vis, 0, sizeof(vis));\n      ret += dfs(i);\n    }\n  }\n  return ret;\n}\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    int n, p;\n    cin >> n >> p;\n    for (int i = 1; i <= n; i++) {\n      cin >> need[i];\n    }\n    memset(g, 0, sizeof g);\n    nx = p;\n    ny = p;\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        cin >> num[i][j];\n        vec[i][j].clear();\n      }\n    }\n    long long ans = 0;\n\n    if (n == 1) {\n      for (int j = 1; j <= p; j++) {\n        calc(num[1][j], need[1], 1, j);\n        if (vec[1][j].size() > 0) {\n          ans++;\n        }\n      }\n    } else {\n      for (int j = 1; j <= p; j++) {\n        calc(num[1][j], need[1], 1, j);\n      }\n      for (int j = 1; j <= p; j++) {\n        calc(num[2][j], need[2], 2, j);\n        for (int k = 1; k <= p; k++) {\n          for (set<long long>::iterator it = vec[2][j].begin();\n               it != vec[2][j].end(); it++) {\n            if (vec[1][k].count(*it)) {\n              g[j][k] = true;\n            }\n          }\n        }\n      }\n      ans = MaxMatch();\n    }\n\n    cout << \"Case #\" << cas << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nchar ch[100][100];\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n\n    int n, m;\n    cin >> n >> m;\n\n    for (int i = 1; i <= n; i++) {\n      cin >> ch[i] + 1;\n    }\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        if (ch[i][j] != '?') {\n          for (int k = j - 1; k >= 1; k--) {\n            if (ch[i][k] == '?') {\n              ch[i][k] = ch[i][j];\n            } else\n              break;\n          }\n          for (int k = j + 1; k <= m; k++) {\n            if (ch[i][k] == '?') {\n              ch[i][k] = ch[i][j];\n            } else\n              break;\n          }\n        }\n      }\n    }\n\n    for (int j = 1; j <= m; j++) {\n      for (int i = 1; i <= n; i++) {\n        if (ch[i][j] != '?') {\n          for (int k = i - 1; k >= 1; k--) {\n            if (ch[k][j] == '?') {\n              ch[k][j] = ch[i][j];\n            } else\n              break;\n          }\n          for (int k = i + 1; k <= n; k++) {\n            if (ch[k][j] == '?') {\n              ch[k][j] = ch[i][j];\n            } else\n              break;\n          }\n        }\n      }\n    }\n\n    cout << \"Case #\" << cas << \":\" << endl;\n    for (int i = 1; i <= n; i++) {\n      cout << ch[i] + 1 << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nconst int N = 1005;\n\ndouble k[N];\ndouble s[N];\n\nbool check(double mid, int n, double d);\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    double d;\n    int n;\n    cin >> d >> n;\n    for (int i = 1; i <= n; i++) {\n      cin >> k[i] >> s[i];\n    }\n\n    double ti = 0;\n    for (int i = 1; i <= n; i++) {\n      double way = d - k[i];\n      double time = way \/ s[i];\n      ti = max(ti, time);\n    }\n\n    printf(\"Case #%d: %.8f\\n\", cas, d \/ ti);\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nconst int N = 1005;\n\nvector<pair<int, string>> vec;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    int n;\n    int r, o, y, g, b, v;\n    vec.clear();\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    vec.push_back(make_pair(r, \"R\"));\n    vec.push_back(make_pair(y, \"Y\"));\n    vec.push_back(make_pair(b, \"B\"));\n\n    sort(vec.begin(), vec.end());\n\n    vector<string> result;\n\n    if (vec[0].first + vec[1].first < vec[2].first) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n      continue;\n    }\n\n    while (vec[2].first > 0 && vec[1].first > 0) {\n      result.push_back(vec[2].second);\n      vec[2].first--;\n      result.push_back(vec[1].second);\n      vec[1].first--;\n    }\n    if (vec[2].first > 0) {\n      while (vec[2].first > 0 && vec[0].first > 0) {\n        result.push_back(vec[2].second);\n        vec[2].first--;\n        result.push_back(vec[0].second);\n        vec[0].first--;\n      }\n    }\n\n    for (int i = 0; i < result.size(); i++) {\n      if (result[i] == vec[1].second) {\n        if (vec[0].first > 0) {\n          result[i] = vec[0].second + result[i];\n          vec[0].first--;\n        }\n        if (vec[0].first > 0) {\n          result[i] = result[i] + vec[0].second;\n          vec[0].first--;\n        }\n      }\n    }\n\n    bool ok = vec[0].first == 0;\n    string ans = \"\";\n    for (int i = 0; i < result.size(); i++) {\n      ans += result[i];\n    }\n\n    if (ans.length() != r + b + y) {\n      ok = false;\n    }\n\n    for (int i = 1; i < ans.length(); i++) {\n      if (ans[i] == ans[i - 1]) {\n        ok = false;\n      }\n    }\n\n    if (ans[ans.length() - 1] == ans[0]) {\n      ok = false;\n    }\n\n    if (!ok) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n    } else {\n      printf(\"Case #%d: %s\\n\", cas, ans.c_str());\n    }\n  }\n  return 0;\n}\n"}
{"target":"LybF","func":"#include <algorithm>\n#include <cassert>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\n\nconst int N = 1005;\n\ndouble e[N], s[N];\ndouble d[N][N];\n\ndouble dp[N];\n\nvoid floyd(int n) {\n  for (int k = 1; k <= n; k++)\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        if (d[i][k] == -1 || d[k][j] == -1)\n          continue;\n        if (d[i][j] > d[i][k] + d[k][j])\n          d[i][j] = d[i][k] + d[k][j];\n      }\n}\n\ndouble get(int i, int j) {\n  double ret = 0;\n  for (int p = i + 1; p <= j; p++) {\n    ret += d[p - 1][p];\n  }\n  return ret;\n}\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n\n  for (int cas = 1; cas <= T; cas++) {\n    int n, q;\n    cin >> n >> q;\n\n    for (int i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        cin >> d[i][j];\n      }\n    }\n\n    int a, b;\n    for (int i = 1; i <= q; i++) {\n      cin >> a >> b;\n    }\n\n    \/\/        floyd(n);\n\n    for (int i = 0; i <= n; i++) {\n      dp[i] = 1e60;\n    }\n    dp[n] = 0;\n    for (int i = n - 1; i >= 1; i--) {\n      for (int j = i + 1; j <= n; j++) {\n        double dis = get(i, j);\n        if (dis == -1 || dis > e[i]) {\n          continue;\n        }\n\n        double time = dis \/ s[i];\n        \/\/                cout << i << \" dis \" << j << \" \" << dis << endl;\n        dp[i] = min(dp[i], time + dp[j]);\n      }\n      \/\/            cout << i << \" dp \" << dp[i] << endl;\n    }\n\n    printf(\"Case #%d: %.8f\\n\", cas, dp[1]);\n  }\n  return 0;\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n\n  int tc, flag;\n  long long ans = 0;\n  string s;\n\n  cin >> tc;\n  for (int ca = 1; ca <= tc; ca++) {\n    ans = 0;\n    cin >> s;\n    while (true) {\n      flag = -1;\n      for (int i = 0; i < s.length(); i++) {\n        if (s[i] < s[i - 1]) {\n          flag = i;\n          break;\n        }\n      }\n      if (flag == -1)\n        break;\n      s[flag - 1]--;\n      for (int i = flag; i < s.length(); i++) {\n        s[i] = '9';\n      }\n    }\n\n    for (int i = 0; i < s.length(); i++) {\n      ans = ans * 10LL + (s[i] - '0');\n    }\n\n    printf(\"Case #%d: %lld\\n\", ca, ans);\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nstruct node {\n\n  int l, r, len;\n\n  bool operator<(const node &other) const {\n    if (len != other.len)\n      return len > other.len;\n    return l < other.l;\n  }\n};\n\nset<node> s;\n\nint main() {\n\n  int tc;\n  cin >> tc;\n  long long n, k, ans1, ans2, cur;\n  node temp;\n  for (int ca = 1; ca <= tc; ca++) {\n\n    cin >> n >> k;\n    k--;\n    temp.l = 1;\n    temp.r = n;\n    temp.len = (temp.r - temp.l + 1);\n    s.insert(temp);\n\n    while (k--) {\n      node temp = *s.begin();\n      s.erase(s.begin());\n      cur = (temp.l + temp.r) \/ 2;\n\n      node lef;\n      lef.l = temp.l;\n      lef.r = cur - 1;\n      lef.len = (lef.r - lef.l + 1);\n      node rg;\n      rg.l = cur + 1;\n      rg.r = temp.r;\n      rg.len = (rg.r - rg.l + 1);\n      if (lef.len > 0)\n        s.insert(lef);\n      if (rg.len > 0)\n        s.insert(rg);\n    }\n    node temp = *s.begin();\n    cur = (temp.l + temp.r) \/ 2;\n    ans1 = min(cur - temp.l, temp.r - cur);\n    ans2 = max(cur - temp.l, temp.r - cur);\n    printf(\"Case #%d: %lld %lld\\n\", ca, ans2, ans1);\n    s.clear();\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n\n  int tc, cnt, flag, k;\n  string s;\n  cin >> tc;\n  for (int ca = 1; ca <= tc; ca++) {\n    cin >> s >> k;\n    cnt = 0;\n    flag = 0;\n\n    for (int i = k - 1; i < s.length(); i++) {\n      if (s[i - k + 1] == '-') {\n        cnt++;\n        for (int j = i - k + 1; j <= i; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n      }\n    }\n    for (int i = s.length() - 1 - k + 1; i <= s.length() - 1; i++) {\n      if (s[i] == '-')\n        flag = 1;\n    }\n\n    printf(\"Case #%d: \", ca);\n    if (flag == 1)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << cnt << endl;\n  }\n}\n"}
{"target":"manjunath1996","func":"\/*#include<bits\/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define dbg(x)  cout<<#x<<\"=\"<<x<<endl\n#define N 2001025\n#define MOD  786433\n#define pb push_back\n#define iosbase  ios_base::sync_with_stdio(false)\n#define dbg(x)  cout<<#x<<\"=\"<<x<<endl\n*\/\n\n#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ maxflow\n\nlong long res[2600][2600];\nlong long cap[2600][2600];\nlong long comp1[2600][2600], comp2[2600][2600];\nvector<long long> adj[2600];\nbool mark[2600];\nlong long par[2600];\nstring s[2600];\nvector<long long> vec[2];\nlong long avail[50][100], tak[50][100];\nlong long req[100];\n\nbool can(long long u, long long v) { return ((cap[u][v] - res[u][v]) > 0); }\n\nbool bet(long long amt, long long tm, long long num) {\n  long double am = amt, t = tm;\n  long double tot = req[num] * tm;\n  long double ans = am * 100 \/ tot;\n  if (ans >= 90.0 && ans <= 110.0)\n    return true;\n  else\n    return false;\n}\nbool more(long long amt, long long tm, long long num) {\n  long double am = amt, t = tm;\n  long double tot = req[num] * tm;\n  long double ans = am * 100 \/ tot;\n  if (ans >= 90.0)\n    return true;\n  else\n    return false;\n}\n\nbool bfs(long long source, long long sink) {\n  memset(mark, 0, sizeof(mark));\n\n  queue<long long> q;\n  q.push(source);\n  mark[source] = 1;\n  while (!q.empty()) {\n    long long u = q.front();\n    q.pop();\n    for (long long i = 0; i < adj[u].size(); i++) {\n      long long v = adj[u][i];\n      if (!mark[v] && can(u, v)) {\n        mark[v] = 1;\n        q.push(v);\n        par[v] = u;\n      }\n    }\n  }\n  return (mark[sink] == 1);\n}\n\nlong long Augment(long long source, long long sink) {\n  long long cur = sink, flow = 1e7;\n  while (cur != source) {\n\n    long long p = par[cur]; \/\/ p--sink edge\n    flow = min(flow, cap[p][cur] - res[p][cur]);\n    cur = p;\n  }\n  cur = sink;\n  while (cur != source) {\n    long long p = par[cur]; \/\/ p--sink edge\n\n    res[p][cur] += flow;\n    res[cur][p] -= flow;\n    cur = p;\n  }\n  return flow;\n}\n\nlong long maxF(long long source, long long sink) {\n  long long maxflow = 0;\n  while (bfs(source, sink)) {\n\n    long long k = Augment(source, sink);\n\n    maxflow += k;\n  }\n  return maxflow;\n}\n\nint main() {\n  long long n, p, m, t, ans, maxt, mint;\n\n  cin >> t;\n  for (long long tc = 1; tc <= t; tc++) {\n    mint = 1e7;\n    cout << \"Case #\" << tc << \": \";\n    ans = 0;\n    memset(tak, 0, sizeof(0));\n    cin >> n >> p;\n\n    maxt = -1;\n    for (long long i = 0; i < n; i++) {\n      cin >> req[i];\n    }\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 0; j < p; j++) {\n        cin >> avail[i][j];\n        maxt = max(avail[i][j], maxt);\n        mint = min(avail[i][j] * 100 \/ (90 * req[i]), mint);\n      }\n    }\n\n    if (n == 1) {\n      for (int i = 0; i < maxt; i++) {\n        for (int j = 0; j < p; j++) {\n          if (bet(avail[0][j], i, 0)) {\n            if (!mark[j]) {\n              ans++;\n              mark[j] = 1;\n            }\n          }\n        }\n      }\n      memset(mark, 0, sizeof(mark));\n      cout << ans << endl;\n      continue;\n    }\n\n    int flag = 0, yes = 0, ex = 0;\n    for (long long i = mint; i <= maxt; i++) {\n      if (ex == 1)\n        break;\n\n      for (long long j = 0; j < n; j++) {\n        flag = j % 2;\n        yes = 0;\n        for (long long k = 0; k < p; k++) {\n          if (more(avail[j][k], i, j))\n            yes++;\n          if (bet(avail[j][k], i, j)) {\n\n            vec[flag ^ 1].push_back(k);\n          }\n        }\n\n        if (yes == 0)\n          ex = 1;\n        if (vec[flag ^ 1].size() == 0)\n          break;\n        if (j == 0)\n          continue;\n\n        for (long long x = 0; x < vec[flag].size(); x++) {\n          for (long long y = 0; y < vec[flag ^ 1].size(); y++) {\n\n            if (tak[(j - 1) * p + vec[flag][x]][j * p + vec[flag ^ 1][y]] == 1)\n              continue;\n            adj[(j - 1) * p + vec[flag][x]].push_back(\n                (j * p + vec[flag ^ 1][y]));\n            cap[(j - 1) * p + vec[flag][x]][j * p + vec[flag ^ 1][y]] = 1;\n            adj[j * p + vec[flag ^ 1][y]].push_back((j - 1) * p + vec[flag][x]);\n            \/\/ cout<<(j-1)*p+vec[flag][x]<<\"--\"<<j*p+vec[flag^1][y]<<endl;\n            tak[(j - 1) * p + vec[flag][x]][j * p + vec[flag ^ 1][y]] = 1;\n          }\n        }\n        vec[flag].clear();\n      }\n    }\n\n    vec[0].clear();\n    vec[1].clear();\n\n    long long source = n * p + 1;\n    long long sink = n * p + 2;\n\n    for (long long i = 0; i < p; i++) {\n      cap[source][i] = 1;\n      adj[source].push_back(i);\n      adj[i].push_back(source);\n      adj[(n - 1) * p + i].push_back(sink);\n      adj[sink].push_back((n - 1) * p + i);\n      cap[(n - 1) * p + i][sink] = 1;\n    }\n\n    ans = maxF(source, sink);\n    cout << ans << endl;\n\n    for (long long i = 0; i < 2600; i++)\n      adj[i].clear();\n\n    memset(cap, 0, sizeof(cap));\n    memset(res, 0, sizeof(res));\n    memset(mark, 0, sizeof(mark));\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nstring s[50];\nint tak[500];\nint main() {\n\n  int t, R, C, flag;\n  char ch;\n  cin >> t;\n  for (int tc = 1; tc <= t; tc++) {\n\n    memset(tak, 0, sizeof(tak));\n    cin >> R >> C;\n    for (int i = 0; i < R; i++)\n      cin >> s[i];\n\n    for (int ux = 0; ux < R; ux++) {\n      for (int uy = 0; uy < C; uy++) {\n        for (int dx = R - 1; dx >= ux; dx--) {\n          for (int dy = C - 1; dy >= uy; dy--) {\n            flag = 0;\n            for (int x = ux; x <= dx; x++) {\n              for (int y = uy; y <= dy; y++) {\n                if (s[x][y] != '?') {\n                  ch = s[x][y];\n                  flag++;\n                }\n              }\n            }\n            if (flag == 1 && tak[ch] == 0) {\n              tak[ch] = 1;\n              for (int x = ux; x <= dx; x++) {\n                for (int y = uy; y <= dy; y++) {\n                  s[x][y] = ch;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << tc << \":\";\n    ;\n    cout << endl;\n    for (int x = 0; x < R; x++) {\n      cout << s[x] << endl;\n    }\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nvector<pair<double, double>> node;\nint main() {\n\n  int t, n, tc;\n  double d, curpos, tm, curt, maxt, ans, sp, a, b;\n  cin >> t;\n\n  for (tc = 1; tc <= t; tc++) {\n    maxt = 0;\n    printf(\"Case #%d: \", tc);\n    cin >> d >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      node.push_back({a, b});\n    }\n    sort(node.begin(), node.end());\n    reverse(node.begin(), node.end());\n\n    for (int i = 0; i < n; i++) {\n      curpos = node[i].first;\n      sp = node[i].second;\n      curt = (d - curpos) \/ sp;\n      if (curt > maxt)\n        maxt = curt;\n    }\n    if (maxt != 0)\n      ans = d \/ maxt;\n    printf(\"%.7lf\\n\", ans);\n    node.clear();\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\nvector<pair<double, double>> node;\nint main() {\n\n  long long t, n, tc, N, R, O, Y, G, B, V, fl, tk;\n  string ans;\n  cin >> t;\n  for (tc = 1; tc <= t; tc++) {\n    fl = 0;\n    ans = \"\";\n    printf(\"Case #%lld: \", tc);\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    N--;\n    if (R >= Y && R >= B) {\n      ans += 'R';\n      R--;\n\n    } else if (Y >= R && Y >= B) {\n      ans += 'Y';\n      Y--;\n    } else {\n      ans += 'B';\n      B--;\n    }\n\n    for (int i = 0; i < N; i++) {\n      tk = 0;\n      if (R > Y && R > B) {\n\n        if (ans[ans.length() - 1] != 'R') {\n          ans += 'R';\n          R--;\n          tk = 1;\n        } else {\n          if (Y > B) {\n            ans += 'Y';\n            Y--;\n            tk = 1;\n          } else if (Y < B) {\n            ans += 'B';\n            B--;\n            tk = 1;\n          }\n        }\n      } else if (Y > R && Y > B) {\n\n        if (ans[ans.length() - 1] != 'Y') {\n          ans += 'Y';\n          Y--;\n          tk = 1;\n        } else {\n          if (R > B) {\n            ans += 'R';\n            R--;\n            tk = 1;\n          } else if (R < B) {\n            ans += 'B';\n            B--;\n            tk = 1;\n          }\n        }\n      } else if (B > R && B > Y) {\n        if (ans[ans.length() - 1] != 'B') {\n          ans += 'B';\n          B--;\n          tk = 1;\n        } else {\n          if (R > Y) {\n            ans += 'R';\n            R--;\n            tk = 1;\n          } else if (R < Y) {\n            ans += 'Y';\n            Y--;\n            tk = 1;\n          }\n        }\n      }\n\n      if (tk == 0) {\n\n        if (tk == 0 && R >= Y && R >= B && ans[0] == 'R') {\n          if (ans[ans.length() - 1] != 'R') {\n            ans += 'R';\n            R--;\n            tk = 1;\n          }\n        }\n        if (tk == 0 && Y >= R && Y >= B && ans[0] == 'Y') {\n          if (ans[ans.length() - 1] != 'Y') {\n            ans += 'Y';\n            Y--;\n            tk = 1;\n          }\n        }\n        if (tk == 0 && B >= R && B >= Y && ans[0] == 'B') {\n          if (ans[ans.length() - 1] != 'B') {\n            ans += 'B';\n            B--;\n            tk = 1;\n          }\n        }\n      }\n      if (tk == 0) {\n\n        if (tk == 0 && R >= Y && R >= B) {\n          if (ans[ans.length() - 1] != 'R') {\n            ans += 'R';\n            R--;\n            tk = 1;\n          } else {\n            if (Y > B) {\n              ans += 'Y';\n              Y--;\n              tk = 1;\n            } else {\n              ans += 'B';\n              B--;\n              tk = 1;\n            }\n          }\n        }\n        if (tk == 0 && Y >= R && Y >= B) {\n          if (ans[ans.length() - 1] != 'Y') {\n            ans += 'Y';\n            Y--;\n            tk = 1;\n          } else {\n            if (R > B) {\n              ans += 'R';\n              R--;\n              tk = 1;\n            } else {\n              ans += 'B';\n              B--;\n              tk = 1;\n            }\n          }\n        }\n        if (tk == 0 && B >= R && B >= Y) {\n          if (ans[ans.length() - 1] != 'B') {\n            ans += 'B';\n            B--;\n            tk = 1;\n          } else {\n            if (R > Y) {\n              ans += 'R';\n              R--;\n              tk = 1;\n            } else {\n              ans += 'Y';\n              Y--;\n              tk = 1;\n            }\n          }\n        }\n      }\n\n      if (tk == 0 || min(R, min(Y, B)) < 0)\n        fl = 1;\n    }\n    if (ans[0] == ans[ans.length() - 1])\n      fl = 1;\n\n    if (fl == 1)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << endl;\n  }\n}\n"}
{"target":"manjunath1996","func":"#include <bits\/stdc++.h>\nusing namespace std;\ndouble ans[200], d[200][200], w[200][200];\npair<double, double> node[200];\nint main() {\n\n  long long tc, t, n, q, u, v;\n  cin >> t;\n  for (tc = 1; tc <= t; tc++) {\n    printf(\"Case #%lld: \", tc);\n    cin >> n >> q;\n    for (int i = 0; i < n; i++) {\n      cin >> node[i].first >> node[i].second;\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> w[i][j];\n      }\n    }\n\n    while (q--) {\n\n      cin >> u >> v;\n\n      u--;\n      v--;\n\n      if (u > v)\n        swap(u, v);\n      for (int i = u + 1; i <= v; i++) {\n        ans[i] = 1e17;\n        for (int j = u; j < i; j++) {\n          d[j][i] = d[j][i - 1] + w[i - 1][i];\n          if (node[j].first >= d[j][i]) {\n            ans[i] = min(ans[i], ans[j] + d[j][i] \/ node[j].second);\n          }\n        }\n      }\n      printf(\"%.7lf \", ans[v]);\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e6 + 5;\n\nbool isTidy(ll n) {\n  stringstream second;\n  second << n;\n  string num = second.str();\n  return is_sorted(num.begin(), num.end());\n}\n\nint main() {\n  int t, k;\n  ll n;\n  string s;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cout << \"Case #\" << caseNr << \": \";\n    cin >> n;\n    int res = 1;\n    for (int i = (1); i < (n + 1); ++i)\n      if (isTidy(i))\n        res = i;\n    cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e3 + 5;\nint occup[N], R[N], L[N];\nll t, n, k;\n\nvoid precompute() {\n  L[0] = 0;\n  R[n + 1] = 0;\n  for (int i = (1); i < (n + 2); ++i)\n    L[i] = occup[i] ? 0 : L[i - 1] + 1;\n  for (int i = (n); i >= (0); --i)\n    R[i] = occup[i] ? 0 : R[i + 1] + 1;\n}\n\nint main() {\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cout << \"Case #\" << caseNr << \": \";\n    cin >> n >> k;\n    memset(occup, 0, sizeof(occup));\n    occup[0] = 1;\n    occup[n + 1] = 1;\n    int best;\n    while (k--) {\n      precompute();\n      best = 1;\n      for (int i = (1); i < (n + 1); ++i) {\n        if (occup[i])\n          continue;\n        if (min(L[i], R[i]) > min(L[best], R[best]))\n          best = i;\n        else if (min(L[i], R[i]) == min(L[best], R[best]) &&\n                 max(L[i], R[i]) > max(L[best], R[best]))\n          best = i;\n      }\n      occup[best] = 1;\n    }\n    cout << max(L[best], R[best]) - 1 << \" \" << min(L[best], R[best]) - 1\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e6 + 5;\n\nint main() {\n  int t, k;\n  string s;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cout << \"Case #\" << caseNr << \": \";\n    cin >> s >> k;\n    int res = 0;\n    for (int i = (0); i < (s.size()); ++i) {\n      if (s[i] == '-') {\n        ++res;\n        if (i + k - 1 >= s.size()) {\n          cout << \"IMPOSSIBLE\" << endl;\n          goto next;\n        }\n        for (int j = (0); j < (k); ++j)\n          s[i + j] = s[i + j] == '+' ? '-' : '+';\n      }\n    }\n    cout << res << endl;\n  next:;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e2;\n\nll needed[N];\nll got[N][N];\nbool available[N][N];\nbool ispackage[N][N];\nint n, p;\n\nbool is_package(int p1, int p2) {\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  for (\n      int i =\n          (1 \/*max( int(needed[0] * 0.9 \/ got[0][p1]), int(needed[1] * 0.9 \/ got[1][p2]) )*\/);\n      i < (1e6 + 1); ++i) {\n\n    if ((i * needed[0] * 0.9 <= got[0][p1] &&\n         i * needed[0] * 1.1 >= got[0][p1]) &&\n        (i * needed[1] * 0.9 <= got[1][p2] &&\n         i * needed[1] * 1.1 >= got[1][p2])) {\n      \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n      return true;\n    }\n    \/\/ if ( i * needed[0] * 0.9 > got[0][p1] || i * needed[1] * 0.9 > got[1][p2]\n    \/\/ ) \tbreak;\n  }\n  return false;\n}\n\nint solve(int package) {\n  for (int i = (0); i < (p); ++i)\n    for (int j = (0); j < (p); ++j)\n      ispackage[i][j] = is_package(i, j);\n  vi r;\n  for (int i = (0); i < (p); ++i)\n    r.push_back(i);\n  int best = 0;\n  do {\n    int res = 0;\n    for (int i = (0); i < (p); ++i)\n      if (ispackage[i][r[i]])\n        ++res;\n    best = max(best, res);\n  } while (next_permutation(r.begin(), r.end()));\n  return best;\n}\n\nint main() {\n  int t;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cin >> n >> p;\n    \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n    \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n    for (int i = (0); i < (n); ++i)\n      cin >> needed[i];\n    for (int i = (0); i < (n); ++i) {\n      for (int j = (0); j < (p); ++j) {\n        cin >> got[i][j];\n        available[i][j] = 1;\n      }\n    }\n    if (n == 1) {\n      needed[1] = 0;\n      memset(got[1], 0, sizeof(got[1]));\n      for (int i = (0); i < (p); ++i)\n        available[1][i] = 1;\n    }\n    cout << \"Case #\" << caseNr << \": \" << solve(0) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e6 + 5;\n\nset<int> X[256];\nset<int> Y[256];\n\nint t, rows, cols;\n\nbool isValid(vector<string> &grid) {\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  set<int> X[256], Y[256];\n  for (int r = (0); r < (rows); ++r) {\n    for (int c = (0); c < (cols); ++c) {\n      X[grid[r][c]].insert(c);\n      Y[grid[r][c]].insert(r);\n    }\n  }\n  for (int i = ('A'); i < ('Z' + 1); ++i) {\n    if (!X[i].empty()) {\n      for (int r = (*Y[i].begin()); r < (*Y[i].rbegin() + 1); ++r)\n        for (int c = (*X[i].begin()); c < (*X[i].rbegin() + 1); ++c)\n          if (grid[r][c] != i) {\n            \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n            return false;\n          }\n    }\n  }\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  return true;\n}\n\nbool solve(vector<string> &grid, set<char> &symbols) {\n  int r, c;\n  for (r = 0; r < rows; ++r)\n    for (c = 0; c < cols; ++c)\n      if (grid[r][c] == '?')\n        goto hell;\nhell:;\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n  if (r == rows)\n    return isValid(grid);\n  for (char symbol : symbols) {\n    \/* cout << \">> \" << #x << \" = >\" << x << \"<\" << endl*\/;\n    grid[r][c] = symbol;\n    if (solve(grid, symbols))\n      return true;\n  }\n  grid[r][c] = '?';\n  return false;\n}\n\nint main() {\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cin >> rows >> cols;\n    for (int i = ('A'); i < ('Z' + 1); ++i) {\n      X[i].clear();\n      Y[i].clear();\n    }\n    vector<string> grid(rows);\n    set<char> symbols;\n    for (int r = (0); r < (rows); ++r) {\n      cin >> grid[r];\n      for (int c = (0); c < (cols); ++c) {\n        symbols.insert(grid[r][c]);\n        X[grid[r][c]].insert(c);\n        Y[grid[r][c]].insert(r);\n      }\n    }\n    for (int i = ('A'); i < ('Z' + 1); ++i) {\n      if (!X[i].empty()) {\n        for (int r = (*Y[i].begin()); r < (*Y[i].rbegin() + 1); ++r)\n          for (int c = (*X[i].begin()); c < (*X[i].rbegin() + 1); ++c)\n            grid[r][c] = i;\n      }\n    }\n    symbols.erase('?');\n    solve(grid, symbols);\n    cout << \"Case #\" << caseNr << \":\" << endl;\n    for (int r = (0); r < (rows); ++r)\n      cout << grid[r] << endl;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e6 + 5;\n\nint main() {\n  int t, d, n, k, s;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    double maxSpeed;\n    cin >> d >> n;\n    for (int i = (0); i < (n); ++i) {\n      cin >> k >> s;\n      double speed = d \/ (double(d - k) \/ s);\n      if (!i || speed < maxSpeed)\n        maxSpeed = speed;\n    }\n    printf(\"Case #%d: %.8f\\n\", caseNr, maxSpeed);\n    \/\/\t\tcout << \"Case #\" << caseNr << \": \" << setprecimaxSpeed << endl;\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e2;\n\nenum { R, O, Y, G, B, V };\nvector<char> res;\n\nbool solve(int r, int y, int b) {\n  int mx = max(r, max(y, b));\n  \/\/\tD(mx);\n  if (!r && !y && !b) {\n    return res.back() != res[0];\n  }\n  if (r && mx == r && res.back() != 'R') {\n    res.push_back('R');\n    if (solve(r - 1, y, b))\n      return true;\n    res.pop_back();\n  }\n  if (y && mx == y && res.back() != 'Y') {\n    res.push_back('Y');\n    if (solve(r, y - 1, b))\n      return true;\n    res.pop_back();\n  }\n  if (b && mx == b && res.back() != 'B') {\n    res.push_back('B');\n    if (solve(r, y, b - 1))\n      return true;\n    res.pop_back();\n  }\n  if (r && mx != r && res.back() != 'R') {\n    res.push_back('R');\n    if (solve(r - 1, y, b))\n      return true;\n    res.pop_back();\n  }\n  if (y && mx != y && res.back() != 'Y') {\n    res.push_back('Y');\n    if (solve(r, y - 1, b))\n      return true;\n    res.pop_back();\n  }\n  if (b && mx != b && res.back() != 'B') {\n    res.push_back('B');\n    if (solve(r, y, b - 1))\n      return true;\n    res.pop_back();\n  }\n  return false;\n}\n\nint main() {\n  int t, n, r, o, y, g, b, v;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    cout << \"Case #\" << caseNr << \": \";\n    int mx = max(r, max(y, b));\n    if (mx > r + y + b - mx) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    res.clear();\n    if (mx == r) {\n      res.push_back('R');\n      --r;\n    } else if (mx == y) {\n      res.push_back('Y');\n      --y;\n    } else if (mx == b) {\n      res.push_back('B');\n      --b;\n    }\n    if (!solve(r, y, b)) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    } else {\n      for (char c : res)\n        cout << c;\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Manro","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<vi> Matrix;\n\nconst int INF = 1e9 + 7;\nconst double PI = acos(-1);\nconst double EPS = 1e-9;\n\nconst int N = 1e2 + 5;\n\nii cities[N];\ndouble dist[N][N];\n\nint main() {\n  int t, n, e, s, d, u, v, q;\n  cin >> t;\n\n  for (int caseNr = (1); caseNr < (t + 1); ++caseNr) {\n    cout << \"Case #\" << caseNr << \":\";\n    cin >> n >> q;\n    for (int i = (0); i < (n); ++i) {\n      cin >> cities[i].first >> cities[i].second;\n    }\n    for (int i = (0); i < (n); ++i) {\n      for (int j = (0); j < (n); ++j) {\n        cin >> dist[i][j];\n        if (dist[i][j] < 0)\n          dist[i][j] = 1e18;\n      }\n    }\n    for (int i = (0); i < (n); ++i)\n      dist[i][i] = 0;\n    for (int k = (0); k < (n); ++k)\n      for (int i = (0); i < (n); ++i)\n        for (int j = (0); j < (n); ++j)\n          dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n    double time[N] = {0};\n    for (int i = (1); i < (N); ++i)\n      time[i] = 1e18;\n    for (int u = (0); u < (n); ++u) {\n      for (int v = (u + 1); v < (n); ++v) {\n        if (dist[u][v] <= cities[u].first) {\n          time[v] = min(time[v], time[u] + dist[u][v] \/ cities[u].second);\n        }\n      }\n    }\n    for (int i = (0); i < (q); ++i) {\n      cin >> u >> v;\n      printf(\" %.8f\", time[v - 1]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\n\/\/ algo: pega o menor -> prefixo = ele;\n\/\/ 2 1 \/\/ prefixo = ao menor, sufixo =9;\nstring solve() {\n  string s;\n  cin >> s;\n  for (int k = 0; k < 1000; k++) {\n    for (int i = 1; i < s.size(); i++) {\n      if (s[i] < s[i - 1]) {\n        for (int j = i - 1; j >= 0; j--) {\n          if (s[j] == '0')\n            s[j] = '9';\n          else {\n            s[j]--;\n            break;\n          }\n        }\n        for (int j = i; j < s.size(); j++)\n          s[j] = '9';\n      }\n    }\n  }\n  string r;\n  if (s[0] == '0') {\n    for (int i = 1; i < s.size(); i++)\n      r.push_back('9');\n  } else\n    r = s;\n  return r;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    cout << solve() << endl;\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nll solvemax(ll b, ll e, ll k) {\n  ll mid = (b + e) \/ 2ll;\n  if (k == 0)\n    return LINF;\n  if (k == 1)\n    return max(e - mid - 1, mid - b - 1);\n  k--;\n  return min(solvemax(b, mid, k \/ 2), solvemax(mid, e, (k + 1) \/ 2ll));\n}\n\nll solvemin(ll b, ll e, ll k) {\n  ll mid = (b + e) \/ 2;\n  if (k == 0)\n    return LINF;\n  if (k == 1)\n    return min(e - mid - 1, mid - b - 1);\n  k--;\n  return min(solvemin(b, mid, k \/ 2), solvemin(mid, e, (k + 1) \/ 2ll));\n}\n\nvoid solve() {\n  ll n, k;\n  cin >> n >> k;\n  cout << solvemax(0, n + 1, k) << \" \" << solvemin(0, n + 1, k) << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nvoid arruma(int idx, string &s, int n) {\n  if (idx + n > s.size())\n    return;\n  for (int i = idx; i < idx + n; i++) {\n    if (s[i] == '-')\n      s[i] = '+';\n    else\n      s[i] = '-';\n  }\n}\nint solve() {\n  string s;\n  int n;\n  cin >> s >> n;\n  int r = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '-') {\n      arruma(i, s, n);\n      r++;\n    }\n  }\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '-')\n      r = -1;\n  }\n  return r;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    int r = solve();\n    if (r == -1)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << r << endl;\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nconst int N = 50;\nint v[3], pack[10][10];\nclass MaxMatch {\n  vi graph[N];\n  int match[N], us[N];\n\npublic:\n  MaxMatch(){};\n  void addEdge(int u, int v) { graph[u].push_back(v); }\n  int dfs(int u) {\n    if (us[u])\n      return 0;\n    us[u] = 1;\n    for (int v : graph[u]) {\n      if (match[v] == -1 or (dfs(match[v]))) {\n        match[v] = u;\n        return 1;\n      }\n    }\n    return 0;\n  }\n  int maxMatch(int n) {\n    memset(match, -1, sizeof(match));\n    int ret = 0;\n    for (int i = 0; i < n; i++) {\n      memset(us, 0, sizeof(us));\n      ret += dfs(i);\n    }\n    return ret;\n  }\n};\n\nll inf(ll x) { return (9ll * x + 9) \/ 10ll; }\nll sup(ll x) { return (11ll * x) \/ 10ll; }\nint quantos(int x, int y) {\n  for (ll i = 1; i <= 1e6; i++) {\n    if (x >= inf(v[0] * i) and x <= sup(v[0] * i)) {\n      if (y >= inf(v[1] * i) and y <= sup(v[1] * i))\n        return 1;\n    }\n  }\n  return 0;\n}\nint quantos(int x) {\n  for (ll i = 1; i <= 1e6; i++) {\n    if (x >= inf(v[0] * i) and x <= sup(v[0] * i)) {\n      return 1;\n    }\n  }\n  return 0;\n}\nvoid solve() {\n  int n, p;\n  cin >> n >> p;\n  for (int i = 0; i < n; i++)\n    cin >> v[i];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++)\n      cin >> pack[i][j];\n  if (n == 1) {\n    int r = 0;\n    for (int j = 0; j < p; j++) {\n      r += quantos(pack[0][j]);\n    }\n    printf(\"%d\\n\", r);\n    return;\n  } else if (n == 2) {\n    MaxMatch g;\n    for (int j = 0; j < p; j++)\n      for (int k = 0; k < p; k++)\n        if (quantos(pack[0][j], pack[1][k]))\n          g.addEdge(j, p + k);\n\n    int r = g.maxMatch(p);\n    printf(\"%d\\n\", r);\n  }\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nchar tab[30][30];\nint n, m;\nvoid preenche_cima(int x, int y) {\n  for (int i = x - 1; i >= 0; i--) {\n    if (tab[i][y] == '?') {\n      tab[i][y] = tab[x][y];\n    } else\n      break;\n  }\n}\nvoid preenche_baixo(int x, int y) {\n  for (int i = x + 1; i < n; i++) {\n    if (tab[i][y] == '?') {\n      tab[i][y] = tab[x][y];\n    } else\n      break;\n  }\n}\nvoid process() {\n  for (int j = 0; j < m; j++)\n    for (int i = 0; i < n; i++)\n      if (tab[i][j] != '?') {\n        preenche_cima(i, j);\n        preenche_baixo(i, j);\n      }\n  char last = '0';\n  int poe = 0;\n  for (int j = 0; j < m; j++) {\n    if (tab[0][j] == '?') {\n      if (last == '0') {\n        continue;\n      } else {\n        for (int i = 0; i < n; i++)\n          tab[i][j] = tab[i][j - 1];\n      }\n    } else {\n      if (last == '0') {\n        for (int i = 0; i < n; i++)\n          for (int k = 0; k < j; k++)\n            tab[i][k] = tab[i][j];\n      }\n      last = tab[0][j];\n    }\n  }\n\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cout << tab[i][j];\n    }\n    cout << endl;\n  }\n}\nvoid solve() {\n  cin >> n >> m;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++)\n      cin >> tab[i][j];\n  process();\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \":\" << endl;\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nvii v;\nint d, n;\nld simula() {\n  ld taux = 0;\n  for (ii x : v) {\n    ld t2 = (d - x.first) \/ (double)x.second;\n    taux = max(t2, taux);\n  }\n  return d \/ taux;\n}\nld solve() {\n  scanf(\"%d%d\", &d, &n);\n  v.clear();\n  for (int i = 0; i < n; i++) {\n    int k, d;\n    scanf(\"%d%d\", &k, &d);\n    v.push_back(make_pair(k, d));\n  }\n  return simula();\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    cout << fixed << setprecision(6);\n    cout << solve() << endl;\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nint v[7], n;\nint resp[1010];\n\/\/ 0 red 1 yellow 2 blue\nint qtdaux[3], qtd[3];\nint pegamaior(int naopode, int b) {\n  int aux = 0;\n  int ret = 0;\n  for (int i = 0; i < 3; i++) {\n    if (i == naopode)\n      continue;\n    if (aux < qtd[i]) {\n      aux = qtd[i];\n      ret = i;\n    } else if (aux == qtd[i] and aux > 0 and i == b) {\n      ret = i;\n    }\n  }\n  if (aux == 0)\n    return -1;\n  return ret;\n}\nbool simula(int x) {\n  qtd[0] = qtdaux[0];\n  qtd[1] = qtdaux[1];\n  qtd[2] = qtdaux[2];\n  memset(resp, -1, sizeof(resp));\n  resp[0] = x;\n  qtd[x]--;\n  for (int i = 1; i < n; i++) {\n    int y = pegamaior(resp[i - 1], x);\n    if (y == -1)\n      return 0;\n    resp[i] = y;\n    qtd[y]--;\n  }\n  return resp[0] != resp[n - 1];\n}\nvoid printaresp() {\n  for (int i = 0; i < n; i++) {\n    if (resp[i] == 0)\n      cout << \"R\";\n    else if (resp[i] == 1)\n      cout << \"Y\";\n    else\n      cout << \"B\";\n  }\n  cout << endl;\n}\nvoid solve() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < 6; i++)\n    scanf(\"%d\", &v[i]);\n  qtdaux[0] = v[0];\n  qtdaux[1] = v[2];\n  qtdaux[2] = v[4];\n  for (int i = 0; i < 3; i++) {\n    if (qtdaux[i] > 0) {\n      bool x = simula(i);\n      if (x) {\n        printaresp();\n        return;\n      }\n    }\n  }\n  cout << \"IMPOSSIBLE\" << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"marcospqf","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long int ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nconst int INF = 0x3f3f3f3f;\nconst ll LINF = 0x3f3f3f3f3f3f3f3fll;\nconst ld pi = acos(-1);\nconst int MOD = 1e9 + 9;\nint n;\nll dist[110], vel[110], d[110][110];\nld resp[110];\ndouble graph[110][110];\nld dij(int b, int e) {\n  for (int i = 0; i < 110; i++)\n    resp[i] = LINF;\n  priority_queue<pair<double, int>, vector<pair<double, int>>,\n                 greater<pair<double, int>>>\n      pq;\n  resp[b] = 0;\n  pq.push(make_pair(0, b));\n  while (!pq.empty()) {\n    pair<double, int> topo = pq.top();\n    pq.pop();\n    int u = topo.second;\n    double cost = topo.first;\n    for (int v = 1; v <= n; v++) {\n      if (v == u)\n        continue;\n      if (graph[u][v] == -1)\n        continue;\n      if (resp[v] > resp[u] + graph[u][v] + 1e-9) {\n        resp[v] = resp[u] + graph[u][v];\n        pq.push(make_pair(resp[v], v));\n      }\n    }\n  }\n  return resp[e];\n}\nvoid solve() {\n  int q;\n  cin >> n >> q;\n  for (int i = 1; i <= n; i++)\n    cin >> dist[i] >> vel[i];\n\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      cin >> d[i][j];\n\n  for (int k = 1; k <= n; k++)\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        if (d[i][k] == -1 or d[k][j] == -1)\n          continue;\n\n        if (d[i][j] > d[i][k] + d[k][j])\n          d[i][j] = d[i][k] + d[k][j];\n\n        if (d[i][j] == -1)\n          d[i][j] = d[i][k] + d[k][j];\n      }\n\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      if (d[i][j] > dist[i] or d[i][j] == -1)\n        graph[i][j] = -1;\n      else\n        graph[i][j] = d[i][j] \/ (double)vel[i];\n\n  cout << fixed << setprecision(10);\n  \/*\tfor(int i=1;i<=n;i++){\n                  for(int j=1;j<=n;j++){\n                          cout<<graph[i][j]<<\" \";\n                  }\n                  cout<<endl;\n          }*\/\n\n  for (int i = 0; i < q; i++) {\n    int b, e;\n    scanf(\"%d%d\", &b, &e);\n    cout << dij(b, e) << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <iomanip>\n#include <istream>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <set>\n#include <sstream>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      string s;\n      in >> s;\n      int n = s.size();\n      for (;;) {\n        int i = 0;\n        while (i + 1 < n && s[i] <= s[i + 1])\n          ++i;\n        if (i + 1 == n)\n          break;\n        --s[i];\n        for (++i; i < n; ++i)\n          s[i] = '9';\n      }\n\n      while (s[0] == '0')\n        s = s.substr(1);\n      out << \"Case #\" << test << \": \" << s << \"\\n\";\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <istream>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <set>\n#include <sstream>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nusing ull = unsigned long long;\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      ull n, k;\n      in >> n >> k;\n      auto p = solve(n, k);\n      out << \"Case #\" << test << \": \" << p.second << \" \" << p.first << \"\\n\";\n    }\n  }\n\n  pair<ull, ull> solve(ull n, ull k) {\n    map<ull, ull, greater<ull>> q;\n    q[n] = 1;\n    for (;;) {\n      auto it = q.begin();\n      ull d = it->first - 1;\n      ull a = d \/ 2, b = d - a;\n      ull cnt = it->second;\n      q.erase(it);\n      if (cnt >= k) {\n        return {a, b};\n      }\n      k -= cnt;\n      if (a)\n        q[a] += cnt;\n      if (b)\n        q[b] += cnt;\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <iomanip>\n#include <istream>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <set>\n#include <sstream>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      out << \"Case #\" << test << \": \";\n      string s;\n      int K;\n      in >> s >> K;\n      int n = s.length();\n      int res = 0, i;\n      for (i = 0; i + K <= n; ++i)\n        if (s[i] == '-') {\n          ++res;\n          for (int j = i; j < i + K; ++j) {\n            s[j] = s[j] == '+' ? '-' : '+';\n          }\n        }\n      for (; i < n; ++i)\n        if (s[i] == '-')\n          res = -1;\n      if (res < 0)\n        out << \"IMPOSSIBLE\";\n      else\n        out << res;\n      out << \"\\n\";\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <iomanip>\n#include <istream>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <set>\n#include <sstream>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\n#include <random>\n\n#include <complex>\n\n#include <functional>\n\n#include <cstdarg>\n#include <cstdio>\n\n#include <stack>\n\n#include <limits>\n\n#include <tuple>\n\nint iceil(int a, int b) { return (a + b - 1) \/ b; }\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      int n, p;\n      in >> n >> p;\n      vector<int> r(n);\n      for (int &i : r)\n        in >> i;\n      vector<vector<int>> q(n, vector<int>(p));\n      for (auto &v : q)\n        for (int &i : v)\n          in >> i;\n\n      vector<int> perm(p);\n      int res = 0;\n      iota(perm.begin(), perm.end(), 0);\n      do {\n        int cur = 0;\n        for (int i = 0; i < p; ++i) {\n          int p1 = q[0][i];\n          int r1 = r[0];\n          int up = 10 * p1 \/ (9 * r1);\n          int down = iceil(10 * p1, 11 * r1);\n          if (n == 2) {\n            int p2 = q[1][perm[i]];\n            int r2 = r[1];\n            up = min(up, 10 * p2 \/ (9 * r2));\n            down = max(down, iceil(10 * p2, 11 * r2));\n          }\n          if (up >= down && up >= 1)\n            ++cur;\n        }\n        res = max(res, cur);\n      } while (next_permutation(perm.begin(), perm.end()));\n      out << \"Case #\" << test << \": \" << res << endl;\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n\n#include <cstdlib>\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <complex>\n#include <cstdarg>\n#include <cstdio>\n#include <functional>\n#include <iomanip>\n#include <istream>\n#include <limits>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nnamespace caide {\n\ntemplate <typename C> int SZ(const C &c) { return (int)c.size(); }\n\n} \/\/ namespace caide\n\nusing namespace caide;\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n\n      int R, C;\n      in >> R >> C;\n      vector<string> grid(R);\n      for (auto &s : grid)\n        in >> s;\n\n      fill(grid);\n      out << \"Case #\" << test << \":\" << endl;\n      for (const string &s : grid) {\n        out << s << endl;\n      }\n    }\n  }\n\n  void fill(vector<string> &grid) {\n    int maxi = 0;\n    for (int i = 0; i < SZ(grid); ++i)\n      for (char c : grid[i])\n        if (c != '?')\n          maxi = i;\n    for (int i = 0; i < SZ(grid); ++i)\n      for (int j = 0; j < SZ(grid[i]); ++j)\n        if (grid[i][j] != '?') {\n          int il = i, jl = j, ir = i, jr = j;\n          while (il > 0 && all(grid, il - 1, ir, jl, jr, grid[i][j]))\n            --il;\n          while (jl > 0 && all(grid, il, ir, jl - 1, jr, grid[i][j]))\n            --jl;\n          if (i == maxi)\n            while (ir < SZ(grid) - 1 &&\n                   all(grid, il, ir + 1, jl, jr, grid[i][j]))\n              ++ir;\n          while (jr < SZ(grid[i]) - 1 &&\n                 all(grid, il, ir, jl, jr + 1, grid[i][j]))\n            ++jr;\n          fill(grid, il, ir, jl, jr, grid[i][j]);\n        }\n    for (auto &s : grid)\n      for (char c : s)\n        if (c == '?') {\n          throw std::logic_error{\"...\"};\n        }\n  }\n  bool all(const vector<string> &grid, int il, int ir, int jl, int jr, char c) {\n    for (int i = il; i <= ir; ++i)\n      for (int j = jl; j <= jr; ++j)\n        if (grid[i][j] != c && grid[i][j] != '?')\n          return false;\n\n    return true;\n  }\n  void fill(vector<string> &grid, int il, int ir, int jl, int jr, char c) {\n    for (int i = il; i <= ir; ++i)\n      for (int j = jl; j <= jr; ++j)\n        grid[i][j] = c;\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n\n#include <cstdlib>\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <complex>\n#include <cstdarg>\n#include <cstdio>\n#include <functional>\n#include <iomanip>\n#include <istream>\n#include <limits>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      double D;\n      int n;\n      in >> D >> n;\n      vector<double> K(n), S(n);\n      double res = std::numeric_limits<double>::max();\n      for (int i = 0; i < n; ++i) {\n        in >> K[i] >> S[i];\n        res = min(res, D \/ (D - K[i]) * S[i]);\n      }\n\n      out << \"Case #\" << test << \": \" << res << \"\\n\";\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n\n#include <cstdlib>\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <complex>\n#include <cstdarg>\n#include <cstdio>\n#include <functional>\n#include <iomanip>\n#include <istream>\n#include <limits>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nclass Solution {\npublic:\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      int N, R, O, Y, G, B, V;\n      in >> N >> R >> O >> Y >> G >> B >> V;\n      out << \"Case #\" << test << \": \" << solve(N, R, O, Y, G, B, V) << \"\\n\";\n    }\n  }\n\n  string solve(int N, int R, int O, int Y, int G, int B, int V) {\n    if (O || G || V)\n      return \"\";\n    if (2 * R > N || 2 * Y > N || 2 * B > N)\n      return \"IMPOSSIBLE\";\n    string s(N, '?');\n    vector<int> cnt{R, Y, B};\n    string col = \"RYB\";\n    int j = 0;\n    if (cnt[1] > cnt[j])\n      j = 1;\n    if (cnt[2] > cnt[j])\n      j = 2;\n    for (int i = 0; i < N; ++i) {\n      int k = (j + 1) % 3;\n      if (cnt[k] > cnt[j])\n        j = k;\n      --cnt[j];\n      s[i] = col[j];\n      j = (j + 1) % 3;\n    }\n\n    if (s.front() == s.back()) {\n      swap(s[0], s[1]);\n      int i = 2;\n      while (i < N && s[i] == s[i - 1]) {\n        swap(s[i], s[(i + 1) % N]);\n        i += 2;\n      }\n    }\n\n    for (int i = 0; i < N; ++i)\n      if (s[i] == '?' || s[i] == s[(i + 1) % N])\n        throw logic_error{\"...\"};\n\n    return s;\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n\n#include <cstdlib>\n"}
{"target":"MaxKalininMS","func":"#include <algorithm>\n#include <complex>\n#include <cstdarg>\n#include <cstdio>\n#include <functional>\n#include <iomanip>\n#include <istream>\n#include <limits>\n#include <map>\n#include <numeric>\n#include <ostream>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nnamespace caide {\n\ntypedef long long ll;\n\ntemplate <typename T> vector<vector<T>> makeVector(int n, int m) {\n  return vector<vector<T>>(n, vector<T>(m));\n}\n\nstruct GraphEdge {\n  int id, to;\n};\n\nclass GraphV {\npublic:\n  explicit GraphV(int numVertices = 0);\n  GraphV(const GraphV &) = default;\n\n  const std::vector<GraphEdge> &outEdges(int fromVertex) const;\n\n  int numVertices() const;\n\n  int addEdge(int from, int to);\n\nprivate:\n  std::vector<std::vector<GraphEdge>> edges;\n  int edgeId;\n};\n\ntemplate <typename Graph, typename D>\nstd::vector<D> dijkstra(const Graph &g, const std::vector<D> &len,\n                        const int source, const int target = -1,\n                        const std::vector<bool> *haveEdge = nullptr,\n                        const std::vector<D> *potentials = nullptr,\n                        std::vector<int> *prevVertex = nullptr,\n                        std::vector<int> *prevEdge = nullptr);\n\n} \/\/ namespace caide\n\nnamespace caide {\n\ntemplate <typename Graph, typename D>\nstd::vector<D> dijkstra(const Graph &g, const std::vector<D> &len,\n                        const int source, const int target \/*= -1*\/,\n                        const std::vector<bool> *haveEdge \/*= nullptr*\/,\n                        const std::vector<D> *potentials \/*= nullptr*\/,\n                        std::vector<int> *prevVertex \/*= nullptr*\/,\n                        std::vector<int> *prevEdge \/*= nullptr*\/) {\n  static const D INF = std::numeric_limits<D>::max();\n\n  const int n = g.numVertices();\n\n  std::vector<D> zeros(n, (D)0);\n  const std::vector<D> &h = potentials ? *potentials : zeros;\n\n  if (prevVertex) {\n    prevVertex->clear();\n    prevVertex->resize(n, -1);\n  }\n\n  if (prevEdge) {\n    prevEdge->clear();\n    prevEdge->resize(n, -1);\n  }\n\n  std::vector<D> d(n, INF);\n  std::set<std::pair<D, int>> queue;\n\n  d[source] = 0;\n  queue.insert(std::make_pair((D)0, source));\n\n  while (!queue.empty()) {\n    std::pair<D, int> p = *queue.begin();\n    queue.erase(queue.begin());\n    const int s = p.second;\n    if (s == target)\n      break;\n    for (const auto &edge : g.outEdges(s)) {\n      const int e = edge.id;\n      if (haveEdge && !((*haveEdge)[e]))\n        continue;\n      const int t = edge.to;\n      if (d[t] > d[s] + len[e] + h[t] - h[s]) {\n        queue.erase(std::make_pair(d[t], t));\n        d[t] = d[s] + len[e] + h[t] - h[s];\n        queue.insert(std::make_pair(d[t], t));\n        if (prevVertex)\n          (*prevVertex)[t] = s;\n        if (prevEdge)\n          (*prevEdge)[t] = e;\n      }\n    }\n  }\n\n  return d;\n}\n\n} \/\/ namespace caide\n\nusing namespace caide;\n\n\/\/ Powered by caide (code generator, tester, and library code inliner)\n\nclass Solution {\npublic:\n  const ll INF = (ll)1e12;\n  void solve(std::istream &in, std::ostream &out) {\n    int T;\n    in >> T;\n    for (int test = 1; test <= T; ++test) {\n      int N, Q;\n      in >> N >> Q;\n      vector<ll> hdist(N), hspeed(N);\n      for (int i = 0; i < N; ++i)\n        in >> hdist[i] >> hspeed[i];\n      auto d = makeVector<ll>(N, N);\n      for (int i = 0; i < N; ++i)\n        for (int j = 0; j < N; ++j) {\n          in >> d[i][j];\n          if (d[i][j] == -1)\n            d[i][j] = INF;\n        }\n      for (int i = 0; i < N; ++i)\n        d[i][i] = 0;\n\n      for (int k = 0; k < N; ++k)\n        for (int i = 0; i < N; ++i)\n          for (int j = 0; j < N; ++j)\n            d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n\n      GraphV g(N * N);\n      vector<double> edge;\n      for (int city = 0; city < N; ++city)\n        for (int horse = 0; horse < N; ++horse) {\n          ll curDist = d[horse][city];\n          if (curDist > hdist[horse])\n            continue;\n\n          int vcur = city * N + horse;\n          if (horse != city) {\n            g.addEdge(vcur, city * N + city);\n            edge.push_back(0);\n          }\n\n          for (int i = 0; i < N; ++i)\n            if (d[city][i] != INF && d[city][i] + curDist <= hdist[horse]) {\n              g.addEdge(vcur, i * N + horse);\n              edge.push_back((double)d[city][i] \/ hspeed[horse]);\n            }\n        }\n\n      out << \"Case #\" << test << \":\";\n      while (Q--) {\n        int u, v;\n        in >> u >> v;\n        --u;\n        --v;\n        auto dist = dijkstra(g, edge, u * N + u);\n        double res = numeric_limits<double>::max();\n        for (int i = 0; i < N; ++i)\n          res = min(res, dist[v * N + i]);\n        out << \" \" << res;\n      }\n      out << \"\\n\";\n    }\n  }\n};\n\nvoid solve(std::istream &in, std::ostream &out) {\n  out << std::setprecision(12);\n  Solution solution;\n  solution.solve(in, out);\n}\n\n#include <fstream>\n#include <iostream>\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  istream &in = cin;\n\n  ostream &out = cout;\n\n  solve(in, out);\n  return 0;\n}\n\n#include <cstdlib>\n\nnamespace caide {\n\nGraphV::GraphV(int numVertices) : edges(numVertices), edgeId(0) {}\n\nconst vector<GraphEdge> &GraphV::outEdges(int fromVertex) const {\n  return edges[fromVertex];\n}\n\nint GraphV::numVertices() const { return (int)edges.size(); }\n\nint GraphV::addEdge(int from, int to) {\n  edges[from].push_back({edgeId, to});\n  return edgeId++;\n}\n\n} \/\/ namespace caide\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nstring n, m;\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    cin >> n;\n    m = n;\n    reverse(n.begin(), n.end());\n    bool flag = 1;\n    for (int i = 1; i < n.length() && flag; i++)\n      if (n[i] > n[i - 1])\n        flag = 0;\n    if (flag) {\n      cout << m << endl;\n      continue;\n    }\n    int j = n.length() - 1;\n    for (int i = j; i > 0; i--) {\n      if (n[i] < n[i - 1])\n        j = i - 1;\n      if (n[i] > n[i - 1])\n        break;\n    }\n    n[j]--;\n    if (j == n.length() - 1 && n[j] == '0') {\n      for (int i = 1; i < n.length(); i++)\n        putchar('9');\n      puts(\"\");\n      continue;\n    }\n    for (int i = n.length() - 1; i >= j; i--)\n      cout << n[i];\n    for (int i = j - 1; i >= 0; i--)\n      putchar('9');\n    ;\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\npriority_queue<LL, vector<LL>, less<LL>> q;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    LL n, k;\n    cin >> n >> k;\n    while (!q.empty())\n      q.pop();\n    q.push(n);\n    LL ans1 = n, ans2 = n;\n    while (k--) {\n      int cur = q.top();\n      q.pop();\n      cur--;\n      if (cur & 1)\n        ans1 = cur \/ 2 + 1, ans2 = cur \/ 2;\n      else\n        ans1 = ans2 = cur \/ 2;\n      q.push(ans1), q.push(ans2);\n    }\n    cout << ans1 << \" \" << ans2 << endl;\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\nbool ok(string s) {\n  for (int i = 0; i < s.length(); i++)\n    if (s[i] == '-')\n      return false;\n  return true;\n}\nstring s;\nint n, m;\nqueue<pair<string, int>> q;\nmap<pair<string, int>, bool> vis;\nint bfs() {\n  while (!q.empty())\n    q.pop();\n  vis.clear();\n  if (ok(s))\n    return 0;\n  q.push(make_pair(s, 0));\n  while (!q.empty()) {\n    pair<string, int> cur = q.front();\n    q.pop();\n    for (int i = 0; i <= n - m; i++) {\n      string tmp = cur.first;\n      string str = tmp.substr(i, m);\n      \/\/            cout<<tmp<<\" \"<<str<<\" \"<<vis[make_pair(tmp, i)]<<endl;\n      if (ok(str) || vis[make_pair(tmp, i)])\n        continue;\n      vis[make_pair(tmp, i)] = 1;\n      for (int j = 0; j < m; j++)\n        tmp[i + j] = (tmp[i + j] == '-' ? '+' : '-');\n      if (ok(tmp))\n        return cur.second + 1;\n      q.push(make_pair(tmp, cur.second + 1));\n    }\n  }\n  return -1;\n}\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"A-small-attempt1.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    cin >> s >> m;\n    n = s.length();\n    int ans = bfs();\n    if (ans == -1)\n      puts(\"IMPOSSIBLE\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e6 + 5;\nconst double EPS = 1e-3;\nint R[55];\nint q[55][55];\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    int n, p;\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &R[i]);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        scanf(\"%d\", &q[i][j]);\n    int ans = 0;\n    for (int i = 0; i < p; i++) {\n      int l = INT_MAX, r = 0;\n      for (int j = 0; j < n; j++) {\n        int a = ceil(q[j][i] \/ (R[j] * 0.9));\n        int b = ceil(q[j][i] \/ (R[j] * 1.1));\n        if ((int)(a * R[j] * 0.9) > q[j][i])\n          a--;\n        if ((int)(b * R[j] * 1.1) < q[j][i])\n          b--;\n        if (a < b || a <= 0 || b <= 0) {\n          l = INT_MAX, r = 0;\n          break;\n        }\n        if (l != INT_MAX && (r < b || l > a)) {\n          l = INT_MAX, r = 0;\n          break;\n        }\n        l = min(l, a), l = min(l, b);\n        r = max(r, a), r = max(r, b);\n      }\n      if (l != INT_MAX && r >= l)\n        ans++;\n    }\n\n    int ans2 = 0;\n    for (int i = 0; i < n; i++)\n      sort(q[i], q[i] + p);\n    for (int i = 0; i < p; i++) {\n      int l = INT_MAX, r = 0;\n      for (int j = 0; j < n; j++) {\n        int a = ceil(q[j][i] \/ (R[j] * 0.9));\n        int b = ceil(q[j][i] \/ (R[j] * 1.1));\n        if ((int)(a * R[j] * 0.9) > q[j][i])\n          a--;\n        if ((int)(b * R[j] * 1.1) < q[j][i])\n          b--;\n        if (a < b || a <= 0 || b <= 0) {\n          l = INT_MAX, r = 0;\n          break;\n        }\n        if (l != INT_MAX && (r < b || l > a)) {\n          l = INT_MAX, r = 0;\n          break;\n        }\n        l = min(l, a), l = min(l, b);\n        r = max(r, a), r = max(r, b);\n      }\n      if (l != INT_MAX && r >= l)\n        ans2++;\n    }\n    printf(\"%d\\n\", max(ans, ans2));\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e6 + 5;\n\nchar mp[30][30];\nchar ans[30];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d:\\n\", ca++);\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++)\n        cin >> mp[i][j];\n    memset(ans, 0, sizeof(ans));\n    for (int i = 0; i < n; i++) {\n      int j = 0;\n      while (j < m && mp[i][j] == '?')\n        j++;\n      if (j < m) {\n        for (int k = 0; k < j; k++)\n          mp[i][k] = mp[i][j];\n        for (int k = j + 1; k < m; k++)\n          if (mp[i][k] == '?')\n            mp[i][k] = mp[i][k - 1];\n      } else\n        ans[i] = 1;\n    }\n    int i = 0;\n    while (ans[i])\n      i++;\n    for (int j = 0; j < i; j++)\n      strcpy(mp[j], mp[i]);\n    for (int j = i + 1; j < n; j++)\n      if (ans[j])\n        strcpy(mp[j], mp[j - 1]);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++)\n        putchar(mp[i][j]);\n      \/\/            if(i!=n-1)\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e4 + 5;\nconst double eps = 1e-3;\nconst int INF = 1e9;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    int n, d;\n    scanf(\"%d%d\", &d, &n);\n    double maxn = 0;\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      scanf(\"%d%d\", &k, &s);\n      maxn = max(maxn, (d - k) * 1.0 \/ s);\n    }\n    printf(\"%.6f\\n\", d * 1.0 \/ maxn);\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e4 + 5;\nconst double eps = 1e-3;\nconst int INF = 1e9;\n\npriority_queue<pair<int, int>> q;\nint tmp[1010];\nstring s = \"RYB\";\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    int n, r, o, y, g, b, v;\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    if (b <= o - 1 || r <= g - 1 || y <= v - 1) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    string anso = \"\";\n    while (o) {\n      o--, b--;\n      n -= 2;\n      anso += \"BO\";\n    }\n    string ansg = \"\";\n    while (g) {\n      g--, r--;\n      n -= 2;\n      ansg += \"RG\";\n    }\n    string ansv = \"\";\n    while (v) {\n      v--, y--;\n      n -= 2;\n      ansv += \"YV\";\n    }\n    string ans = \"\";\n    if (anso != \"\" && ansg != \"\" && ansv != \"\") {\n      if (r < 1 || y < 1 || b < 1) {\n        puts(\"IMPOSSIBLE\");\n        continue;\n      }\n      ans = anso + \"B\" + ansg + \"R\" + ansv + \"Y\";\n    } else if (anso != \"\" && ansg != \"\") {\n      if (r < 1 || b < 1) {\n        puts(\"IMPOSSIBLE\");\n        continue;\n      }\n      ans = anso + \"B\" + ansg + \"R\";\n    } else if (anso != \"\" && ansv != \"\") {\n      if (y < 1 || b < 1) {\n        puts(\"IMPOSSIBLE\");\n        continue;\n      }\n      ans += anso + \"B\" + ansv + \"Y\";\n    } else if (ansg != \"\" && ansv != \"\") {\n      if (r < 1 || y < 1) {\n        puts(\"IMPOSSIBLE\");\n        continue;\n      }\n      ans += ansg + \"R\" + ansv + \"Y\";\n    } else\n      ans = anso + ansg + ansv;\n    if (n == 0)\n      cout << ans << endl;\n    else {\n      while (!q.empty())\n        q.pop();\n      if (r)\n        q.push({r, 1});\n      if (y)\n        q.push({y, 2});\n      if (b)\n        q.push({b, 3});\n      int f = 1, cnt = 1;\n      while (!q.empty() && f) {\n        pair<int, int> a = q.top(), c;\n        q.pop();\n        a.first--;\n        if (a.second == tmp[cnt - 1])\n          f = 0;\n        tmp[cnt++] = a.second;\n        if (!q.empty()) {\n          c = q.top();\n          q.pop();\n          c.first--;\n          tmp[cnt++] = c.second;\n        }\n        if (a.first)\n          q.push(a);\n        if (c.first)\n          q.push(c);\n      }\n      if (f && tmp[1] == tmp[n]) {\n        swap(tmp[n - 1], tmp[n]);\n        if (tmp[n - 2] == tmp[n - 1] || tmp[1] == tmp[n])\n          f = 0;\n      }\n      if (f)\n        for (int i = 1; i <= n; i++)\n          cout << s[tmp[i] - 1];\n      else\n        printf(\"IMPOSSIBLE\");\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"Melanie.Dong","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e4 + 5;\nconst double eps = 1e-3;\nconst LL INF = 1e18;\n\nint e[110], s[110], ans[110];\ndouble d[110][110], dp[110][110];\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int t, ca = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    printf(\"Case #%d: \", ca++);\n    int n, q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &e[i], &s[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        cin >> d[i][j];\n        if (d[i][j] == -1)\n          d[i][j] = INF;\n      }\n    for (int k = 1; k <= n; ++k)\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n          if (d[i][k] + d[k][j] < d[i][j])\n            d[i][j] = d[i][k] + d[k][j];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        if (d[i][j] <= e[i])\n          dp[i][j] = 1.0 * d[i][j] \/ s[i];\n        else\n          dp[i][j] = INF;\n    for (int k = 1; k <= n; ++k)\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n          if (dp[i][k] + dp[k][j] < dp[i][j])\n            dp[i][j] = dp[i][k] + dp[k][j];\n    while (q--) {\n      int l, r;\n      scanf(\"%d%d\", &l, &r);\n      printf(\"%.9f\", dp[l][r]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#include <complex>\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 1000;\n\nlong long ndig(int n) {\n  long long ret = 1;\n  while (--n) {\n    ret *= 10;\n  }\n  return ret;\n}\n\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long t = n;\n  int dig = 0;\n  int last = -1;\n  int lastd = 9;\n  while (t) {\n    dig++;\n    int cur = t % 10;\n    t \/= 10;\n    if (cur > lastd)\n      last = -2;\n    if (cur < lastd && last == -2) {\n      last = dig;\n    }\n    lastd = cur;\n  }\n  if (last != -1) {\n    if (last == -2)\n      last = dig;\n    else\n      last--;\n    long long t = ndig(last);\n    n -= n % t;\n    n--;\n  }\n  cout << n << endl;\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (int TI = 1; TI <= (int)(T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#include <complex>\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 1000;\n\npair<long long, long long> f[2][2];\n\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  int c = 0;\n  f[0][0].first = n;\n  f[0][0].second = 1;\n  f[0][1].first = f[0][1].second = 0;\n  while (1) {\n    if (f[c][0].second + f[c][1].second >= k) {\n      long long t = f[c][0].second >= k ? f[c][0].first : f[c][1].first;\n      t--;\n      long long ans1 = (t + 1) \/ 2;\n      long long ans2 = t \/ 2;\n      cout << ans1 << ' ' << ans2 << endl;\n      break;\n    }\n    k -= f[c][0].second + f[c][1].second;\n    memset(f[!c], 0, sizeof(f[!c]));\n    long long t1 = f[c][0].first - 1;\n    long long t2 = (t1 + 1) \/ 2;\n    long long t3 = t1 \/ 2;\n    f[!c][0] = pair<long long, long long>(t2, f[c][0].second);\n    if (t3 == t2) {\n      f[!c][0].second *= 2;\n    } else\n      f[!c][1] = pair<long long, long long>(t3, f[c][0].second);\n    if (f[c][1].second) {\n      t1 = f[c][1].first - 1;\n      t2 = (t1 + 1) \/ 2;\n      t3 = t1 \/ 2;\n      if (t2 == t3) {\n        f[!c][1].second += 2 * f[c][1].second;\n      } else {\n        f[!c][0].second += f[c][1].second;\n        f[!c][1] = pair<long long, long long>(t3, f[c][1].second);\n      }\n    }\n    c = !c;\n  }\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (int TI = 1; TI <= (int)(T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#include <complex>\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 1000;\n\nvoid solve() {\n  string str;\n  int k;\n  cin >> str >> k;\n  int n = str.size();\n  int ans = 0;\n  for (int i = 0; i < (int)(n - k + 1); ++i)\n    if (str[i] == '-') {\n      ans++;\n      for (int j = i + 1; j <= (int)(i + k - 1); ++j) {\n        if (str[j] == '-')\n          str[j] = '+';\n        else\n          str[j] = '-';\n      }\n    }\n  for (int i = n - k + 1; i <= (int)(n - 1); ++i)\n    if (str[i] == '-') {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  cout << ans << endl;\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (int TI = 1; TI <= (int)(T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#include <complex>\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 50;\n\nvector<pair<int, int>> a[N];\ndouble gram[N];\n\nvoid solve() {\n  int n, p;\n  cin >> n >> p;\n  for (int i = 0; i < (int)(n); ++i)\n    a[i].clear();\n  for (int i = 0; i < (int)(n); ++i)\n    cin >> gram[i];\n\n  for (int i = 0; i < (int)(n); ++i) {\n    double lo = gram[i] * 0.9;\n    double hi = gram[i] * 1.1;\n\n    for (int j = 0; j < (int)(p); ++j) {\n      double v;\n      cin >> v;\n      int t1 = floor(v \/ lo);\n      int t2 = ceil(v \/ hi);\n      if (t1 >= t2) {\n        \/\/ cout << \"t2 \" << t2 << \" t1 \" << t1 << endl;\n        a[i].push_back(pair<int, int>(t2, t1));\n        \/\/ cout << a[i].back().ft<<' '<<a[i].back().sd<< endl;\n      }\n    }\n    \/\/ rep(j,a[i].size())cout<<a[i][j].ft<<' '<<a[i][j].sd<<''\n\n    sort(a[i].begin(), a[i].end());\n    \/\/ for (auto e : a[i])cout << e.ft << ' ' << e.sd << \", \";\n    \/\/ cout << endl;\n  }\n\n  vector<int> vec;\n  for (auto e : a[0]) {\n    for (int i = e.first; i <= (int)(e.second); ++i)\n      vec.push_back(i);\n    \/\/ vec.push_back(e.ft);\n    \/\/ vec.push_back(e.sd);\n  }\n  sort(vec.begin(), vec.end());\n  int ans = 0;\n  for (auto e : vec) {\n    bool ok = 1;\n    for (int i = 0; i < (int)(n); ++i) {\n      bool fd = 0;\n      for (auto f : a[i]) {\n        if (f.first > e)\n          break;\n        if (f.first <= e && f.second >= e) {\n          fd = 1;\n          break;\n        }\n      }\n      if (!fd) {\n        ok = 0;\n        break;\n      }\n    }\n    if (ok) {\n      ans++;\n      for (int i = 0; i < (int)(n); ++i) {\n        for (auto &f : a[i]) {\n          if (f.first <= e && f.second >= e) {\n            f.first = f.second = 0;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  cout << ans << endl;\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (int TI = 1; TI <= (int)(T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#include <complex>\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 25;\n\nchar a[N][N];\nbool mk[N][N];\n\nvoid solve() {\n  int r, c;\n  cin >> r >> c;\n  for (int i = 0; i < (int)(r); ++i)\n    for (int j = 0; j < (int)(c); ++j)\n      cin >> a[i][j];\n  for (int i = 0; i < (int)(r); ++i)\n    for (int j = 0; j < (int)(c); ++j)\n      mk[i][j] = 0;\n  for (int i = 0; i < (int)(r); ++i)\n    for (int j = 0; j < (int)(c); ++j)\n      if (a[i][j] != '?' && !mk[i][j]) {\n        char ch = a[i][j];\n        int ci = j - 1;\n        while (ci >= 0 && a[i][ci] == '?')\n          mk[i][ci] = 1, a[i][ci--] = ch;\n        ci++;\n        int cj = j + 1;\n        while (cj < c && a[i][cj] == '?')\n          mk[i][cj] = 1, a[i][cj++] = ch;\n        cj--;\n        int ri = i - 1;\n        while (ri >= 0) {\n          bool ok = 1;\n          for (int jj = ci; jj <= (int)(cj); ++jj)\n            if (a[ri][jj] != '?') {\n              ok = 0;\n              break;\n            }\n          if (!ok)\n            break;\n          for (int jj = ci; jj <= (int)(cj); ++jj)\n            a[ri][jj] = ch, mk[ri][jj] = 1;\n          ri--;\n        }\n        ri = i + 1;\n        while (ri < r) {\n          bool ok = 1;\n          for (int jj = ci; jj <= (int)(cj); ++jj)\n            if (a[ri][jj] != '?') {\n              ok = 0;\n              break;\n            }\n          if (!ok)\n            break;\n          for (int jj = ci; jj <= (int)(cj); ++jj)\n            a[ri][jj] = ch, mk[ri][jj] = 1;\n          ri++;\n        }\n      }\n  cout << endl;\n  for (int i = 0; i < (int)(r); ++i) {\n    for (int j = 0; j < (int)(c); ++j)\n      cout << a[i][j];\n    cout << endl;\n  }\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (int TI = 1; TI <= (int)(T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 1000;\n\nvoid solve() {\n  double d, n;\n  cin >> d >> n;\n  double mx_time = 0;\n  for (long long i = 0; i < (n); ++i) {\n    double k, s;\n    cin >> k >> s;\n    Max(mx_time, (d - k) \/ s);\n  }\n  cout << setprecision(8) << d \/ mx_time << endl;\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (long long TI = 1; TI <= (T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst int inf = 1e9;\nconst int N = 1000;\n\nlong long a[6]; \/\/ R, O, Y, G, B, V\n                \/\/ R, B, Y\n\nvoid solve() {\n  long long n;\n  cin >> n;\n  for (long long i = 0; i < (6); ++i)\n    cin >> a[i];\n  for (long long i = 0; i < (6); ++i)\n    if (a[i] * 2 > n) {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  int nvar = 0;\n  for (long long i = 0; i < (6); ++i)\n    nvar += a[i] > 0;\n  if (a[1] && a[1] + (nvar > 2) > a[4]) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  if (a[3] && a[3] + (nvar > 2) > a[0]) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  if (a[5] && a[5] + (nvar > 2) > a[2]) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  string ans;\n  if (a[1]) {\n    for (long long it = 0; it < (a[1]); ++it) {\n      ans += \"BO\";\n      a[4]--;\n    }\n    if (nvar > 2) {\n      ans += \"B\";\n      a[4]--;\n    }\n  }\n  if (a[3]) {\n    for (long long it = 0; it < (a[3]); ++it) {\n      ans += \"RG\";\n      a[0]--;\n    }\n    if (nvar > 2) {\n      ans += \"R\";\n      a[0]--;\n    }\n  }\n  if (a[5]) {\n    for (long long it = 0; it < (a[5]); ++it) {\n      ans += \"YV\";\n      a[2]--;\n    }\n    if (nvar > 2) {\n      ans += \"Y\";\n      a[2]--;\n    }\n  }\n  a[1] = a[4];\n  n = a[0] + a[1] + a[2];\n  while (n > 0) {\n    char back = ans.empty() ? 'N' : ans.back();\n    char front = ans.empty() ? 'N' : ans.front();\n    if (back == 'R') {\n      if (a[1] > a[2])\n        ans += 'B', a[1]--;\n      else if (a[2] > a[1])\n        ans += 'Y', a[2]--;\n      else {\n        if (a[1] == 0) {\n          cout << \"IMPOSSIBLE\" << endl;\n          return;\n        }\n        if (front == 'B')\n          ans += 'B', a[1]--;\n        else\n          ans += 'Y', a[2]--;\n      }\n    }\n    if (back == 'B') {\n      if (a[0] > a[2])\n        ans += 'R', a[0]--;\n      else if (a[2] > a[0])\n        ans += 'Y', a[2]--;\n      else {\n        if (a[0] == 0) {\n          cout << \"IMPOSSIBLE\" << endl;\n          return;\n        }\n        if (front == 'R')\n          ans += 'R', a[0]--;\n        else\n          ans += 'Y', a[2]--;\n      }\n    }\n    if (back == 'Y') {\n      if (a[0] > a[1])\n        ans += 'R', a[0]--;\n      else if (a[1] > a[0])\n        ans += 'B', a[1]--;\n      else {\n        if (a[0] == 0) {\n          cout << \"IMPOSSIBLE\" << endl;\n          return;\n        }\n        if (front == 'R')\n          ans += 'R', a[0]--;\n        else\n          ans += 'B', a[1]--;\n      }\n    }\n    if (back == 'N') {\n      int best = 0;\n      if (a[1] > a[best])\n        best = 1;\n      if (a[2] > a[best])\n        best = 2;\n      if (best == 0)\n        ans += 'R', a[0]--;\n      else if (best == 1)\n        ans += 'B', a[1]--;\n      else\n        ans += 'Y', a[2]--;\n    }\n    n--;\n  }\n  if (ans.back() == ans.front()) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  cout << ans << endl;\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (long long TI = 1; TI <= (T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mengrao","func":"#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n\n#include <math.h>\nusing namespace std;\ntemplate <typename T1, typename T2> void Max(T1 &a, T2 b) { a = max(a, (T1)b); }\ntemplate <typename T1, typename T2> void Min(T1 &a, T2 b) { a = min(a, (T1)b); }\n\nconst double inf = 1e11;\nconst int N = 100;\n\ndouble d[N][N];\ndouble e[N], s[N];\ndouble memo[N][N];\ndouble dsum[N];\nlong long n;\n\ndouble go(int i, int horse) {\n  double &ret = memo[i][horse];\n  if (ret > 0)\n    return ret;\n  if (i == n - 1)\n    return 0;\n  ret = inf;\n  double horse_dis = dsum[i + 1] - dsum[horse];\n  if (e[horse] >= horse_dis) {\n    Min(ret, d[i][i + 1] \/ s[horse] + go(i + 1, horse));\n  }\n  if (e[i] >= d[i][i + 1]) {\n    Min(ret, d[i][i + 1] \/ s[i] + go(i + 1, i));\n  }\n  if (ret < inf) {\n    \/\/ cout << \"ok \" << i << \" \" << horse <<\" \"<<ret<< endl;\n  }\n  return ret;\n}\n\nvoid solve() {\n  long long q;\n  cin >> n >> q;\n  for (long long i = 0; i < (n); ++i)\n    cin >> e[i] >> s[i];\n  for (long long i = 0; i < (n); ++i)\n    for (long long j = 0; j < (n); ++j)\n      cin >> d[i][j];\n  dsum[0] = 0;\n  for (long long i = 1; i <= (n - 1); ++i)\n    dsum[i] = dsum[i - 1] + d[i - 1][i];\n  while (q--) {\n    long long u, v;\n    cin >> u >> v;\n    memset(memo, 0, sizeof(memo));\n    double ans = go(0, 0);\n    cout << setprecision(8) << ans << endl;\n\n    for (long long i = 0; i < (n - 1); ++i) {\n      bool fd = 0;\n      for (long long j = 0; j < (n); ++j)\n        if (memo[i][j] > 0 && memo[i][j] < inf) {\n          fd = 1;\n          break;\n        }\n      if (!fd) {\n        cout << \"bad \" << i << endl;\n      }\n    }\n  }\n}\n\nvoid init() {}\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ freopen(\"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Visual Studio\n  \/\/ 2015\\\\Projects\\\\Test\\\\Input\\\\in.in\", \"r\", stdin);\n\n  init();\n  int T;\n  cin >> T;\n  for (long long TI = 1; TI <= (T); ++TI) {\n    cout << \"Case #\" << TI << \": \";\n    \/\/ cout << \"Case \" << TI << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nchar s[1111];\nint v[1111];\nint k;\n\nint main() {\n\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    scanf(\"%s%d\", s, &k);\n    int len = strlen(s);\n    for (int i = 0; i < len; ++i) {\n      v[i] = (s[i] == '+') ? 0 : 1;\n    }\n\n    int ans = 0;\n    for (int i = 0; i + k - 1 < len; i++) {\n      if (v[i] == 0)\n        continue;\n\n      ans++;\n      for (int j = i; j <= i + k - 1; j++)\n        v[j] ^= 1;\n    }\n\n    bool fg = true;\n    for (int i = 0; i < len; ++i) {\n      if (v[i] == 1)\n        fg = false;\n    }\n\n    printf(\"Case #%d: \", cas++);\n    if (fg == false)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<LL, LL> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nLL n, k;\n\nPII dfs(LL n, LL k) {\n  if (n == 1)\n    return {0, 0};\n\n  if (n & 1) {\n    if (k == 1)\n      return {n \/ 2, n \/ 2};\n    return dfs(n \/ 2, (k - 2) \/ 2 + 1);\n  } else {\n    if (k == 1)\n      return {n \/ 2 - 1, n \/ 2};\n    k--;\n    if (k & 1)\n      return dfs(n \/ 2, (k + 1) \/ 2);\n    else\n      return dfs(n \/ 2 - 1, k \/ 2);\n  }\n}\n\nint main() {\n\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    cin >> n >> k;\n    PII ans = dfs(n, k);\n\n    printf(\"Case #%d: %lld %lld\\n\", cas++, ans.second, ans.first);\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nchar s[1111];\nint v[1111];\nint k;\n\nint main() {\n\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    scanf(\"%s%d\", s, &k);\n    int len = strlen(s);\n    for (int i = 0; i < len; ++i) {\n      v[i] = (s[i] == '+') ? 0 : 1;\n    }\n\n    int ans = 0;\n    for (int i = 0; i + k - 1 < len; i++) {\n      if (v[i] == 0)\n        continue;\n\n      ans++;\n      for (int j = i; j <= i + k - 1; j++)\n        v[j] ^= 1;\n    }\n\n    bool fg = true;\n    for (int i = 0; i < len; ++i) {\n      if (v[i] == 1)\n        fg = false;\n    }\n\n    printf(\"Case #%d: \", cas++);\n    if (fg == false)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nint n, p;\nint r[55];\nint q[55][55];\nint per[55];\n\nbool check(int req, int val) {\n  int hi = val \/ (req * 0.9);\n  int lo = val \/ (req * 1.1);\n\n  for (int k = lo; k <= hi; k++) {\n    if (0.9 * k * req <= val && 1.1 * k * req >= val)\n      return true;\n  }\n  return false;\n}\n\nbool check2(int r1, int r2, int v1, int v2) {\n\n  int lo = v1 \/ (r1 * 1.1);\n  int hi = v1 \/ (r1 * 0.9);\n\n  lo = max(lo, int(v2 \/ (r2 * 1.1)));\n  hi = min(hi, int(v2 \/ (r2 * 0.9)));\n\n  for (int k = lo; k <= hi; k++) {\n    if (0.9 * k * r1 <= v1 && 1.1 * k * r1 >= v1 && 0.9 * k * r2 <= v2 &&\n        1.1 * k * r2 >= v2)\n      return true;\n  }\n  return false;\n}\n\nint main() {\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    int ans = 0;\n    printf(\"Case #%d: \", cas++);\n\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &r[i]);\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        scanf(\"%d\", &q[i][j]);\n\n    if (n == 1) {\n      for (int i = 0; i < p; i++) {\n        bool fg = check(r[0], q[0][i]);\n        if (fg)\n          ans++;\n      }\n      printf(\"%d\\n\", ans);\n      continue;\n    } else {\n      for (int i = 0; i < p; i++)\n        per[i] = i;\n\n      do {\n        int tmpans = 0;\n        for (int i = 0; i < p; i++) {\n          int a = q[0][i];\n          int b = q[1][per[i]];\n          bool fg = check2(r[0], r[1], a, b);\n          if (fg)\n            tmpans++;\n        }\n        ans = max(ans, tmpans);\n\n      } while (next_permutation(per, per + p));\n      printf(\"%d\\n\", ans);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nconst int N = 111;\nchar s[N][N];\nint r, c;\nbool flag[33];\n\nint main() {\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    printf(\"Case #%d: \\n\", cas++);\n\n    scanf(\"%d%d\", &r, &c);\n    for (int i = 0; i < r; ++i) {\n      scanf(\"%s\", s[i]);\n    }\n    memset(flag, false, sizeof(flag));\n\n    for (int i = 0; i < r; i++) {\n      int j = 0;\n      while (j < c && s[i][j] == '?')\n        j++;\n      if (j < c) {\n        for (int k = 0; k < j; k++)\n          s[i][k] = s[i][j];\n        for (int k = j + 1; k < c; k++)\n          if (s[i][k] == '?')\n            s[i][k] = s[i][k - 1];\n      } else\n        flag[i] = 1;\n    }\n\n    int p = 0;\n    while (flag[p])\n      p++;\n    for (int j = 0; j < p; j++)\n      strcpy(s[j], s[p]);\n\n    for (int j = p + 1; j < r; j++)\n      if (flag[j])\n        strcpy(s[j], s[j - 1]);\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++)\n        printf(\"%c\", s[i][j]);\n      puts(\"\");\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nconst double eps = 1e-8;\n\nint T;\nconst int N = 1111;\n\nLL d;\nLL pos[N];\nint v[N];\nint n;\n\nbool check(double cur_v) {\n  \/\/ for(int i=1; i<=m; i++)\n  return true;\n}\n\nint main() {\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    printf(\"Case #%d: \", cas++);\n\n    cin >> d >> n;\n    double tt = 0;\n\n    for (int i = 1; i <= n; i++) {\n      cin >> pos[i] >> v[i];\n\n      double tmp_t = 1.0 * (d - pos[i]) \/ v[i];\n      tt = max(tmp_t, tt);\n    }\n    double ans = 1.0 * d \/ tt;\n\n    \/\/ double lo = 1, hi = 1e9;\n    \/\/ while(hi - lo > eps)\n    \/\/{\n    \/\/ double mid = (lo + hi) \/ 2.0;\n    \/\/ bool ok = check(mid);\n    \/\/ if(ok) lo = mid;\n    \/\/ else hi = mid;\n    \/\/}\n\n    \/\/ double ans = lo;\n    printf(\"%.6f\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nint n, r, o, y, g, b, v;\n\ntypedef pair<int, char> pp;\n\nchar s[1111][1111];\n\nint main() {\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    printf(\"Case #%d: \", cas++);\n\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    vector<pp> vv;\n    vv.push_back({r, 'R'});\n    vv.push_back({y, 'Y'});\n    vv.push_back({b, 'B'});\n    \/\/ debug(r, y, b);\n\n    sort(vv.begin(), vv.end());\n\n    if (vv[2].first > vv[0].first + vv[1].first) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n\n    memset(s, 0, sizeof(s));\n    for (int i = 1; i <= vv[2].first; i++) {\n\n      s[i][0] = vv[2].second;\n      \/\/ debug(i, s[i][0]);\n    }\n\n    for (int i = 1; i <= vv[1].first; i++) {\n      s[i][1] = vv[1].second;\n      \/\/ debug(i, s[i][1]);\n    }\n\n    int row = vv[1].first + 1;\n    int col = 1;\n\n    for (int i = 1; i <= vv[0].first; i++) {\n      if (row > vv[2].first) {\n        col++;\n        row = 1;\n      }\n\n      s[row][col] = vv[0].second;\n      row++;\n    }\n\n    string ans = \"\";\n    for (int i = 1; i <= vv[2].first; i++) {\n      for (int j = 0; j < 3; j++) {\n        \/\/ debug(i, j, s[i][j]);\n        if (s[i][j] != '\\0')\n          ans += s[i][j];\n      }\n    }\n    cout << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"mickeyandkaka","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef pair<LL, LL> PII;\n\nvector<string> split(const string &s, char c) {\n  vector<string> v;\n  stringstream ss(s);\n  string x;\n  while (getline(ss, x, c))\n    v.push_back(x);\n  return v;\n}\nvoid err(vector<string>::iterator it) {}\ntemplate <typename T, typename... Args>\nvoid err(vector<string>::iterator it, T a, Args... args) {\n  cerr << it->substr((*it)[0] == ' ', it->length()) << \" = \" << a << \", \";\n  err(++it, args...);\n}\nint T;\nconst int N = 111;\n\nconst LL INF = 0x3f3f3f3f3f3f3f3fll;\n\nint n, q;\nLL f[N][N];\nLL e[N], s[N];\n\nint main() {\n  int cas = 1;\n  scanf(\"%d\", &T);\n\n  while (T--) {\n    printf(\"Case #%d:\", cas++);\n\n    cin >> n >> q;\n    for (int i = 1; i <= n; ++i) {\n      cin >> e[i] >> s[i];\n    }\n\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        cin >> f[i][j];\n        if (f[i][j] == -1)\n          f[i][j] = INF;\n      }\n    }\n\n    for (int k = 1; k <= n; ++k) {\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n          if (f[i][k] + f[k][j] < f[i][j])\n            f[i][j] = f[i][k] + f[k][j];\n        }\n      }\n    }\n\n    for (int pp = 1; pp <= q; pp++) {\n      int u, v;\n      cin >> u >> v;\n\n      double dd[N];\n      bool vis[N];\n      memset(vis, false, sizeof(vis));\n      for (int i = 1; i <= n; ++i)\n        dd[i] = 1e20;\n\n      dd[u] = 0;\n      vis[u] = true;\n\n      int cur = u;\n      while (cur != v) {\n        for (int i = 1; i <= n; i++) {\n          if (f[cur][i] <= e[cur]) {\n            dd[i] = min(dd[i], dd[cur] + 1.0 * f[cur][i] \/ s[cur]);\n          }\n        }\n\n        int next = -1;\n        for (int i = 1; i <= n; i++) {\n          if (vis[i] != true && (next == -1 || dd[next] > dd[i]))\n            next = i;\n        }\n\n        cur = next;\n        vis[cur] = 1;\n      }\n\n      printf(\" %.10f\", dd[v]);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 20 + 5;\nint T, Case;\nlong long n;\n\nstring f(long long n) {\n  string ret = \"\";\n  while (n \/ 10) {\n    int a = n \/ 10 % 10, b = n % 10;\n    if (a > b) {\n      ret = string(ret.size() + 1, '9');\n      n = n \/ 10 - 1;\n    } else {\n      ret = char(b + '0') + ret;\n      n = n \/ 10;\n    }\n  }\n  if (n > 0)\n    ret = char(n + '0') + ret;\n  while (ret.size() && ret[0] == '0')\n    ret = ret.substr(1);\n  if (ret.size() == 0)\n    ret = \"0\";\n  return ret;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%lld\", &n);\n    printf(\"Case #%d: %s\\n\", ++Case, f(n).c_str());\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 20 + 5;\nint T, Case;\nmap<int, int> cnt;\nint n, k;\n\nint main() {\n  freopen(\"out.txt\", \"w\", stdout);\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &k);\n    k--;\n    cnt.clear();\n    cnt[n] = 1;\n    while (k > 0) {\n      auto p = *cnt.rbegin();\n      int x = min(k, p.second);\n      k -= x;\n      if ((cnt[p.first] -= x) == 0)\n        cnt.erase(p.first);\n      if (p.first & 1) {\n        cnt[p.first \/ 2] += x * 2;\n      } else {\n        cnt[p.first \/ 2] += x;\n        cnt[p.first \/ 2 - 1] += x;\n      }\n    }\n    auto p = cnt.rbegin();\n    int mi, mx;\n    if (p->first & 1)\n      mi = mx = p->first \/ 2;\n    else\n      mi = p->first \/ 2 - 1, mx = p->first \/ 2;\n    printf(\"Case #%d: %d %d\\n\", ++Case, mx, mi);\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 1000 + 5;\nint T, Case, n, k;\nchar s[N];\n\nint main() {\n  \/\/ freopen(\"out.out\",\"w\",stdout);\n  \/\/ freopen(\"A-small-attempt0.in\",\"r\",stdin);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%s%d\", s, &k);\n    n = strlen(s);\n    int ans = 0;\n    for (int i = 0; i <= n - k; i++) {\n      if (s[i] == '-') {\n        ans++;\n        for (int j = i; j < i + k; j++)\n          s[j] = '+' + '-' - s[j];\n      }\n    }\n    int flag = 1;\n    for (int i = n - k + 1; i < n; i++) {\n      if (s[i] == '-')\n        flag = 0;\n    }\n    printf(\"Case #%d: \", ++Case);\n    if (!flag)\n      puts(\"IMPOSSIBLE\");\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 50 + 5;\nint T, Case, n, p;\nint a[N], b[N][N];\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &b[i][j]);\n        b[i][j] *= 10;\n      }\n    }\n    if (n == 1) {\n      int ans = 0;\n      for (int i = 0; i < p; i++) {\n        int cnt = b[0][i] \/ (9 * a[0]);\n        while (1) {\n          long long cur = b[0][i];\n          if (cur < 9LL * cnt * a[0])\n            break;\n          if (cur >= 9LL * cnt * a[0] && cur <= 11LL * cnt * a[0]) {\n            ans++;\n            break;\n          }\n          cnt++;\n        }\n      }\n      printf(\"Case #%d: %d\\n\", ++Case, ans);\n    } else {\n      sort(b[0], b[0] + p);\n      sort(b[1], b[1] + p);\n      int ans = 0;\n      do {\n        int ansCur = 0;\n        for (int i = 0; i < p; i++) {\n          int cnt = min(b[0][i] \/ (9 * a[0]), b[1][i] \/ (9 * a[1]));\n          while (1) {\n            long long cur1 = b[0][i], cur2 = b[1][i];\n            if (cur1 < 9LL * cnt * a[0] || cur2 < 9LL * cnt * a[1])\n              break;\n            if (cur1 >= 9LL * cnt * a[0] && cur1 <= 11LL * cnt * a[0] &&\n                cur2 >= 9LL * cnt * a[1] && cur2 <= 11LL * cnt * a[1]) {\n              ansCur++;\n              break;\n            }\n            cnt++;\n          }\n        }\n        ans = max(ans, ansCur);\n      } while (next_permutation(b[1], b[1] + p));\n      printf(\"Case #%d: %d\\n\", ++Case, ans);\n    }\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 25 + 5;\nint T, Case, n, m;\nchar s[N][N];\nint ch[128][4], ex[128];\n\nvoid dfsx(int c) {\n  int can = 1;\n  while (can) {\n    can = 0;\n    int x;\n    x = ch[c][0] - 1;\n    if (x >= 0) {\n      int flag = 1;\n      for (int i = ch[c][1]; i <= ch[c][3]; i++) {\n        if (s[x][i] != '?')\n          flag = 0;\n      }\n      if (flag) {\n        for (int i = ch[c][1]; i <= ch[c][3]; i++) {\n          s[x][i] = c;\n        }\n        can = 1;\n        ch[c][0]--;\n        continue;\n      }\n    }\n\n    x = ch[c][2] + 1;\n    if (x < n) {\n      int flag = 1;\n      for (int i = ch[c][1]; i <= ch[c][3]; i++) {\n        if (s[x][i] != '?')\n          flag = 0;\n      }\n      if (flag) {\n        for (int i = ch[c][1]; i <= ch[c][3]; i++) {\n          s[x][i] = c;\n        }\n        can = 1;\n        ch[c][2]++;\n        continue;\n      }\n    }\n  }\n}\n\nvoid dfsy(int c) {\n  int can = 1;\n  while (can) {\n    can = 0;\n    int y;\n    y = ch[c][1] - 1;\n    if (y >= 0) {\n      int flag = 1;\n      for (int i = ch[c][0]; i <= ch[c][2]; i++) {\n        if (s[i][y] != '?')\n          flag = 0;\n      }\n      if (flag) {\n        for (int i = ch[c][0]; i <= ch[c][2]; i++) {\n          s[i][y] = c;\n        }\n        can = 1;\n        ch[c][1]--;\n        continue;\n      }\n    }\n\n    y = ch[c][3] + 1;\n    if (y < m) {\n      int flag = 1;\n      for (int i = ch[c][0]; i <= ch[c][2]; i++) {\n        if (s[i][y] != '?')\n          flag = 0;\n      }\n      if (flag) {\n        for (int i = ch[c][0]; i <= ch[c][2]; i++) {\n          s[i][y] = c;\n        }\n        can = 1;\n        ch[c][3]++;\n        continue;\n      }\n    }\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt2.in\", \"r\", stdin);\n  freopen(\"out2.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", s[i]);\n    }\n    memset(ex, 0, sizeof(ex));\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        if (s[i][j] == '?')\n          continue;\n        int c = s[i][j];\n        if (ex[c] == 0) {\n          ex[c] = 1;\n          ch[c][0] = ch[c][1] = 88888;\n          ch[c][2] = ch[c][3] = 0;\n        }\n        ch[c][0] = min(ch[c][0], i);\n        ch[c][1] = min(ch[c][1], j);\n        ch[c][2] = max(ch[c][2], i);\n        ch[c][3] = max(ch[c][3], j);\n      }\n    }\n    for (int c = 'A'; c <= 'Z'; c++) {\n      if (!ex[c])\n        continue;\n      for (int i = ch[c][0]; i <= ch[c][2]; i++) {\n        for (int j = ch[c][1]; j <= ch[c][3]; j++) {\n          s[i][j] = c;\n        }\n      }\n    }\n    for (int c = 'A'; c <= 'Z'; c++) {\n      if (!ex[c])\n        continue;\n      dfsx(c);\n    }\n    for (int c = 'A'; c <= 'Z'; c++) {\n      if (!ex[c])\n        continue;\n      dfsy(c);\n    }\n    printf(\"Case #%d:\\n\", ++Case);\n    for (int i = 0; i < n; i++)\n      puts(s[i]);\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 1000 + 5;\ntypedef long long LL;\nint T, Case, n;\nLL D, x[N], s[N];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%lld%d\", &D, &n);\n    double t = 0;\n    for (int i = 0; i < n; i++) {\n      LL x, s;\n      scanf(\"%lld%lld\", &x, &s);\n      t = max(t, 1.0 * (D - x) \/ s);\n    }\n    printf(\"Case #%d: %.10f\\n\", ++Case, D \/ t);\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 1000 + 5;\nint T, Case, n;\nint a[6];\ntypedef pair<int, int> pii;\nchar color[] = \"ROYGBV\", s[N];\n\nstruct node {\n  int cnt, id, first;\n  node(int c, int i, int f = 0) : cnt(c), id(i), first(f) {}\n  bool operator<(const node &rhs) const {\n    if (cnt == rhs.cnt)\n      return first < rhs.first;\n    return cnt < rhs.cnt;\n  }\n};\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d\", &n);\n    priority_queue<node> Q;\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &a[i]);\n      if (a[i])\n        Q.push(node(a[i], i));\n    }\n    int C = 0;\n    node pre = Q.top();\n    Q.pop();\n    s[C++] = color[pre.id];\n    pre.first = 1;\n    while (Q.size()) {\n      node cur = Q.top();\n      Q.pop();\n      s[C++] = color[cur.id];\n      if (--pre.cnt > 0)\n        Q.push(pre);\n      pre = cur;\n    }\n    printf(\"Case #%d: \", ++Case);\n    s[n] = 0;\n    if (C < n || s[0] == s[n - 1])\n      puts(\"IMPOSSIBLE\");\n    else\n      puts(s);\n  }\n  return 0;\n}\n"}
{"target":"MikeZZZ","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 100 + 5;\ntypedef long long LL;\nint T, Case, n, q;\nint d[N][N], E[N], S[N];\nLL X[N];\ndouble f[N];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d%d\", &E[i], &S[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        scanf(\"%d\", &d[i][j]);\n      }\n    }\n    for (int i = 2; i <= n; i++) {\n      X[i] = X[i - 1] + d[i - 1][i];\n      f[i] = 1e100;\n    }\n    printf(\"Case #%d:\", ++Case);\n    f[1] = 0;\n    while (q--) {\n      int u, v;\n      scanf(\"%d%d\", &u, &v);\n      for (int i = 2; i <= n; i++) {\n        for (int j = 1; j < i; j++) {\n          if (X[i] - X[j] <= E[j] + 1e-8) {\n            f[i] = min(f[i], f[j] + 1.0 * (X[i] - X[j]) \/ S[j]);\n          }\n        }\n      }\n      printf(\" %.10f\", f[n]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n\n    long long N;\n    cin >> N;\n    string s = to_string(N);\n    long long n = s.size();\n    vector<long long> pow10(n);\n    pow10[0] = 1;\n    for (long long i = (0); i < (n - 1); i++)\n      pow10[i + 1] = pow10[i] * 10;\n    ;\n    while (true) {\n      long long m = 0;\n      for (long long i = (1); i < (n); i++) {\n        if (s[i - 1] <= s[i])\n          m++;\n        else\n          break;\n      };\n      if (m == n - 1)\n        break;\n      N -= N % pow10[n - 1 - m];\n      N--;\n      ;\n      s = to_string(N);\n      n = s.size();\n    }\n    cout << \"Case #\" << t + 1 << \": \";\n    cout << N << endl;\n\n    \/\/ bool flag = true;\n    \/\/ rep(i, 0, n)\n    \/\/\tif (!v[i])\n    \/\/\t\tflag = false;\n    \/\/ cout << \"Case #\" << t + 1 << \": \";\n    \/\/ if (flag) {\n    \/\/\tcout << ans << endl;\n    \/\/}\n    \/\/ else {\n    \/\/\tcout << \"IMPOSSIBLE\" << endl;\n    \/\/}\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n    long long N;\n    cin >> N;\n    long long K;\n    cin >> K;\n    priority_queue<long long> pq;\n    pq.emplace(N);\n    for (long long k = (0); k < (K); k++) {\n      long long a = pq.top();\n      pq.pop();\n      a--;\n      long long b = a \/ 2, c = a - b;\n      \/\/ dump(a, b, c);\n      pq.emplace(b);\n      pq.emplace(c);\n      if (k == K - 1) {\n        cout << \"Case #\" << t + 1 << \": \";\n        cout << max(b, c) << \" \" << min(b, c) << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\n\n\/\/#define int long long\n\nconst int INF =\n    sizeof(int) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst int MOD = (int)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    string S;\n    cin >> S;\n    int n = S.size();\n    vector<bool> v(n);\n    for (int i = (0); i < (n); i++)\n      v[i] = S[i] == '+';\n    int K;\n    cin >> K;\n    int ans = 0;\n    for (int i = (0); i < (n); i++) {\n      if (i + K > n)\n        break;\n      if (v[i])\n        continue;\n      ans++;\n      for (int j = (i); j < (i + K); j++) {\n        v[j] = !v[j];\n      }\n      \/\/ dump(v);\n    }\n    bool flag = true;\n    for (int i = (0); i < (n); i++)\n      if (!v[i])\n        flag = false;\n    cout << \"Case #\" << t + 1 << \": \";\n    if (flag) {\n      cout << ans << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nusing Weight = long long;\nusing Flow = long long;\nstruct Edge {\n  long long s, d;\n  Weight w;\n  Flow c;\n  Edge(){};\n  Edge(long long s, long long d, Weight w = 1) : s(s), d(d), w(w), c(w){};\n};\nbool operator<(const Edge &e1, const Edge &e2) { return e1.w < e2.w; }\nbool operator>(const Edge &e1, const Edge &e2) { return e2 < e1; }\ninline ostream &operator<<(ostream &os, const Edge &e) {\n  return (os << '(' << e.s << \", \" << e.d << \", \" << e.w << ')');\n}\n\nusing Edges = vector<Edge>;\nusing Graph = vector<Edges>;\nusing Array = vector<Weight>;\nusing Matrix = vector<Array>;\n\nvoid add_arc(Graph &g, long long s, long long d, Weight w = 1) {\n  g[s].emplace_back(s, d, w);\n}\nvoid add_edge(Graph &g, long long a, long long b, Weight w = 1) {\n  add_arc(g, a, b, w);\n  add_arc(g, b, a, w);\n}\n\nstruct Dinic {\n  long long n, s, t;\n  vector<long long> level, prog, que;\n  vector<vector<Flow>> cap, flow;\n  vector<vector<long long>> g;\n  Flow inf;\n  Dinic(const Graph &graph)\n      : n(graph.size()), cap(n, vector<Flow>(n)), flow(n, vector<Flow>(n)),\n        g(n, vector<long long>()), inf(numeric_limits<Flow>::max() \/ 8) {\n    for (long long i = 0; i < n; i++) {\n      for (auto &e : graph[i]) {\n        long long u = e.s, v = e.d;\n        Flow c = e.c;\n        cap[u][v] += c;\n        cap[v][u] += c;\n        flow[v][u] += c;\n        g[u].push_back(v);\n        g[v].push_back(u);\n      }\n    }\n  }\n  inline Flow residue(long long u, long long v) {\n    return cap[u][v] - flow[u][v];\n  }\n  Flow solve(long long s_, long long t_) {\n    this->t = t_, this->s = s_;\n    que.resize(n + 1);\n    Flow res = 0;\n    while (levelize()) {\n      prog.assign(n, 0);\n      res += augment(s, inf);\n    }\n    return res;\n  }\n  bool levelize() {\n    long long l = 0, r = 0;\n    level.assign(n, -1);\n    level[s] = 0;\n    que[r++] = s;\n    while (l != r) {\n      long long v = que[l++];\n      if (v == t)\n        break;\n      for (const long long &d : g[v])\n        if (level[d] == -1 && residue(v, d) != 0) {\n          level[d] = level[v] + 1;\n          que[r++] = d;\n        }\n    }\n    return level[t] != -1;\n  }\n  Flow augment(long long v, Flow lim) {\n    Flow res = 0;\n    if (v == t)\n      return lim;\n    for (long long &i = prog[v]; i < (long long)g[v].size(); i++) {\n      const long long &d = g[v][i];\n      if (residue(v, d) == 0 || level[v] >= level[d])\n        continue;\n      const Flow aug = augment(d, min(lim, residue(v, d)));\n      flow[v][d] += aug;\n      flow[d][v] -= aug;\n      res += aug;\n      lim -= aug;\n      if (lim == 0)\n        break;\n    }\n    return res;\n  }\n};\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.txt\", \"w\", stdout);\n  \/\/ freopen(\"in.txt\", \"r\", stdin);\n  \/\/\/\/freopen(\"out.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n    long long N, P;\n    cin >> N >> P;\n    vector<long long> R(N);\n    for (long long i = (0); i < (N); i++) {\n      cin >> R[i];\n    }\n    vector<vector<long long>> Q(N, vector<long long>(P));\n    for (long long i = (0); i < (N); i++)\n      for (long long j = (0); j < (P); j++) {\n        cin >> Q[i][j];\n      }\n\n    if (N == 1) {\n      long long ans = 0;\n      for (long long i = (0); i < (P); i++) {\n        long long a = ceil(Q[0][i] * 100 \/ 110.0 \/ R[0]);\n        long long b = Q[0][i] * 100 \/ 90.0 \/ R[0];\n        if (a <= b)\n          ans++;\n      }\n      cout << \"Case #\" << t + 1 << \": \" << ans << endl;\n      continue;\n    }\n\n    sort(begin(Q[0]), end(Q[0]));\n    sort(begin(Q[1]), end(Q[1]));\n    ;\n    long long ans = 0;\n    do {\n      long long cnt = 0;\n      for (long long i = (0); i < (P); i++) {\n        long long a = ceil(Q[0][i] * 100 \/ 110.0 \/ R[0]);\n        long long b = Q[0][i] * 100 \/ 90.0 \/ R[0];\n        long long c = ceil(Q[1][i] * 100 \/ 110.0 \/ R[1]);\n        long long d = Q[1][i] * 100 \/ 90.0 \/ R[1];\n        \/\/ dump(a, b, c, d);\n        if (a <= d && c <= b)\n          cnt++;\n      }\n      chmax(ans, cnt);\n    } while (next_permutation(begin(Q[1]), end(Q[1])));\n\n    cout << \"Case #\" << t + 1 << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.txt\", \"w\", stdout);\n  \/\/ freopen(\"in.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n    long long R, C;\n    cin >> R >> C;\n    vector<vector<char>> v(R, vector<char>(C));\n    for (long long i = (0); i < (R); i++)\n      for (long long j = (0); j < (C); j++) {\n        cin >> v[i][j];\n      }\n    for (long long i = (0); i < (R); i++)\n      for (long long j = (1); j < (C); j++) {\n        if (v[i][j] == '?') {\n          v[i][j] = v[i][j - 1];\n        }\n      }\n    for (long long i = (0); i < (R); i++)\n      for (long long j = (C - 1) - 1; j >= (0); j--) {\n        if (v[i][j] == '?') {\n          v[i][j] = v[i][j + 1];\n        }\n      }\n    for (long long i = (1); i < (R); i++) {\n      if (v[i][0] == '?') {\n        for (long long j = (0); j < (C); j++) {\n          v[i][j] = v[i - 1][j];\n        }\n      }\n    }\n    for (long long i = (R - 1) - 1; i >= (0); i--) {\n      if (v[i][0] == '?') {\n        for (long long j = (0); j < (C); j++) {\n          v[i][j] = v[i + 1][j];\n        }\n      }\n    }\n    cout << \"Case #\" << t + 1 << \":\" << endl;\n    for (long long i = (0); i < (v.size()); i++) {\n      cout << v[i][0];\n      for (long long j = (1); j < (v[i].size()); j++) {\n        cout << v[i][j];\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T, class... Tail>\nvoid tied_sort(vector<T> &a, vector<Tail> &... tail) {\n  long long n = a.size();\n  using S = tuple<T, Tail...>;\n  vector<S> s(n);\n  for (long long i = 0; i < n; i++)\n    s[i] = make_tuple(a[i], tail[i]...);\n  sort(s.begin(), s.end());\n  for (long long i = 0; i < n; i++)\n    tie(a[i], tail[i]...) = s[i];\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"A-small-attempt1.txt\", \"w\", stdout);\n  \/\/ freopen(\"in.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  cout << fixed << setprecision(10);\n  for (long long t = 0; t < T; t++) {\n    double D;\n    long long N;\n    cin >> D >> N;\n    if (N > 2)\n      break;\n    vector<double> K(N), S(N);\n    for (long long i = (0); i < (N); i++) {\n      cin >> K[i] >> S[i];\n    }\n    tied_sort(K, S);\n    ;\n    double totaltime = 0;\n    for (long long i = (0); i < (N - 1); i++) {\n      double mint = INF;\n      long long minid = -1;\n      for (long long j = (0); j < (N - 1); j++) {\n        if (K[j] > D)\n          break;\n        if (S[i + 1] > S[i])\n          continue;\n        double time = (K[i + 1] - K[i]) \/ (S[i] - S[i + 1]);\n        if (K[j] + S[j] * time > D)\n          continue;\n        if (chmin(mint, time)) {\n          minid = j;\n        }\n      }\n      if (minid == -1) {\n        break;\n      }\n      for (long long j = (0); j < (N); j++) {\n        K[j] += S[j] * mint;\n      }\n      S[minid] = S[minid + 1];\n      totaltime += mint;\n    }\n    double ans = 0;\n    totaltime += (D - K[0]) \/ S[0];\n    ans += D \/ totaltime;\n    cout << \"Case #\" << t + 1 << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.txt\", \"w\", stdout);\n  \/\/ freopen(\"in.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  cout << fixed << setprecision(10);\n  for (long long t = 0; t < T; t++) {\n    string ans;\n\n    long long N;\n    cin >> N;\n    long long R, O, Y;\n    cin >> R >> O >> Y;\n    long long G, B, V;\n    cin >> G >> B >> V;\n\n    long long maxi = N \/ 2;\n    if (R > maxi || Y > maxi || B > maxi) {\n      ans = \"IMPOSSIBLE\";\n    } else {\n      using P = pair<long long, char>;\n      vector<P> v;\n      v.emplace_back(R, 'R');\n      v.emplace_back(Y, 'Y');\n      v.emplace_back(B, 'B');\n      sort(begin(v), end(v));\n      reverse(begin(v), end(v));\n      vector<string> p;\n      for (long long i = (0); i < (v[0].first); i++) {\n        p.emplace_back(string(1, v[0].second));\n      }\n      long long cur = 0;\n      for (long long i = (0); i < (v[1].first); i++) {\n        p[(cur++) % p.size()] += v[1].second;\n      }\n      for (long long i = (0); i < (v[2].first); i++) {\n        p[(cur++) % p.size()] += v[2].second;\n      }\n      \/\/ dump(p);\n      for (long long i = (0); i < (p.size()); i++) {\n        ans += p[i];\n      }\n    }\n    cout << \"Case #\" << t + 1 << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"minaminao","func":"#include \"bits\/stdc++.h\"\nusing namespace std;\nconst long long INF =\n    sizeof(long long) == sizeof(long long) ? 0x3f3f3f3f3f3f3f3fLL : 0x3f3f3f3f;\nconst long long MOD = (long long)(1e9) + 7;\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\nusing Weight = double;\nusing Flow = double;\nstruct Edge {\n  long long s, d;\n  Weight w;\n  Flow c;\n  Edge(){};\n  Edge(long long s, long long d, Weight w = 1) : s(s), d(d), w(w), c(w){};\n};\nbool operator<(const Edge &e1, const Edge &e2) { return e1.w < e2.w; }\nbool operator>(const Edge &e1, const Edge &e2) { return e2 < e1; }\ninline ostream &operator<<(ostream &os, const Edge &e) {\n  return (os << '(' << e.s << \", \" << e.d << \", \" << e.w << ')');\n}\n\nusing Edges = vector<Edge>;\nusing Graph = vector<Edges>;\nusing Array = vector<Weight>;\nusing Matrix = vector<Array>;\n\nvoid add_arc(Graph &g, long long s, long long d, Weight w = 1) {\n  g[s].emplace_back(s, d, w);\n}\nvoid add_edge(Graph &g, long long a, long long b, Weight w = 1) {\n  add_arc(g, a, b, w);\n  add_arc(g, b, a, w);\n}\n\nvector<long long> dijkstra(const Graph &g, long long s, Array &dist) {\n  long long n = g.size();\n  assert(s < n);\n  enum { WHITE, GRAY, BLACK };\n  vector<long long> color(n, WHITE);\n  color[s] = GRAY;\n  vector<long long> prev(n, -1);\n  dist.assign(n, INF);\n  dist[s] = 0;\n  using State = tuple<Weight, long long, long long>;\n  priority_queue<State, vector<State>, greater<State>> pq;\n  pq.emplace(0, s, -1);\n  while (pq.size()) {\n    Weight d;\n    long long v, u;\n    tie(d, v, u) = pq.top();\n    pq.pop();\n    if (dist[v] < d)\n      continue;\n    color[v] = BLACK;\n    prev[v] = u;\n    for (auto &e : g[v]) {\n      if (color[e.d] == BLACK)\n        continue;\n      if (dist[e.d] > dist[v] + e.w) {\n        dist[e.d] = dist[v] + e.w;\n        pq.emplace(dist[e.d], e.d, v);\n        color[e.d] = GRAY;\n      }\n    }\n  }\n  return prev;\n}\n\nvoid all_pairs_shortest_paths_by_dijkstra(const Graph &g, Matrix &dists) {\n  long long n = g.size();\n  dists.resize(n);\n  for (long long i = 0; i < n; i++)\n    dijkstra(g, i, dists[i]);\n}\n\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.txt\", \"w\", stdout);\n  \/\/ freopen(\"in.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  cout << fixed << setprecision(10);\n  for (long long t = 0; t < T; t++) {\n    long long N, Q;\n    cin >> N >> Q;\n    Graph g(N);\n    vector<double> E(N), S(N);\n    for (long long i = (0); i < (N); i++) {\n      cin >> E[i] >> S[i];\n    }\n    for (long long i = (0); i < (N); i++)\n      for (long long j = (0); j < (N); j++) {\n        long long D;\n        cin >> D;\n        if (D == -1)\n          continue;\n        add_arc(g, i, j, D);\n      }\n    vector<long long> U(Q), V(Q);\n    for (long long i = (0); i < (Q); i++) {\n      cin >> U[i] >> V[i];\n      U[i]--, V[i]--;\n    }\n    Matrix D;\n    all_pairs_shortest_paths_by_dijkstra(g, D);\n    Graph g2(N);\n    for (long long i = (0); i < (N); i++) {\n      for (long long j = (0); j < (N); j++) {\n        if (i == j)\n          continue;\n        if (D[i][j] > E[i])\n          continue;\n        add_arc(g2, i, j, D[i][j] \/ S[i]);\n      }\n    }\n    Matrix D2;\n    all_pairs_shortest_paths_by_dijkstra(g2, D2);\n    cout << \"Case #\" << t + 1 << \":\";\n    for (long long i = (0); i < (Q); i++) {\n      cout << \" \" << D2[U[i]][V[i]];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nbool tidy(string a) {\n  for (ll i = (1); i < (ll((a).size())); i++) {\n    if (a[i - 1] > a[i])\n      return false;\n  }\n  return true;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  vl nums = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n  vl swap;\n  for (ll l = (2); l < (19); l++) {\n    swap = vl();\n    for (ll i = (1); i < (10); i++) {\n      for (ll j = (ll((nums).size())) - 1; j >= (0); j--) {\n        if (ll((to_string(nums[j])).size()) < l - 1)\n          break;\n        char c = ('0' + i);\n        string num = to_string(nums[j]);\n        num += c;\n        if (tidy(num)) {\n          swap.push_back(stoll(num));\n        }\n      }\n    }\n    for (ll i = (0); i < (ll((swap).size())); i++)\n      nums.push_back(swap[i]);\n  }\n  sort(begin(nums), end(nums));\n  ll TC;\n  cin >> TC;\n  for (ll tc = (0); tc < (TC); tc++) {\n    ll n;\n    cin >> n;\n    auto ptr = upper_bound(begin(nums), end(nums), n);\n    ptr--;\n    cout << \"Case #\" << tc + 1 << \": \" << *ptr << endl;\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nvoid compute(ll n, ll l, ll h) {\n  if (h == 0) {\n    cout << (l) \/ 2 << \" \" << (l - 1) \/ 2 << endl;\n    return;\n  }\n  if (n > (1 << h) \/ 2) {\n    compute(n - (1 << h) \/ 2, l \/ 2, h - 1);\n  } else {\n    compute(n, (l - 1) \/ 2, h - 1);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (0); tc < (TC); tc++) {\n    ll l, n;\n    cin >> l >> n;\n    map<ll, ll> h;\n    priority_queue<ll> q;\n    h[l] = 1;\n    q.push(l);\n    cout << \"Case #\" << tc + 1 << \": \";\n    while (n > 0) {\n      ll nl = q.top();\n      while (!q.empty() && q.top() == nl)\n        q.pop();\n      n -= h[nl];\n      h[nl \/ 2] += h[nl];\n      h[(nl - 1) \/ 2] += h[nl];\n      h[nl] = 0;\n      if (n <= 0) {\n        cout << nl \/ 2 << \" \" << (nl - 1) \/ 2 << endl;\n      }\n      q.push(nl \/ 2);\n      q.push((nl - 1) \/ 2);\n    }\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nstring encode(ll p, ll n) {\n  string s = \"\";\n  for (ll i = (0); i < (n); i++) {\n    if (p & (1 << i)) {\n      s += \"+\";\n    } else {\n      s += \"-\";\n    }\n  }\n  return s;\n}\n\nvoid compute(ll p, vl &dp, ll k, ll n) {\n  if (dp[p] != oo)\n    return;\n  dp[p] = oo - 1;\n  for (ll i = (0); i < (n - k + 1); i++) {\n    ll pnew = p;\n    for (ll j = (0); j < (k); j++) {\n      if (p & (1 << (i + j))) {\n        pnew &= ~(1 << (i + j));\n      } else {\n        pnew |= 1 << (i + j);\n      }\n    }\n    compute(pnew, dp, k, n);\n    dp[p] = min(dp[pnew] + 1, dp[p]);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (0); tc < (TC); tc++) {\n    string s;\n    cin >> s;\n    ll k, n;\n    cin >> k;\n    n = ll((s).size());\n    ll p = 0;\n    for (ll i = (0); i < (ll((s).size())); i++) {\n      if (s[i] == '-')\n        p |= (1 << i);\n    }\n    \/*\n    vl dp((1<<11), oo);\n    dp[p] = 0;\n    compute(0, dp, k, n);\n    *\/\n    cout << \"Case #\" << tc + 1 << \": \";\n    \/*\n    if(dp[0] < oo-1){\n      cout << dp[0] << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n    *\/\n\n    ll res = 0;\n    for (ll i = (0); i < (n - k + 1); i++) {\n      if (p & (1 << (i))) {\n        for (ll j = (0); j < (k); j++) {\n          if (p & (1 << (i + j))) {\n            p &= ~(1 << (i + j));\n          } else {\n            p |= 1 << (i + j);\n          }\n        }\n        res++;\n      }\n    }\n    if (p == 0)\n      cout << res << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (0); tc < (TC); tc++) {\n    cout << \"Case #\" << tc + 1 << \": \";\n    ll n, p;\n    cin >> n >> p;\n    vector<ll> r(n);\n    vector<vector<ll>> q(n, vl(p));\n    for (ll i = (0); i < (n); i++)\n      cin >> r[i];\n    for (ll i = (0); i < (n); i++) {\n      for (ll j = (0); j < (p); j++) {\n        cin >> q[i][j];\n      }\n      sort(begin(q[i]), end(q[i]));\n    }\n    vector<vector<pll>> add(n, vector<pll>());\n    vl idx(n, 0);\n    ll res = 0;\n    bool done = false;\n    while (!done) {\n      ll larger_than = -oo;\n      for (ll i = (0); i < (n); i++) {\n        larger_than = max(larger_than, (ll)ceil(q[i][idx[i]] \/ (1.1 * r[i])));\n      }\n      bool poss = true;\n      ll largest_min_inc = -oo;\n      ll largest_min_inc_idx = 0;\n      for (ll i = (0); i < (n); i++) {\n        ll smaller_than = floor(q[i][idx[i]] \/ (0.9 * r[i]));\n        if (smaller_than < larger_than) {\n          ll min_inc = ceil(larger_than * 0.9 * r[i] - q[i][idx[i]]);\n          if (min_inc > largest_min_inc) {\n            largest_min_inc = min_inc;\n            largest_min_inc_idx = i;\n          }\n          auto ptr =\n              lower_bound(begin(add[i]), end(add[i]), make_pair(min_inc, 0ll));\n          if (ptr == add[i].end()) {\n            poss = false;\n            break;\n          }\n        }\n      }\n      if (poss) {\n        res++;\n        for (ll i = (0); i < (n); i++) {\n          ll smaller_than = floor(q[i][idx[i]] \/ (0.9 * r[i]));\n          if (smaller_than < larger_than) {\n            ll min_inc = ceil(larger_than * 0.9 * r[i] - q[i][idx[i]]);\n            auto ptr = lower_bound(begin(add[i]), end(add[i]),\n                                   make_pair(min_inc, 0ll));\n            vector<pll> new_add = vector<pll>();\n            for (ll j = (0); j < (ll((add[i]).size())); j++) {\n              if (!(add[i][j].second & ptr->second)) {\n                new_add.push_back(add[i][j]);\n              }\n            }\n            sort(begin(new_add), end(new_add));\n            add[i] = new_add;\n          }\n          idx[i]++;\n          if (idx[i] == p)\n            done = true;\n        }\n      } else {\n        ll i = largest_min_inc_idx;\n        ll add_val = q[i][idx[i]];\n        ll pos = idx[i];\n        idx[i]++;\n        if (idx[i] == p)\n          done = true;\n        vector<pll> new_add = vector<pll>(begin(add[i]), end(add[i]));\n        for (ll j = (0); j < (ll((add[i]).size())); j++) {\n          new_add.push_back(\n              make_pair(add[i][j].first + add_val, (add[i][j].second | pos)));\n        }\n        sort(begin(new_add), end(new_add));\n        add[i] = new_add;\n      }\n    }\n    cout << res << endl;\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (0); tc < (TC); tc++) {\n    ll r, c;\n    cin >> r >> c;\n    vector<vector<char>> g = vector<vector<char>>(r, vector<char>(c));\n    for (ll i = (0); i < (r); i++) {\n      for (ll j = (0); j < (c); j++) {\n        cin >> g[i][j];\n      }\n    }\n    stack<ll> todo;\n    vector<bool> done(r, false);\n    for (ll i = (0); i < (r); i++) {\n      for (ll j = (0); j < (c); j++) {\n        if (g[i][j] != '?') {\n          todo.push(i);\n          break;\n        }\n      }\n    }\n    while (!todo.empty()) {\n      ll i = todo.top();\n      todo.pop();\n      done[i] = true;\n      char cc = '?';\n      for (ll j = (0); j < (c); j++) {\n        if (g[i][j] != '?') {\n          cc = g[i][j];\n          break;\n        }\n      }\n      if (cc == '?') {\n        if (i > 0 && done[i - 1]) {\n          for (ll j = (0); j < (c); j++) {\n            g[i][j] = g[i - 1][j];\n          }\n        } else {\n          for (ll j = (0); j < (c); j++) {\n            g[i][j] = g[i + 1][j];\n          }\n        }\n      } else {\n        for (ll j = (0); j < (c); j++) {\n          if (g[i][j] == '?') {\n            g[i][j] = cc;\n          } else {\n            cc = g[i][j];\n          }\n        }\n      }\n      if (i > 0 && !done[i - 1])\n        todo.push(i - 1);\n      if (i < r - 1 && !done[i + 1])\n        todo.push(i + 1);\n    }\n    cout << \"Case #\" << tc + 1 << \":\" << endl;\n    for (ll i = (0); i < (r); i++) {\n      for (ll j = (0); j < (c); j++) {\n        cout << g[i][j];\n      }\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (1); tc < (TC + 1); tc++) {\n    double d, n;\n    cin >> d >> n;\n    vl k(n), s(n);\n    double a = 0;\n    for (ll i = (0); i < (n); i++) {\n      cin >> k[i] >> s[i];\n      a = max(a, (d - k[i]) \/ s[i]);\n    }\n    cout << \"Case #\" << tc << \": \" << setprecision(8) << fixed << d \/ a << endl;\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nmap<ll, char> m = {{0, 'R'}, {1, 'O'}, {2, 'Y'}, {3, 'G'}, {4, 'B'}, {5, 'V'}};\n\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (1); tc < (TC + 1); tc++) {\n    cout << \"Case #\" << tc << \": \";\n    vector<pll> nums;\n    ll n, last = 0;\n    ll first;\n    cin >> n;\n    bool poss = true;\n    for (ll i = (0); i < (6); i++) {\n      ll k;\n      cin >> k;\n      nums.push_back(make_pair(k, i));\n    }\n    sort(nums.rbegin(), nums.rend());\n    if (nums[0].first > (n) \/ 2) {\n      poss = false;\n    }\n    string res = \"\";\n    for (ll i = (0); i < (n); i++) {\n      res += \"R\";\n    }\n    ll idx = 0;\n    for (ll i = (0); i < (ll((nums).size())); i++) {\n      while (nums[i].first) {\n        res[idx] = m[nums[i].second];\n        nums[i].first--;\n        idx += 2;\n        if (idx >= n)\n          idx = 1;\n      }\n    }\n\n    \/*\n    string res = \"\";\n    res += m[last];\n    first = last;\n    num[last]--;\n    FOR(i,1,n){\n      ll next_idx = -1;\n      ll next_num = 0;\n      FOR(j,last+2, last+5){\n        if(num[j%6] > next_num){\n          next_num = num[j%6];\n          next_idx = j%6;\n        }\n      }\n      if(next_idx == -1){\n        poss = false;\n        break;\n      }\n      last = next_idx;\n      res += m[last];\n      num[last]--;\n    }\n\n    if(poss){\n      poss = false;\n    FOR(j, last+2, last+5){\n      if(j == first) poss = true;\n    }\n    }\n    cerr << res << endl;\n    *\/\n    if (poss)\n      cout << res << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"MiriTheRing","func":"#include <bits\/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vl = vector<ll>;\nusing vvl = vector<vl>;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-9;\nint main() {\n  ios::sync_with_stdio(false);\n  ll TC;\n  cin >> TC;\n  for (ll tc = (1); tc < (TC + 1); tc++) {\n    cout << \"Case #\" << tc << \": \";\n    ll n, q;\n    cin >> n >> q;\n    vector<double> e(n), s(n);\n    for (ll i = (0); i < (n); i++) {\n      cin >> e[i] >> s[i];\n    }\n    vector<vl> d(n, vl(n));\n    vector<vector<double>> t(n, vector<double>(n, oo));\n    for (ll i = (0); i < (n); i++) {\n      for (ll j = (0); j < (n); j++) {\n        cin >> d[i][j];\n        if (d[i][j] == -1) {\n          d[i][j] = oo;\n        }\n      }\n    }\n\n    for (ll k = (0); k < (n); k++) {\n      for (ll i = (0); i < (n); i++) {\n        for (ll j = (0); j < (n); j++) {\n          if (d[i][j] > d[i][k] + d[k][j]) {\n            d[i][j] = d[i][k] + d[k][j];\n          }\n        }\n      }\n    }\n\n    for (ll i = (0); i < (n); i++) {\n      for (ll j = (0); j < (n); j++) {\n        if (d[i][j] <= e[i]) {\n          t[i][j] = d[i][j] \/ s[i];\n        }\n      }\n    }\n\n    for (ll k = (0); k < (n); k++) {\n      for (ll i = (0); i < (n); i++) {\n        for (ll j = (0); j < (n); j++) {\n          if (t[i][j] > t[i][k] + t[k][j]) {\n            t[i][j] = t[i][k] + t[k][j];\n          }\n        }\n      }\n    }\n\n    for (ll i = (0); i < (q); i++) {\n      ll u, v;\n      cin >> u >> v;\n      cout << setprecision(8) << fixed << t[u - 1][v - 1] << \" \";\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nint T, n;\nstring s;\n\nvoid sub(int k) {\n  if (s[k] == '0')\n    s[k] = '9', sub(k - 1);\n  else\n    s[k] = s[k] - 1;\n}\n\nvoid dp(int k) {\n  \/\/ cout << s <<endl;\n  bool corr = true;\n  for (int i = 0; i < k; i++) {\n    if (s[i] > s[i + 1])\n      corr = false;\n  }\n  if (corr)\n    return;\n  s[k] = '9';\n  sub(k - 1);\n  dp(k - 1);\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> T;\n  for (int it = 0; it < T; it++) {\n    cin >> s;\n    n = s.size();\n    dp(n - 1);\n    if (s[0] == '0')\n      s.erase(0, 1);\n    cout << \"Case #\" << it + 1 << \": \";\n    cout << s << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<ll> pii;\n\nll T, n, k;\n\nmap<ll, ll> cc;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> T;\n  for (int it = 0; it < T; it++) {\n    cc.clear();\n    cin >> n >> k;\n    ll sf = 0, last = 0;\n    priority_queue<ll> pq;\n    pq.push(n);\n    cc[n] = 1;\n    while (sf < k) {\n      assert(!pq.empty());\n      ll c = pq.top(), n1 = c \/ 2, n2 = c - n1 - 1;\n      \/\/ cout << c << \" \" << cc[c] <<endl;\n      pq.pop();\n      if (cc.count(n1))\n        cc[n1] += cc[c];\n      else\n        cc[n1] = cc[c], pq.push(n1);\n      if (cc.count(n2))\n        cc[n2] += cc[c];\n      else\n        cc[n2] = cc[c], pq.push(n2);\n      sf += cc[c];\n      last = c;\n    }\n    cout << \"Case #\" << it + 1 << \": \" << last \/ 2 << \" \" << last - last \/ 2 - 1\n         << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nbool flip[13131];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int T, n, k;\n  cin >> T;\n  string s;\n  for (int it = 0; it < T; it++) {\n    cin >> s >> k;\n    n = s.size();\n    bool bit = 0;\n    int ans = 0;\n    memset(flip, 0, sizeof flip);\n    for (int i = 0; i < n - k + 1; i++) {\n      bit ^= flip[i];\n      if (!(bit ^ (s[i] == '+')))\n        bit ^= 1, ans++, flip[i + k] = 1;\n    }\n    bool pos = 1;\n    for (int i = n - k + 1; i < n; i++) {\n      bit ^= flip[i];\n      if (!(bit ^ (s[i] == '+')))\n        pos = 0;\n    }\n    cout << \"Case #\" << it + 1 << \": \";\n    if (pos)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nint n, T, P;\n\nint r[55], g, mm[55][55];\n\nset<pair<int, int>> pq[55];\n\npair<int, int> mmt(int g, int i) {\n  int hi = 5000001, lo = 0;\n  for (int it = 0; it < 35; it++) {\n    int mid = (hi + lo) \/ 2;\n    if ((int)(1.1 * (r[i] * mid) + 0.5) >= g)\n      hi = mid;\n    else\n      lo = mid;\n  }\n  int hi1 = 5000001, lo1 = 0;\n  for (int it = 0; it < 35; it++) {\n    int mid = (hi1 + lo1) \/ 2;\n    if ((int)(0.9 * (r[i] * mid) + 0.5) <= g)\n      lo1 = mid;\n    else\n      hi1 = mid;\n  }\n  return {hi, lo1};\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> T;\n  for (int it = 1; it <= T; it++) {\n    cin >> n >> P;\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    vector<vector<int>> events;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> g;\n        auto p = mmt(g, i);\n        \/\/ cout << p.first <<  \" \" << p.second <<endl;\n        if (p.first > p.second)\n          continue;\n        mm[i][j] = p.second;\n        events.push_back({p.first, i, j});\n        events.push_back({p.second, i + n, j});\n      }\n    }\n    sort(events.begin(), events.end());\n    ll bm = 0, targ = (1LL << n) - 1;\n    ll ans = 0;\n    for (auto &v : events) {\n      \/\/ cout << bm <<endl;\n      if (v[1] >= n) {\n        v[1] -= n;\n        if (bm == targ && pq[v[1]].begin()->second == v[2]) {\n          \/\/ cout << \"ADDING \" << v[1] <<endl;\n          ans++;\n          for (int i = 0; i < n; i++) {\n            pq[i].erase(pq[i].begin());\n            if (pq[i].empty())\n              bm ^= 1LL << i;\n          }\n        } else {\n          int i = v[1];\n          if (pq[i].empty() || pq[i].begin()->second != v[2])\n            continue;\n          pq[i].erase(pq[i].begin());\n          if (pq[i].empty())\n            bm ^= 1LL << i;\n        }\n      } else {\n        int i = v[1];\n        if (pq[i].empty())\n          bm ^= 1LL << i;\n        pq[i].insert(make_pair(mm[i][v[2]], v[2]));\n      }\n    }\n    for (int i = 0; i < n; i++)\n      assert(pq[i].empty());\n    cout << \"Case #\" << it << \": \" << ans << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nstring g[55];\n\nint T, R, C;\n\nvector<int> x[55], y[55];\n\nchar get(int i, int j, int dx, int dy) {\n  if (i < 0 || j < 0 || i >= R || j >= C)\n    return '?';\n  if (g[i][j] != '?')\n    return g[i][j];\n  return g[i][j] = get(i + dx, j + dy, dx, dy);\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> T;\n  for (int it = 1; it <= T; it++) {\n    cin >> R >> C;\n    for (int i = 0; i < 26; i++) {\n      x[i].clear();\n      y[i].clear();\n    }\n    for (int i = 0; i < R; i++) {\n      cin >> g[i];\n      for (int j = 0; j < C; j++) {\n        if (g[i][j] == '?')\n          continue;\n        int l = g[i][j] - 'A';\n        x[l].push_back(i);\n        y[l].push_back(i);\n      }\n    }\n    for (int a = 0; a < 26; a++) {\n      if (!x[a].size())\n        continue;\n      sort(x[a].begin(), x[a].end());\n      sort(y[a].begin(), y[a].end());\n      for (int i = x[a][0]; i < x[a][x[a].size() - 1]; i++)\n        for (int j = y[a][0]; j < y[a][x[a].size() - 1]; j++)\n          g[i][j] = (char)('A' + a);\n    }\n    int dx, dy;\n    for (int tt = 0; tt < 4; tt++) {\n      dx = 0;\n      for (dy = -1; dy < 2; dy += 2)\n        for (int i = 0; i < R; i++)\n          for (int j = 0; j < C; j++)\n            if (g[i][j] == '?')\n              get(i, j, dx, dy);\n      dy = 0;\n      for (dx = -1; dx < 2; dx += 2)\n        for (int i = 0; i < R; i++)\n          for (int j = 0; j < C; j++)\n            if (g[i][j] == '?')\n              get(i, j, dx, dy);\n    }\n    cout << \"Case #\" << it << \":\" << endl;\n    for (int i = 0; i < R; i++)\n      cout << g[i] << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nld d[3333], s[3333];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  cout << fixed << setprecision(10);\n  for (int it = 0; it < T; it++) {\n    int N, D;\n    cin >> D >> N;\n    ld t = 0;\n    for (int i = 0; i < N; i++) {\n      cin >> d[i] >> s[i];\n      ld tod = (D - d[i]) \/ s[i];\n      t = max(t, tod);\n    }\n    ld ans = ((ld)D) \/ t;\n    cout << \"Case #\" << it + 1 << \": \" << ans << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<ll, ll> pll;\n\nconst int N = 1111;\nconst int M = N * N * 10;\n\nint T, n;\n\nint cnt[10];\n\n\/\/ ROYGBV\nstring c = \"ROYGBV\";\nint re[10][10];\n\nvoid adre(int i, int j) { re[i][j] = re[j][i] = 1; }\n\nbool dfs(string &s, int lc = 8) {\n  if ((int)s.size() == n && s[0] != s[n - 1])\n    return true;\n  \/\/ cout << s <<endl;\n  vector<pair<int, int>> v;\n  for (int nc = 0; nc < 6; nc++) {\n    if (re[lc][nc] || !cnt[nc])\n      continue;\n    v.push_back({cnt[nc], nc});\n  }\n  sort(v.begin(), v.end());\n  reverse(v.begin(), v.end());\n  for (auto p : v) {\n    int nc = p.second;\n    if (re[lc][nc] || !cnt[nc])\n      continue;\n    s += c[nc];\n    cnt[nc]--;\n    if (dfs(s, nc))\n      return true;\n    s.pop_back();\n    cnt[nc]++;\n  }\n  return false;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  for (int i = 0; i < 6; i++) {\n    adre(i, i);\n    adre(i, (i + 1) % 6);\n  }\n  cin >> T;\n  cout << fixed << setprecision(10);\n  for (int it = 0; it < T; it++) {\n    cin >> n;\n    bool pos = true;\n    for (int i = 0; i < 6; i++) {\n      cin >> cnt[i];\n      if (cnt[i] > n \/ 2)\n        pos = false;\n    }\n    string ans = \"\";\n    if (pos)\n      pos = dfs(ans);\n    if (!pos)\n      ans = \"IMPOSSIBLE\";\n    cout << \"Case #\" << it + 1 << \": \" << ans << endl;\n  }\n}\n"}
{"target":"Miseri","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\n\nld s[3333];\nll d[3333];\nld D[111][111];\nint N, Q;\nld mint[111][111];\n\nld dijk(int a, int b) {\n  for (int i = 0; i < 101; i++)\n    for (int j = 0; j < 101; j++)\n      mint[i][j] = 1e55;\n  mint[a][a] = 0;\n  \/\/ time, place, horse, horse dis left\n  priority_queue<vector<ld>, vector<vector<ld>>, greater<vector<ld>>> pq;\n  pq.push({(ld)0, (ld)a, (ld)a, (ld)d[a]});\n  while (!pq.empty()) {\n    auto v = pq.top();\n    pq.pop();\n    int cn = v[1], ch = v[2], hl = v[3];\n    ld ct = v[0];\n    if (cn == b)\n      return ct;\n    if (ct > mint[cn][ch])\n      continue;\n    \/\/ keep on current horse\n    for (int i = 0; i < N; i++) {\n      if (D[cn][i] == -1 || hl < D[cn][i])\n        continue;\n      int nhl = hl - D[cn][i];\n      ld nt = ct + D[cn][i] \/ s[ch];\n      if (nt < mint[i][ch]) {\n        mint[i][ch] = nt;\n        pq.push({(ld)nt, (ld)i, (ld)ch, (ld)nhl});\n      }\n    }\n    \/\/ take new horse\n    ch = cn;\n    hl = d[ch];\n    for (int i = 0; i < N; i++) {\n      if (D[cn][i] == -1 || hl < D[cn][i])\n        continue;\n      int nhl = hl - D[cn][i];\n      ld nt = ct + D[cn][i] \/ s[ch];\n      if (nt < mint[i][ch]) {\n        mint[i][ch] = nt;\n        pq.push({(ld)nt, (ld)i, (ld)ch, (ld)nhl});\n      }\n    }\n  }\n  return -1;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  cout << setprecision(10) << fixed;\n  for (int it = 0; it < T; it++) {\n    int a, b;\n    cin >> N >> Q;\n    for (int i = 0; i < N; i++) {\n      cin >> d[i] >> s[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> D[i][j];\n      }\n    }\n    cout << \"Case #\" << it + 1 << \": \";\n    for (int i = 0; i < Q; i++) {\n      cin >> a >> b;\n      a--;\n      b--;\n      cout << dijk(a, b) << \" \";\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <stdio.h>\n#include <string>\nusing namespace std;\n\nint T;\nstring N;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> N;\n\n    int len = N.size();\n    for (i = len - 1; i > 0; i--) {\n      if (N[i - 1] > N[i]) {\n        for (j = i; j < len; j++)\n          N[j] = '9';\n        N[i - 1]--;\n      }\n    }\n\n    printf(\"Case #%d: \", t);\n\n    bool chk = false;\n    for (i = 0; i < len; i++) {\n      if (N[i] != '0')\n        chk = true;\n      if (chk)\n        printf(\"%c\", N[i]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <map>\n#include <stdio.h>\nusing namespace std;\n\nint T;\nlong long int N;\nlong long int K;\nmap<long long int, long long int> d;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    scanf(\"%lld %lld\\n\", &N, &K);\n\n    d.clear();\n    d[N] = 1;\n\n    long long int pos = 0;\n    long long int res;\n    while (true) {\n      auto current = d.rbegin();\n      if (pos + current->second >= K) {\n        res = current->first;\n        break;\n      }\n      d[(current->first - 1) \/ 2] += current->second;\n      d[(current->first - 1) \/ 2 + (current->first - 1) % 2] += current->second;\n      pos += current->second;\n      d.erase(current->first);\n    }\n    printf(\"Case #%d: \", t);\n    printf(\"%lld %lld\\n\", (res - 1) \/ 2 + (res - 1) % 2, (res - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <stdio.h>\n#include <string>\nusing namespace std;\n\nint T;\nstring Pancakes;\nint K;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j;\n\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> Pancakes >> K;\n\n    bool err = false;\n    int res = 0;\n    for (i = 0; i < Pancakes.size() - K + 1; i++) {\n      if (Pancakes[i] == '-') {\n        for (j = 0; j < K; j++) {\n          if (Pancakes[i + j] == '-')\n            Pancakes[i + j] = '+';\n          else\n            Pancakes[i + j] = '-';\n        }\n        res++;\n      }\n    }\n    for (i = 0; i < Pancakes.size(); i++) {\n      if (Pancakes[i] == '-')\n        err = true;\n    }\n\n    printf(\"Case #%d: \", t);\n    if (err)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", res);\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <algorithm>\n#include <queue>\n#include <stdio.h>\nusing namespace std;\n\nint T;\nint N, P;\nlong long int R[100];\nlong long int Q[100][100];\nbool d[2][100][1000001];\nint map[1010][1010];\nbool chk[1010];\nint parent[1010];\n\nint BFS(int src, int dst) {\n  int i;\n  struct Node {\n    int idx, cost;\n  };\n  queue<Node> que;\n\n  for (i = 0; i < (N * P + 2); i++) {\n    chk[i] = false;\n    parent[i] = 0;\n  }\n  que.push({src, 1000000});\n  chk[src] = true;\n  parent[src] = -1;\n\n  int res = 1000000;\n  while (true) {\n    if (que.empty())\n      break;\n    Node current = que.front();\n    que.pop();\n\n    if (current.idx == (N * P + 1)) {\n      res = current.cost;\n      break;\n    }\n    for (i = 0; i < (N * P + 2); i++) {\n      if (map[current.idx][i] > 0 && !chk[i]) {\n        que.push({i, min(current.cost, map[current.idx][i])});\n        chk[i] = true;\n        parent[i] = current.idx;\n      }\n    }\n  }\n  if (res != 1000000) {\n    int pos = (N * P + 1);\n    while (true) {\n      if (parent[pos] < 0)\n        break;\n      map[parent[pos]][pos] -= res;\n      map[pos][parent[pos]] += res;\n      pos = parent[pos];\n    }\n  }\n  return res;\n}\nint Solve(int src, int dst) {\n  int i, j;\n  int sum = 0;\n  while (true) {\n    int value = BFS(src, dst);\n    if (value == 1000000)\n      break;\n    sum += value;\n  }\n  return sum;\n}\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j, k, l;\n\n  scanf(\"%d\", &T);\n  for (t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &P);\n    for (i = 0; i < N; i++)\n      scanf(\"%lld\", &R[i]);\n    for (i = 0; i < N; i++) {\n      for (j = 0; j < P; j++)\n        scanf(\"%lld\", &Q[i][j]);\n    }\n\n    for (i = 0; i < (N * P + 2); i++) {\n      for (j = 0; j < (N * P + 2); j++)\n        map[i][j] = 0;\n    }\n    for (i = 0; i < P; i++) {\n      for (j = 1; j <= 1000000; j++) {\n        d[0][i][j] = true;\n        d[1][i][j] = false;\n      }\n    }\n    for (i = 0; i < N; i++) {\n      for (j = 0; j < P; j++) {\n        for (k = 1; k <= 1000000; k++) {\n          long long int value = R[i] * k;\n          long long int left = value * 9;\n          long long int right = value * 11;\n          long long int q = Q[i][j] * 10;\n          if (left <= q && q <= right)\n            d[1][j][k] = true;\n        }\n      }\n      for (j = 0; j < P; j++) {\n        for (k = 1; k <= 1000000; k++) {\n          if (d[1][j][k]) {\n            for (l = 0; l < P; l++) {\n              if (d[0][l][k]) {\n                if (i == 0)\n                  map[(N * P)][i * P + j] = 1;\n                else\n                  map[(i - 1) * P + l][i * P + j] = 1;\n              }\n            }\n          }\n        }\n      }\n      for (j = 0; j < P; j++) {\n        for (k = 1; k <= 1000000; k++) {\n          d[0][j][k] = d[1][j][k];\n          d[1][j][k] = false;\n        }\n      }\n    }\n    for (i = 0; i < P; i++) {\n      map[(N - 1) * P + i][(N * P + 1)] = 1;\n    }\n    printf(\"Case #%d: %d\\n\", t, Solve((N * P), (N * P + 1)));\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <stdio.h>\n\nint T;\nint R, C;\nchar map[30][30];\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j, k;\n\n  scanf(\"%d\", &T);\n  for (t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &R, &C);\n    for (i = 0; i < R; i++)\n      scanf(\"%s\", map[i]);\n\n    for (i = 0; i < R; i++) {\n      for (j = 0; j < C; j++) {\n        if (map[i][j] == '?') {\n          if (j - 1 >= 0 && map[i][j - 1] != '?')\n            map[i][j] = map[i][j - 1];\n        }\n      }\n      for (j = C - 1; j >= 0; j--) {\n        if (map[i][j] == '?') {\n          if (j + 1 < C && map[i][j + 1] != '?')\n            map[i][j] = map[i][j + 1];\n        }\n      }\n    }\n    for (i = 0; i < R; i++) {\n      for (j = 0; j < C; j++) {\n        if (map[i][j] == '?' && i - 1 >= 0) {\n          map[i][j] = map[i - 1][j];\n        }\n      }\n    }\n    for (i = R - 1; i >= 0; i--) {\n      for (j = 0; j < C; j++) {\n        if (map[i][j] == '?' && i + 1 < R) {\n          map[i][j] = map[i + 1][j];\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", t);\n    for (i = 0; i < R; i++)\n      printf(\"%s\\n\", map[i]);\n  }\n\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nstruct H {\n  long long int pos, speed;\n};\nint T;\nlong long int D;\nint N;\nH h[1001];\n\nbool order(const H &x, const H &y) {\n  if (x.pos < y.pos)\n    return true;\n  else\n    return false;\n}\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i;\n\n  scanf(\"%d\", &T);\n  for (t = 1; t <= T; t++) {\n    scanf(\"%lld %d\", &D, &N);\n    for (i = 0; i < N; i++)\n      scanf(\"%lld %lld\", &h[i].pos, &h[i].speed);\n\n    double max = 0;\n    for (i = 0; i < N; i++) {\n      if (max < (double)(D - h[i].pos) \/ (double)h[i].speed)\n        max = (double)(D - h[i].pos) \/ (double)h[i].speed;\n    }\n    printf(\"Case #%d: \", t);\n    printf(\"%lf\\n\", (double)D \/ max);\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <stdio.h>\n#include <string>\nusing namespace std;\n\nint T;\nint N;\nint S[10];\nint Temp[10];\nbool err;\nstring seq;\n\nchar alpha[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nint idx[6] = {3, 4, 5, 0, 1, 2};\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j, k;\n\n  scanf(\"%d\", &T);\n  for (t = 1; t <= T; t++) {\n    scanf(\"%d\", &N);\n    for (i = 0; i < 6; i++)\n      scanf(\"%d\", &S[i]);\n\n    for (k = 0; k < 6; k += 2) {\n      for (i = 0; i < 6; i++)\n        Temp[i] = S[i];\n      if (Temp[k] != 0) {\n        int pos = k;\n\n        err = false;\n        seq.clear();\n        for (i = 0; i < N; i++) {\n          if (Temp[pos] == 0) {\n            err = true;\n            break;\n          }\n          Temp[pos]--;\n          seq += alpha[pos];\n          if (Temp[idx[pos]] != 0) {\n            Temp[idx[pos]]--;\n            seq += alpha[idx[pos]];\n            i++;\n            continue;\n          }\n          bool found = false;\n          int max = 0, select = -1;\n          for (j = 0; j < 6; j += 2) {\n            if (pos != j && Temp[j] != 0) {\n              if (max < Temp[j]) {\n                max = Temp[j];\n                select = j;\n                found = true;\n              }\n            }\n          }\n          if (!found && i != N - 1) {\n            err = true;\n            break;\n          }\n          pos = select;\n        }\n        if (seq.front() == seq.back())\n          err = true;\n\n        if (!err)\n          break;\n        else\n          seq.clear();\n      }\n    }\n\n    if (err)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    else {\n      printf(\"Case #%d: \", t);\n      cout << seq << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"moonbing","func":"#include <iostream>\n#include <queue>\n#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nstruct H {\n  double dis, speed;\n};\nstruct Node {\n  int idx;\n  double cost;\n};\nstruct QUE {\n  int pos;\n  double time;\n  double dis;\n  double speed;\n\n  bool operator<(const QUE &rhs) const { return time > rhs.time; }\n};\nint T;\nint N, Q;\nH h[101];\nvector<Node> list[101];\n\ndouble Solve(int src, int dst) {\n  int i;\n\n  priority_queue<QUE> que;\n  que.push({src, 0, h[src].dis, h[src].speed});\n\n  while (true) {\n    if (que.empty())\n      break;\n    QUE current = que.top();\n    que.pop();\n\n    if (current.pos == dst)\n      return current.time;\n\n    for (i = 0; i < list[current.pos].size(); i++) {\n      int dst = list[current.pos][i].idx;\n      double cost = list[current.pos][i].cost;\n      if (current.dis >= cost) {\n        que.push({dst, current.time + cost \/ current.speed, current.dis - cost,\n                  current.speed});\n      }\n      if (h[current.pos].dis >= cost) {\n        que.push({dst, current.time + cost \/ h[current.pos].speed,\n                  h[current.pos].dis - cost, h[current.pos].speed});\n      }\n    }\n  }\n  return 0;\n}\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  int i, j;\n  double x;\n  int s, e;\n\n  scanf(\"%d\", &T);\n  for (t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &Q);\n    for (i = 1; i <= N; i++)\n      scanf(\"%lf %lf\", &h[i].dis, &h[i].speed);\n\n    for (i = 1; i <= N; i++)\n      list[i].clear();\n    for (i = 1; i <= N; i++) {\n      for (j = 1; j <= N; j++) {\n        scanf(\"%lf\", &x);\n        if (x >= 0)\n          list[i].push_back({j, x});\n      }\n    }\n    printf(\"Case #%d:\", t);\n    for (i = 0; i < Q; i++) {\n      scanf(\"%d %d\", &s, &e);\n      printf(\" %lf\", Solve(s, e));\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 1e6 + 5;\n\nint t;\nstring s;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int x = (1); x <= ((t)); ++x) {\n    cin >> s;\n    for (int i = ((int)s.size() - 2); i >= (0); --i) {\n      if (s[i + 1] < s[i]) {\n        for (int j = (i + 1); j <= ((int)s.size() - 1); ++j)\n          s[j] = '9';\n        s[i]--;\n      }\n    }\n    if (s[0] == '0')\n      s = s.substr(1, (int)s.size() - 1);\n    cout << \"Case #\" << x << \": \";\n    cout << s << endl;\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 1e6 + 5;\n\nint t, cnt[5];\n\nvoid solve(int n, int k) {\n  if (n == k) {\n    cout << \"0 0\\n\";\n    return;\n  }\n\n  int pot = 1;\n\n  int a = n, b = 0;\n  cnt[0] = 1;\n  cnt[1] = 0;\n  while (pot < k) {\n    int newA = 0, newB = 0;\n    newA = a \/ 2;\n    cnt[2] = cnt[0];\n    if (a - newA - 1 != newA && newA != 1) {\n      cnt[3] = cnt[0];\n      newB = a - newA - 1;\n    } else {\n      if (a != 2)\n        cnt[2] += cnt[0];\n    }\n\n    if (b > 1) {\n      if (b % 2 == 0) {\n        if (b != 2) {\n          newB = b - (b \/ 2) - 1;\n          cnt[3] += cnt[1];\n        }\n        cnt[2] += cnt[1];\n      } else {\n        cnt[3] += cnt[1] * 2;\n      }\n    } else {\n      cnt[2] += cnt[1];\n      if (a != n && b != 0)\n        k++;\n    }\n\n    a = newA;\n    b = newB;\n    cnt[0] = cnt[2];\n    cnt[1] = cnt[3];\n    cnt[2] = cnt[3] = 0;\n    \/\/ cout<<a<<\" \"<<b<<\" \"<<cnt[0]<<\" \"<<cnt[1]<<\" \"<<k<<\" \"<<pot<<endl;\n    k -= pot;\n    pot *= 2;\n  }\n  \/\/ cout<<a<<\" \"<<b<<\" \"<<cnt[0]<<\" \"<<cnt[1]<<\" \"<<k<<endl;\n  if (k > cnt[0])\n    a = b;\n  cout << a \/ 2 << \" \" << max(0, a - (a \/ 2) - 1) << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int x = (1); x <= ((t)); ++x) {\n    int n, k;\n    cin >> n >> k;\n    cout << \"Case #\" << x << \": \";\n    solve(n, k);\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 1e6 + 5;\n\nint t, k;\nstring s;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int x = (1); x <= ((t)); ++x) {\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = (0); i <= (((int)s.size() - k + 1) - 1); ++i) {\n      if (s[i] == '-') {\n        for (int j = (i); j <= (i + k - 1); ++j)\n          if (s[j] == '+')\n            s[j] = '-';\n          else\n            s[j] = '+';\n        ans++;\n      }\n    }\n    for (int i = (0); i <= (((int)s.size()) - 1); ++i)\n      if (s[i] == '-') {\n        ans = -1;\n        break;\n      }\n    cout << \"Case #\" << x << \": \";\n    if (ans == -1)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 50;\nconst int M = 50;\nconst int N = 50;\n\nint t, n, p;\nint req[maxN], minim[maxN][maxN], arr[maxN][maxN], maxim[maxN][maxN];\nbool graph[maxN][maxN];\n\nbool przeciecie(int i, int j) {\n  if (minim[1][i] == inf || minim[2][j] == inf)\n    return false;\n  if (minim[1][i] >= minim[2][j] && minim[1][i] <= maxim[2][j])\n    return true;\n  if (maxim[1][i] >= minim[2][j] && maxim[1][i] <= maxim[2][j])\n    return true;\n  return false;\n}\n\n\/\/ maximal bipartite matching code copied from\n\/\/ http:\/\/www.geeksforgeeks.org\/maximum-bipartite-matching\/\nbool bpm(bool bpGraph[M][N], int u, bool seen[], int matchR[]) {\n  \/\/ Try every job one by one\n  for (int v = 0; v < N; v++) {\n    \/\/ If applicant u is interested in job v and v is\n    \/\/ not visited\n    if (bpGraph[u][v] && !seen[v]) {\n      seen[v] = true; \/\/ Mark v as visited\n\n      \/\/ If job 'v' is not assigned to an applicant OR\n      \/\/ previously assigned applicant for job v (which is matchR[v])\n      \/\/ has an alternate job available.\n      \/\/ Since v is marked as visited in the above line, matchR[v]\n      \/\/ in the following recursive call will not get job 'v' again\n      if (matchR[v] < 0 || bpm(bpGraph, matchR[v], seen, matchR)) {\n        matchR[v] = u;\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n\/\/ Returns maximum number of matching from M to N\nint maxBPM(bool bpGraph[M][N]) {\n  \/\/ An array to keep track of the applicants assigned to\n  \/\/ jobs. The value of matchR[i] is the applicant number\n  \/\/ assigned to job i, the value -1 indicates nobody is\n  \/\/ assigned.\n  int matchR[N];\n\n  \/\/ Initially all jobs are available\n  memset(matchR, -1, sizeof(matchR));\n\n  int result = 0; \/\/ Count of jobs assigned to applicants\n  for (int u = 0; u < M; u++) {\n    \/\/ Mark all jobs as not seen for next applicant.\n    bool seen[N];\n    memset(seen, 0, sizeof(seen));\n\n    \/\/ Find if the applicant 'u' can get a job\n    if (bpm(bpGraph, u, seen, matchR))\n      result++;\n  }\n  return result;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int test = (1); test <= ((t)); ++test) {\n    cin >> n >> p;\n    for (int i = (1); i <= ((n)); ++i) {\n      cin >> req[i];\n    }\n\n    for (int x = (1); x <= ((n)); ++x)\n      for (int j = (1); j <= ((p)); ++j) {\n        minim[x][j] = maxim[x][j] = inf;\n      }\n    for (int i = (1); i <= ((40)); ++i) {\n      for (int j = (1); j <= ((40)); ++j) {\n        graph[i][j] = 0;\n        minim[i][j] = maxim[i][j] = inf;\n      }\n    }\n    for (int i = (1); i <= ((n)); ++i)\n      for (int j = (1); j <= ((p)); ++j)\n        cin >> arr[i][j];\n\n    for (int x = (1); x <= ((n)); ++x) {\n      for (int j = (1); j <= ((p)); ++j) {\n        float weight = req[x];\n        int cnt = 1;\n        while (weight <= 2 * arr[x][j]) {\n          if (arr[x][j] >= 0.9 * weight && arr[x][j] <= 1.1 * weight) {\n            minim[x][j] = min(minim[x][j], cnt);\n            maxim[x][j] = cnt;\n          }\n          weight += req[x];\n          cnt++;\n        }\n      }\n    }\n\n    cout << \"Case #\" << test << \": \";\n    if (n == 1) {\n      int ans = 0;\n      for (int j = (1); j <= ((p)); ++j) {\n        if (minim[1][j] != inf)\n          ans++;\n      }\n      cout << ans << endl;\n    } else {\n      for (int i = (1); i <= ((p)); ++i)\n        for (int j = (1); j <= ((p)); ++j)\n          if (przeciecie(i, j)) {\n            graph[i][j] = 1;\n            \/\/ cout<<i<<\" \"<<j * p + 1<<endl;\n            \/\/ cout<<minim[1][i]<<\" \"<<maxim[1][i]<<\" \"<<minim[2][j]<<\"\n            \/\/ \"<<maxim[2][j]<<endl;\n          }\n      \/* RI(i, 30) {\n              RI(j, 30) {\n                      cout<<graph[i][j]<<\" \";\n              }\n              cout<<endl;\n      } *\/\n      cout << maxBPM(graph) << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 100 + 5;\n\nint t, k, n;\nint can[maxN][maxN];\nstring s[maxN];\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int x = (1); x <= ((t)); ++x) {\n    cin >> n >> k;\n    for (int i = (0); i <= ((n)-1); ++i)\n      cin >> s[i];\n\n    int pom = -1;\n    for (int i = (0); i <= ((n)-1); ++i) {\n      for (int j = (0); j <= ((k)-1); ++j) {\n        if (s[i][j] != '?' && (pom == i || pom == -1)) {\n          for (int l = (0); l <= ((n)-1); ++l) {\n            for (int m = (0); m <= ((k)-1); ++m) {\n              if (s[l][m] == '?' && l <= i && m <= j) {\n                s[l][m] = s[i][j];\n              }\n            }\n          }\n          pom = i;\n        }\n        \/\/ cout<<i<<\" \"<<j<<\" \"<<pom<<\" \"<<s[i][j]<<endl;\n        if (pom != -1 && i > pom)\n          break;\n      }\n      if (pom != -1 && i > pom)\n        break;\n    }\n\n    for (int i = (0); i <= ((n)-1); ++i) {\n      int pos = -1;\n      for (int j = (0); j <= ((k)-1); ++j) {\n        if (s[i][j] != '?') {\n          pos = j;\n          break;\n        }\n      }\n\n      if (pos != -1) {\n        char first = s[i][pos];\n        for (int j = (0); j <= ((k)-1); ++j) {\n          if (s[i][j] == '?') {\n            s[i][j] = first;\n          } else {\n            first = s[i][j];\n          }\n        }\n      } else {\n        for (int j = (0); j <= ((k)-1); ++j)\n          s[i][j] = s[i - 1][j];\n      }\n    }\n\n    cout << \"Case #\" << x << \": \" << endl;\n    for (int i = (0); i <= ((n)-1); ++i) {\n      cout << s[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 1e6 + 5;\n\nint d, n, start[maxN], speed[maxN], t;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int x = (1); x <= ((t)); ++x) {\n    cin >> d >> n;\n    long double maxim = 0;\n    for (int i = (0); i <= ((n)-1); ++i) {\n      cin >> start[i] >> speed[i];\n      long double time = (long double)(d - start[i]) \/ (long double)speed[i];\n      maxim = max(maxim, time);\n    }\n\n    cout << \"Case #\" << x << \": \";\n    cout << fixed << setprecision(12) << d \/ maxim << endl;\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<pii, int> para;\nconst int inf = 1e9 + 7;\nconst int maxN = 1e6 + 5;\nconst int M = 50;\nconst int N = 50;\n\nint t, r, o, y, g, b, v, ans[maxN], sum;\nset<pii, greater<pii>> s;\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (int test = (1); test <= ((t)); ++test) {\n    cin >> sum >> r >> o >> y >> g >> b >> v;\n    s.clear();\n    if (r > 0)\n      s.insert(pii(r, 1));\n    if (y > 0)\n      s.insert(pii(y, 2));\n    if (b > 0)\n      s.insert(pii(b, 3));\n    int maxim = max(r, y);\n    maxim = max(maxim, b);\n    cout << \"Case #\" << test << \": \";\n    \/\/ s.clear();\n    if (maxim > sum \/ 2) {\n      cout << \"IMPOSSIBLE\";\n    } else {\n      pii x = *s.begin();\n      s.erase(s.begin());\n      ans[0] = x.second;\n      s.insert(pii(x.first - 1, x.second));\n\n      int cnt = 1;\n      while (cnt < sum) {\n        pii x = *s.begin();\n        if (x.second == ans[cnt - 1]) {\n          pii tmp = x;\n          s.erase(s.begin());\n          x = *s.begin();\n          ans[cnt] = x.second;\n          s.erase(s.begin());\n          if (x.first > 0)\n            s.insert(pii(x.first - 1, x.second));\n          s.insert(tmp);\n        } else {\n          \/\/ cout<<x.st<<\" \"<<x.nd<<endl;\n          ans[cnt] = x.second;\n          s.erase(s.begin());\n          if (x.first > 0)\n            s.insert(pii(x.first - 1, x.second));\n        }\n        cnt++;\n      }\n      if (ans[sum - 1] == ans[0]) {\n        swap(ans[sum - 1], ans[sum - 2]);\n        if (ans[sum - 2] == ans[sum - 3]) {\n          cout << \"IMPOSSIBLE\";\n        } else {\n          for (int i = (0); i <= ((sum)-1); ++i) {\n            if (ans[i] == 1)\n              cout << \"R\";\n            if (ans[i] == 2)\n              cout << \"Y\";\n            if (ans[i] == 3)\n              cout << \"B\";\n          }\n        }\n      } else {\n        for (int i = (0); i <= ((sum)-1); ++i) {\n          if (ans[i] == 1)\n            cout << \"R\";\n          if (ans[i] == 2)\n            cout << \"Y\";\n          if (ans[i] == 3)\n            cout << \"B\";\n        }\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"Mucosolvan","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<ll, ll> pii;\ntypedef pair<pii, ll> para;\nconst ll inf = 1e16 + 7;\nconst ll maxN = 1e3 + 5;\n\nint n, q, u, v, t;\nint horse[maxN], dist[maxN][maxN], speed[maxN];\nll pref[maxN];\nld dp[maxN];\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  for (ll x = (1); x <= ((t)); ++x) {\n    cin >> n >> q;\n    for (ll i = (1); i <= ((n)); ++i)\n      cin >> horse[i] >> speed[i];\n    for (ll i = (1); i <= ((n)); ++i) {\n      for (ll j = (1); j <= ((n)); ++j) {\n        cin >> dist[i][j];\n      }\n    }\n    pref[1] = 0;\n    for (ll i = (2); i <= (n); ++i) {\n      pref[i] = pref[i - 1] + dist[i - 1][i];\n    }\n    cout << \"Case #\" << x << \": \";\n    for (ll _ = (0); _ <= ((q)-1); ++_) {\n      cin >> u >> v;\n      for (ll i = (1); i <= ((n)); ++i)\n        dp[i] = (ld)inf;\n      dp[1] = 0;\n      for (ll i = (1); i <= ((n)); ++i) {\n        for (ll j = (i + 1); j <= (n); ++j) {\n          \/\/ cout<<i<<\" \"<<j<<\" \"<<dist<<endl;\n          if (pref[j] - pref[i] > horse[i])\n            break;\n          dp[j] = min(dp[j], dp[i] + (pref[j] - pref[i]) \/ (ld)speed[i]);\n        }\n      }\n      cout << fixed << setprecision(9) << dp[n];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Qualification Round]\nProblem: B. Tidy Numbers (20 Points)\n\nAuthor: Phawin Prongpaophan\n*\/\n#include <algorithm>\n#include <stdio.h>\n\nusing namespace std;\n\nlong long powTen[19];\nlong long someOne[19];\n\nvoid preProcess() {\n  powTen[0] = 1;\n  for (int i = 1; i < 19; i++)\n    powTen[i] = powTen[i - 1] * 10;\n  someOne[0] = 1;\n  for (int i = 1; i < 19; i++) {\n    someOne[i] = (10 * someOne[i - 1]) + 1;\n  }\n}\n\nint getHighestDigit(long long val) {\n  for (int i = 18; i >= 0; i--) {\n    if (val \/ powTen[i] > 0)\n      return i;\n  }\n}\n\nlong long getTidy(long long val) {\n  if (val < 10)\n    return val;\n  int sd = getHighestDigit(val);\n  long long firstDigit = val \/ powTen[sd];\n  long long remaining = val - (firstDigit * powTen[sd]);\n  long long det = firstDigit * someOne[sd - 1];\n  if (remaining < det)\n    return ((firstDigit * powTen[sd]) - 1);\n  return (firstDigit * powTen[sd]) + getTidy(remaining);\n}\n\nlong long solve() {\n  long long w;\n  scanf(\"%lld\", &w);\n  long long ret = getTidy(w);\n  return ret;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-SmallOutput.txt\", \"w\", stdout);\n  preProcess();\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int p = 1; p <= tc; p++) {\n    printf(\"Case #%d: \", p);\n    long long ans = solve();\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Qualification Round]\nProblem: C. Bathroom Stalls (30 Points)\n\nAuthor: Phawin Prongpaophan\n*\/\n#include <algorithm>\n#include <stdio.h>\n#include <utility>\n\nusing namespace std;\n\npair<long long, long long> solve(long long pos, long long n) {\n  if (pos == 1) {\n    pair<long long, long long> ret;\n    ret.first = (n + 1) \/ 2;\n    ret.second = (n + 1) - (ret.first);\n    return ret;\n  }\n  \/\/ Go!\n  long long smallHalf = (n - 1) \/ 2;\n  long long bigHalf = (n - 1) - smallHalf;\n  long long rem = pos - 1;\n  if (rem % 2 == 1) \/\/ Big\n  {\n    return solve((rem + 1) \/ 2, bigHalf);\n  }\n  return solve(rem \/ 2, smallHalf);\n}\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-Small1Output.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int p = 1; p <= tc; p++) {\n    printf(\"Case #%d: \", p);\n    long long n, k;\n    scanf(\"%lld%lld\", &n, &k);\n    pair<long long, long long> ans = solve(k, n);\n    printf(\"%lld %lld\\n\", ans.second - 1, ans.first - 1);\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Qualification Round]\nProblem: A. Oversized Pancake Flipper (15 Points)\n\nAuthor: Phawin Prongpaophan\n*\/\n\n#include <algorithm>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\n\nint n, k;\nchar board[2222];\nint dp[2222];\n\nint solve() {\n  scanf(\"%s\", board);\n  scanf(\"%d\", &k);\n  n = strlen(board);\n  \/\/ Reset Phase\n  int flipCount = 0;\n  int cumulativeFlip = 0;\n  for (int i = 0; i <= n; i++)\n    dp[i] = 0;\n  \/\/ Flip Phase!\n  for (int i = 0; i + k - 1 < n; i++) {\n    int curState = 0;\n    if (board[i] == '-')\n      curState = 1;\n    cumulativeFlip += dp[i];\n    curState += cumulativeFlip;\n    curState %= 2;\n    if (curState == 0)\n      continue; \/\/ No Flip\n    flipCount++;\n    cumulativeFlip++;\n    dp[i + k] -= 1;\n  }\n  \/\/ Check Phase!\n  for (int i = n - k + 1; i < n; i++) {\n    int curState = 0;\n    if (board[i] == '-')\n      curState = 1;\n    cumulativeFlip += dp[i];\n    curState += cumulativeFlip;\n    curState %= 2;\n    if (curState == 0)\n      continue; \/\/ Good\n    return -1;  \/\/ Impossible!\n  }\n  return flipCount;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"SmallOutput.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int p = 1; p <= tc; p++) {\n    printf(\"Case #%d: \", p);\n    int ans = solve();\n    if (ans < 0) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Round 1A]\n*\/\n\n#include <algorithm>\n#include <math.h>\n#include <queue>\n#include <stdio.h>\n#include <utility>\n\nusing namespace std;\n\nint n, p;\nint req[55];\n\nint pack[55][55];\nint cp[55][55];\nbool closed[55][55];\nint openCount[55];\npriority_queue<pair<int, pair<int, int>>> deadList[55];\nint point = 0;\n\nstruct ingredient {\n  int val;\n  pair<int, int> pos;\n  char mode;\n};\nvector<ingredient> bank;\n\nvoid calculation(int r, int c) {\n  double want = req[r];\n  double have = pack[r][c];\n  \/\/ Part A\n  double lb = have \/ (1.1 * want);\n  lb = ceil(lb);\n  \/\/ Part B\n  double ub = have \/ (0.9 * want);\n  ub = floor(ub);\n  \/\/ Check\n  int l = (int)lb;\n  if (l == 0)\n    l++;\n  int u = (int)ub;\n  if (l > u) {\n    closed[r][c] = true;\n    return;\n  } \/\/ Impossible in any number\n  \/\/ printf(\"->[%d,%d]\\n\",l,u);\n  \/\/ Make Something!\n  ingredient tst;\n  tst.pos = make_pair(r, c);\n\n  tst.val = l;\n  tst.mode = 'O';\n  bank.push_back(tst);\n  tst.val = u;\n  tst.mode = 'C';\n  bank.push_back(tst);\n  cp[r][c] = u;\n  return;\n}\n\nbool mycmp(const ingredient &ls, const ingredient &rs) {\n  if (ls.val != rs.val)\n    return (ls.val < rs.val);\n  return ls.mode > rs.mode;\n}\n\nbool isOk() {\n  for (int i = 0; i < n; i++)\n    if (openCount[i] <= 0)\n      return false;\n  return true;\n}\n\nvoid takeIt() {\n  for (int i = 0; i < n; i++) {\n    pair<int, pair<int, int>> t = deadList[i].top();\n    deadList[i].pop();\n    openCount[i]--;\n    int cr = t.second.first;\n    int cc = t.second.second;\n    closed[cr][cc] = true;\n  }\n  point++;\n}\n\nvoid process(int idx) {\n  \/\/ printf(\"PROCESSING\n  \/\/ <%d(%d,%d),%c>\",bank[idx].val,bank[idx].pos.x,bank[idx].pos.y,bank[idx].mode);\n  int cr = bank[idx].pos.first;\n  int cc = bank[idx].pos.second;\n  if (bank[idx].mode == 'C') \/\/ Close\n  {\n    if (closed[cr][cc])\n      return; \/\/ Nothing to do\n    deadList[cr].pop();\n    openCount[cr]--;\n    closed[cr][cc] = true;\n    return;\n  }\n  \/\/ OPEN!\n  \/\/ printf(\"OPEN\\n\");\n  int closePoint = cp[cr][cc];\n  deadList[cr].push(make_pair(-1 * closePoint, bank[idx].pos));\n  openCount[cr]++;\n  \/\/ Check if it's a possible move\n  bool vd = isOk();\n  if (!vd)\n    return;\n  \/\/ Take It!\n  takeIt();\n  return;\n}\n\nvoid debug() {\n  printf(\"Current status\\n\");\n  for (int i = 0; i < bank.size(); i++) {\n    printf(\"Mode: %c, Position: %d, [%d,%d]\\n\", bank[i].mode, bank[i].val,\n           bank[i].pos.first, bank[i].pos.second);\n  }\n}\n\nint solve() {\n  scanf(\"%d%d\", &n, &p);\n  for (int i = 0; i < n; i++)\n    scanf(\"%d\", &req[i]);\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++)\n      scanf(\"%d\", &pack[i][j]);\n  \/\/ Some Reset\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++)\n      closed[i][j] = false;\n  bank.clear();\n  for (int i = 0; i < n; i++)\n    openCount[i] = 0;\n  for (int i = 0; i < n; i++)\n    while (!deadList[i].empty())\n      deadList[i].pop();\n  point = 0;\n  \/\/ Calculation\n  \/\/ printf(\"Calculation Process\\n\");\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++)\n      calculation(i, j);\n  \/\/ printf(\"End Of Calculation\\n\");\n  if (bank.empty())\n    return 0; \/\/ Obvious!\n  sort(bank.begin(), bank.end(), mycmp);\n  \/\/ printf(\"Sorted\\n\");\n  \/\/ debug();\n\n  \/\/ Go!\n  int z = bank.size();\n  for (int i = 0; i < z; i++)\n    process(i);\n  return point;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-SmallOutput.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    int ans = solve();\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Round 1A]\n*\/\n\n#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint r, c;\nchar board[33][33];\n\nbool isEmpty(int row) {\n  for (int i = 0; i < c; i++)\n    if (board[row][i] != '?')\n      return false;\n  return true;\n}\n\nvoid fillRow(int row) {\n  int fid = 0;\n  while (board[row][fid] == '?')\n    fid++;\n  \/\/ Pre Fill\n  for (int j = 0; j < fid; j++)\n    board[row][j] = board[row][fid];\n  char current = board[row][fid];\n  for (int j = fid + 1; j < c; j++) {\n    if (board[row][j] != '?') {\n      current = board[row][j];\n      continue;\n    }\n    board[row][j] = current;\n  }\n  return;\n}\n\nvoid copyRow(int from, int to) {\n  for (int j = 0; j < c; j++)\n    board[to][j] = board[from][j];\n}\n\nvoid solve() {\n  scanf(\"%d%d\", &r, &c);\n  for (int i = 0; i < r; i++)\n    scanf(\"%s\", board[i]);\n  int firstBusy = 0;\n  while (isEmpty(firstBusy))\n    firstBusy++;\n  \/\/ We now have first \"BUSY\" row\n  for (int i = firstBusy; i < r; i++) {\n    if (isEmpty(i))\n      copyRow(i - 1, i);\n    else\n      fillRow(i);\n  }\n  \/\/ Fill Remaining Row\n  for (int i = firstBusy - 1; i >= 0; i--)\n    copyRow(i + 1, i);\n  \/\/ Print Answer\n  for (int i = 0; i < r; i++)\n    printf(\"%s\\n\", board[i]);\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-SmallOutput.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d:\\n\", t);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Round 1B]\n*\/\n\n#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint n;\ndouble dst;\n\ndouble startPoint[1111];\ndouble speed[1111];\n\ndouble getHorse(int idx) {\n  \/\/ printf(\"GetHorse #%d\\n\",idx+1);\n  double distanceLeft = dst - startPoint[idx];\n  \/\/ printf(\"DistanceLeft: %.3f\\n\",distanceLeft);\n  double timeUsed = distanceLeft \/ speed[idx];\n  \/\/ printf(\"Time used: %.3f\\n\",timeUsed);\n  double allow = dst \/ timeUsed;\n  \/\/ printf(\"Allow: %.3f\\n\",allow);\n  return dst \/ timeUsed;\n}\n\ndouble solve() {\n  int d;\n  scanf(\"%d%d\", &d, &n);\n  dst = d;\n  for (int i = 0; i < n; i++) {\n    int k, s;\n    scanf(\"%d%d\", &k, &s);\n    startPoint[i] = k;\n    speed[i] = s;\n  }\n  double worst = 99999999999999.999;\n  for (int i = 0; i < n; i++) {\n    double thisTime = getHorse(i);\n    worst = min(worst, thisTime);\n  }\n  return worst;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-Small.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    double ans = solve();\n    printf(\"%.9f\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Round 1B]\n*\/\n\n#include <algorithm>\n#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nint n;\nint r, o, y, g, b, v;\n\nvector<char> current;\n\nchar color[12] = \"XRYOBVGX\";\nint cnt[12];\n\nbool mycmp(const int &ls, const int &rs) { return cnt[ls] > cnt[rs]; }\n\nvoid noGroupSolver() {\n  char test[1010];\n  test[n] = '\\0';\n  int tmp[4] = {1, 2, 4, 99};\n  sort(tmp, tmp + 3, mycmp);\n  if (cnt[tmp[0]] > n \/ 2) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  } \/\/ Fail\n  int high = cnt[tmp[0]];\n  int lastCell = 2 * high - 1;\n  int spaceLeft = n - lastCell;\n  int det = spaceLeft \/ 2;\n  int low = cnt[tmp[2]];\n  if (low < det) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  } \/\/ Fail\n  for (int i = 0; i < high; i++)\n    test[2 * i] = color[tmp[0]];\n  \/\/ Big Gap Solver\n  for (int i = 2 * (high - 1) + 1; i < n; i++) {\n    \/\/ printf(\"FINDING: %d\\n\",i);\n    if (i % 2 == 1) {\n      test[i] = color[tmp[1]];\n    } else {\n      test[i] = color[tmp[2]];\n      low--;\n    }\n  }\n  \/\/ Space\n  for (int i = 1; i < high; i++) {\n    if (low > 0) {\n      test[2 * i - 1] = color[tmp[2]];\n      low--;\n    } else\n      test[2 * i - 1] = color[tmp[1]];\n  }\n  printf(\"%s\\n\", test);\n}\n\nvoid each() {\n  scanf(\"%d\", &n);\n  scanf(\"%d%d%d%d%d%d\", &r, &o, &y, &g, &b, &v);\n  cnt[1] = r;\n  cnt[2] = y;\n  cnt[3] = o;\n  cnt[4] = b;\n  cnt[5] = v;\n  cnt[6] = g;\n  int special = o + v + g;\n  \/\/ printf(\"Special Count: %d\\n\",special);\n  if (special > n \/ 2) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  } \/\/ Fail\n  if (special == 0) {\n    noGroupSolver();\n    return;\n  }\n  \/\/ SMALL INPUT HAS NO MULTI COLOR!\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-Small.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    each();\n  }\n  return 0;\n}\n"}
{"target":"Mysteryname","func":"\n\/*\nContest: Google Code Jam 2017 [Round 1B]\n*\/\n\n#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint n, q;\ndouble bat[1111];\ndouble speed[1111];\ndouble cumu[1111];\n\ndouble dst[1111][1111];\ndouble dp[1111];\n\ndouble solve() {\n  scanf(\"%d%d\", &n, &q);\n  for (int i = 0; i < n; i++) {\n    int e, s;\n    scanf(\"%d%d\", &e, &s);\n    bat[i] = e;\n    speed[i] = s;\n  }\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < n; j++) {\n      int d;\n      scanf(\"%d\", &d);\n      dst[i][j] = d;\n    }\n  int t1, t2;\n  scanf(\"%d%d\", &t1, &t2); \/\/ Just Waste for SMALL\n  cumu[0] = 0;\n  for (int i = 0; i + 1 < n; i++)\n    cumu[i + 1] = cumu[i] + dst[i][i + 1];\n  for (int i = 0; i < n; i++)\n    dp[i] = 999999999999999.999;\n  \/\/ Calculate\n  dp[n - 1] = 0;\n  for (int i = n - 2; i >= 0; i--) {\n    for (int j = i + 1; j < n; j++) {\n      double togo = cumu[j] - cumu[i];\n      if (togo > bat[i])\n        break;\n      double tu = togo \/ speed[i];\n      dp[i] = min(dp[i], tu + dp[j]);\n    }\n  }\n  return dp[0];\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-Small.txt\", \"w\", stdout);\n  int tc;\n  scanf(\"%d\", &tc);\n  for (int t = 1; t <= tc; t++) {\n    printf(\"Case #%d: \", t);\n    double ans = solve();\n    printf(\"%.9f\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\nusing std::pair;\nusing std::vector;\nchar str[20];\nint n;\npair<vector<int>, bool> dy[20][2][2][10];\nbool chk[20][2][2][10];\n\npair<vector<int>, bool> go(int idx, bool start, bool less, int num) {\n  if (idx == n) {\n    return {{}, start};\n  }\n  auto &ret = dy[idx][start][less][num];\n  if (chk[idx][start][less][num]) {\n    return ret;\n  }\n  chk[idx][start][less][num] = true;\n\n  if (start) {\n    if (less) {\n      for (int i = 9; i >= num; i--) {\n        auto p = go(idx + 1, true, true, i);\n        if (p.second) {\n          ret = p;\n          ret.first.push_back(i);\n          break;\n        }\n      }\n    } else {\n      for (int i = str[idx]; i >= num; i--) {\n        auto p = go(idx + 1, true, str[idx] != i, i);\n        if (p.second) {\n          ret = p;\n          ret.first.push_back(i);\n          break;\n        }\n      }\n    }\n\n  } else {\n    auto p = go(idx, true, less, 1);\n    if (p.second) {\n      ret = p;\n    } else {\n      ret = go(idx + 1, false, true, 0);\n    }\n  }\n  return ret;\n}\n\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int q = 0;\n  while (tc--) {\n    memset(chk, 0, sizeof(chk));\n    for (int i = 0; i < 20; i++) {\n      for (int j = 0; j < 2; j++) {\n        for (int k = 0; k < 2; k++) {\n          for (int p = 0; p < 10; p++) {\n            dy[i][j][k][p].first.clear();\n            dy[i][j][k][p].second = 0;\n          }\n        }\n      }\n    }\n    scanf(\"%s\", str);\n    n = strlen(str);\n    for (int i = 0; i < n; i++) {\n      str[i] -= '0';\n    }\n    auto ans = go(0, 0, 0, 0).first;\n    std::reverse(ans.begin(), ans.end());\n    q++;\n    printf(\"Case #%d: \", q);\n    for (int i : ans) {\n      printf(\"%d\", i);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\n\nstd::map<long long, long long, std::greater<long long>> map;\nlong long minV(long long a) { return (a - 1) \/ 2; }\nlong long maxV(long long a) { return a \/ 2; }\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int q = 0;\n  while (tc--) {\n    long long n;\n    long long k;\n    scanf(\"%lld%lld\", &n, &k);\n    map.clear();\n    map[n]++;\n    q++;\n    printf(\"Case #%d: \", q);\n    while (true) {\n      long long p = (*map.begin()).first;\n      long long cnt = (*map.begin()).second;\n      map.erase(map.begin());\n      map[maxV(p)] += cnt;\n      map[minV(p)] += cnt;\n      if (cnt >= k) {\n        printf(\"%lld %lld\\n\", maxV(p), minV(p));\n        break;\n      } else {\n        k -= cnt;\n      }\n    }\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\nchar str[1010];\nchar filp(char ch) {\n  if (ch == '+')\n    return '-';\n  return '+';\n}\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int p = 0;\n  while (tc--) {\n    int k;\n    scanf(\"%s%d\", str, &k);\n    int cnt = 0;\n    for (int i = 0; str[i + k - 1] != '\\0'; i++) {\n      if (str[i] == '-') {\n        cnt++;\n        for (int j = 0; j < k; j++) {\n          str[i + j] = filp(str[i + j]);\n        }\n      }\n    }\n    for (int i = 0; str[i] != '\\0'; i++) {\n      if (str[i] == '-') {\n        cnt = -1;\n        break;\n      }\n    }\n    p++;\n    if (cnt == -1) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", p);\n    } else {\n      printf(\"Case #%d: %d\\n\", p, cnt);\n    }\n  }\n}\n"}
{"target":"nein","func":"#include <algorithm>\n#include <bits\/stdc++.h>\n#include <queue>\n#include <stdio.h>\n#include <vector>\nusing std::vector;\nstruct BipartiteMatching {\n  vector<int> L;\n  vector<int> R;\n  vector<vector<int>> G;\n  vector<int> dist;\n  BipartiteMatching(int n, int m) {\n    L.resize(n, -1);\n    R.resize(m, -1);\n    G.resize(n);\n    dist.resize(n);\n  }\n  void add_edge(int from, int to) { G[from].push_back(to); }\n  bool bfs() {\n    std::queue<int> que;\n    for (int i = 0; i < L.size(); i++) {\n      if (L[i] == -1) {\n        dist[i] = 0;\n        que.push(i);\n      } else {\n        dist[i] = -1;\n      }\n    }\n    bool flag = false;\n    while (!que.empty()) {\n      int idx = que.front();\n      que.pop();\n      for (int to : G[idx]) {\n        if (R[to] == -1)\n          flag = true;\n        else if (dist[R[to]] == -1) {\n          dist[R[to]] = dist[idx] + 1;\n          que.push(R[to]);\n        }\n      }\n    }\n    return flag;\n  }\n  bool dfs(int idx) {\n    for (int to : G[idx]) {\n      if (R[to] == -1 || (dist[idx] < dist[R[to]] && dfs(R[to]))) {\n        R[to] = idx;\n        L[idx] = to;\n        return true;\n      }\n    }\n    dist[idx] = -1;\n    return false;\n  }\n  int matching() {\n    int ret = 0;\n    while (bfs()) {\n      for (int i = 0; i < L.size(); i++) {\n        if (L[i] == -1 && dfs(i)) {\n          ret++;\n        }\n      }\n    }\n    return ret;\n  }\n};\nint arr[60];\nlong long pack[60][60];\nint idx[60];\nlong long m10(int i) { return i - (i \/ 10); }\nlong long M10(int i) { return i + (i \/ 10); }\nbool matrix[10][10];\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int T = 0;\n  while (tc--) {\n    int n, p;\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &arr[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%lld\", &pack[i][j]);\n      }\n    }\n    for (int i = 0; i < p; i++) {\n      for (int j = 0; j < p; j++) {\n        matrix[i][j] = false;\n      }\n    }\n    if (n == 2) {\n      BipartiteMatching bm(p, p);\n      for (int c = 1; c <= 1000000; c++) {\n        for (int i = 0; i < p; i++) {\n          for (int j = 0; j < p; j++) {\n            if (m10(arr[0] * c) <= pack[0][i] &&\n                pack[0][i] <= M10(arr[0] * c) &&\n                m10(arr[1] * c) <= pack[1][j] &&\n                pack[1][j] <= M10(arr[1] * c)) {\n              matrix[i][j] = true;\n            }\n          }\n        }\n      }\n      for (int i = 0; i < p; i++) {\n        for (int j = 0; j < p; j++) {\n          if (matrix[i][j]) {\n            bm.add_edge(i, j);\n          }\n        }\n      }\n\n      T++;\n      printf(\"Case #%d: %d\\n\", T, bm.matching());\n    } else if (n == 1) {\n      std::set<int> set;\n      for (int c = 1; c <= 1000000; c++) {\n        for (int i = 0; i < p; i++) {\n          if (m10(arr[0] * c) <= pack[0][i] && pack[0][i] <= M10(arr[0] * c)) {\n            set.insert(i);\n          }\n        }\n      }\n      T++;\n      printf(\"Case #%d: %d\\n\", T, set.size());\n    } else {\n      T++;\n      printf(\"Case #%d: %d\\n\", T, 0);\n      assert(false);\n    }\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\n\nchar str[26][26];\n\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int T = 0;\n  while (tc--) {\n    int r, c;\n    scanf(\"%d%d\", &r, &c);\n    std::map<char, int> mx, Mx, my, My;\n    for (int i = 0; i < r; i++) {\n      scanf(\"%s\", str[i]);\n      for (int j = 0; j < c; j++) {\n        if (mx.count(str[i][j])) {\n          mx[str[i][j]] = std::min(mx[str[i][j]], i);\n        } else {\n          mx[str[i][j]] = i;\n        }\n        if (Mx.count(str[i][j])) {\n          Mx[str[i][j]] = std::max(Mx[str[i][j]], i);\n        } else {\n          Mx[str[i][j]] = i;\n        }\n        if (my.count(str[i][j])) {\n          my[str[i][j]] = std::min(my[str[i][j]], j);\n        } else {\n          my[str[i][j]] = j;\n        }\n        if (My.count(str[i][j])) {\n          My[str[i][j]] = std::min(My[str[i][j]], j);\n        } else {\n          My[str[i][j]] = j;\n        }\n      }\n    }\n    for (auto p : mx) {\n      char ch = p.first;\n      if (ch == '?')\n        continue;\n      for (int i = mx[ch]; i <= Mx[ch]; i++) {\n        for (int j = my[ch]; j <= My[ch]; j++) {\n          str[i][j] = ch;\n        }\n      }\n    }\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] != '?') {\n          for (int k = 1; i + k < r; k++) {\n            bool flag = false;\n            for (int p = my[str[i][j]]; p <= My[str[i][j]]; p++) {\n              if (str[i + k][p] != '?') {\n                flag = true;\n                break;\n              }\n            }\n            if (flag)\n              break;\n            for (int p = my[str[i][j]]; p <= My[str[i][j]]; p++) {\n              str[i + k][p] = str[i][j];\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (mx.count(str[i][j])) {\n          mx[str[i][j]] = std::min(mx[str[i][j]], i);\n        } else {\n          mx[str[i][j]] = i;\n        }\n        if (Mx.count(str[i][j])) {\n          Mx[str[i][j]] = std::max(Mx[str[i][j]], i);\n        } else {\n          Mx[str[i][j]] = i;\n        }\n        if (my.count(str[i][j])) {\n          my[str[i][j]] = std::min(my[str[i][j]], j);\n        } else {\n          my[str[i][j]] = j;\n        }\n        if (My.count(str[i][j])) {\n          My[str[i][j]] = std::min(My[str[i][j]], j);\n        } else {\n          My[str[i][j]] = j;\n        }\n      }\n    }\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] != '?') {\n          for (int k = -1; i + k >= 0; k--) {\n            bool flag = false;\n            for (int p = my[str[i][j]]; p <= My[str[i][j]]; p++) {\n              if (str[i + k][p] != '?') {\n                flag = true;\n                break;\n              }\n            }\n            if (flag)\n              break;\n            for (int p = my[str[i][j]]; p <= My[str[i][j]]; p++) {\n              str[i + k][p] = str[i][j];\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (mx.count(str[i][j])) {\n          mx[str[i][j]] = std::min(mx[str[i][j]], i);\n        } else {\n          mx[str[i][j]] = i;\n        }\n        if (Mx.count(str[i][j])) {\n          Mx[str[i][j]] = std::max(Mx[str[i][j]], i);\n        } else {\n          Mx[str[i][j]] = i;\n        }\n        if (my.count(str[i][j])) {\n          my[str[i][j]] = std::min(my[str[i][j]], j);\n        } else {\n          my[str[i][j]] = j;\n        }\n        if (My.count(str[i][j])) {\n          My[str[i][j]] = std::min(My[str[i][j]], j);\n        } else {\n          My[str[i][j]] = j;\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] != '?') {\n          for (int k = 1; j + k < c; k++) {\n            bool flag = false;\n            for (int p = mx[str[i][j]]; p <= Mx[str[i][j]]; p++) {\n              if (str[p][j + k] != '?') {\n                flag = true;\n                break;\n              }\n            }\n            if (flag)\n              break;\n            for (int p = mx[str[i][j]]; p <= Mx[str[i][j]]; p++) {\n              str[p][j + k] = str[i][j];\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (mx.count(str[i][j])) {\n          mx[str[i][j]] = std::min(mx[str[i][j]], i);\n        } else {\n          mx[str[i][j]] = i;\n        }\n        if (Mx.count(str[i][j])) {\n          Mx[str[i][j]] = std::max(Mx[str[i][j]], i);\n        } else {\n          Mx[str[i][j]] = i;\n        }\n        if (my.count(str[i][j])) {\n          my[str[i][j]] = std::min(my[str[i][j]], j);\n        } else {\n          my[str[i][j]] = j;\n        }\n        if (My.count(str[i][j])) {\n          My[str[i][j]] = std::min(My[str[i][j]], j);\n        } else {\n          My[str[i][j]] = j;\n        }\n      }\n    }\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] != '?') {\n          for (int k = -1; j + k >= 0; k--) {\n            bool flag = false;\n            for (int p = mx[str[i][j]]; p <= Mx[str[i][j]]; p++) {\n              if (str[p][j + k] != '?') {\n                flag = true;\n                break;\n              }\n            }\n            if (flag)\n              break;\n            for (int p = mx[str[i][j]]; p <= Mx[str[i][j]]; p++) {\n              str[p][j + k] = str[i][j];\n            }\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (mx.count(str[i][j])) {\n          mx[str[i][j]] = std::min(mx[str[i][j]], i);\n        } else {\n          mx[str[i][j]] = i;\n        }\n        if (Mx.count(str[i][j])) {\n          Mx[str[i][j]] = std::max(Mx[str[i][j]], i);\n        } else {\n          Mx[str[i][j]] = i;\n        }\n        if (my.count(str[i][j])) {\n          my[str[i][j]] = std::min(my[str[i][j]], j);\n        } else {\n          my[str[i][j]] = j;\n        }\n        if (My.count(str[i][j])) {\n          My[str[i][j]] = std::min(My[str[i][j]], j);\n        } else {\n          My[str[i][j]] = j;\n        }\n      }\n    }\n\n    T++;\n    printf(\"Case #%d:\\n\", T);\n    for (int i = 0; i < r; i++) {\n      printf(\"%s\\n\", str[i]);\n    }\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\n\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int P = 0;\n  while (tc--) {\n    long long d, n;\n    scanf(\"%lld%lld\", &d, &n);\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n      long long k, s;\n      scanf(\"%lld%lld\", &k, &s);\n      double t = ((double)(d - k)) \/ s;\n      if (i == 0) {\n        ans = d \/ t;\n      } else {\n        ans = std::min(ans, d \/ t);\n      }\n    }\n    P++;\n    printf(\"Case #%d: %.6lf\\n\", P, ans);\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\n\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int P = 0;\n  while (tc--) {\n    int n, r, o, y, g, b, v;\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    bool flag = false;\n    if (r + 1 < g || y + 1 < v || b + 1 < o) {\n\n      flag = true;\n      if (r >= g && y == 0 && b == 0) {\n        flag = false;\n      }\n      if (y >= v && r == 0 && b == 0) {\n        flag = false;\n      }\n      if (b >= o && r == 0 && y == 0) {\n        flag = false;\n      }\n    }\n    r -= g;\n    y -= v;\n    b -= o;\n\n    std::vector<char> ch;\n    if (r > y + b || y > r + b || b > r + y) {\n      flag = true;\n    } else {\n      if (r >= y && r >= b) {\n        for (int i = 0; i < r; i++) {\n          ch.push_back('R');\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] == ch[(i + 1) % ch.size()]) {\n            if (y != 0) {\n              ch.insert(ch.begin() + i + 1, 'Y');\n              y--;\n            } else {\n              ch.insert(ch.begin() + i + 1, 'B');\n              b--;\n            }\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'Y' && ch[(i + 1) % ch.size()] != 'Y' && y != 0) {\n            ch.insert(ch.begin() + i + 1, 'Y');\n            y--;\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'B' && ch[(i + 1) % ch.size()] != 'B' && b != 0) {\n            ch.insert(ch.begin() + i + 1, 'B');\n            b--;\n          }\n        }\n      } else if (y >= r && y >= b) {\n        for (int i = 0; i < y; i++) {\n          ch.push_back('Y');\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] == ch[(i + 1) % ch.size()]) {\n            if (r != 0) {\n              ch.insert(ch.begin() + i + 1, 'R');\n              r--;\n            } else {\n              ch.insert(ch.begin() + i + 1, 'B');\n              b--;\n            }\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'R' && ch[(i + 1) % ch.size()] != 'R' && r != 0) {\n            ch.insert(ch.begin() + i + 1, 'R');\n            r--;\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'B' && ch[(i + 1) % ch.size()] != 'B' && b != 0) {\n            ch.insert(ch.begin() + i + 1, 'B');\n            b--;\n          }\n        }\n      } else {\n        for (int i = 0; i < b; i++) {\n          ch.push_back('B');\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] == ch[(i + 1) % ch.size()]) {\n            if (y != 0) {\n              ch.insert(ch.begin() + i + 1, 'Y');\n              y--;\n            } else {\n              ch.insert(ch.begin() + i + 1, 'R');\n              r--;\n            }\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'Y' && ch[(i + 1) % ch.size()] != 'Y' && y != 0) {\n            ch.insert(ch.begin() + i + 1, 'Y');\n            y--;\n          }\n        }\n        for (int i = 0; i < ch.size(); i++) {\n          if (ch[i] != 'R' && ch[(i + 1) % ch.size()] != 'R' && r != 0) {\n            ch.insert(ch.begin() + i + 1, 'R');\n            r--;\n          }\n        }\n      }\n    }\n    if (g != 0) {\n      if (ch.empty()) {\n        ch.insert(ch.begin(), 'R');\n        ch.insert(ch.begin() + 1, 'G');\n        g--;\n      }\n      for (int i = 0; i < ch.size(); i++) {\n        while (ch[i] == 'R' && g != 0) {\n          ch.insert(ch.begin() + i + 1, 'R');\n          ch.insert(ch.begin() + i + 1, 'G');\n          g--;\n        }\n      }\n    }\n    if (v != 0) {\n      if (ch.empty()) {\n        ch.insert(ch.begin(), 'Y');\n        ch.insert(ch.begin() + 1, 'V');\n        v--;\n      }\n      for (int i = 0; i < ch.size(); i++) {\n        while (ch[i] == 'Y' && v != 0) {\n          ch.insert(ch.begin() + i + 1, 'Y');\n          ch.insert(ch.begin() + i + 1, 'V');\n          v--;\n        }\n      }\n    }\n    if (o != 0) {\n      if (ch.empty()) {\n        ch.insert(ch.begin(), 'B');\n        ch.insert(ch.begin() + 1, 'O');\n        o--;\n      }\n      for (int i = 0; i < ch.size(); i++) {\n        while (ch[i] == 'B' && o != 0) {\n          ch.insert(ch.begin() + i + 1, 'B');\n          ch.insert(ch.begin() + i + 1, 'O');\n          o--;\n        }\n      }\n    }\n\n    P++;\n    printf(\"Case #%d: \", P);\n    if (flag) {\n      printf(\"IMPOSSIBLE\\n\");\n    } else {\n      for (char c : ch) {\n        printf(\"%c\", c);\n      }\n      printf(\"\\n\");\n    }\n  }\n}\n"}
{"target":"nein","func":"#include <bits\/stdc++.h>\n\nint e[110];\nint s[110];\nint matrix[110][110];\ndouble dy[110];\nbool chk[110];\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  int P = 0;\n  while (tc--) {\n\n    int n, q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      chk[i] = 0;\n      dy[i] = 0;\n      scanf(\"%d%d\", &e[i], &s[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%d\", &matrix[i][j]);\n      }\n    }\n    double ans = 0;\n    while (q--) {\n      int u, v;\n      scanf(\"%d%d\", &u, &v);\n      for (int i = 0; i < n; i++) {\n        int sum = 0;\n        for (int j = i + 1; j < n; j++) {\n          sum += matrix[j - 1][j];\n          if (sum <= e[i]) {\n            if (!chk[j]) {\n              dy[j] = dy[i] + ((double)sum) \/ s[i];\n              chk[j] = true;\n            } else\n              dy[j] = std::min(dy[j], dy[i] + ((double)sum) \/ s[i]);\n          } else {\n            break;\n          }\n        }\n      }\n      ans = dy[n - 1];\n    }\n\n    P++;\n    printf(\"Case #%d: %.10lf\\n\", P, ans);\n  }\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nvector<string> split(const string &text) { \/\/ split string by space\n  vector<string> vys;\n  stringstream ss(text);\n  string word;\n  while (getline(ss, word, ' ')) {\n    vys.push_back(word);\n  }\n  return vys;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    string N;\n    cin >> N;\n    int start = 0;\n    for (int i = 1; i < N.length(); i++) {\n      if (N[i] == N[start])\n        continue;\n      if (N[i] > N[start])\n        start = i;\n      else {\n        N[start]--;\n        for (int j = start + 1; j < N.length(); j++)\n          N[j] = '9';\n        break;\n      }\n    }\n    while (N[0] == '0')\n      N = N.substr(1);\n    cout << \"Case #\" << t << \": \" << N << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    long long N, K;\n    cin >> N;\n    cin >> K;\n\n    int L = 0;\n    long long Z = K;\n    while (Z > (1LL << L)) {\n      Z -= 1LL << L;\n      L++;\n    }\n    long long B = (N + 1) % (1 << L);\n    long long T = (N + 1 - (1 << L)) \/ (1 << L);\n    cout << \"Case #\" << t << \": \";\n    if (Z <= B)\n      cout << (T + 1) \/ 2 << \" \" << T \/ 2;\n    else\n      cout << T \/ 2 << \" \" << (T - 1) \/ 2;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nvector<string> split(const string &text) { \/\/ split string by space\n  vector<string> vys;\n  stringstream ss(text);\n  string word;\n  while (getline(ss, word, ' ')) {\n    vys.push_back(word);\n  }\n  return vys;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int K;\n    string S;\n    cin >> S;\n    cin >> K;\n    int flips = 0;\n    for (int i = 0; i < S.length() + 1 - K; i++) {\n      if (S[i] == '-') {\n        flips++;\n        for (int j = i; j < i + K; j++) {\n          S[j] = (S[j] == '-') ? '+' : '-';\n        }\n      }\n    }\n    for (int i = S.length() + 1 - K; i < S.length(); i++) {\n      if (S[i] == '-') {\n        flips = -1;\n        break;\n      }\n    }\n    cout << \"Case #\" << t << \": \";\n    cout << (flips < 0 ? \"IMPOSSIBLE\" : to_string(flips)) << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvector<pair<int, int>> hopcroftCarp(const vector<vector<int>> &adjU,\n                                    const vector<vector<int>> &adjV) {\n  int N = adjU.size();\n  int M = adjV.size();\n  vector<int> pairU(N, -1);\n  vector<int> pairV(M, -1);\n  while (true) {\n    vector<int> layerU(N, -1);\n    vector<int> layerV(M, -1);\n    queue<int> Q;\n    queue<int> freeV;\n    int maxLayer = M + N;\n    for (int i = 0; i < N; i++) {\n      if (pairU[i] == -1) {\n        layerU[i] = 0;\n        for (auto it = adjU[i].begin(); it != adjU[i].end(); ++it) {\n          if (layerV[*it] < 0) {\n            layerV[*it] = 1;\n            if (pairV[*it] == -1) {\n              freeV.push(*it);\n              maxLayer = 1;\n            } else if (freeV.empty())\n              Q.push(*it);\n          }\n        }\n      }\n    }\n    while (!Q.empty()) {\n      int v = Q.front();\n      Q.pop();\n      if (layerV[v] < maxLayer) {\n        int u = pairV[v];\n        layerU[u] = layerV[v] + 1;\n        for (auto it = adjU[u].begin(); it != adjU[u].end(); ++it)\n          if (*it != v) {\n            if (layerV[*it] < 0) {\n              layerV[*it] = layerV[v] + 2;\n              if (pairV[*it] == -1) {\n                freeV.push(*it);\n                maxLayer = layerV[v] + 2;\n              } else if (freeV.empty())\n                Q.push(*it);\n            }\n          }\n      }\n    }\n    if (freeV.empty())\n      break;\n    int np = 0;\n    while (!freeV.empty()) {\n      int v = freeV.front();\n      freeV.pop();\n      stack<int> S;\n      vector<int> path(maxLayer + 1, -1);\n      S.push(v);\n      while (!S.empty()) {\n        int s = S.top();\n        S.pop();\n        int layer = layerV[s];\n        path[layer] = s;\n        layerV[s] = -1;\n        if (layer != maxLayer) {\n          path[layer + 1] = pairV[s];\n          layerU[pairV[s]] = -1;\n        }\n        for (auto it = adjV[s].begin(); it != adjV[s].end(); ++it)\n          if (*it != pairV[s] && layerU[*it] == layer - 1) {\n            if (layerU[*it] == 0) {\n              path[0] = *it;\n              layerU[*it] = -1;\n              break;\n            }\n            if (layerV[pairU[*it]] == layer - 2)\n              S.push(pairU[*it]);\n          }\n        if (path[0] >= 0)\n          break;\n      }\n      if (path[0] >= 0) {\n        np++;\n        for (int i = 0; i < maxLayer; i += 2) {\n          pairU[path[i]] = path[i + 1];\n          pairV[path[i + 1]] = path[i];\n        }\n      }\n    }\n  }\n  vector<pair<int, int>> ret;\n  for (int i = 0; i < pairU.size(); i++)\n    if (pairU[i] >= 0)\n      ret.push_back(make_pair(i, pairU[i]));\n  return ret;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int testCase = 1; testCase <= T; testCase++) {\n    cout << \"Case #\" << testCase << \": \";\n    int N, P;\n    cin >> N;\n    cin >> P;\n    vector<int> R(N);\n    for (int i = 0; i < N; i++)\n      cin >> R[i];\n    vector<vector<int>> Q(N, vector<int>(P));\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++)\n        cin >> Q[i][j];\n    }\n    if (N == 1) {\n      int kits = 0;\n      for (int i = 0; i < P; i++) {\n        for (int size = 1; size <= Q[0][i]; size++) {\n          if (Q[0][i] * 10 >= 9 * size * R[0] &&\n              Q[0][i] * 10 <= 11 * size * R[0]) {\n            kits++;\n            break;\n          }\n        }\n      }\n      cout << kits;\n    }\n    if (N == 2) {\n      vector<vector<int>> adjU(P);\n      vector<vector<int>> adjV(P);\n      for (int i = 0; i < P; i++)\n        for (int j = 0; j < P; j++) {\n          bool can = false;\n          for (int size = 1; size <= 10 * Q[0][i]; size++) {\n            if (Q[0][i] * 10 >= 9 * size * R[0] &&\n                Q[0][i] * 10 <= 11 * size * R[0] &&\n                Q[1][j] * 10 >= 9 * size * R[1] &&\n                Q[1][j] * 10 <= 11 * size * R[1]) {\n              can = true;\n              break;\n            }\n          }\n          if (can) {\n            adjU[i].push_back(j);\n            adjV[j].push_back(i);\n          }\n        }\n      vector<pair<int, int>> matching = hopcroftCarp(adjU, adjV);\n      cout << matching.size();\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int testCase = 1; testCase <= T; testCase++) {\n    cout << \"Case #\" << testCase << \": \" << endl;\n    int R, C;\n    cin >> R;\n    cin >> C;\n    vector<string> B(R);\n    string blank = \"\";\n    for (int i = 0; i < R; i++)\n      cin >> B[i];\n    for (int j = 0; j < C; j++)\n      blank += \"?\";\n    for (int i = 0; i < R; i++) {\n      if (B[i] != blank) {\n        char first = '?';\n        for (int j = 0; j < C; j++) {\n          if (B[i][j] != '?') {\n            first = B[i][j];\n            break;\n          }\n        }\n        for (int j = 0; j < C; j++) {\n          if (B[i][j] == '?')\n            B[i][j] = first;\n          else\n            first = B[i][j];\n        }\n      }\n    }\n    string first;\n    for (int i = 0; i < R; i++) {\n      if (B[i] != blank) {\n        first = B[i];\n        break;\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      if (B[i] == blank)\n        B[i] = first;\n      else\n        first = B[i];\n    }\n\n    for (int i = 0; i < R; i++)\n      cout << B[i] << endl;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  cout.precision(15);\n  for (int testCase = 1; testCase <= T; testCase++) {\n    cout << \"Case #\" << testCase << \": \";\n    int D, N;\n    cin >> D;\n    cin >> N;\n    double endTime = 0;\n    for (int i = 0; i < N; i++) {\n      int K, S;\n      cin >> K;\n      cin >> S;\n      endTime = max(endTime, double(D - K) \/ S);\n    }\n    cout << D \/ endTime;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int testCase = 1; testCase <= T; testCase++) {\n    cout << \"Case #\" << testCase << \": \";\n    int N, R, RY, Y, YB, B, RB;\n    cin >> N;\n    cin >> R;\n    cin >> RY;\n    cin >> Y;\n    cin >> YB;\n    cin >> B;\n    cin >> RB;\n    int n = N;\n    int r = R;\n    int ry = RY;\n    int y = Y;\n    int yb = YB;\n    int b = B;\n    int rb = RB;\n    while (n > 3 && ry > 0 && b >= 2) {\n      ry--;\n      n -= 2;\n      b -= 1;\n    }\n    while (n > 3 && yb > 0 && r >= 2) {\n      yb--;\n      n -= 2;\n      r -= 1;\n    }\n    while (n > 3 && rb > 0 && y >= 2) {\n      rb--;\n      n -= 2;\n      y -= 1;\n    }\n    vector<char> ans(n, ' ');\n    if (n == 2 && ry == 1 && b == 1)\n      ans = {'O', 'B'};\n    else if (n == 2 && yb == 1 && r == 1)\n      ans = {'G', 'R'};\n    else if (n == 2 && rb == 1 && y == 1)\n      ans = {'V', 'Y'};\n    else if (ry > 0 || yb > 0 || rb > 0) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    } else if (2 * r > n || 2 * y > n || 2 * b > n) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    } else {\n      if (r >= y && r >= b) {\n        for (int i = 0; i < r; i++)\n          ans[2 * i] = 'R';\n        if (y >= b) {\n          for (int i = r; i < r + y; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'Y';\n            else\n              ans[2 * i % n + 1] = 'Y';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'B';\n          }\n        } else {\n          for (int i = r; i < r + b; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'B';\n            else\n              ans[2 * i % n + 1] = 'B';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'Y';\n          }\n        }\n      } else if (y >= r && y >= b) {\n        for (int i = 0; i < y; i++)\n          ans[2 * i] = 'Y';\n        if (r >= b) {\n          for (int i = y; i < y + r; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'R';\n            else\n              ans[2 * i % n + 1] = 'R';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'B';\n          }\n        } else {\n          for (int i = y; i < y + b; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'B';\n            else\n              ans[2 * i % n + 1] = 'B';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'R';\n          }\n        }\n      } else {\n        for (int i = 0; i < b; i++)\n          ans[2 * i] = 'B';\n        if (r >= y) {\n          for (int i = b; i < b + r; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'R';\n            else\n              ans[2 * i % n + 1] = 'R';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'Y';\n          }\n        } else {\n          for (int i = b; i < b + y; i++) {\n            if (ans[2 * i % n] == ' ')\n              ans[2 * i % n] = 'Y';\n            else\n              ans[2 * i % n + 1] = 'Y';\n          }\n          for (int i = 0; i < n; i++) {\n            if (ans[i] == ' ')\n              ans[i] = 'R';\n          }\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      cout << ans[i];\n      if (ans[i] == 'R')\n        while (yb < YB) {\n          cout << \"GR\";\n          yb++;\n        }\n      if (ans[i] == 'Y')\n        while (rb < RB) {\n          cout << \"VY\";\n          rb++;\n        }\n      if (ans[i] == 'B')\n        while (ry < RY) {\n          cout << \"OB\";\n          ry++;\n        }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nofto","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  cout.precision(15);\n  for (int testCase = 1; testCase <= T; testCase++) {\n    cout << \"Case #\" << testCase << \": \";\n    long long N, Q;\n    cin >> N;\n    cin >> Q;\n    vector<long long> E(N);\n    vector<long long> S(N);\n    vector<vector<long long>> D(N, vector<long long>(N));\n    for (int i = 0; i < N; i++) {\n      cin >> E[i];\n      cin >> S[i];\n    }\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++)\n        cin >> D[i][j];\n    vector<int> U(Q);\n    vector<int> V(Q);\n    for (int i = 0; i < Q; i++) {\n      cin >> U[i];\n      cin >> V[i];\n    }\n    if (Q == 1 && U[0] == 1 && V[0] == N) {\n      vector<vector<double>> H(N, vector<double>(N, 1e100));\n      for (int i = 0; i < N; i++) {\n        if (i == 0)\n          H[i][i] = 0;\n        else {\n          for (int j = 0; j < i; j++)\n            H[i][i] = min(H[i][i], H[j][i]);\n        }\n        int idx = i + 1;\n        long long Er = E[i];\n        while (idx < N && Er >= D[idx - 1][idx]) {\n          H[i][idx] = H[i][idx - 1] + double(D[idx - 1][idx]) \/ S[i];\n          Er -= D[idx - 1][idx];\n          idx++;\n        }\n      }\n      double best = 1e200;\n      for (int i = 0; i < N; i++)\n        best = min(best, H[i][N - 1]);\n      cout << best; \/\/ << endl;\n                    \/*for(int i = 0; i < N; i++){\n                            for(int j = 0; j < N; j++) cout << H[i][j] << \", \";\n                            cout << endl;\n                    }*\/\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = unsigned long long;\n\nvector<ll> guys;\n\nvoid solve(int last, int left, ll x = 0) {\n  if (left == 0) {\n    guys.push_back(x);\n    return;\n  }\n\n  for (int d = last; d < 10; d++) {\n    solve(d, left - 1, x * 10 + d);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n\n  solve(0, 19, 0);\n\n  for (int t = 1; t <= T; t++) {\n    ll x;\n    cin >> x;\n\n    auto it = upper_bound(begin(guys), end(guys), x) - 1;\n    cout << \"Case #\" << t << \": \";\n    cout << *it << '\\n';\n  }\n\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\npair<ll, ll> solve(ll n, ll k) {\n  if (k == 1)\n    return make_pair(n \/ 2, (n - 1) \/ 2);\n  if ((k & 1) == 0) {\n    return solve(n \/ 2, k \/ 2);\n  } else {\n    return solve((n - 1) \/ 2, k \/ 2);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n\n  for (int t = 1; t <= T; t++) {\n    ll n, k;\n    cin >> n >> k;\n    auto p = solve(n, k);\n    cout << \"Case #\" << t << \": \";\n    cout << p.first << \" \" << p.second << \"\\n\";\n  }\n\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 1010;\n\nchar w[N];\nint sa[N];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n\n  for (int t = 1; t <= T; t++) {\n    int n, k;\n    scanf(\" %s %d\", w, &k);\n    n = strlen(w);\n\n    for (int i = 0; i < n; i++)\n      sa[i] = 0;\n\n    int ans = 0, cur = 0;\n    for (int i = 0; i + k <= n; i++) {\n      cur -= sa[i];\n\n      int b = w[i] == '+';\n      b ^= (cur & 1);\n\n      if (!b) {\n        ans++;\n        cur++;\n        sa[i + k] += 1;\n      }\n    }\n\n    bool ok = true;\n    for (int i = n - k + 1; i < n; i++) {\n      cur -= sa[i];\n\n      int b = w[i] == '+';\n      b ^= (cur & 1);\n\n      ok = ok && (b == 1);\n    }\n\n    if (!ok)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    else\n      printf(\"Case #%d: %d\\n\", t, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 55;\n\nint R[N];\nint Q[N][N];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n\n  \/\/ T = min(T, 10);\n\n  for (int t = 1; t <= T; t++) {\n    int n, p;\n    scanf(\"%d %d\", &n, &p);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", R + i);\n    }\n\n    vector<tuple<int, int, int, int, int>> events;\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &Q[i][j]);\n        ll x = Q[i][j];\n        ll r = R[i];\n\n        ll to = (10 * x) \/ (9 * r);\n        ll from = (10 * x) \/ (11 * r);\n        if ((10 * x) % (11 * r))\n          from++;\n\n        from = max(from, 0ll);\n\n        if (from <= to) {\n          assert(from <= 1000000000);\n          assert(to <= 1000000000);\n          events.emplace_back(from, 0, to, i, j);\n          events.emplace_back(to, 1, to, i, j);\n        }\n      }\n    }\n\n    sort(begin(events), end(events));\n\n    set<pair<int, int>> active[N];\n\n    int ans = 0;\n    for (auto &ev : events) {\n      int x, out, i, j, y;\n      tie(x, out, y, i, j) = ev;\n\n      if (out) {\n        active[i].erase(make_pair(y, j));\n      } else {\n        active[i].insert(make_pair(y, j));\n\n        bool ok = true;\n        for (int k = 0; k < n; k++) {\n          if (active[k].empty()) {\n            ok = false;\n            break;\n          }\n        }\n\n        if (ok) {\n          for (int k = 0; k < n; k++) {\n            auto it = active[k].begin();\n            assert(x <= it->first);\n            active[k].erase(it);\n          }\n          assert(x > 0);\n          ans++;\n        }\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 26;\n\nchar mat[26][26];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n\n  for (int t = 1; t <= T; t++) {\n    int n, m;\n    scanf(\"%d %d\", &n, &m);\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        char x;\n        scanf(\" %c\", &x);\n        mat[i][j] = x;\n      }\n    }\n\n    unordered_set<char> used;\n    while (true) {\n      int best = -1;\n      tuple<int, int, int, int, char> info;\n      for (int a = 0; a < n; a++) {\n        for (int c = 0; c < m; c++) {\n          for (int b = a; b < n; b++) {\n            unordered_set<char> appears;\n            for (int d = c; d < m; d++) {\n              for (int i = a; i <= b; i++) {\n                if (mat[i][d] != '?')\n                  appears.insert(mat[i][d]);\n              }\n\n              if (appears.size() == 1) {\n                int tmp = (b - a + 1) * (d - c + 1);\n                if (used.count(*appears.begin()))\n                  continue;\n                if (best == -1 || tmp > best) {\n                  best = tmp;\n                  info = make_tuple(a, b, c, d, *appears.begin());\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (best == -1)\n        break;\n\n      int a, b, c, d;\n      char x;\n      tie(a, b, c, d, x) = info;\n\n      used.insert(x);\n\n      for (int i = a; i <= b; i++) {\n        for (int j = c; j <= d; j++) {\n          mat[i][j] = x;\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", t);\n\n    bool ok = true;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        printf(\"%c\", mat[i][j]);\n        ok = ok && mat[i][j] != '?';\n      }\n      printf(\"\\n\");\n    }\n\n    assert(ok);\n  }\n\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 1010;\n\nconst long double eps = 1e-10;\n\npair<long double, long double> vec[N];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  cout << setprecision(12) << fixed;\n  for (int t = 1; t <= T; t++) {\n    long double d;\n    int n;\n    cin >> d >> n;\n\n    for (int i = 0; i < n; i++) {\n      cin >> vec[i].first >> vec[i].second;\n    }\n\n    sort(vec, vec + n);\n\n    long double lo = eps, hi = 1e18;\n    while (lo + eps < hi) {\n      long double t = (lo + hi) \/ 2;\n\n      long double P = 1e18;\n      for (int i = 0; i < n; i++) {\n        long double x = vec[i].first + vec[i].second * t;\n        for (int j = i + 1; j < n; j++) {\n          x = min(x, t * vec[j].second + vec[j].first);\n        }\n        P = min(P, x);\n      }\n\n      if (P < d)\n        lo = t + eps;\n      else\n        hi = t;\n    }\n\n    \/\/ cout << \"lo: \" << lo << endl;\n\n    long double P = 1e18;\n    for (int i = 0; i < n; i++) {\n      long double x = vec[i].first + vec[i].second * t;\n      for (int j = i + 1; j < n; j++) {\n        x = min(x, t * vec[j].second + vec[j].first);\n      }\n      P = min(P, x);\n    }\n\n    \/\/ cout << \"P: \" << P << endl;\n\n    cout << \"Case #\" << t << \": \" << d \/ lo << endl;\n  }\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    cout << \"Case #\" << t << \": \";\n\n    vector<pair<int, char>> vec;\n    vec.emplace_back(R, 'R');\n    vec.emplace_back(Y, 'Y');\n    vec.emplace_back(B, 'B');\n\n    sort(vec.rbegin(), vec.rend());\n\n    {\n      string ans;\n      for (int i = 0; i < N; i++) {\n        int use;\n        if (ans.empty())\n          use = 0;\n        else {\n          if (ans.back() == vec[0].second || vec[0].first == 0) {\n            if (vec[1].first > vec[2].first)\n              use = 1;\n            else\n              use = 2;\n          } else {\n            use = 0;\n          }\n        }\n\n        if (vec[use].first <= 0)\n          break;\n\n        ans += vec[use].second;\n        vec[use].first -= 1;\n      }\n      if (ans.size() != N || ans.front() == ans.back())\n        cout << \"IMPOSSIBLE\\n\";\n      else\n        cout << ans << '\\n';\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"nonsequitur","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 110;\n\nll d[N][N];\nlong double t[N][N];\n\nbool reaches[N][N];\n\nll E[N], S[N];\n\nint main() {\n  ios::sync_with_stdio(false);\n  cout << fixed << setprecision(12);\n\n  int T;\n  cin >> T;\n  for (int caso = 1; caso <= T; caso++) {\n    int n, q;\n    cin >> n >> q;\n\n    for (int i = 0; i < n; i++) {\n      cin >> E[i] >> S[i];\n    }\n\n    memset(d, 0x3f, sizeof d);\n    memset(t, 0, sizeof t);\n    memset(reaches, 0, sizeof reaches);\n\n    ll inf = d[0][0];\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        int x;\n        cin >> x;\n        if (x != -1) {\n          d[i][j] = x;\n        } else if (i == j) {\n          d[i][j] = 0;\n        }\n      }\n    }\n\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n        }\n      }\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        ll dist = d[i][j];\n        if (dist != inf && dist <= E[i]) {\n          t[i][j] = dist;\n          t[i][j] \/= S[i];\n          reaches[i][j] = true;\n        }\n      }\n    }\n\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          if (reaches[i][k] && reaches[k][j]) {\n            if (reaches[i][j])\n              t[i][j] = min(t[i][j], t[i][k] + t[k][j]);\n            else\n              t[i][j] = t[i][k] + t[k][j];\n            reaches[i][j] = true;\n          }\n        }\n      }\n    }\n\n    cout << \"Case #\" << caso << \": \";\n\n    for (int i = 0; i < q; i++) {\n      int u, v;\n      cin >> u >> v;\n      u--, v--;\n      cout << t[u][v] << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nsigned main() {\n  freopen(\"a.txt\", \"r\", stdin);\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long tt;\n  cin >> tt;\n  for (long long t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    string s;\n    cin >> s;\n    for (long long i = 0; i < 20; i++) {\n      for (long long i = 0; i < s.length() - 1; i++) {\n        if (s[i] > s[i + 1]) {\n          s[i] -= 1;\n          for (long long j = i + 1; j < s.length(); j++)\n            s[j] = '9';\n          break;\n        }\n      }\n    }\n    long long i = 0;\n    for (; i < s.length(); i++)\n      if (s[i] != '0')\n        break;\n    for (; i < s.length(); i++)\n      cout << s[i];\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nsigned main() {\n  freopen(\"a.txt\", \"r\", stdin);\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long tt;\n  cin >> tt;\n  for (long long t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    long long n, k;\n    cin >> n >> k;\n    set<pair<long long, long long>> s;\n    s.insert({n, 1});\n    long long cur = 0;\n    while (1) {\n      auto it = s.end();\n      it--;\n      pair<long long, long long> p = *it;\n      s.erase(it);\n      long long a = (p.first - 1) \/ 2;\n      long long b = a;\n      if (p.first % 2 == 0)\n        b = a + 1;\n      if (cur + p.second >= k) {\n        cout << b << \" \" << a << \"\\n\";\n        break;\n      }\n      it = s.lower_bound({a, 0});\n      if (it != s.end() && it->first == a) {\n        pair<long long, long long> q = {a, it->second + p.second};\n        s.erase(it);\n        s.insert(q);\n      } else {\n        s.insert({a, p.second});\n      }\n      it = s.lower_bound({b, 0});\n      if (it != s.end() && it->first == b) {\n        pair<long long, long long> q = {b, it->second + p.second};\n        s.erase(it);\n        s.insert(q);\n      } else {\n        s.insert({b, p.second});\n      }\n      cur += p.second;\n    }\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nsigned main() {\n  freopen(\"a.txt\", \"r\", stdin);\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long tt;\n  cin >> tt;\n  for (long long t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    string s;\n    cin >> s;\n    long long k;\n    cin >> k;\n    long long res = 0;\n    bool f = false;\n    for (long long i = 0; i < s.length(); i++) {\n      if (s[i] == '-') {\n        if (i + k > s.length()) {\n          f = true;\n          break;\n        }\n        for (long long j = i; j < i + k; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n        res++;\n      }\n    }\n    if (f)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nsigned main() {\n  long long tt;\n  cin >> tt;\n  for (long long t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    long long n, p;\n    cin >> n >> p;\n    long long r[n];\n    for (long long i = 0; i < n; i++)\n      cin >> r[i];\n    long long a[n + 1][p + 1];\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 1; j <= p; j++) {\n        cin >> a[i][j];\n        cerr << a[i][j] << \" \";\n      }\n      cerr << endl;\n      a[i][0] = -1;\n    }\n    for (long long i = 0; i < n; i++)\n      sort(a[i], a[i] + 1 + p);\n    long long d[p + 1][p + 1];\n    for (long long i = 1; i <= p; i++)\n      for (long long j = 1; j <= p; j++) {\n        d[i][j] = min(i, j);\n      }\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 1; j <= p; j++)\n        cerr << a[i][j] << \" \";\n      cerr << endl;\n    }\n    long long L[n + 1][p + 1];\n    long long R[n + 1][p + 1];\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 1; j <= p; j++) {\n        long long cur1 = a[i][j] \/ r[i];\n        if (1.0 * a[i][j] > 1.1 * cur1 * r[i] &&\n            1.0 * a[i][j] < 0.9 * (cur1 + 1) * r[i]) {\n          L[i][j] = -1;\n          R[i][j] = -1;\n          continue;\n        }\n        while (10 * a[i][j] <= 11 * cur1 * r[i])\n          cur1--;\n        \/\/ cerr << a[i][j] << \" \" << r[i] << \" \" << cur1 << \" \" << 10*a[i][j] <<\n        \/\/ \" \" <<  11*cur1*r[i] << endl;\n        L[i][j] = cur1 + 1;\n        while (10 * a[i][j] >= 9 * cur1 * r[i])\n          cur1++;\n        R[i][j] = cur1 - 1;\n      }\n    }\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 1; j <= p; j++) {\n        cerr << L[i][j] << \" \";\n      }\n      cerr << endl;\n    }\n    cerr << endl;\n    for (long long i = 0; i < n; i++) {\n      for (long long j = 1; j <= p; j++) {\n        cerr << R[i][j] << \" \";\n      }\n      cerr << endl;\n    }\n    cerr << endl;\n    long long vis[n + 1][p + 1];\n    for (long long i = 0; i < n + 1; i++)\n      for (long long j = 0; j < p + 1; j++)\n        vis[i][j] = 0;\n    long long res = 0;\n    for (long long i = 1; i <= p; i++) {\n      long long x = L[0][i];\n      long long y = R[0][i];\n      if (x == -1)\n        continue;\n      for (long long cc = x; cc <= y; cc++) {\n        vector<long long> v;\n        long long f = 0;\n        for (long long j = 1; j < n; j++) {\n          long long flag = 0;\n          for (long long k = 1; k <= p; k++) {\n            if (vis[j][k] != 1 && L[j][k] <= cc && R[j][k] >= cc) {\n              v.push_back(k);\n              flag = 1;\n              break;\n            }\n          }\n          if (flag == 0) {\n            f = 1;\n            break;\n          }\n        }\n        if (f == 1)\n          continue;\n        else {\n          for (long long j = 0; j < v.size(); j++)\n            vis[j + 1][v[j]] = 1;\n          res++;\n          break;\n        }\n      }\n    }\n    cout << res << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nsigned main() {\n  freopen(\"a.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long tt;\n  cin >> tt;\n  for (long long t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \":\\n\";\n    long long r, c;\n    cin >> r >> c;\n    char g[r][c];\n    map<char, long long> L, R, T, B;\n    for (long long i = 0; i < r; i++)\n      for (long long j = 0; j < c; j++) {\n        cin >> g[i][j];\n        if (g[i][j] != '?') {\n          if (L.find(g[i][j]) == L.end())\n            L[g[i][j]] = j;\n          else\n            L[g[i][j]] = min(L[g[i][j]], j);\n          if (R.find(g[i][j]) == R.end())\n            R[g[i][j]] = j;\n          else\n            R[g[i][j]] = max(R[g[i][j]], j);\n          if (B.find(g[i][j]) == B.end())\n            B[g[i][j]] = i;\n          else\n            B[g[i][j]] = min(B[g[i][j]], i);\n          if (T.find(g[i][j]) == T.end())\n            T[g[i][j]] = i;\n          else\n            T[g[i][j]] = min(T[g[i][j]], i);\n        }\n      }\n    if (t == 88) {\n      for (long long i = 0; i < r; i++) {\n        for (long long j = 0; j < c; j++) {\n          cerr << g[i][j];\n        }\n        cerr << endl;\n      }\n    }\n    for (auto it = L.begin(); it != L.end(); it++) {\n      char ch = it->first;\n      for (long long i = B[it->first]; i <= T[it->first]; i++) {\n        for (long long j = L[it->first]; j <= R[it->first]; j++) {\n          g[i][j] = ch;\n        }\n      }\n    }\n    for (long long ii = 0; ii < 25; ii++) {\n      for (long long i = 0; i < r; i++) {\n        for (long long j = 0; j < c; j++) {\n          if (g[i][j] == '?') {\n            char ch = '?';\n            if (i != 0)\n              ch = g[i - 1][j];\n            if (ch != '?' && L[ch] == j) {\n              long long flag = 0;\n              for (long long k = j + 1; k <= R[ch]; k++) {\n                if (g[i][k] != '?')\n                  flag = 1;\n              }\n              if (flag == 0) {\n                for (long long k = j; k <= R[ch]; k++) {\n                  g[i][k] = ch;\n                }\n                T[ch] = max(T[ch], i);\n              }\n            }\n            if (g[i][j] != '?')\n              continue;\n            if (j != 0)\n              ch = g[i][j - 1];\n            if (ch != '?' && B[ch] == i) {\n              long long flag = 0;\n              for (long long k = i + 1; k <= T[ch]; k++) {\n                if (g[k][j] != '?')\n                  flag = 1;\n              }\n              if (flag == 0) {\n                for (long long k = i; k <= T[ch]; k++)\n                  g[k][j] = ch;\n                R[ch] = max(R[ch], j);\n              }\n            }\n            if (g[i][j] != '?')\n              continue;\n            if (i != (r - 1)) {\n              for (long long k = i + 1; k < r; k++)\n                if (g[k][j] != '?') {\n                  ch = g[k][j];\n                  break;\n                }\n            }\n            if (ch != '?' && L[ch] == j) {\n              long long flag = 0;\n              for (long long k = j + 1; k <= R[ch]; k++) {\n                if (g[i][k] != '?')\n                  flag = 1;\n              }\n              if (flag == 0) {\n                for (long long k = j; k <= R[ch]; k++)\n                  g[i][k] = ch;\n                B[ch] = min(B[ch], i);\n              }\n            }\n            if (g[i][j] != '?')\n              continue;\n            if (j != (c - 1)) {\n              for (long long k = j + 1; k < c; k++)\n                if (g[i][k] != '?') {\n                  ch = g[i][k];\n                  break;\n                }\n            }\n            if (ch != '?' && B[ch] == i) {\n              long long flag = 0;\n              for (long long k = i + 1; k <= T[ch]; k++) {\n                if (g[k][j] != '?')\n                  flag = 1;\n              }\n              if (flag == 0) {\n                for (long long k = i; k <= T[ch]; k++)\n                  g[k][j] = ch;\n                L[ch] = min(L[ch], j);\n              }\n            }\n          }\n        }\n      }\n      long long flag = 1;\n      for (long long i = 0; i < r; i++)\n        for (long long j = 0; j < c; j++)\n          if (g[i][j] == '?')\n            flag = 0;\n      if (flag) {\n        if (t == 88)\n          cerr << ii << endl;\n        break;\n      }\n      if (t == 88 && ii < 4) {\n        for (long long i = 0; i < r; i++) {\n          for (long long j = 0; j < c; j++)\n            cerr << g[i][j];\n          cerr << endl;\n        }\n        cerr << L['A'] << \" \" << R['A'] << \" \" << T['A'] << \" \" << B['A']\n             << endl;\n        cerr << endl;\n      }\n    }\n    for (long long i = 0; i < r; i++) {\n      for (long long j = 0; j < c; j++)\n        cout << g[i][j];\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    int d, n;\n    cin >> d >> n;\n    double mm = 0;\n    double a, b;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      double r = d - a;\n      r \/= b;\n      \/\/ cout << a << \" \" << b << \" \" << r << endl;\n      mm = max(mm, r);\n    }\n    mm = d \/ mm;\n    cout << fixed << setprecision(7) << mm << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    int a[6];\n    int n;\n    cin >> n;\n    for (int i = 0; i < 6; i++)\n      cin >> a[i];\n    int b[6];\n    for (int i = 0; i < 6; i++)\n      b[i] = a[i];\n    int v[n];\n    for (int i = 0; i < n; i++)\n      v[i] = -1;\n    int flag = 0;\n    int cur = 0;\n    int last = -1;\n    int first = -1;\n    if (a[1] != 0) {\n      if ((a[4] < a[1]) || ((a[4] == a[1]) && (a[4] + a[1] != n))) {\n        flag = 1;\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      }\n      v[0] = 4;\n      a[4]--;\n      cur++;\n      for (int i = 0; i < a[1]; i++) {\n        v[cur++] = 1;\n        if (cur != n)\n          v[cur++] = 4;\n      }\n      a[4] -= a[1];\n      a[1] = 0;\n      last = 4;\n      first = 4;\n    }\n    if (a[3] != 0) {\n      if (a[0] < a[3] || (a[0] == a[3] && (a[0] + a[3] != n))) {\n        flag = 1;\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      }\n      v[cur++] = 0;\n      a[0]--;\n      for (int i = 0; i < a[3]; i++) {\n        v[cur++] = 3;\n        if (cur != n)\n          v[cur++] = 0;\n      }\n      a[0] -= a[3];\n      a[3] = 0;\n      last = 0;\n      if (first == -1)\n        first = 0;\n    }\n    if (a[5] != 0) {\n      if (a[2] < a[5] || (a[2] == a[5] && (a[2] + a[5] != n))) {\n        flag = 1;\n        cout << \"IMPOSSIBLE\\n\";\n        continue;\n      }\n      v[cur++] = 2;\n      a[2]--;\n      for (int i = 0; i < a[5]; i++) {\n        v[cur++] = 5;\n        if (cur != n)\n          v[cur++] = 2;\n      }\n      a[2] -= a[5];\n      a[5] = 0;\n      last = 2;\n      if (first == -1)\n        first = 2;\n    }\n    pair<int, pair<int, int>> r[3];\n    r[0] = {a[0], {0, 0}};\n    r[1] = {a[2], {0, 2}};\n    r[2] = {a[4], {0, 4}};\n    if (first != -1) {\n      r[first \/ 2].second.first = 1;\n    }\n    flag = 0;\n    while (cur != n) {\n      sort(r, r + 3);\n      int f = 0;\n      for (int i = 2; i >= 0; i--) {\n        if (r[i].second.second != last) {\n          if (r[i].first == 0) {\n            flag = 1;\n            break;\n          }\n          f = 1;\n          r[i].first -= 1;\n          \/\/ cout << r[i].second ;\n          v[cur++] = r[i].second.second;\n          last = r[i].second.second;\n          if (first == -1) {\n            r[i].second.first = 1;\n            first = 1;\n          }\n          break;\n        }\n      }\n      if (f == 0)\n        flag = 1;\n      if (flag == 1) {\n        cout << \"IMPOSSIBLE\\n\";\n        break;\n      }\n    }\n    if (flag)\n      continue;\n    if (v[0] == v[n - 1]) {\n      cout << \"IMPOSSIBLE\\n\";\n      continue;\n    }\n    string s = \"ROYGBV\";\n    int c[6];\n    for (int i = 0; i < 6; i++)\n      c[i] = 0;\n    for (int i = 0; i < n; i++) {\n      c[v[i]]++;\n      cout << s[v[i]];\n    }\n    for (int i = 0; i < 6; i++)\n      assert(b[i] == c[i]);\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"ojasdeshpande","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; t++) {\n    cout << \"Case #\" << t << \": \";\n    int n, q;\n    cin >> n >> q;\n    assert(q == 1);\n    int e[n], s[n];\n    for (int i = 0; i < n; i++)\n      cin >> e[i] >> s[i];\n    int g[n][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        cin >> g[i][j];\n    }\n    int d[n];\n    d[0] = 0;\n    double f[n];\n    f[0] = 0;\n    for (int i = 1; i < n; i++)\n      f[i] = f[i - 1] + g[i - 1][i];\n    double r[n];\n    r[0] = 0;\n    int x, y;\n    cin >> x >> y;\n    for (int i = 1; i < n; i++) {\n      r[i] = 1e12;\n      for (int j = 0; j < i; j++) {\n        if (f[i] - f[j] <= e[j]) {\n          r[i] = min(r[i], r[j] + (0.0 + f[i] - f[j]) \/ (1.0 * s[j]));\n        }\n        \/\/\tcout << i << \" \" << j << \" \" << r[i] << endl;\n      }\n    }\n    cout << fixed << setprecision(7) << r[n - 1] << endl;\n  }\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nbool istidy(LL x) {\n  int prv = 10;\n  while (x > 0) {\n    if (prv < x % 10)\n      return false;\n    prv = x % 10;\n    x \/= 10;\n  }\n  return true;\n}\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); ++t) {\n    LL N;\n    cin >> N;\n    LL ans = 0;\n    for (ans = N; ans > 0; --ans)\n      if (istidy(ans))\n        break;\n\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t_ = (1); t_ < (T + 1); ++t_) {\n    LL N, K;\n    cin >> N >> K;\n\n    vector<bool> xs(N + 2);\n    xs[0] = xs[N + 1] = true;\n    tuple<LL, LL, LL> ans;\n    for (int k = (0); k < (K); ++k) {\n      tuple<LL, LL, LL> mx(-1, -1, -1);\n      for (int i = (0); i < (N + 2); ++i) {\n        if (xs[i])\n          continue;\n        LL l, r;\n        for (l = i - 1; !xs[l]; --l)\n          ;\n        for (r = i + 1; !xs[r]; ++r)\n          ;\n        l = i - l - 1;\n        r = r - i - 1;\n        tuple<LL, LL, LL> t(min(l, r), max(l, r), -i);\n        maxi(mx, t);\n      }\n      xs[-get<2>(mx)] = true;\n      ans = mx;\n    }\n    cout << \"Case #\" << t_ << \": \" << get<1>(ans) << \" \" << get<0>(ans) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); ++t) {\n    string S;\n    cin >> S;\n    int K;\n    cin >> K;\n    int N = int((S).size());\n    VI xs(N);\n    for (int i = (0); i < (N); ++i)\n      xs[i] = S[i] == '+';\n\n    int ans = 0;\n    for (int i = 0; i + K <= N; ++i) {\n      if (!xs[i]) {\n        ++ans;\n        for (int k = (0); k < (K); ++k)\n          xs[i + k] = !xs[i + k];\n      }\n    }\n    if (accumulate(begin((xs)), end((xs)), 0) != N)\n      cout << \"Case #\" << t << \": IMPOSSIBLE\" << endl;\n    else\n      cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t_ = (1); t_ < (T + 1); ++t_) {\n    int N, P;\n    cin >> N >> P;\n    VL rs(N);\n    for (int i = (0); i < (N); ++i)\n      cin >> rs[i];\n    VVL qs(N, VL(P));\n    for (int i = (0); i < (N); ++i) {\n      for (int j = (0); j < (P); ++j)\n        cin >> qs[i][j];\n      sort(begin(((qs[i]))), end(((qs[i]))));\n    }\n\n    LL ans = 0;\n    if (N == 1) {\n      for (int i = (0); i < (P); ++i) {\n        int lb_k = ceil(qs[0][i] * 1. \/ (rs[0] * 1.1));\n        int ub_k = floor(qs[0][i] * 1. \/ (rs[0] * 0.9));\n        if (lb_k <= ub_k)\n          ++ans;\n      }\n    } else {\n      int i2 = 0;\n      for (int i1 = (0); i1 < (P); ++i1) {\n        int lb_k = ceil(qs[0][i1] * 1. \/ (rs[0] * 1.1));\n        int ub_k = floor(qs[0][i1] * 1. \/ (rs[0] * 0.9));\n\n        while (i2 < P) {\n          int lb2_k = (int)ceil(qs[1][i2] * 1. \/ (rs[1] * 1.1));\n          int ub2_k = (int)floor(qs[1][i2] * 1. \/ (rs[1] * 0.9));\n          if (lb_k <= ub2_k && lb2_k <= ub_k) {\n            ++ans;\n            ++i2;\n            break;\n          } else if (ub_k < lb2_k) {\n            break;\n          }\n          ++i2;\n        }\n      }\n    }\n\n    cout << \"Case #\" << t_ << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t_ = (1); t_ < (T + 1); ++t_) {\n    int H, W;\n    cin >> H >> W;\n    VS vs(H);\n    for (int y = (0); y < (H); ++y)\n      cin >> vs[y];\n\n    set<char> memo;\n    for (int y = (0); y < (H); ++y)\n      for (int x = (0); x < (W); ++x) {\n        if (vs[y][x] != '?' && !memo.count(vs[y][x])) {\n          memo.insert(vs[y][x]);\n\n          int lx, rx, ty, by;\n          for (lx = x - 1; lx >= 0; --lx)\n            if (vs[y][lx] != '?')\n              break;\n          ++lx;\n          for (rx = x + 1; rx < W; ++rx)\n            if (vs[y][rx] != '?')\n              break;\n\n          for (ty = y - 1; ty >= 0; --ty) {\n            bool ok = true;\n            for (int xx = lx; xx < rx; ++xx) {\n              if (vs[ty][xx] != '?')\n                ok = false;\n            }\n            if (!ok)\n              break;\n          }\n          ++ty;\n          for (by = y + 1; by < H; ++by) {\n            bool ok = true;\n            for (int xx = lx; xx < rx; ++xx) {\n              if (vs[by][xx] != '?')\n                ok = false;\n            }\n            if (!ok)\n              break;\n          }\n\n          for (int yy = (ty); yy < (by); ++yy)\n            for (int xx = (lx); xx < (rx); ++xx)\n              vs[yy][xx] = vs[y][x];\n        }\n      }\n\n    cout << \"Case #\" << t_ << \":\" << endl;\n    for (int y = (0); y < (H); ++y)\n      cout << vs[y] << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); ++t) {\n    LL D, N;\n    cin >> D >> N;\n    double mn = 0;\n    vector<PLL> xs(N);\n    for (int i = (0); i < (N); ++i)\n      cin >> xs[i];\n    for (int i = (0); i < (N); ++i)\n      mn = max(mn, (D - xs[i].first) * 1. \/ xs[i].second);\n    double ans = D \/ mn;\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(9) << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\n\nbool check(VI tmp, const string &s) {\n  string col = \"ROYGB\";\n  for (int i = 0; i < int((s).size()); ++i) {\n    int ix = col.find(s[i]);\n    tmp[ix]--;\n  }\n  for (int i = (0); i < (6); ++i)\n    if (tmp[i] != 0)\n      return false;\n\n  if (s[0] == s.back())\n    return false;\n  for (int i = (0); i < (int((s).size()) - 1); ++i)\n    if (s[i] == s[i + 1])\n      return false;\n  return true;\n}\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); ++t) {\n    int N;\n    string col = \"ROYGB\";\n    VI xs(6);\n    cin >> N;\n    \/\/ R,O,Y,G,B,V;\n    for (int i = (0); i < (6); ++i)\n      cin >> xs[i];\n    VI orig = xs;\n\n    int mx = max(xs[0], max(xs[1 * 2], xs[2 * 2]));\n    bool ok = (mx <= N - mx);\n\n    if (!ok) {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\" << endl;\n    } else {\n      string ans(N, '*');\n      int ix = -1;\n      for (int i = (0); i < (6); ++i)\n        if (xs[i] == mx)\n          ix = i;\n\n      for (int i = (0); i < (6); ++i)\n        if (i != ix && xs[i]) {\n          ans[0] = col[i];\n          xs[i]--;\n          ix = i;\n          break;\n        }\n      for (int i = 1; i < N; ++i) {\n        int mix = -1;\n        for (int j = (0); j < (6); ++j) {\n          if ((mix == -1 || xs[mix] < xs[j]) && j != ix)\n            mix = j;\n        }\n        ans[i] = col[mix];\n        xs[mix]--;\n        ix = mix;\n      }\n\n      if (!check(orig, ans)) {\n        for (int i = (0); i < (6); ++i)\n          cout << orig[i] << \" \";\n        cout << endl;\n        cout << ans << endl;\n        return 1;\n      }\n\n      cout << \"Case #\" << t << \": \" << ans << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"okaduki","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing VI = vector<int>;\nusing VVI = vector<VI>;\nusing PII = pair<int, int>;\nusing LL = long long;\nusing VL = vector<LL>;\nusing VVL = vector<VL>;\nusing PLL = pair<LL, LL>;\nusing VS = vector<string>;\ntemplate <class S, class T> istream &operator>>(istream &is, pair<S, T> &p) {\n  return is >> p.first >> p.second;\n}\ntemplate <class S, class T>\nostream &operator<<(ostream &os, const pair<S, T> &p) {\n  return os << p.first << \" \" << p.second;\n}\ntemplate <class T> void maxi(T &x, T y) {\n  if (x < y)\n    x = y;\n}\ntemplate <class T> void mini(T &x, T y) {\n  if (x > y)\n    x = y;\n}\n\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst LL MOD = 1e9 + 7;\nconst double INF = 1e15;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t_ = (1); t_ < (T + 1); ++t_) {\n    int N, Q;\n    cin >> N >> Q;\n    vector<PLL> es(N);\n    for (int i = (0); i < (N); ++i)\n      cin >> es[i];\n\n    VVL dist(N, VL(N));\n    for (int i = (0); i < (N); ++i)\n      for (int j = (0); j < (N); ++j)\n        cin >> dist[i][j];\n\n    while (Q--) {\n      int U, V;\n      cin >> U >> V;\n      --U;\n      --V;\n\n      vector<LL> acc(N);\n      for (int i = N - 2; i >= 0; --i)\n        acc[i] = dist[i][i + 1] + acc[i + 1];\n\n      vector<double> dp(N + 1, INF);\n      dp[N - 1] = 0;\n      for (int i = N - 2; i >= 0; --i) {\n        for (int j = i + 1; j < N; ++j) {\n          if (acc[i] - acc[j] > es[i].first)\n            break;\n          mini(dp[i], dp[j] + (acc[i] - acc[j]) * 1. \/ es[i].second);\n        }\n      }\n      double ans = dp[0];\n      cout << \"Case #\" << t_ << \": \" << fixed << setprecision(9) << ans << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar s[25];\ninline void solve() {\n  scanf(\"%s\", s);\n  for (int i = strlen(s) - 1; i > 0; i--)\n    if (s[i] < s[i - 1]) {\n      for (int j = i; s[j] != '\\0'; j++)\n        s[j] = '9';\n      s[i - 1]--;\n    }\n  if (s[0] == '0')\n    printf(\"%s\\n\", s + 1);\n  else\n    printf(\"%s\\n\", s);\n}\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcase = 1; tcase <= T; tcase++) {\n    printf(\"Case #%d: \", tcase);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int maxn = 1010;\nclass CNode {\npublic:\n  int len, l, r;\n  CNode() {}\n  CNode(int _len, int _l, int _r) : len(_len), l(_l), r(_r) {}\n  bool operator<(const CNode &b) const {\n    if (len != b.len)\n      return len < b.len;\n    else\n      return l > b.l;\n  }\n  bool operator>(const CNode &b) const { return !((*this) < b); }\n};\nint n, k;\nbool vis[maxn];\npriority_queue<CNode> PriorityQ;\ninline void solve() {\n  memset(vis, false, sizeof(vis));\n  while (!PriorityQ.empty())\n    PriorityQ.pop();\n  scanf(\"%d%d\", &n, &k);\n  int mid;\n  CNode cur, left, right;\n  PriorityQ.push(CNode(n, 0, n - 1));\n  for (int i = 0; i < k; i++) {\n    cur = PriorityQ.top();\n    PriorityQ.pop();\n    mid = (cur.l + cur.r) >> 1;\n    vis[mid] = true;\n    if (cur.len == 1)\n      continue;\n    right.l = mid + 1;\n    right.r = cur.r;\n    right.len = right.r - right.l + 1;\n    left.l = cur.l;\n    left.r = mid - 1;\n    left.len = left.r - left.l + 1;\n    if (left.l <= left.r)\n      PriorityQ.push(left);\n    if (right.l <= right.r)\n      PriorityQ.push(right);\n  }\n  int i, cntl = 0, cntr = 0;\n  i = mid;\n  while (--i >= 0 && !vis[i])\n    cntl++;\n  i = mid;\n  while (++i < n && !vis[i])\n    cntr++;\n  printf(\"%d %d\\n\", max(cntl, cntr), min(cntl, cntr));\n}\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcase = 1; tcase <= T; tcase++) {\n    printf(\"Case #%d: \", tcase);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar s[1010];\nint k, l;\nbool flag;\ninline void solve() {\n  int cnt = 0;\n  scanf(\"%s%d\", s, &k);\n  l = strlen(s);\n  for (int i = 0; i + k - 1 < l; i++) {\n    if (s[i] == '-') {\n      for (int j = i; j < i + k; j++)\n        if (s[j] == '-')\n          s[j] = '+';\n        else\n          s[j] = '-';\n      cnt++;\n    }\n  }\n  flag = true;\n  for (int i = 0; i < l; i++)\n    if (s[i] == '-') {\n      flag = false;\n      break;\n    }\n  if (flag)\n    printf(\"%d\\n\", cnt);\n  else\n    printf(\"IMPOSSIBLE\\n\");\n}\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out.txt\",\"w\",stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcase = 1; tcase <= T; tcase++) {\n    printf(\"Case #%d: \", tcase);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 60;\nint n, m, point[maxn];\nlong long need[maxn], package[maxn][maxn], limit, ans, up, down;\ninline void solve() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%lld\", &need[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++)\n      scanf(\"%lld\", &package[i][j]);\n  for (int i = 1; i <= n; i++)\n    sort(package[i] + 1, package[i] + 1 + m);\n  int index = 1;\n  for (int i = 2; i <= n; i++)\n    if (package[i][m] \/ need[i] > package[index][m] \/ need[i])\n      index = i;\n  for (int i = 1; i <= n; i++)\n    point[i] = 1;\n  limit = package[index][m] \/ need[index] + 5;\n  ans = 0;\n  for (long long k = 1; k <= limit; k++) {\n    bool flag = true;\n    while (flag) {\n      for (int i = 1; i <= n; i++) {\n        up = floor(1.1 * need[i] * k);\n        down = ceil(0.9 * need[i] * k);\n        while (point[i] <= m && package[i][point[i]] <= up &&\n               package[i][point[i]] < down)\n          point[i]++;\n        if (point[i] > m || package[i][point[i]] > up)\n          flag = false;\n      }\n      if (flag) {\n        ans++;\n        for (int i = 1; i <= n; i++)\n          point[i]++;\n      }\n    }\n  }\n  printf(\"%lld\\n\", ans);\n}\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int i = 1; i <= T; i++) {\n    printf(\"Case #%d: \", i);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\nusing namespace std;\nint r, c;\nchar G[30][30];\nbool allques[30], flag;\ninline void solve() {\n  scanf(\"%d%d\", &r, &c);\n  flag = true;\n  allques[0] = false;\n  for (int i = 1; i <= r; i++) {\n    allques[i] = true;\n    for (int j = 1; j <= c; j++) {\n      scanf(\" %c \", &G[i][j]);\n      if (G[i][j] != '?')\n        allques[i] = false;\n    }\n    if (!allques[i] && flag) {\n      flag = false;\n      for (int j = 1; j <= c; j++)\n        G[0][j] = G[i][j];\n    }\n  }\n  for (int i = 0; i <= r; i++) {\n    if (allques[i]) {\n      for (int j = 1; j <= c; j++)\n        G[i][j] = G[i - 1][j];\n    } else {\n      for (int j = 1; j <= c; j++)\n        if (G[i][j] != '?') {\n          int k = j - 1;\n          while (k >= 1 && G[i][k] == '?')\n            G[i][k--] = G[i][j];\n          k = j + 1;\n          while (k <= c && G[i][k] == '?')\n            G[i][k++] = G[i][j];\n        }\n    }\n  }\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++)\n      printf(\"%c\", G[i][j]);\n    printf(\"\\n\");\n  }\n}\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int i = 1; i <= T; i++) {\n    printf(\"Case #%d:\\n\", i);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\nusing namespace std;\nint d, n, k, s;\ndouble ans, tans;\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcas = 1; tcas <= T; tcas++) {\n    ans = 1e32;\n    scanf(\"%d%d\", &d, &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d%d\", &k, &s);\n      tans = (double)d * s \/ (d - k);\n      if (tans < ans)\n        ans = tans;\n    }\n    printf(\"Case #%d: %.12f\\n\", tcas, ans);\n  }\n  return 0;\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint n, R, O, Y, G, B, V;\n\nvoid Print(int j) {\n  if (j == 1) {\n    if (G > 0) {\n      printf(\"RGR\");\n      G--;\n    } else {\n      printf(\"R\");\n    }\n  } else if (j == 2) {\n    if (V > 0) {\n      printf(\"YVY\");\n      V--;\n    } else {\n      printf(\"Y\");\n    }\n  } else {\n    if (O > 0) {\n      printf(\"BOB\");\n      O--;\n    } else {\n      printf(\"B\");\n    }\n  }\n}\n\nvoid solve1() {\n  int p = B + Y - R;\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(1);\n    Print(2);\n    Print(3);\n  }\n  R -= p;\n  Y -= p;\n  B -= p;\n  for (int i = 1; i <= Y; i++) {\n    Print(1);\n    Print(2);\n  }\n  for (int i = 1; i <= B; i++) {\n    Print(1);\n    Print(3);\n  }\n  printf(\"\\n\");\n}\nvoid solve2() {\n  int p = Y + R - B;\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(3);\n    Print(1);\n    Print(2);\n  }\n  R -= p;\n  Y -= p;\n  B -= p;\n  for (int i = 1; i <= R; i++) {\n    Print(3);\n    Print(1);\n  }\n  for (int i = 1; i <= Y; i++) {\n    Print(3);\n    Print(2);\n  }\n  printf(\"\\n\");\n}\nvoid solve3() {\n  int p = B + R - Y;\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(2);\n    Print(1);\n    Print(3);\n  }\n  R -= p;\n  Y -= p;\n  B -= p;\n  for (int i = 1; i <= B; i++) {\n    Print(2);\n    Print(3);\n  }\n  for (int i = 1; i <= R; i++) {\n    Print(2);\n    Print(1);\n  }\n  printf(\"\\n\");\n}\nint main() {\n  freopen(\"small.in\", \"r\", stdin);\n  freopen(\"small.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcas = 1; tcas <= T; tcas++) {\n    printf(\"Case #%d: \", tcas);\n    scanf(\"%d%d%d%d%d%d%d\", &n, &R, &O, &Y, &G, &B, &V);\n    if (R >= B && R >= Y)\n      solve1();\n    else if (B >= R && B >= Y)\n      solve2();\n    else\n      solve3();\n  }\n}\n"}
{"target":"OKuang","func":"#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\ntypedef long long LL;\nconst int maxn = 110;\nint n, q;\nLL ability[maxn], speed[maxn];\nLL G[maxn][maxn];\ndouble dist[maxn], ans[maxn];\nbool vis[maxn];\nbool Qvis[maxn];\nqueue<int> Q;\nvoid spfa(int s) {\n  while (!Q.empty())\n    Q.pop();\n  memset(Qvis, false, sizeof(Qvis));\n  memset(vis, false, sizeof(vis));\n  vis[s] = true;\n  dist[s] = 0;\n  Qvis[s] = true;\n  Q.push(s);\n  while (!Q.empty()) {\n    int p = Q.front();\n    Q.pop();\n    Qvis[p] = false;\n    for (int i = 1; i <= n; i++) {\n      if (p == i)\n        continue;\n      if (G[p][i] == -1 || G[p][i] > ability[p])\n        continue;\n      double time = (double)G[p][i] \/ (double)speed[p];\n      if (!vis[i] || dist[i] > dist[p] + time) {\n        vis[i] = true;\n        dist[i] = dist[p] + time;\n        if (!Qvis[i]) {\n          Q.push(i);\n          Qvis[i] = true;\n        }\n      }\n    }\n  }\n}\ninline void solve() {\n  scanf(\"%d%d\", &n, &q);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%lld%lld\", &ability[i], &speed[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      scanf(\"%lld\", &G[i][j]);\n  for (int k = 1; k <= n; k++)\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        if (i == j || G[i][k] == -1 || G[k][j] == -1)\n          continue;\n        if (G[i][j] == -1 || G[i][j] > G[i][k] + G[k][j])\n          G[i][j] = G[i][k] + G[k][j];\n      }\n  int u, v;\n  for (int i = 1; i <= q; i++) {\n    scanf(\"%d%d\", &u, &v);\n    spfa(u);\n    ans[i] = dist[v];\n  }\n  for (int i = 1; i < q; i++)\n    printf(\"%.8f \", ans[i]);\n  printf(\"%.8f\\n\", ans[q]);\n}\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int tcas = 1; tcas <= T; tcas++) {\n    printf(\"Case #%d: \", tcas);\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nvoid process(string &s, int i) {\n  s[i]--;\n  s[i + 1] = '9';\n}\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    long long k = getint();\n    string str = to_string(k);\n    int st = 0;\n    for (int i = 0; i + 1 < ((int)(str).size()); i++) {\n      if (str[i] < str[i + 1]) {\n        st = i + 1;\n      }\n      if (str[i] > str[i + 1]) {\n        str[st]--;\n        for (int j = st + 1; j < ((int)(str).size()); j++)\n          str[j] = '9';\n        break;\n      }\n    }\n    while (!str.empty() && str.front() == '0')\n      str.erase(0, 1);\n    cout << str << endl;\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    long long n = getint(), k = getint();\n    map<long long, int> ma;\n    ma[n] = 1;\n    while (1) {\n      auto p = *ma.rbegin();\n      if (k <= p.second) {\n        printf(\"%lld %lld\\n\", p.first \/ 2, (p.first - 1) \/ 2);\n        break;\n      } else\n        k -= p.second;\n      ma.erase(prev(ma.end()));\n      long long a = (p.first) \/ 2, b = (p.first - 1) \/ 2;\n      if (a)\n        ma[a] += p.second;\n      if (b)\n        ma[b] += p.second;\n    }\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nchar s[1005];\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    int k;\n    scanf(\"%s %d\", s, &k);\n    int n = strlen(s);\n    int move = 0;\n    int i;\n    for (i = 0; i < n; i++) {\n      if (s[i] == '-') {\n        if (i + k - 1 >= n) {\n          printf(\"IMPOSSIBLE\\n\");\n          break;\n        }\n        move++;\n        for (int j = 0; j < k; j++)\n          s[i + j] ^= ('+' ^ '-');\n      }\n    }\n    if (i == n)\n      printf(\"%d\\n\", move);\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nint R[100];\nint Q[50][50];\n\nvoid solve() {\n  int n = getint(), p = getint();\n  for (int i = 0; i < n; i++)\n    R[i] = getint();\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++)\n      Q[i][j] = getint();\n    sort(Q[i], Q[i] + p);\n  }\n  vector<vector<pair<int, int>>> vv(n, vector<pair<int, int>>(p));\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++) {\n      int f = (int)ceil(Q[i][j] * 1.0 \/ R[i] \/ 1.1);\n      int s = (int)floor(Q[i][j] * 1.0 \/ R[i] \/ 0.9);\n      if (f <= s)\n        vv[i][j] = make_pair(f, s);\n    }\n  \/\/ cout << vv << endl;\n\n  int ans = 0;\n\n  vector<int> ptr(n, 0);\n  for (int cur = 1; cur <= 1e6; cur++) {\n    for (int i = 0; i < n; i++) {\n      while (ptr[i] < ((int)(vv[i]).size()) && !(cur < vv[i][ptr[i]].first) &&\n             !(cur >= vv[i][ptr[i]].first && cur <= vv[i][ptr[i]].second))\n        ptr[i]++;\n    }\n\n    vector<int> used(n, 0);\n    for (int i = 0; i < n; i++) {\n      while (ptr[i] + used[i] < ((int)(vv[i]).size()) &&\n             vv[i][ptr[i] + used[i]].first <= cur &&\n             vv[i][ptr[i] + used[i]].second >= cur)\n        used[i]++;\n    }\n    int tmp = *min_element(used.begin(), used.end());\n    ans += tmp;\n    for (int i = 0; i < n; i++)\n      ptr[i] += tmp;\n\n    for (int i = 0; i < n; i++)\n      if (ptr[i] == ((int)(vv[i]).size()))\n        break;\n  }\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    solve();\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n\n    char t[50][50];\n    bool empty[50];\n    vector<pair<int, int>> G[26];\n    printf(\"Case #%d:\\n\", testcase);\n    int R = getint(), C = getint();\n    for (int i = 0; i < R; i++) {\n\n      scanf(\"%s\", t[i]);\n      empty[i] = all_of(t[i] + 0, t[i] + C, [](char c) { return c == '?'; });\n    }\n    \/*\n    for(int i=0;i<R;i++)for(int j=0;j<C;j++) if(t[i][j]!='?')\n        G[ t[i][j]-'A' ].push_back(MP(i,j));\n\n    for(int i=0;i<26;i++) {\n        int l=R, r=-1, u=R, d=-1;\n        for(pii p : G[i]) {\n            l = min(l, p.second);\n            r = max(r, p.second);\n            u = min(u, p.first);\n            d = max(d, p.first);\n        }\n        if( r == -1 ) continue;\n        for(int k = u; k <= d; k++)\n            fill(t[k]+l, t[k]+r+1, 'A'+i);\n    }\n    *\/\n    for (int i = 0; i < R; i++)\n      if (!empty[i]) {\n        int ind;\n        char c;\n        for (int j = 0; j < C; j++) {\n          if (t[i][j] != '?') {\n            fill(t[i], t[i] + j, t[i][j]);\n            ind = j;\n            break;\n          }\n        }\n        while (ind < C) {\n          if (t[i][ind] == '?') {\n            t[i][ind] = c, ind++;\n          } else\n            c = t[i][ind], ind++;\n        }\n      }\n    vector<int> v(R);\n    for (int i = 0; i < R; i++)\n      if (empty[i]) {\n\n        for (int j = i - 1; j >= 0; j--)\n          if (!empty[j]) {\n            v[i] = j;\n            break;\n          }\n        for (int j = i + 1; j < R; j++)\n          if (!empty[j]) {\n            v[i] = j;\n            break;\n          }\n      }\n    for (int i = 0; i < R; i++) {\n      if (empty[i])\n        puts(t[v[i]]);\n      else\n        puts(t[i]);\n    }\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    long long D = getint(), N = getint();\n    double ans = 0;\n    for (int i = 0; i < N; i++) {\n      long long k = getint(), s = getint();\n      ans = max(ans, (D - k) * 1.0 \/ s);\n    }\n    printf(\"Case #%d: %.6f\\n\", testcase, D \/ ans);\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    int n = getint();\n    int r, ry, y, yb, b, rb;\n    scanf(\"%d %d %d %d %d %d\", &r, &ry, &y, &yb, &b, &rb);\n    if (n == 3) {\n      if (r == 1 && b == 1 && y == 1)\n        printf(\"RBY\\n\");\n      else\n        printf(\"IMPOSSIBLE\\n\");\n    } else {\n\n      pair<int, int> a[3] = {make_pair(r, 'R'), make_pair(b, 'B'),\n                             make_pair(y, 'Y')};\n      sort(a, a + 3);\n      if (a[0].first + a[1].first < a[2].first)\n        printf(\"IMPOSSIBLE\\n\");\n      else {\n        int len = 3 * a[2].first;\n        vector<char> v(len, 'A');\n        int ind = 0;\n        for (int i = 0; i < a[2].first; i++)\n          v[ind] = a[2].second, ind += 3;\n\n        ind = 1;\n        for (int i = 0; i < a[0].first; i++)\n          v[ind] = a[0].second, ind += 3;\n        ind = (ind + 1) % len;\n        for (int i = 0; i < a[1].first; i++)\n          v[ind] = a[1].second, ind = (ind + 3) % len;\n\n        for (char c : v)\n          if (c != 'A')\n            putchar(c);\n        putchar('\\n');\n      }\n    }\n  }\n}\n"}
{"target":"petwill","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/ const int inf = 0x7fffffff; \/\/beware overflow\n\/\/ const LL INF = 0x7fffffffffffffff; \/\/beware overflow\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &p) {\n  return s << \"(\" << p.first << \",\" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, const vector<T> &c) {\n  s << \"[ \";\n  for (auto it : c)\n    s << it << \" \";\n  s << \"]\";\n  return s;\n}\ntemplate <typename T> ostream &operator<<(ostream &o, const set<T> &st) {\n  o << \"{\";\n  for (auto it = st.begin(); it != st.end(); it++)\n    o << (it == st.begin() ? \"\" : \", \") << *it;\n  return o << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &o, const map<T1, T2> &mp) {\n  o << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); it++) {\n    o << (it == mp.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  }\n  o << \"}\";\n  return o;\n}\ninline long long getint() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-')\n    _tc = getchar();\n  if (_tc == '-')\n    _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9')\n    _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\n\nlong long E[500], S[500];\nlong long D[500][500];\nint U[500], K[500];\ndouble tt[500][500];\ndouble dp[500];\nvoid floyd(int n) {\n  for (int k = 0; k < n; k++)\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        D[i][j] = min(D[i][j], D[i][k] + D[k][j]);\n}\nint main() {\n  int T = getint();\n  for (int testcase = 1; testcase <= T; testcase++) {\n    printf(\"Case #%d: \", testcase);\n    int n = getint(), q = getint();\n    ;\n    for (int i = 0; i < n; i++) {\n      E[i] = getint(), S[i] = getint();\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        D[i][j] = getint();\n        if (D[i][j] == -1)\n          D[i][j] = 1e15;\n        if (i == j)\n          D[i][j] = 0;\n      }\n    floyd(n);\n    \/*\n    for(int i=0; i<n; i++) for(int j=0;j<n;j++) {\n        if(\n        tt[i][j] =\n    }\n    *\/\n    for (int i = 0; i < q; i++)\n      scanf(\"%d %d\", &U[i], &K[i]);\n\n    dp[0] = 0;\n    for (int i = 1; i < n; i++) {\n      dp[i] = 1e15;\n      for (int j = 0; j < i; j++) {\n        dp[i] = min(dp[i],\n                    dp[j] + ((D[j][i] > E[j]) ? 1e15 : 1.0 * D[j][i] \/ S[j]));\n      }\n    }\n    printf(\"%.6f\\n\", dp[n - 1]);\n  }\n}\n"}
{"target":"Phantoms","func":"#include <stdio.h>\nusing namespace std;\n\nbool prov(long long n) {\n  bool fl = true;\n  while (n > 0 && fl) {\n    if (n % 10 < (n \/ 10) % 10)\n      fl = false;\n    n = n \/ 10;\n  }\n  return fl;\n}\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"B-small.in\", \"r\");\n  FILE *out = fopen(\"B-small.out\", \"w\");\n  int t;\n  fscanf(in, \"%d\", &t);\n  for (int u = 0; u < t; u++) {\n    long long n;\n    fscanf(in, \"%lld\", &n);\n    long long pow = 10, sl = 9;\n    while (!prov(n)) {\n      n = (n \/ pow - 1) * pow + sl;\n      pow *= 10;\n      sl = sl * 10 + 9;\n    }\n    fprintf(out, \"Case #%d: %lld\\n\", u + 1, n);\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <cstdio>\nusing namespace std;\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"C-small-1-attempt0.in\", \"r\");\n  FILE *out = fopen(\"C-small1.out\", \"w\");\n  int qw;\n  fscanf(in, \"%d\", &qw);\n  for (int qwe = 1; qwe <= qw; qwe++) {\n    long long n, k;\n    fscanf(in, \"%lld%lld\", &n, &k);\n    k--;\n    fprintf(out, \"Case #%d: \", qwe);\n    long long pow = 2;\n    while (pow < k)\n      pow *= 2;\n    int k1;\n    if (pow == k + 1)\n      k1 = pow - 1;\n    else {\n      k1 = pow \/ 2 - 1;\n      pow \/= 2;\n    }\n    int u = n - k1;\n    int x = u \/ pow;\n    int z = u % pow;\n    k = k - k1;\n    if (k < z)\n      x++;\n    if (x == 1)\n      fprintf(out, \"0 0\\n\");\n    if (x == 2)\n      fprintf(out, \"1 0\\n\");\n    if (x > 2)\n      fprintf(out, \"%d %d\\n\", x \/ 2, x % 2 ? x \/ 2 : x \/ 2 - 1);\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <cstdio>\n#include <string.h>\nusing namespace std;\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"A-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"A-small.out\", \"w\");\n  int qwe;\n  fscanf(in, \"%d\", &qwe);\n  for (int qw = 1; qw <= qwe; qw++) {\n    fprintf(out, \"Case #%d: \", qw);\n    char *s = new char[1000];\n    int k;\n\n    if (qw == 1)\n      fgets(s, 1000, in);\n    fgets(s, 1000, in);\n    k = 0;\n    int n = 0;\n    while (s[n])\n      n++;\n    n--;\n    int pow = 1;\n    while (s[n - 1] >= '0' && s[n - 1] <= '9' && n > 0) {\n      n--;\n      k += (s[n] - '0') * pow;\n      pow *= 10;\n    }\n    n--;\n    bool fl = true;\n    int kol = 0;\n    int i = 0;\n    while (i < n && fl) {\n      if (s[i] == '-') {\n        if (i + k > n)\n          fl = false;\n        else {\n          for (int j = i; j < i + k; j++)\n            s[j] = (s[j] == '-') ? '+' : '-';\n          kol++;\n          i++;\n        }\n      } else\n        i++;\n    }\n    if (!fl)\n      fprintf(out, \"IMPOSSIBLE\\n\");\n    else\n      fprintf(out, \"%d\\n\", kol);\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <iostream>\nbool otr(int a, int b, int c) {\n  if (b == 0 || c == 0)\n    return false;\n  if (a >= b && a <= c)\n    return true;\n  return false;\n}\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\nint a[1005], kol[2][1005][1005];\nbool vis[1005][1005], vis1[1005][1005];\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"B-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"B-small.out\", \"w\");\n  int t;\n  fscanf(in, \"%d\", &t);\n  for (int q = 0; q < t; q++) {\n    fprintf(out, \"Case #%d: \", q + 1);\n    int n, p;\n    fscanf(in, \"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++)\n      fscanf(in, \"%d\", &a[i]);\n    int kol1 = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int k;\n        fscanf(in, \"%d\", &k);\n        bool fl = true;\n        int g;\n        for (g = 1; g <= 1000000 && fl; g++) {\n          int x = a[i] * g;\n          if (k >= x - x \/ 10 && k <= x + x \/ 10) {\n            kol[0][i][j] = g;\n            fl = false;\n          }\n        }\n        if (fl) {\n          kol[0][i][j] = 0;\n          kol[1][i][j] = 0;\n        } else {\n          fl = true;\n          for (g = 1000000; g > 0 && fl; g--) {\n            int x = a[i] * g;\n            if (k >= x - x \/ 10 && k <= x + x \/ 10) {\n              kol[1][i][j] = g;\n              fl = false;\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        vis[i][j] = vis1[i][j] = true;\n    for (int i = 0; i < p; i++) {\n      if (kol[0][0][i]) {\n        bool fl = false;\n        for (int y = kol[0][0][i]; !fl && y <= kol[1][0][i]; y++) {\n          fl = true;\n          for (int j = 1; j < n && fl; j++) {\n            fl = false;\n            for (int k = 0; k < p && !fl; k++)\n              if (otr(y, kol[0][j][k], kol[1][j][k]) && vis[j][k]) {\n                vis[i][j] = false;\n                fl = true;\n              }\n            if (!fl)\n              for (int f = 0; f < n; f++)\n                for (int h = 0; h < p; h++)\n                  vis1[f][h] = vis[f][h];\n          }\n        }\n        if (fl) {\n          kol1++;\n          for (int f = 0; f < n; f++)\n            for (int h = 0; h < p; h++)\n              vis1[f][h] = vis1[f][h];\n        }\n      }\n    }\n    fprintf(out, \"%d\\n\", kol1);\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <iostream>\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\nchar a[101][101];\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"A-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"A-small.out\", \"w\");\n  int t;\n  fscanf(in, \"%d\", &t);\n  for (int q = 1; q <= t; q++) {\n    fprintf(out, \"Case #%d: \\n\", q);\n    int r, m;\n    fscanf(in, \"%d%d\", &r, &m);\n\n    fscanf(in, \"%c\", &a[99][99]);\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < m; j++)\n        fscanf(in, \"%c\", &a[i][j]);\n      fscanf(in, \"%c\", &a[i][100]);\n    }\n\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < m; j++) {\n        if (a[i][j] != '?') {\n          int maxi = i, maxj = j, mini = i, minj = j;\n          for (int k = 0; k < r; k++)\n            for (int l = 0; l < m; l++)\n              if (a[k][l] == a[i][j]) {\n                if (k > maxi)\n                  maxi = k;\n                else if (k < mini)\n                  mini = k;\n                if (l > maxj)\n                  maxj = l;\n                else if (l < minj)\n                  minj = l;\n              }\n          for (int k = mini; k <= maxi; k++)\n            for (int l = minj; l <= maxj; l++)\n              a[k][l] = a[i][j];\n        }\n      }\n    for (int i = 1; i < r; i++)\n      for (int j = 0; j < m; j++)\n        if (a[i][j] == '?') {\n          bool fl = true;\n          for (int l = 0; l < m; l++)\n            if (a[i - 1][l] == a[i - 1][j] && a[i][l] != '?' &&\n                a[i][l] != a[i - 1][j])\n              fl = false;\n          if (fl)\n            a[i][j] = a[i - 1][j];\n        }\n    for (int i = r - 2; i >= 0; i--)\n      for (int j = 0; j < m; j++)\n        if (a[i][j] == '?') {\n          bool fl = true;\n          for (int l = 0; l < m; l++)\n            if (a[i + 1][l] == a[i + 1][j] && a[i][l] != '?' &&\n                a[i][l] != a[i + 1][j])\n              fl = false;\n          if (fl)\n            a[i][j] = a[i + 1][j];\n        }\n    for (int i = 0; i < r; i++)\n      for (int j = 1; j < m; j++)\n        if (a[i][j] == '?') {\n          bool fl = true;\n          for (int l = 0; l < r; l++)\n            if (a[l][j - 1] == a[i][j - 1] && a[l][j] != '?' &&\n                a[l][j] != a[i][j - 1])\n              fl = false;\n          if (fl)\n            a[i][j] = a[i][j - 1];\n        }\n    for (int i = 0; i < r; i++)\n      for (int j = m - 2; j >= 0; j--)\n        if (a[i][j] == '?') {\n          bool fl = true;\n          for (int l = 0; l < r; l++)\n            if (a[l][j + 1] == a[i][j + 1] && a[l][j] != '?' &&\n                a[l][j] != a[i][j + 1])\n              fl = false;\n          if (fl)\n            a[i][j] = a[i][j + 1];\n        }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < m; j++)\n        fprintf(out, \"%c\", a[i][j]);\n      fprintf(out, \"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <cmath>\n#include <cstdio>\nusing namespace std;\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\n\nint a[10001], b[10001];\ndouble max(double a, double b) { return a > b ? a : b; }\n\nvoid sort(int be, int en) {\n  if (be < en) {\n    int x = (be + en) \/ 2;\n    int l = be - 1, r = en + 1, i = 1;\n    while (i < r) {\n      if (a[i] < x) {\n        int z = a[i];\n        l++;\n        a[i] = a[l];\n        a[l] = z;\n        z = b[i];\n        b[i] = b[l];\n        b[l] = z;\n        i++;\n      } else if (a[i] == x)\n        i++;\n      else {\n        int z = a[i];\n        r--;\n        a[i] = a[r];\n        a[r] = z;\n        z = b[i];\n        b[i] = b[r];\n        b[r] = z;\n      }\n    }\n    sort(be, l);\n    sort(r, en);\n  }\n}\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"A-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"A-small.out\", \"w\");\n  int qwe;\n  fscanf(in, \"%d\", &qwe);\n  for (int q = 1; q <= qwe; q++) {\n    fprintf(out, \"Case #%d: \", q);\n    int d, n;\n    fscanf(in, \"%d%d\", &d, &n);\n    for (int i = 0; i < n; i++) {\n      fscanf(in, \"%d%d\", &a[i], &b[i]);\n    }\n    sort(0, n - 1);\n    double ans = 0;\n    a[n] = d;\n    b[n] = 1;\n    for (int i = n - 1; i >= 0; i--) {\n      ans = max((double)(d - a[i]) \/ b[i], ans);\n    }\n    fprintf(out, \"%lf\\n\", d \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <iostream>\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\nchar ans[1000];\n\nint max3(int a, int b, int c) {\n  return (a >= b && a >= c) ? a : b >= c ? b : c;\n}\nint max(int a, int b) { return a >= b ? a : b; }\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"B-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"B-small.out\", \"w\");\n  int qwe;\n  fscanf(in, \"%d\", &qwe);\n  for (int qw = 1; qw <= qwe; qw++) {\n    fprintf(out, \"Case #%d: \", qw);\n    int r, o, y, g, b, v, n;\n    fscanf(in, \"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    int n1 = n;\n    if (((g > 0 && r < g) || (r == g && n > r + g)) ||\n        ((o > 0 && b < o) || (b == o && n > b + o)) ||\n        ((v > 0 && y < v) || (y == v && n > y * 2 + 1)))\n      fprintf(out, \"IMPOSSIBLE\\n\");\n    else {\n      int i = 0;\n      if (o > 0) {\n        ans[i] = 'B';\n        i++;\n        b--;\n        while (o > 0) {\n          ans[i] = 'O';\n          ans[i + 1] = 'B';\n          b--;\n          o--;\n          n -= 2;\n          i += 2;\n        }\n      }\n      if (g > 0) {\n        ans[i] = 'R';\n        i++;\n        r--;\n        while (g > 0) {\n          ans[i] = 'G';\n          ans[i + 1] = 'R';\n          r--;\n          g--;\n          n -= 2;\n          i += 2;\n        }\n      }\n      if (v > 0) {\n        ans[i] = 'Y';\n        i++;\n        r--;\n        while (v > 0) {\n          ans[i] = 'V';\n          ans[i + 1] = 'Y';\n          y--;\n          n -= 2;\n          v--;\n          i += 2;\n        }\n      }\n      n = r + y + b;\n      if (n > 0) {\n        if (r * 2 > n + 1 || y * 2 > n + 1 || b * 2 > n + 1)\n          fprintf(out, \"IMPOSSIBLE\\n\");\n        else {\n          bool fl = true;\n          while (r + y + b > 0) {\n            if (i == 0) {\n              if (r >= y && r >= b) {\n                ans[i] = 'R';\n                r--;\n              } else if (y >= r && y >= b) {\n                ans[i] = 'Y';\n                y--;\n              } else {\n                ans[i] = 'B';\n                b--;\n              }\n            } else if (ans[i - 1] == 'R') {\n              if (y >= b) {\n                ans[i] = 'Y';\n                y--;\n              } else {\n                ans[i] = 'B';\n                b--;\n              }\n            } else if (ans[i - 1] == 'B') {\n              if (r >= y) {\n                ans[i] = 'R';\n                r--;\n              } else {\n                ans[i] = 'Y';\n                y--;\n              }\n            } else {\n              if (r >= b) {\n                ans[i] = 'R';\n                r--;\n              } else {\n                ans[i] = 'B';\n                b--;\n              }\n            }\n\n            if (r < 0 || b < 0 || y < 0)\n              fl = false;\n            i++;\n          }\n          if (ans[0] == ans[n1 - 1] && n1 > 1)\n            fl = false;\n          if (!fl)\n            fprintf(out, \"IMPOSSIBLE\\n\");\n          else {\n            for (int j = 0; j < n1; j++)\n              fprintf(out, \"%c\", ans[j]);\n            fprintf(out, \"\\n\");\n          }\n        }\n      } else {\n        for (int j = 0; j < n1; j++)\n          fprintf(out, \"%c\", ans[j]);\n        fprintf(out, \"\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"Phantoms","func":"#include <stdio.h>\nusing namespace std;\n\nint hr[1000], hs[1000], d[1000][1000];\ndouble ans[1000];\n\ndouble min1(double a, double b) {\n  return a == -1 ? b : b == -1 ? a : a < b ? a : b;\n}\n\n\/* run this program using the console pauser or add your own getch,\n * system(\"pause\") or input loop *\/\n\nint main(int argc, char **argv) {\n  FILE *in = fopen(\"C-small-attempt0.in\", \"r\");\n  FILE *out = fopen(\"C-small.out\", \"w\");\n  int qw;\n  fscanf(in, \"%d\", &qw);\n  for (int qwe = 1; qwe <= qw; qwe++) {\n    fprintf(out, \"Case #%d: \", qwe);\n    int n, q;\n    fscanf(in, \"%d%d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      fscanf(in, \"%d%d\", &hr[i], &hs[i]);\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        fscanf(in, \"%d\", &d[i][j]);\n    for (int i = 0; i < q; i++) {\n      int a, b;\n      fscanf(in, \"%d%d\", &a, &b);\n    }\n    ans[n - 1] = 0;\n    for (int i = n - 2; i >= 0; i--) {\n      double s1, s = 0;\n      for (int j = n - 1; j > i; j--)\n        s += (double)d[j - 1][j];\n      double a = hr[i] < s ? -1 : s \/ hs[i], b = -1;\n      s1 = d[i][i + 1];\n      double min = 0;\n      for (int j = i + 1; j <= n && s1 <= hr[i]; j++) {\n        if (ans[j] != -1)\n          b = min1(b, ans[j] + s1 \/ hs[i]);\n        s1 += (double)d[j][j + 1];\n      }\n      ans[i] = min1(a, b);\n    }\n    fprintf(out, \"%lf\\n\", ans[0]);\n  }\n  return 0;\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint num[20];\n\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"B-small-attempt2.out\", \"w\", stdout);\n  int T, cnt = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(num, 0, sizeof(num));\n    long long n;\n    scanf(\"%lld\", &n);\n    while (n) {\n      num[++num[0]] = n % 10, n \/= 10;\n    }\n    for (int i = 1; i <= num[0]; i++) {\n      if (num[i] < num[i + 1]) {\n        for (int j = 1; j <= i; j++)\n          num[j] = 9;\n        num[i + 1]--;\n      }\n    }\n    while (num[num[0]] == 0)\n      num[0]--;\n    printf(\"Case #%d: \", ++cnt);\n    for (int i = num[0]; i; i--) {\n      printf(\"%d\", num[i]);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nbool flag[1010];\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int T, cnt = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(flag, false, sizeof(flag));\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    flag[0] = flag[n + 1] = true;\n    for (int i = 1; i <= k; i++) {\n      int nl, nr, ans, mmin = -1, mmax = -1;\n      for (int j = 1; j <= n; j++)\n        if (!flag[j]) {\n          int ls, rs;\n          for (int l = j - 1; l >= 0; l--)\n            if (flag[l]) {\n              ls = j - l - 1;\n              break;\n            }\n          for (int l = j + 1; l <= n + 1; l++)\n            if (flag[l]) {\n              rs = l - j - 1;\n              break;\n            }\n          if (min(ls, rs) == mmin) {\n            if (max(ls, rs) > mmax)\n              nl = ls, nr = rs, ans = j, mmax = max(ls, rs);\n          }\n          if (min(ls, rs) > mmin) {\n            nl = ls, nr = rs, ans = j, mmin = min(ls, rs), mmax = max(ls, rs);\n          }\n        }\n      \/\/ printf(\"%d\\n\", ans);\n      flag[ans] = true;\n      if (i == k) {\n        printf(\"Case #%d: %d %d\\n\", ++cnt, max(nl, nr), min(nl, nr));\n      }\n    }\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar s[1100];\nint a[1100];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%s\", s);\n    int n = strlen(s);\n    for (int i = 0; i < n; i++) {\n      if (s[i] == '-')\n        a[i] = 1;\n      else\n        a[i] = 0;\n    }\n    int k;\n    scanf(\"%d\", &k);\n    int ans = 0;\n    for (int i = 0; i < n - k; i++) {\n      if (a[i]) {\n        for (int j = i; j <= i + k - 1; j++)\n          a[j] ^= 1;\n        ans++;\n      }\n    }\n    int tmp = 0;\n    for (int i = n - k + 1; i < n; i++)\n      if (a[i] != a[i - 1])\n        tmp = 1;\n    if (a[n - 1] == 1)\n      ans++;\n    if (tmp)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", Case);\n    else\n      printf(\"Case #%d: %d\\n\", Case, ans);\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\n\nint N, P;\nlong long R[60], Q[60][60];\nint pos[60];\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int T, num = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &N, &P);\n    for (int i = 1; i <= N; i++)\n      scanf(\"%lld\", &R[i]);\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= P; j++)\n        scanf(\"%lld\", &Q[i][j]);\n    for (int i = 1; i <= N; i++)\n      sort(Q[i] + 1, Q[i] + P + 1);\n    int cnt = 1;\n    for (int i = 2; i <= N; i++)\n      if (Q[i][P] \/ R[i] > Q[cnt][P] \/ R[cnt])\n        cnt = i;\n    for (int i = 1; i <= N; i++)\n      pos[i] = 1;\n    long long lim = Q[cnt][P] \/ R[cnt] + 1LL, ans = 0;\n    for (long long now = 1; now <= lim; now++) {\n      bool flag = true;\n      while (flag) {\n        for (int i = 1; i <= N; i++) {\n          long long dLim = ceil(R[i] * now * 0.9),\n                    uLim = floor(R[i] * now * 1.1);\n          while (pos[i] <= P && Q[i][pos[i]] <= uLim && Q[i][pos[i]] < dLim)\n            pos[i]++;\n          if (pos[i] > P || Q[i][pos[i]] > uLim)\n            flag = false;\n        }\n        if (flag) {\n          ans++;\n          for (int i = 1; i <= N; i++)\n            pos[i]++;\n        }\n      }\n    }\n    printf(\"Case #%d: %lld\\n\", ++num, ans);\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint R, C, cnt;\nchar ch[30][30], ans[30][30], c[30];\nbool flag[200], vis;\n\nbool Judge() {\n  \/*for(int j = 1; j <= R; j++) {\n      for(int k = 1; k <= C; k++)\n          printf(\"%c\", ans[j][k]);\n      printf(\"\\n\");\n  }\n  printf(\"\\n\");*\/\n  for (int i = 1; i <= cnt; i++) {\n    int x1 = 0x3fffffff, y1 = 0x3fffffff, x2 = 0, y2 = 0;\n    for (int j = 1; j <= R; j++)\n      for (int k = 1; k <= C; k++)\n        if (ans[j][k] == c[i]) {\n          if (x1 == 0x3fffffff) {\n            x1 = j, y1 = k;\n          }\n          x2 = j, y2 = k;\n        }\n    \/\/ if(num < (x2-x1+1)*(y2-y1+1)) return false;\n    for (int j = 1; j <= R; j++)\n      for (int k = 1; k <= C; k++) {\n        if (j >= x1 && j <= x2 && k >= y1 && k <= y2) {\n          if (ans[j][k] != c[i])\n            return false;\n        } else {\n          if (ans[j][k] == c[i])\n            return false;\n        }\n      }\n    \/\/ printf(\"%d %d %d %d\\n\", x1, y1, x2, y2);\n  }\n  \/\/ printf(\"--------------\\n\");\n  return true;\n}\n\nvoid dfs(int x, int y) {\n  if (x > R) {\n    if (Judge()) {\n      for (int i = 1; i <= R; i++) {\n        for (int j = 1; j <= C; j++)\n          printf(\"%c\", ans[i][j]);\n        printf(\"\\n\");\n      }\n      vis = true;\n    }\n    return;\n  }\n  if (ch[x][y] != '?') {\n    ans[x][y] = ch[x][y];\n    if (y == C)\n      dfs(x + 1, 1);\n    else\n      dfs(x, y + 1);\n  } else {\n    for (int i = 1; i <= cnt && !vis; i++) {\n      ans[x][y] = c[i];\n      if (y == C)\n        dfs(x + 1, 1);\n      else\n        dfs(x, y + 1);\n    }\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int T, num = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    vis = false, cnt = 0;\n    memset(flag, false, sizeof(flag));\n    scanf(\"%d%d\", &R, &C);\n    for (int i = 1; i <= R; i++) {\n      scanf(\"%s\", ch[i] + 1);\n      for (int j = 1; j <= C; j++)\n        if (!flag[ch[i][j]] && ch[i][j] != '?') {\n          flag[ch[i][j]] = true;\n          c[++cnt] = ch[i][j];\n        }\n    }\n    \/\/ for(int i = 1; i <= cnt; i++) printf(\"%c\\n\", c[i]);\n    printf(\"Case #%d:\\n\", ++num);\n    dfs(1, 1);\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"A-small-attempt1.out\", \"w\", stdout);\n  int T, cnt = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    double D;\n    int N;\n    scanf(\"%lf%d\", &D, &N);\n    double k, s, ans = 0.0;\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%lf%lf\", &k, &s);\n      double tmp = 1.0 * (D - k) \/ s;\n      if (tmp > ans)\n        ans = tmp;\n    }\n    printf(\"Case #%d: %.8lf\\n\", ++cnt, D \/ ans);\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nint n, R, O, Y, G, B, V;\n\nvoid Print(int j) {\n  if (j == 1) {\n    if (G > 0) {\n      printf(\"RGR\");\n      G--;\n    } else {\n      printf(\"R\");\n    }\n  } else if (j == 2) {\n    if (V > 0) {\n      printf(\"YVY\");\n      V--;\n    } else {\n      printf(\"Y\");\n    }\n  } else {\n    if (O > 0) {\n      printf(\"BOB\");\n      O--;\n    } else {\n      printf(\"B\");\n    }\n  }\n}\n\nvoid solve1() { \/\/ R \u6700\u5927\n  int p = B + Y - R;\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(1);\n    Print(2);\n    Print(3);\n  }\n  R -= p, Y -= p, B -= p;\n  for (int i = 1; i <= Y; i++)\n    Print(1), Print(2);\n  for (int i = 1; i <= B; i++)\n    Print(1), Print(3);\n  printf(\"\\n\");\n}\n\nvoid solve2() { \/\/ B \u6700\u5927\n  int p = Y + R - B;\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(3);\n    Print(1);\n    Print(2);\n  }\n  R -= p, Y -= p, B -= p;\n  for (int i = 1; i <= R; i++)\n    Print(3), Print(1);\n  for (int i = 1; i <= Y; i++)\n    Print(3), Print(2);\n  printf(\"\\n\");\n}\n\nvoid solve3() {\n  int p = B + R - Y;\n  \/\/ printf(\"%d\\n\", p);\n  if (p < 0) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= p; i++) {\n    Print(2);\n    Print(1);\n    Print(3);\n  }\n  R -= p, Y -= p, B -= p;\n  for (int i = 1; i <= B; i++)\n    Print(2), Print(3);\n  for (int i = 1; i <= R; i++)\n    Print(2), Print(1);\n  printf(\"\\n\");\n}\n\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"B-small-attempt2.out\", \"w\", stdout);\n  int T, cnt = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &R, &O, &Y, &G, &B, &V);\n    R -= G, B -= O, Y -= V;\n    \/\/ printf(\"%d %d %d\\n\", R, B, Y);\n    printf(\"Case #%d: \", ++cnt);\n    if (R < G || B < O || Y < V) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    \/\/ printf(\"%d %d %d\\n\", B, R, Y);\n    if (R >= B && R >= Y)\n      solve1();\n    else if (B >= R && B >= Y)\n      solve2();\n    else\n      solve3();\n  }\n}\n"}
{"target":"pipishrimp0505","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nint N, Q;\nlong long E[110], S[110], dis[110][110];\ndouble dist[110];\nbool vis[110], inq[110];\n\ndouble spfa(int s, int t) {\n  memset(inq, false, sizeof(inq));\n  memset(vis, false, sizeof(vis));\n  vis[s] = true, dist[s] = 0, inq[s] = true;\n  queue<int> q;\n  q.push(s);\n  while (!q.empty()) {\n    int p = q.front();\n    q.pop();\n    inq[p] = false;\n    for (int x = 1; x <= N; x++)\n      if (p != x) {\n        if (dis[p][x] == -1 || dis[p][x] > E[p])\n          continue;\n        double tmp = 1.0 * dis[p][x] \/ S[p];\n        if (!vis[x] || dist[x] > dist[p] + tmp) {\n          vis[x] = true, dist[x] = dist[p] + tmp;\n          if (!inq[x]) {\n            q.push(x);\n            inq[x] = true;\n          }\n        }\n      }\n  }\n  return dist[t];\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int T, cnt = 0;\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 1; i <= N; i++)\n      scanf(\"%lld%lld\", &E[i], &S[i]);\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= N; j++)\n        scanf(\"%lld\", &dis[i][j]);\n    for (int k = 1; k <= N; k++)\n      for (int i = 1; i <= N; i++)\n        for (int j = 1; j <= N; j++) {\n          if (dis[i][k] == -1 || dis[k][j] == -1)\n            continue;\n          if (dis[i][j] == -1 || dis[i][j] > dis[i][k] + dis[k][j])\n            dis[i][j] = dis[i][k] + dis[k][j];\n        }\n    printf(\"Case #%d: \", ++cnt);\n    for (int i = 1, u, v; i <= Q; i++) {\n      scanf(\"%d%d\", &u, &v);\n      printf(\"%.8lf \", spfa(u, v));\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 25;\n\nll d[N];\n\nint to_digit(ll n) {\n  int l(0);\n  while (n) {\n    d[l++] = n % 10;\n    n \/= 10;\n  }\n  return l;\n}\n\nll to_int(int l) {\n  ll res(0);\n  while (--l >= 0) {\n    res = res * 10 + d[l];\n  }\n  return res;\n}\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    ll n;\n    scanf(\"%lld\", &n);\n    int l = to_digit(n);\n    d[l] = 0;\n    for (int i = l - 1; i >= 0; i--) {\n      if (d[i] < d[i + 1]) {\n        int j(i + 1);\n        while (j < l && d[j] > d[j - 1])\n          d[j++]--;\n        i = j - 2;\n        while (i >= 0)\n          d[i--] = 9;\n        break;\n      }\n    }\n    printf(\"Case #%d: %lld\\n\", ca, to_int(l));\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 1005;\n\nint occupy[N], Left[N], Right[N];\nint Min[N], Max[N];\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    occupy[0] = occupy[n + 1] = 1;\n    for (int i = 1; i <= n; i++) {\n      occupy[i] = 0, Left[i] = 0, Right[i] = n + 1;\n      Min[i] = min(i - Left[i], Right[i] - i);\n      Max[i] = max(i - Left[i], Right[i] - i);\n    }\n    int ch;\n    for (int i = 0; i < k; i++) {\n      ch = -1;\n      for (int j = 1; j <= n; j++) {\n        if (!occupy[j]) {\n          if (ch == -1 || Min[j] > Min[ch] ||\n              Min[j] == Min[ch] && Max[j] > Max[ch]) {\n            ch = j;\n          }\n        }\n      }\n      occupy[ch] = 1;\n      for (int j = ch - 1; !occupy[j]; j--) {\n        Right[j] = ch;\n        Min[j] = min(j - Left[j], Right[j] - j);\n        Max[j] = max(j - Left[j], Right[j] - j);\n      }\n      for (int j = ch + 1; !occupy[j]; j++) {\n        Left[j] = ch;\n        Min[j] = min(j - Left[j], Right[j] - j);\n        Max[j] = max(j - Left[j], Right[j] - j);\n      }\n      \/\/            printf(\"ch:  %d\\n\", ch);\n    }\n    printf(\"Case #%d: %d %d\\n\", ca, Max[ch] - 1, Min[ch] - 1);\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 1005;\n\nchar s[N];\nint num[N];\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int k;\n    scanf(\"%s%d\", s, &k);\n    int n = strlen(s);\n    for (int i = 0; i < n; i++) {\n      num[i] = 0;\n    }\n    int total = 0, res = 0;\n    bool ok(true);\n    for (int i = 0; i < n; i++) {\n      if (i - k >= 0)\n        total -= num[i - k];\n      \/\/            printf(\"~~  %d  %d\\n\", i, total);\n      int c = s[i] == '-' ? 1 : 0;\n      if ((total + c) % 2 == 0) {\n        num[i] = 0;\n      } else {\n        if (i + k <= n) {\n          num[i] = 1;\n          ++total;\n        } else {\n          ok = false;\n          break;\n        }\n      }\n      res += num[i];\n      \/\/            printf(\"i:  %d  num:  %d\\n\", i, num[i]);\n    }\n    printf(\"Case #%d: \", ca);\n    if (ok)\n      printf(\"%d\\n\", res);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\nusing namespace std;\n\nconst int N = 55;\n\nint p[N][N];\nint g[N], pnt[N];\npair<int, int> pr[N];\n\npair<int, int> get_interval(int x, int y) {\n  int l = (y * 10 + 11 * x - 1) \/ (11 * x);\n  int r = y * 10 \/ (9 * x);\n  return make_pair(l, r);\n}\n\nbool check(int n, int m) {\n  for (int i = 0; i < n; i++)\n    if (pnt[i] >= m)\n      return false;\n  return true;\n}\n\nvoid update(pair<int, int> &lr, pair<int, int> v) {\n  lr.first = max(lr.first, v.first);\n  lr.second = min(lr.second, v.second);\n}\n\nint main() {\n  freopen(\"\/home\/zhangyingzhe\/Downloads\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &g[i]);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++)\n        scanf(\"%d\", &p[i][j]);\n      sort(p[i], p[i] + m);\n    }\n    for (int i = 0; i < n; i++)\n      pnt[i] = 0;\n    int res(0);\n    while (check(n, m)) {\n      int sl(-1);\n      pair<int, int> lr = make_pair(INT_MIN, INT_MAX);\n      for (int i = 0; i < n; i++) {\n        pr[i] = get_interval(g[i], p[i][pnt[i]]);\n        \/\/ printf(\"~~~%d  %d  %d\\n\",i, pr[i].first, pr[i].second);\n        if (sl == -1 || pr[i].second < pr[sl].second)\n          sl = i;\n        update(lr, pr[i]);\n      }\n      if (lr.second >= lr.first) {\n        ++res;\n        for (int i = 0; i < n; i++)\n          ++pnt[i];\n      } else {\n        ++pnt[sl];\n      }\n    }\n    printf(\"Case #%d: %d\\n\", ca, res);\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n\nusing namespace std;\n\nconst int N = 30;\n\nchar ma[N][N];\nbool ok;\nint n, m, lx;\nmap<char, int> mp;\n\nvoid get_next(int &x, int &y) {\n  ++y;\n  if (y > m)\n    ++x, y = 1;\n}\n\nstruct node {\n  int x, y, a, b;\n  node(int _x = 0, int _y = 0, int _a = 0, int _b = 0) {\n    x = _x, y = _y, a = _a, b = _b;\n  }\n  void add(int _x, int _y) {\n    x = min(x, _x), y = min(y, _y);\n    a = max(a, _x), b = max(b, _y);\n  }\n} p[N * N];\n\nbool check(node &nd, char c) {\n  for (int i = nd.x; i <= nd.a; i++) {\n    for (int j = nd.y; j <= nd.b; j++) {\n      if (ma[i][j] == '?' || ma[i][j] == c) {\n\n      } else\n        return false;\n    }\n  }\n  return true;\n}\n\nvoid set_ma(node &nd, char c) {\n  for (int i = nd.x; i <= nd.a; i++) {\n    for (int j = nd.y; j <= nd.b; j++) {\n      ma[i][j] = c;\n    }\n  }\n}\n\nvoid dfs(int x, int y) {\n  \/\/ printf(\"%d %d===\\n\",x, y );\n  if (x > n) {\n    ok = true;\n    return;\n  }\n  if (ma[x][y] != '?') {\n    get_next(x, y);\n    dfs(x, y);\n    if (ok)\n      return;\n  } else {\n    for (int i = 1; i <= lx; i++) {\n      node t = p[i];\n      char c = ma[p[i].x][p[i].y];\n      p[i].add(x, y);\n      if (check(p[i], c)) {\n        \/\/ printf(\"%d   %d   %c\\n\", x,y,c);\n        \/\/ printf(\"%d  %d  %d  %d\\n\", p[i].x,p[i].y,p[i].a,p[i].b);\n        set_ma(p[i], c);\n        int nx(x), ny(y);\n        get_next(nx, ny);\n        dfs(nx, ny);\n        if (ok)\n          return;\n        set_ma(p[i], '?');\n        p[i] = t;\n        set_ma(p[i], c);\n      }\n      p[i] = t;\n    }\n  }\n}\n\nint main() {\n  freopen(\"\/home\/zhangyingzhe\/Downloads\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    mp.clear();\n    lx = 0;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%s\", ma[i] + 1);\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n        if (ma[i][j] != '?') {\n          mp[ma[i][j]] = ++lx;\n          p[lx] = node(i, j, i, j);\n        }\n      }\n    }\n    ok = false;\n    dfs(1, 1);\n    printf(\"Case #%d:\\n\", ca);\n    for (int i = 1; i <= n; i++) {\n      printf(\"%s\\n\", ma[i] + 1);\n    }\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 100005;\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int d, n;\n    scanf(\"%d%d\", &d, &n);\n    db t(0);\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      scanf(\"%d%d\", &k, &s);\n      t = max(t, (db)(d - k) \/ (db)s);\n    }\n    printf(\"Case #%d: %f\\n\", ca, d \/ t);\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 100005;\n\nint a[10];\n\nvector<int> construct(vector<int> b) {\n  vector<int> res;\n  int s = b[0] + b[1] + b[2];\n  for (int i = 0; i < s; i++) {\n    if (i == 0 || b[0] > 0 && res.back() != 0) {\n      res.push_back(0), --b[0];\n    } else {\n      int c = b[1] > b[2] ? 1 : 2;\n      if (res.back() == c)\n        c = 3 - c;\n      res.push_back(c), --b[c];\n    }\n  }\n  return res;\n}\n\nbool check(int r, int y, int b) {\n  if (r < 0 || y < 0 || b < 0)\n    return false;\n  int s = r + y + b;\n  int mx = max(r, max(y, b));\n  if (mx > s - mx)\n    return false;\n  return true;\n}\n\nvector<char> to_char(int r, int y, int b) {\n  vector<char> res;\n  if (r >= y && r >= b) {\n    res.push_back('r');\n    if (y > b)\n      res.push_back('y'), res.push_back('b');\n    else\n      res.push_back('b'), res.push_back('y');\n    return res;\n  }\n  if (y >= r && y >= b) {\n    res.push_back('y');\n    if (r > b)\n      res.push_back('r'), res.push_back('b');\n    else\n      res.push_back('b'), res.push_back('r');\n    return res;\n  }\n  if (b >= y && b >= r) {\n    res.push_back('b');\n    if (y > r)\n      res.push_back('y'), res.push_back('r');\n    else\n      res.push_back('r'), res.push_back('y');\n    return res;\n  }\n  return res;\n}\n\nvector<int> to_v(int r, int y, int b) {\n  if (r < y)\n    swap(r, y);\n  if (r < b)\n    swap(r, b);\n  if (y < b)\n    swap(y, b);\n  vector<int> res;\n  res.push_back(r), res.push_back(y), res.push_back(b);\n  return res;\n}\n\nchar p[] = \"ROYGBV\";\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < 6; i++)\n      scanf(\"%d\", &a[i]);\n    int r = a[0] - a[3]; \/\/ red - green\n    int y = a[2] - a[5]; \/\/ yellow - v\n    int b = a[4] - a[1]; \/\/ blue - orange\n    bool ok = check(r, y, b);\n    printf(\"Case #%d: \", ca);\n    if (!ok) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    vector<int> v = to_v(r, y, b);\n    vector<char> c = to_char(r, y, b);\n    for (int i = 0; i < c.size(); i++)\n      c[i] = toupper(c[i]);\n    \/\/        for(int i=0;i<c.size();i++) printf(\"%c  \\n\",c[i]);\n    vector<int> res = construct(v);\n    string str;\n    for (int i = 0; i < res.size(); i++) {\n      \/\/            printf(\"res i : %d\\n\",res[i]);\n      char t = c[res[i]];\n      str += t;\n      int j(-1);\n      if (t == 'R') {\n        j = 3;\n      } else if (t == 'Y')\n        j = 5;\n      else if (t == 'B')\n        j = 1;\n      \/\/            printf(\"j:  %d\\n\",j);\n      if (a[j] > 0) {\n        while (a[j]) {\n          str += p[j];\n          str += t;\n          --a[j];\n        }\n      }\n    }\n    \/\/        printf(\"size:  %d\\n\",res.size());\n    for (int i = 1; i < 6; i += 2) {\n      if (a[i] > 0) {\n        while (a[i]) {\n          str += p[(i + 3) % 6];\n          str += p[i];\n          --a[i];\n        }\n      }\n    }\n    cout << str << endl;\n  }\n  return 0;\n}\n"}
{"target":"pkwv","func":"#include <bits\/stdc++.h>\n#include <stdio.h>\n#include <string.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst int N = 105;\nconst db inf = 1e15;\nint d[N][N];\ndb t[N];\nint e[N], s[N];\nqueue<int> Q;\nbool in[N];\nint n;\nvoid dfs(int k, int y, int v, db min_t) {\n  if (min_t < t[k]) {\n    t[k] = min_t;\n    if (!in[k])\n      Q.push(k), in[k] = true;\n  }\n  for (int i = 0; i < n; i++) {\n    if (d[k][i] > 0 && y >= d[k][i]) {\n      dfs(i, y - d[k][i], v, min_t + (db)d[k][i] \/ (db)v);\n    }\n  }\n}\n\ndb spfa(int st, int ed) {\n  for (int i = 0; i < n; i++)\n    t[i] = inf, in[i] = false;\n  ;\n  t[st] = 0, in[st] = true;\n  Q.push(st);\n  while (!Q.empty()) {\n    int now = Q.front();\n    Q.pop();\n    dfs(now, e[now], s[now], t[now]);\n  }\n  return t[ed];\n}\n\nint main() {\n\n  int T;\n  scanf(\"%d\", &T);\n  for (int ca = 1; ca <= T; ca++) {\n    int q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d%d\", &e[i], &s[i]);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        scanf(\"%d\", &d[i][j]);\n    }\n    printf(\"Case #%d: \", ca);\n    for (int j = 0; j < q; j++) {\n      int st, ed;\n      scanf(\"%d%d\", &st, &ed);\n      db res = spfa(st - 1, ed - 1);\n      printf(\" %f\", res);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nll dp(ll num, ll ma) {\n  if (num < 10) {\n    return min(num, ma);\n  }\n  ll ret = 0;\n  ll ldig = min(ma, num % 10);\n  ll rem = num \/ 10;\n  ll tmp = dp(rem, ldig);\n  if (tmp > 0)\n    ret = tmp * 10 + ldig;\n  ldig = 9;\n  rem -= 1;\n  return max(ret, dp(rem, ldig) * 10 + ldig);\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; ++cas) {\n    ll s;\n    scanf(\"%lld\", &s);\n    printf(\"Case #%d: %lld\\n\", cas, dp(s, 9));\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    ll T, K;\n    cin >> T >> K;\n    ll num1 = T, num2 = 0;\n    ll cnt1 = 1, cnt2 = 0;\n    ll ans = 0;\n    for (ll top = 2;; top <<= 1) {\n      if (top > K) {\n        ll rank = K - top \/ 2 + 1;\n        ans = rank <= cnt1 ? num1 : num2;\n        break;\n      }\n      if (num1 & 1) {\n        cnt1 = cnt1 * 2 + cnt2;\n        cnt2 = cnt2;\n      } else {\n        cnt1 = cnt1;\n        cnt2 = cnt2 * 2 + cnt1;\n      }\n      num1 = num1 \/ 2;\n      num2 = num1 - 1;\n    }\n    printf(\"Case #%d: %lld %lld\\n\", cas, ans \/ 2, ans - 1 - ans \/ 2);\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1005;\nbool flag[MAXN];\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    memset(flag, 0, sizeof(flag));\n    string str;\n    int k;\n    cin >> str >> k;\n    int ans = 0;\n    int flip = 0;\n    bool impossible = false;\n    for (int i = 0; i < str.size(); ++i) {\n      if (i - k >= 0) {\n        if (flag[i - k])\n          flip ^= 1;\n      }\n      int happy = (str[i] == '+' ? 1 : 0) ^ flip;\n      if (!happy) {\n        if (i + k > str.size()) {\n          impossible = true;\n          break;\n        }\n        ++ans;\n        flag[i] = 1;\n        flip ^= 1;\n      }\n    }\n    if (impossible)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n    else\n      printf(\"Case #%d: %d\\n\", cas, ans);\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 55;\nint R[MAXN];\nint Q[MAXN][MAXN];\nint N, P;\nint mi[MAXN][MAXN];\nint ma[MAXN][MAXN];\nbool used[MAXN][MAXN];\n\nbool check(int n, int r, int q) {\n  if (n * r * 0.9 > q)\n    return false;\n  if (n * r * 1.1 < q)\n    return false;\n  return true;\n}\n\nbool find(int l, int r, int dep) {\n  if (dep == N) {\n    return true;\n  }\n  for (int i = 0; i < P; ++i) {\n    int nl = max(l, mi[dep][i]);\n    int nr = min(r, ma[dep][i]);\n    if (nl > nr)\n      continue;\n    used[dep][i] = true;\n    if (find(nl, nr, dep + 1)) {\n      return true;\n    }\n    used[dep][i] = false;\n  }\n  return false;\n}\nint solve() {\n  cin >> N >> P;\n  for (int i = 0; i < N; ++i)\n    cin >> R[i];\n\n  for (int i = 0; i < N; ++i)\n    for (int j = 0; j < P; ++j) {\n      cin >> Q[i][j];\n\n      mi[i][j] = ceil(Q[i][j] \/ (1.1 * R[i]));\n      ma[i][j] = Q[i][j] \/ (0.9 * R[i]);\n    }\n\n  memset(used, 0, sizeof(used));\n  int ret = 0;\n  for (int i = 0; i < P; ++i) {\n    if (mi[0][i] > ma[0][i])\n      continue;\n    if (find(mi[0][i], ma[0][i], 1)) {\n      ++ret;\n    }\n  }\n  return ret;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; ++cas) {\n    printf(\"Case #%d: %d\\n\", cas, solve());\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint R, C;\n\nchar mat[30][30];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; ++cas) {\n    printf(\"Case #%d: \\n\", cas);\n    scanf(\"%d%d\", &R, &C);\n    for (int i = 0; i < R; ++i) {\n      scanf(\"%s\", mat[i]);\n      mat[i][C] = 0;\n    }\n    for (int i = 0; i < R; ++i) {\n      char fst = 0;\n      for (int j = 0; j < C; ++j) {\n        if (mat[i][j] != '?') {\n          fst = mat[i][j];\n          break;\n        }\n      }\n      if (0 == fst) {\n        continue;\n      }\n      for (int j = 0; j < C; ++j) {\n        if (mat[i][j] == '?')\n          mat[i][j] = fst;\n        else\n          fst = mat[i][j];\n      }\n    }\n    for (int i = 0; i < R; ++i) {\n      if (mat[i][0] != '?') {\n        continue;\n      }\n      if (i > 0 && mat[i - 1][0] != '?') {\n        memcpy(mat[i], mat[i - 1], C);\n      }\n    }\n    for (int i = R - 1; i >= 0; --i) {\n      if (mat[i][0] != '?') {\n        continue;\n      }\n      if (i < R - 1 && mat[i + 1][0] != '?') {\n        memcpy(mat[i], mat[i + 1], C);\n      }\n    }\n\n    for (int i = 0; i < R; ++i)\n      puts(mat[i]);\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1005;\npair<long long, long long> K[MAXN];\nint D, N;\n\ndouble solve() {\n  cin >> D >> N;\n  int ans = 0;\n  for (int i = 0; i < N; ++i) {\n    cin >> K[i].first >> K[i].second;\n  }\n  for (int i = 1; i < N; ++i) {\n    if ((D - K[i].first) * K[ans].second > (D - K[ans].first) * K[i].second) {\n      ans = i;\n    }\n  }\n  double ret = double(1.0) * D \/ (D - K[ans].first) * K[ans].second;\n  return ret;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    double ans = solve();\n    printf(\"Case #%d: %.8lf\\n\", cas, ans);\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint N;\nint R, O, Y, G, B, V;\nchar color[7] = \"ROYGBV\";\nint num[7];\n\nint choose(char ch) {\n  int mx = 0;\n  int ret = 0;\n  for (int i = 0; i < 6; ++i) {\n    if (color[i] != ch && num[i] > mx) {\n      mx = num[i];\n      ret = i;\n    }\n  }\n  return ret;\n}\n\nvoid solve() {\n  cin >> N >> R >> O >> Y >> G >> B >> V;\n  num[0] = R;\n  num[1] = O;\n  num[2] = Y;\n  num[3] = G;\n  num[4] = B;\n  num[5] = V;\n\n  int cnt = 0;\n  int c1 = 0, c2 = 0;\n  if (R) {\n    ++cnt;\n  }\n  if (B) {\n    ++cnt;\n  }\n  if (Y) {\n    ++cnt;\n  }\n  if (1 == cnt || 2 * R > N || 2 * B > N || 2 * Y > N) {\n    puts(\"IMPOSSIBLE\");\n    return;\n  }\n  string ans = \"\";\n  for (int i = 0; i < N; ++i) {\n    int mx = 0;\n    if (i == 0) {\n      mx = choose('#');\n    } else {\n      mx = choose(ans[i - 1]);\n    }\n    ans += color[mx];\n    num[mx]--;\n  }\n  if (ans[0] == ans[N - 1]) {\n    swap(ans[N - 1], ans[N - 2]);\n    if (ans[N - 2] == ans[N - 3]) {\n      cout << \"fucked\" << endl;\n    }\n  }\n  puts(ans.c_str());\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"Plypy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 105;\ndouble h[MAXN][MAXN];\nint d[MAXN][MAXN];\nint e[MAXN];\nint s[MAXN];\nint N, Q;\ndouble g[MAXN][MAXN];\n\nvoid update(int st, int u, int r) {\n  for (int i = 0; i < N; ++i) {\n    if (u == i)\n      continue;\n    if (d[u][i] != -1 && d[u][i] <= r) {\n      double est = double(d[u][i]) \/ s[st] + h[st][u];\n      if (h[st][i] == -1 || h[st][i] > est) {\n        h[st][i] = est;\n        update(st, i, r - d[u][i]);\n      }\n    }\n  }\n}\n\nvoid solve() {\n  cin >> N >> Q;\n  for (int i = 0; i < N; ++i) {\n    cin >> e[i] >> s[i];\n  }\n  for (int i = 0; i < N; ++i) {\n    for (int j = 0; j < N; ++j) {\n      cin >> d[i][j];\n      h[i][j] = -1;\n    }\n  }\n  for (int i = 0; i < N; ++i) {\n    h[i][i] = 0;\n    update(i, i, e[i]);\n  }\n  memcpy(g, h, sizeof(h));\n  for (int k = 0; k < N; ++k) {\n    for (int i = 0; i < N; ++i) {\n      if (g[i][k] == -1)\n        continue;\n      for (int j = 0; j < N; ++j) {\n        if (g[k][j] == -1)\n          continue;\n        if (g[i][j] == -1 || g[i][k] + g[k][j] < g[i][j]) {\n          g[i][j] = g[i][k] + g[k][j];\n        }\n      }\n    }\n  }\n  \/\/  cout << endl;\n  \/\/  for (int i = 0; i < N; ++i) {\n  \/\/    for (int j = 0; j < N; ++j) {\n  \/\/      cout << h[i][j] << ' ';\n  \/\/    }\n  \/\/    cout << endl;\n  \/\/  }\n  \/\/  cout << endl;\n  \/\/\n  \/\/  cout << endl;\n  \/\/  for (int i = 0; i < N; ++i) {\n  \/\/    for (int j = 0; j < N; ++j) {\n  \/\/      cout << g[i][j] << ' ';\n  \/\/    }\n  \/\/    cout << endl;\n  \/\/  }\n  \/\/  cout << endl;\n\n  for (int i = 0; i < Q; ++i) {\n    int u, v;\n    cin >> u >> v;\n    printf(\"%.8f\", g[u - 1][v - 1]);\n    if (i != Q - 1) {\n      cout << ' ';\n    }\n  }\n  cout << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nint T, N;\nchar in[19];\nchar make[19];\n\nbool check() {\n  char curr = '1';\n  for (int i = 0; i < N; i++) {\n    if (make[i] < curr) {\n      return false;\n    }\n    curr = make[i];\n  }\n  return true;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%s\", in);\n    N = strlen(in);\n    bool found = false;\n    for (int k = N; k >= 0; k--) {\n      \/\/ case 1: 0~k same k+1~N-1 to fit\n      for (int i = 0; i < k; i++) {\n        make[i] = in[i];\n      }\n      make[k] = in[k] - 1;\n      for (int i = k + 1; i < N; i++) {\n        make[i] = '9';\n      }\n      make[N] = '\\0';\n      found = check();\n      if (found)\n        break;\n    }\n    if (!found) {\n      \/\/ case 2: fill with 999999...\n      for (int i = 0; i < N - 1; i++) {\n        make[i] = '9';\n      }\n      make[N - 1] = '\\0';\n    }\n    printf(\"Case #%d: %s\\n\", tc, make);\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <queue>\n\nstruct Elem {\n  int l, r;\n  bool operator<(const Elem &b) const {\n    if (r - l != b.r - b.l) {\n      return r - l < b.r - b.l;\n    } else {\n      return b.l > b.r;\n    }\n  }\n  Elem(int _l = 0, int _r = 0) {\n    l = _l;\n    r = _r;\n  }\n};\n\nstd::priority_queue<Elem> heap;\nint T, N, K;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%d%d\", &N, &K);\n    while (!heap.empty())\n      heap.pop();\n    heap.push(Elem(0, N + 1));\n    Elem now;\n    int lb, rb;\n    for (int i = 0; i < K; i++) {\n      now = heap.top();\n      heap.pop();\n      int mid = (now.l + now.r) \/ 2;\n      lb = mid - now.l - 1;\n      rb = now.r - mid - 1;\n      heap.push(Elem(now.l, mid));\n      heap.push(Elem(mid, now.r));\n      \/\/ printf(\"pick %d\\n\", mid);\n    }\n    printf(\"Case #%d: %d %d\\n\", tc, std::max(lb, rb), std::min(lb, rb));\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <cstdio>\n#include <cstring>\n\nint T, K, N;\nchar cake[1010];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%s%d\", cake, &K);\n    int ans = 0;\n    bool pos = true;\n    N = strlen(cake);\n    for (int i = 0; i <= N - K; i++) {\n      if (cake[i] == '-') {\n        ans++;\n        for (int j = 0; j < K; j++) {\n          if (cake[i + j] == '-') {\n            cake[i + j] = '+';\n          } else {\n            cake[i + j] = '-';\n          }\n        }\n      }\n    }\n    for (int i = N - K; i < N; i++) {\n      if (cake[i] == '-') {\n        pos = false;\n        break;\n      }\n    }\n    if (pos) {\n      printf(\"Case #%d: %d\\n\", tc, ans);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", tc);\n    }\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nint T;\nint N, P;\nlong long R[60];\nlong long Q[60][60];\nlong long Qu[60][60], Qd[60][60];\n\nlong long getu(long long a) { return a * 11 \/ 10; }\nlong long getd(long long a) { return (a * 9 + 9) \/ 10; }\n\nlong long bsmax(long long rn, long long qn) {\n  long long l = 0, r = qn * 2;\n  while (l < r) {\n    long long mid = (l + r + 1) \/ 2;\n    \/\/ printf(\"l=%d  r=%d mid=%d getd=%d\\n\", l, r, mid, getd(rn*mid));\n    if (getd(rn * mid) <= qn)\n      l = mid;\n    else\n      r = mid - 1;\n  }\n  return l;\n}\n\nlong long bsmin(long long rn, long long qn) {\n  long long l = 0, r = qn * 2;\n  while (l < r) {\n    long long mid = (l + r) \/ 2;\n    \/\/ printf(\"l=%d  r=%d mid=%d\\n\", l, r, mid);\n    if (getu(rn * mid) < qn)\n      l = mid + 1;\n    else\n      r = mid;\n  }\n  return l;\n}\nbool valid(long long rn, long long qn, long long n) {\n  \/\/ std::cout << rn << \" \" << qn << \" \" << n << std::endl;\n  \/\/ std::cout << \"(\" << getu(rn*n) << \", \" << getd(rn*n) << \")\" << std::endl;\n  return getu(rn * n) >= qn && getd(rn * n) <= qn;\n}\n\nint main() {\n  freopen(\"B-small-attempt5.in\", \"r\", stdin);\n  freopen(\"B-small-attempt5.out\", \"w\", stdout);\n  std::cin >> T;\n  for (int tc = 1; tc <= T; tc++) {\n    std::cin >> N >> P;\n    for (int i = 0; i < N; i++) {\n      std::cin >> R[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        std::cin >> Q[i][j];\n        Qu[i][j] = bsmax(R[i], Q[i][j]);\n        Qd[i][j] = bsmin(R[i], Q[i][j]);\n        \/*if(Qu[i][j] >= Qd[i][j]) {\n                if(!valid(R[i], Q[i][j], Qu[i][j]) || !valid(R[i], Q[i][j],\n        Qu[i][j])) { std::cerr << \"invalid at \" << R[i] << \", \" << Q[i][j] <<\n        std::endl;\n                }\n        }*\/\n        \/\/ std::cout << Q[i][j] << \": \" << Qu[i][j] << \" \" << Qd[i][j] <<\n        \/\/ std::endl;  printf(\"%d: %d %d\\n\", Q[i][j], Qu[i][j], Qd[i][j]);\n      }\n    }\n    int ans = 0;\n    if (N == 1) {\n      for (int j = 0; j < P; j++) {\n        if (Qu[0][j] < Qd[0][j]) {\n          continue;\n        }\n        ans++;\n      }\n    } else if (N == 2) {\n      std::vector<int> lst;\n      for (int i = 0; i < P; i++) {\n        lst.push_back(i);\n      }\n      do {\n        int nans = 0;\n        for (int i = 0; i < P; i++) {\n          int j1, j2;\n          j1 = i;\n          j2 = lst[i];\n          if (valid(R[0], Q[0][j1], Qu[0][j1]) &&\n              valid(R[1], Q[1][j2], Qu[0][j1])) {\n            nans++;\n          } else if (valid(R[0], Q[0][j1], Qd[0][j1]) &&\n                     valid(R[1], Q[1][j2], Qd[0][j1])) {\n            nans++;\n          } else if (valid(R[0], Q[0][j1], Qu[1][j2]) &&\n                     valid(R[1], Q[1][j2], Qu[1][j2])) {\n            nans++;\n          } else if (valid(R[0], Q[0][j1], Qd[1][j2]) &&\n                     valid(R[1], Q[1][j2], Qd[1][j2])) {\n            nans++;\n          }\n        }\n        if (nans > ans)\n          ans = nans;\n      } while (std::next_permutation(lst.begin(), lst.end()));\n      \/*for(int j1=0; j1<P; j1++) {\n              for(int j2=0; j2<P; j2++) {\n                      if(Qu[0][j1] < Qd[0][j1] || Qu[1][j2] <  Qd[1][j2]) {\n                              continue;\n                      }\n                      if(Qd[0][j1] > Qu[1][j2] || Qd[1][j2] > Qu[0][j1]) {\n                              continue;\n                      }\n                      ans++;\n                      if(valid(R[0], Q[0][j1], Qu[0][j1]) && valid(R[1],\n      Q[1][j2], Qu[0][j1])) { ans++;\n                      }\n                      else if(valid(R[0], Q[0][j1], Qd[0][j1]) && valid(R[1],\n      Q[1][j2], Qd[0][j1])) { ans++;\n                      }\n                      else if(valid(R[0], Q[0][j1], Qu[1][j2]) && valid(R[1],\n      Q[1][j2], Qu[1][j2])) { ans++;\n                      }\n                      else if(valid(R[0], Q[0][j1], Qd[1][j2]) && valid(R[1],\n      Q[1][j2], Qd[1][j2])) { ans++;\n                      }\n              }\n      }*\/\n    } else {\n      std::cout << \"?????\" << std::endl;\n    }\n    std::cout << \"Case #\" << tc << \": \" << ans << std::endl;\n  }\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <queue>\n\nusing std::max;\nusing std::min;\nusing std::queue;\n\nint rmin[26], rmax[26], cmin[26], cmax[26];\nbool appear[26];\nint T, R, C;\nchar in[30][30];\n\nbool empty(int rl, int rr, int cl, int cr) {\n  for (int r = rl; r <= rr; r++) {\n    for (int c = cl; c <= cr; c++) {\n      if (in[r][c] != '?') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nvoid fill(int rl, int rr, int cl, int cr, char ch) {\n  for (int r = rl; r <= rr; r++) {\n    for (int c = cl; c <= cr; c++) {\n      in[r][c] = ch;\n    }\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"A-small-attempt1.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%d%d\", &R, &C);\n    for (int i = 0; i < 26; i++) {\n      rmin[i] = R;\n      rmax[i] = 1;\n      cmin[i] = C;\n      cmax[i] = 1;\n    }\n    for (int i = 1; i <= R; i++) {\n      scanf(\"%s\", in[i] + 1);\n      for (int j = 1; j <= C; j++) {\n        if (in[i][j] != '?') {\n          int ord = in[i][j] - 'A';\n          appear[ord] = true;\n          rmin[ord] = min(rmin[ord], i);\n          rmax[ord] = max(rmax[ord], i);\n          cmin[ord] = min(cmin[ord], j);\n          cmax[ord] = max(cmax[ord], j);\n        }\n      }\n    }\n    while (true) {\n      bool adj = false;\n      \/\/ r stretch\n      for (int ord = 0; ord < 26; ord++) {\n        if (appear[ord]) {\n          while (rmin[ord] - 1 >= 1 &&\n                 empty(rmin[ord] - 1, rmin[ord] - 1, cmin[ord], cmax[ord])) {\n            adj = true;\n            rmin[ord]--;\n            fill(rmin[ord], rmin[ord], cmin[ord], cmax[ord], ord + 'A');\n          }\n          while (rmax[ord] + 1 <= R &&\n                 empty(rmax[ord] + 1, rmax[ord] + 1, cmin[ord], cmax[ord])) {\n            adj = true;\n            rmax[ord]++;\n            fill(rmax[ord], rmax[ord], cmin[ord], cmax[ord], ord + 'A');\n          }\n        }\n      }\n      \/\/ c stretch\n      for (int ord = 0; ord < 26; ord++) {\n        if (appear[ord]) {\n          while (cmin[ord] - 1 >= 1 &&\n                 empty(rmin[ord], rmax[ord], cmin[ord] - 1, cmin[ord] - 1)) {\n            adj = true;\n            cmin[ord]--;\n            fill(rmin[ord], rmax[ord], cmin[ord], cmin[ord], ord + 'A');\n          }\n          while (cmax[ord] + 1 <= C &&\n                 empty(rmin[ord], rmax[ord], cmax[ord] + 1, cmax[ord] + 1)) {\n            adj = true;\n            cmax[ord]++;\n            fill(rmin[ord], rmax[ord], cmax[ord], cmax[ord], ord + 'A');\n          }\n        }\n      }\n      if (!adj)\n        break;\n    }\n    printf(\"Case #%d:\\n\", tc);\n    for (int i = 1; i <= R; i++) {\n      printf(\"%s\\n\", in[i] + 1);\n    }\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <vector>\n\nint T, D, N;\nconst int MN = 1010;\nconst double EPS = 1e-7;\n\nstruct Horse {\n  int pos;\n  int spd;\n  Horse() {\n    pos = 0;\n    spd = 0;\n  }\n  bool operator<(const Horse &b) const { return pos > b.pos; }\n} h[MN];\n\nstruct Speed {\n  int spd;\n  double t;\n  \/\/ change to speed t at time spd\n  Speed(int _s = 0, double _t = 0.0f) {\n    spd = _s;\n    t = _t;\n  }\n};\n\nstd::vector<Speed> s[MN];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%d%d\", &D, &N);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d%d\", &h[i].pos, &h[i].spd);\n      s[i] = std::vector<Speed>();\n    }\n    std::sort(h, h + N);\n    for (int i = 0; i < N; i++) {\n      s[i].push_back(Speed(1, 0));\n      s[i].push_back(Speed(h[i].spd, 0));\n      if (i == 0) {\n        s[i].push_back(Speed(1, D + 1));\n        continue;\n      }\n      \/\/ adjust new\n      int slen = (int)s[i - 1].size(), si = 0;\n      double prepos = (double)h[i - 1].pos, nowpos = (double)h[i].pos;\n      for (si = 1; si < slen; si++) {\n        double deltat = (s[i - 1][si].t - s[i - 1][si - 1].t);\n        double prep, nowp;\n        prep = prepos + s[i - 1][si - 1].spd * deltat;\n        nowp = nowpos + h[i].spd * deltat;\n        \/\/ printf(\"%d: hit at %d (%f %f)\\n\", i, si, prepos, nowpos);\n        if (nowp + EPS > prep) {\n          int newspd;\n          double newt;\n          newspd = s[i - 1][si - 1].spd;\n          newt = (prepos - nowpos) \/ (h[i].spd - s[i - 1][si - 1].spd) +\n                 s[i - 1][si - 1].t;\n          s[i].push_back(Speed(newspd, newt));\n          break;\n        }\n        prepos = prep;\n        nowpos = nowp;\n      }\n      for (; si < slen; si++) {\n        s[i].push_back(s[i - 1][si]);\n      }\n      s[i].push_back(Speed(1, D + 1));\n    }\n    \/*\n    for(int i=0; i<N; i++) {\n            printf(\"Horse %d:\\n\", i);\n            printf(\"%d %d\\n\", h[i].pos, h[i].spd);\n            for(int j=0; j<s[i].size(); j++) {\n                    printf(\">speed %d time %.2f\\n\", s[i][j].spd, s[i][j].t);\n            }\n    }\/\/*\/\n    double walked = (double)h[N - 1].pos;\n    double ans = 0.0f;\n    int len = (int)s[N - 1].size();\n    for (int si = 1; si < len; si++) {\n      double deltat = (s[N - 1][si].t - s[N - 1][si - 1].t);\n      double walknxt;\n      walknxt = walked + s[N - 1][si - 1].spd * deltat;\n      \/\/ printf(\"walked %f walknxt %f %d\\n\", walked, walknxt, s[N-1][si-1].spd);\n      if (walknxt + EPS > D) {\n        ans = (D - walked) \/ s[N - 1][si - 1].spd + s[N - 1][si - 1].t;\n        break;\n      }\n      walked = walknxt;\n    }\n    printf(\"Case #%d: %.6f\\n\", tc, D \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <vector>\n\nconst int MN = 1010;\n\nint T;\nint N, R, O, Y, G, B, V;\nbool dp[MN][MN \/ 2][MN \/ 2][3];\nchar tr[MN][MN \/ 2][MN \/ 2][3];\n\ninline void update(int pre, int i, int ri, int yi, int p) {\n  if (!dp[i][ri][yi][p]) {\n    dp[i][ri][yi][p] = true;\n    tr[i][ri][yi][p] = pre;\n  }\n}\n\nvoid trace(int i, int ri, int yi, int p) {\n  if (i == 0)\n    return;\n  int pre = tr[i][ri][yi][p];\n  if (!dp[i][ri][yi][p])\n    printf(\"WTFFFFFFFFFFFF\\n\");\n  if (p == 0) {\n    trace(i - 1, ri - 1, yi, pre);\n    printf(\"R\");\n  }\n  if (p == 1) {\n    trace(i - 1, ri, yi - 1, pre);\n    printf(\"Y\");\n  }\n  if (p == 2) {\n    trace(i - 1, ri, yi, pre);\n    printf(\"B\");\n  }\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n    for (int i = 1; i <= N; i++) {\n      for (int ri = 0; ri <= R; ri++) {\n        for (int yi = 0; yi <= Y; yi++) {\n          for (int p = 0; p < 3; p++) {\n            dp[i][ri][yi][p] = false;\n            tr[i][ri][yi][p] = 0;\n          }\n        }\n      }\n    }\n    if (B == 0) {\n      if (R == 0 && Y == 1) {\n        printf(\"Case #%d: Y\\n\", tc);\n      } else if (R == 1 && Y == 0) {\n        printf(\"Case #%d: R\\n\", tc);\n      } else if (R == Y) {\n        printf(\"Case #%d: \", tc);\n        for (int ri = 0; ri < R; ri++) {\n          printf(\"RY\");\n        }\n        printf(\"\\n\");\n      } else {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", tc);\n      }\n    } else if (R == 0 && Y == 0 && B == 1) {\n      printf(\"Case #%d: B\\n\", tc);\n    } else if (R + R > N || Y + Y > N || B + B > N) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", tc);\n    } else {\n      \/\/ 0R 1Y 2B\n      dp[1][0][0][2] = true;\n      tr[1][0][0][2] = 0;\n      for (int i = 1; i < N; i++) {\n        for (int ri = 0; ri <= R; ri++) {\n          if (ri + ri > i)\n            break;\n          for (int yi = 0; yi <= Y; yi++) {\n            if (yi + yi > i)\n              break;\n            int bi = i - ri - yi;\n            if (bi < 0)\n              break;\n            if (bi > B)\n              continue;\n            \/\/ printf(\"(%d,%d,%d): %d %d %d\\n\", ri, yi, bi, dp[i][ri][yi][0],\n            \/\/ dp[i][ri][yi][1], dp[i][ri][yi][2]);\n            if (dp[i][ri][yi][0]) {\n              update(0, i + 1, ri, yi + 1, 1); \/\/ R->Y\n              update(0, i + 1, ri, yi, 2);     \/\/ R->B\n            }\n            if (dp[i][ri][yi][1]) {\n              update(1, i + 1, ri + 1, yi, 0); \/\/ Y->R\n              update(1, i + 1, ri, yi, 2);     \/\/ Y->B\n            }\n            if (dp[i][ri][yi][2]) {\n              update(2, i + 1, ri + 1, yi, 0); \/\/ B->R\n              update(2, i + 1, ri, yi + 1, 1); \/\/ B->Y\n            }\n          }\n        }\n      }\n      if (dp[N][R][Y][0]) {\n        printf(\"Case #%d: \", tc);\n        trace(N, R, Y, 0);\n        printf(\"\\n\");\n      } else if (dp[N][R][Y][1]) {\n        printf(\"Case #%d: \", tc);\n        trace(N, R, Y, 1);\n        printf(\"\\n\");\n      } else {\n        printf(\"Case #%d: IMPOSSIBLE\\n\", tc);\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"poao","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <vector>\n\nint T;\n\nconst int MN = 110;\nint N, Q;\nint U, V;\n\nlong long dst[MN][MN];\nint E[MN], S[MN];\n\/\/ bool pos[MN][MN];\n\/\/ double dp[MN][MN];\ndouble ans[MN];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (int tc = 1; tc <= T; tc++) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%d%d\", &E[i], &S[i]);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        scanf(\"%I64d\", &dst[i][j]);\n      }\n    }\n    for (int i = 0; i < Q; i++) {\n      scanf(\"%d%d\", &U, &V);\n    }\n    \/\/ warshall\n    for (int k = 1; k <= N; k++) {\n      for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= N; j++) {\n          if (dst[i][k] == -1 || dst[k][j] == -1)\n            continue;\n          if (dst[i][j] == -1 || dst[i][j] > dst[i][k] + dst[k][j]) {\n            dst[i][j] = dst[i][k] + dst[k][j];\n          }\n        }\n      }\n    }\n    \/*for(int i=0; i<=N; i++) {\n            for(int j=0; j<=N; j++) {\n                    pos[i][j] = false;\n            }\n    }*\/\n    \/\/ pos[1][1] = true;\n    \/\/ dp[1][1] = 0.0f;\n    ans[1] = 0.0f;\n    for (int i = 2; i <= N; i++) {\n      bool found = false;\n      for (int j = 1; j < i; j++) {\n        double now;\n        if (E[j] >= dst[j][i]) {\n          now = ans[j] + ((double)dst[j][i] \/ S[j]);\n          if (!found || ans[i] > now) {\n            ans[i] = now;\n            found = true;\n          }\n        }\n      }\n      if (!found)\n        fprintf(stderr, \"WTFFFFFFF\");\n    }\n    printf(\"Case #%d: %.7f\\n\", tc, ans[N]);\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return d < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nbool tidy(vi &digits) {\n  for (int i = 1; i < (int)(digits.size()); i++) {\n    if (digits[i - 1] > digits[i])\n      return false;\n  }\n  return true;\n}\n\nvi solve() {\n  ll N;\n  cin >> N;\n\n  vi digits;\n  while (N > 0) {\n    int d = N % 10;\n    digits.push_back(d);\n    N \/= 10;\n  }\n  reverse(((digits).begin()), ((digits).end()));\n\n  if (tidy(digits))\n    return digits;\n\n  for (int i = 1; i < (int)(digits.size()); i++) {\n    if (digits[i - 1] >= digits[i]) {\n      if (digits[i - 1] > 1) {\n        digits[i - 1]--;\n        for (int j = i; j < (int)(digits.size()); j++)\n          digits[j] = 9;\n      }\n      break;\n    }\n  }\n\n  if (tidy(digits))\n    return digits;\n\n  vi decreased(digits.size() - 1, 9);\n  return decreased;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    vi ans = solve();\n    for (__typeof((ans).begin()) it = (ans).begin(); it != (ans).end(); it++)\n      cout << *it;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return d < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nvoid solve() {\n  ll N, K;\n  cin >> N >> K;\n\n  map<ll, ll, greater<ll>> nums;\n  nums[N] = 1;\n\n  while (true) {\n    ll now = begin(nums)->first;\n    if (now == 0)\n      break;\n    ll count = begin(nums)->second;\n\n    ll left = now \/ 2;\n    ll right = (now - 1) \/ 2;\n\n    K -= count;\n    if (K <= 0) {\n      cout << left << \" \" << right;\n      return;\n    }\n\n    nums[left] += count;\n    nums[right] += count;\n\n    nums.erase(now);\n  }\n\n  cout << \"0 0\";\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return d < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nvoid solve() {\n  string pans;\n  int K;\n  cin >> pans >> K;\n\n  int ans = 0;\n  for (int i = 0; i < (int)(pans.size() - K + 1); i++) {\n    if (pans[i] == '-') {\n      ans++;\n      for (int j = 0; j < (int)(K); j++) {\n        pans[i + j] = (pans[i + j] == '+') ? '-' : '+';\n      }\n    }\n  }\n\n  for (int i = 0; i < (int)(pans.size()); i++) {\n    if (pans[i] == '-') {\n      cout << \"IMPOSSIBLE\";\n      return;\n    }\n  }\n\n  cout << ans;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return abs(d) < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\npii range(int target) {\n  int from = ceil((double)target * 0.9);\n  int to = floor((double)target * 1.1);\n  return make_pair(from, to);\n}\n\nbool between(int now, int target) {\n  pii t = range(target);\n  \/\/    cout <<  \"   bt: \" << t << now << endl;\n  return t.first <= now && now <= t.second;\n}\n\npii conv(int now) {\n  int e = floor((double)now \/ 0.9);\n  int s = ceil((double)now \/ 1.1);\n  return make_pair(s, e);\n}\n\npii check(int now, int target) {\n  \/\/    cout << \"  chk: \" << now << \" \" << target << endl;\n  pii ran = range(target);\n  int am1 = ran.first \/ now - 1;\n  int am2 = ran.second \/ now + 1;\n  pii ans = make_pair(INF, -1);\n  \/\/    cout << \"  chk2: \" << am1 << \" \" << am2 << endl;\n  for (int i = max(1, am1); i < (int)(am2 + 1); i++) {\n    if (between(target, now * i)) {\n      chmin(ans.first, i);\n      chmax(ans.second, i);\n    }\n  }\n  return ans;\n}\n\nvoid solve() {\n  int N, P;\n  cin >> N >> P;\n\n  vi R(N);\n  for (int i = 0; i < (int)(N); i++)\n    cin >> R[i];\n\n  vvi Q(N, vi(P));\n  for (int i = 0; i < (int)(N); i++) {\n    for (int j = 0; j < (int)(P); j++) {\n      cin >> Q[i][j];\n    }\n  }\n\n  for (int i = 0; i < (int)(N); i++) {\n    sort(((Q[i]).begin()), ((Q[i]).end()));\n  }\n\n  vector<vector<pii>> need(N, vector<pii>(P));\n  for (int i = 0; i < (int)(N); i++) {\n    for (int j = 0; j < (int)(P); j++) {\n      need[i][j] = conv(Q[i][j]);\n    }\n  }\n\n  int ans = 0;\n  if (N <= 2) {\n    for (int pack = 0; pack < (int)(P); pack++) {\n      int from = ceil((double)need[0][pack].first \/ R[0]);\n      int to = floor((double)need[0][pack].second \/ R[0]);\n\n      bool gok = false;\n      for (int i = from; i < (int)(to + 1); i++) {\n        bool ok = (need[0][pack].first <= R[0] * i &&\n                   R[0] * i <= need[0][pack].second);\n        \/\/                cout << \" fc: \" << need[0][pack].first << \" \" <<\n        \/\/                R[0]*i << \" & \"<<  R[0]*i << \" \" <<\n        \/\/                need[0][pack].second << endl;\n\n        if (!ok)\n          continue;\n\n        ok = (N == 1);\n\n        for (int g = 1; g < (int)(N); g++) {\n          for (int p = 0; p < (int)(P); p++) {\n            if (need[g][p].first <= R[g] * i && R[g] * i <= need[g][p].second) {\n              \/\/                            cout << need[g][p].first << \" \" <<\n              \/\/                            R[g]*i << \" & \"<<  R[g]*i << \" \" <<\n              \/\/                            need[g][p].second << endl;\n              ok = true;\n              need[g][p] = make_pair(-1, -1);\n              break;\n            }\n          }\n        }\n\n        gok |= ok;\n\n        if (ok)\n          break;\n      }\n\n      if (gok) {\n        ans++;\n      }\n    }\n\n    cout << ans;\n  } else {\n    cout << \"IMP\";\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return abs(d) < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nvoid solve() {\n  int R, C;\n  cin >> R >> C;\n\n  vector<string> field(R);\n  \/\/    vector<pii> start;\n  map<int, pii> sized;\n  map<int, pii> pos;\n\n  for (int i = 0; i < (int)(R); i++)\n    cin >> field[i];\n\n  for (int i = 0; i < (int)(R); i++) {\n    for (int j = 0; j < (int)(C); j++) {\n      if (field[i][j] != '?') {\n        int code = field[i][j] - 'A';\n        pos[code] = make_pair(i, j);\n      }\n    }\n  }\n\n  for (int r = 0; r < (int)(R); r++) {\n    for (int c = 1; c < (int)(C); c++) {\n      if (field[r][c] == '?')\n        field[r][c] = field[r][c - 1];\n    }\n    for (int c = C - 2; c >= 0; c--) {\n      if (field[r][c] == '?')\n        field[r][c] = field[r][c + 1];\n    }\n  }\n\n  for (int c = 0; c < (int)(C); c++) {\n    for (int r = 1; r < (int)(R); r++) {\n      if (field[r][c] == '?')\n        field[r][c] = field[r - 1][c];\n    }\n    for (int r = R - 2; r >= 0; r--) {\n      if (field[r][c] == '?')\n        field[r][c] = field[r + 1][c];\n    }\n  }\n\n  for (int r = 0; r < (int)(R); r++) {\n    cout << field[r] << endl;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \":\" << endl;\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return abs(d) < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nvoid solve() {\n  ll D, N;\n  cin >> D >> N;\n\n  double mx_sec = 0.0;\n  for (int i = 0; i < (int)(N); i++) {\n    double k, m;\n    cin >> k >> m;\n    double rem = (D - k);\n    double sec = rem \/ m;\n\n    chmax(mx_sec, sec);\n  }\n\n  cout << D \/ mx_sec;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return abs(d) < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nstring solve() {\n  int N;\n  cin >> N;\n  vi col(6);\n  for (int i = 0; i < (int)(6); i++) {\n    cin >> col[i];\n  }\n\n  \/\/    rep(i, 6) {\n  \/\/        if (i % 2 == 1) {\n  \/\/            if (col[i] > 0 && col[i] >= col[(i + 3) % 6]) {\n  \/\/                if (col[i] + col[(i + 3) % 6] != N)\n  \/\/                    return \"\";\n  \/\/            }\n  \/\/        }\n  \/\/    }\n  \/\/\n  \/\/    vi ryb(3, 0);\n  \/\/    rep(i, 6) {\n  \/\/        if(i % 2 == 0) {\n  \/\/            ryb[i\/2] += col[i];\n  \/\/        }\n  \/\/        else if(i % 2 == 1) {\n  \/\/            ryb[(i+3) % 6] -= col[i];\n  \/\/        }\n  \/\/    }\n\n  string s = \"\";\n  vector<string> large(6, \"\");\n\n  for (int _i = 0; _i < (int)(3); _i++) {\n    int i = _i * 2 + 1;\n    int comp = (i + 3) % 6;\n    if (i % 2 == 1 && col[i] > 0) {\n      bool check = false;\n      int sm = col[i] + col[comp];\n\n      string su = \"\";\n\n      while (col[i] > 0) {\n        check = true;\n        if (col[comp] <= 0) {\n          return \"\";\n        }\n        su += comp + '0';\n        su += i + '0';\n        col[i]--;\n        col[comp]--;\n      }\n\n      if (check) {\n        if (col[comp] <= 0 && sm != N) {\n          return \"\";\n        }\n        if (col[comp] > 0) {\n          su += comp + '0';\n          col[comp]--;\n        }\n      }\n\n      large[comp] = su;\n      col[comp]++;\n    }\n  }\n\n  priority_queue<pair<int, pii>> que;\n  for (int i = 0; i < (int)(3); i++) {\n    que.push(make_pair(col[i * 2], make_pair(col[i * 2], i * 2)));\n  }\n\n  while (!que.empty()) {\n    auto f = que.top();\n    que.pop();\n\n    \/\/        cout << \" f: \" << f << endl;\n\n    if (f.first <= 0)\n      break;\n\n    s += f.second.second + '0';\n    f.first--;\n\n    auto sec = que.top();\n    que.pop();\n\n    \/\/        cout << \" s: \" << sec << endl;\n\n    if (sec.first > 0) {\n      s += sec.second.second + '0';\n      sec.first--;\n    }\n\n    que.push(f);\n    que.push(sec);\n  }\n\n  \/\/    cout << s << endl;\n  \/\/    rep(i, 3) {\n  \/\/        cout << i << \" \" << large[i] << endl;\n  \/\/    }\n\n  vector<string> strcol = {\"R\", \"O\", \"Y\", \"G\", \"B\", \"V\"};\n  string ans = \"\";\n  for (int i = 0; i < (int)(s.size()); i++) {\n    int ci = (s[i] - '0');\n    if (large[ci] != \"\") {\n      for (__typeof((large[ci]).begin()) it = (large[ci]).begin();\n           it != (large[ci]).end(); it++) {\n        ans += strcol[(*it - '0')];\n      }\n      large[ci] = \"\";\n    } else {\n      ans += strcol[ci];\n    }\n  }\n  \/\/\n  \/\/    cout << \"  ans: \" << ans << endl;\n\n  if (ans.size() == 1)\n    return \"\";\n\n  for (int i = 0; i < (int)(N); i++) {\n    char s = ans[i];\n    char e = ans[(i + 1) % N];\n\n    for (int i = 0; i < (int)(2); i++) {\n      if (s == 'R') {\n        if (e == 'R' || e == 'O' || e == 'V')\n          return \"\";\n      }\n      if (s == 'B') {\n        if (e == 'B' || e == 'G' || e == 'V')\n          return \"\";\n      }\n      if (s == 'Y') {\n        if (e == 'Y' || e == 'O' || e == 'G')\n          return \"\";\n      }\n\n      swap(s, e);\n    }\n  }\n\n  return ans;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    string ans = solve();\n    if (ans == \"\") {\n      cout << \"IMPOSSIBLE\";\n    } else {\n      cout << ans;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"purupuyo","func":"#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n\n\/\/ C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<vi> vvi;\ntypedef vector<long double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int INF = 1 << 30;\nconst double EPS = 1e-10;\n\ndouble zero(double d) { return abs(d) < EPS ? 0.0 : d; }\n\ntemplate <class T> bool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <class T> bool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\n  return os << '(' << p.first << ',' << p.second << ')';\n}\n\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &a) {\n  os << '[';\n  for (int i = 0; i < (int)(a.size()); i++)\n    os << (i ? \" \" : \"\") << a[i];\n  return os << ']';\n}\n\nstring toString(int i) {\n  stringstream ss;\n  ss << i;\n  return ss.str();\n}\n\nconst int MOD = 1000000007;\n\n\/\/ a^k\nll fpow(ll a, ll k, int M) {\n  ll res = 1ll;\n  ll x = a;\n  while (k != 0) {\n    if ((k & 1) == 1)\n      res = (res * x) % M;\n    x = (x * x) % M;\n    k >>= 1;\n  }\n  return res;\n}\n\nstruct prepare {\n  prepare() {\n    cout.setf(ios::fixed, ios::floatfield);\n    cout.precision(8);\n    ios_base::sync_with_stdio(false);\n  }\n} _prepare;\n\nvoid solve() {\n\n  const ll INF = 1ll << 50;\n\n  int N, Q;\n  cin >> N >> Q;\n\n  vector<pii> hou(N);\n  for (int i = 0; i < (int)(N); i++) {\n    cin >> hou[i].first >> hou[i].second;\n  }\n\n  vi d(N, 0);\n  for (int i = 0; i < (int)(N); i++) {\n    for (int j = 0; j < (int)(N); j++) {\n      int t;\n      cin >> t;\n      if (i == j - 1) {\n        d[i] = t;\n      }\n    }\n  }\n\n  int st = 0, en = N;\n  for (int i = 0; i < (int)(Q); i++) {\n    int s, e;\n    cin >> s >> e;\n  }\n\n  \/\/    cout << d << endl;\n\n  vll acc(N, 0);\n  for (int i = 1; i < (int)(N); i++) {\n    acc[i] += d[i - 1] + acc[i - 1];\n  }\n\n  \/\/    cout << acc << endl;\n\n  vvd dp(N + 1, vd(N + 1, INF));\n  dp[1][0] = (long double)d[0] \/ hou[0].second;\n  for (int i = 0; i < (int)(N); i++) {\n    for (int j = 0; j < (int)(i); j++) {\n      if (dp[i][j] == INF)\n        continue;\n\n      \/\/            cout << \"run: \"<< acc[i] - acc[j] << endl;\n      int remd = hou[j].first - (acc[i] - acc[j]);\n      \/\/            cout << remd << endl;\n\n      \/\/ not change\n      if (remd > d[i]) {\n        chmin(dp[i + 1][j], dp[i][j] + (long double)d[i] \/ hou[j].second);\n      }\n      \/\/ change\n      chmin(dp[i + 1][i], dp[i][j] + (long double)d[i] \/ hou[i].second);\n    }\n  }\n\n  long double ans = INF;\n  for (int i = 0; i < (int)(N); i++) {\n    chmin(ans, dp[N][i]);\n  }\n\n  cout << ans;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int _t = 0; _t < (int)(T); _t++) {\n    cout << \"Case #\" << (_t + 1) << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1005;\nchar str[N];\nll dp[10][20];\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d: \", ca++);\n    scanf(\"%s\", str);\n    int n = strlen(str);\n    int k = -1;\n    for (int i = 0; i < n - 1; i++) {\n      if (str[i] > str[i + 1]) {\n        k = i;\n        break;\n      }\n    }\n    \/\/ printf(\"k:%d \\n\",k);\n    while (k >= 0 && str[k] > str[k + 1]) {\n      str[k]--;\n      for (int i = k + 1; i < n; i++) {\n        str[i] = '9';\n        \/\/ printf(\"i:%d \\n\",i);\n      }\n      k--;\n    }\n    ll ret = 0, p = 1;\n    for (int i = n - 1; i >= 0; i--, p *= 10) {\n      ret += (str[i] - '0') * p;\n    }\n    printf(\"%I64d\\n\", ret);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1005;\nint a[N];\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1, n, k;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d: \", ca++);\n    scanf(\"%d%d\", &n, &k);\n    int p = 2, ps;\n    a[0] = 0;\n    a[1] = n + 1;\n    for (int i = 0; i < k; i++) {\n      int mx = -1;\n      for (int j = 0; j < p - 1; j++) {\n        if (a[j + 1] - a[j] > mx) {\n          mx = a[j + 1] - a[j];\n          ps = (a[j] + (mx - 2) \/ 2 + 1);\n        }\n      }\n      a[p++] = ps;\n      sort(a, a + p);\n    }\n    int h, r1, r2;\n    for (int i = 0; i < p; i++) {\n      if (a[i] == ps) {\n        r1 = (a[i + 1] - a[i - 1] - 2) \/ 2;\n        r2 = (a[i + 1] - a[i - 1] - 2) - r1;\n      }\n    }\n    printf(\"%d %d\\n\", r2, r1);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1005;\nchar str[N];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1, k;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d: \", ca++);\n    scanf(\"%s%d\", str, &k);\n    int n = strlen(str), ret = 0;\n    for (int i = 0; i < n - k + 1; i++) {\n      if (str[i] == '-') {\n        for (int j = 0; j < k; j++) {\n          str[i + j] = str[i + j] == '+' ? '-' : '+';\n        }\n        ret++;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (str[i] == '-')\n        ret = -1;\n    }\n    if (ret == -1)\n      puts(\"IMPOSSIBLE\");\n    else\n      printf(\"%d\\n\", ret);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 105;\nstruct P {\n  int l, r;\n} d[N][N];\nbool cmp(P x, P y) { return x.r < y.r; }\ndouble a[N];\nint tmp[N], pos[N];\nbool u[N][N];\nint main() {\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d: \", ca++);\n    int m, n;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lf\", &a[i]);\n    }\n    int e = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        int x;\n        scanf(\"%d\", &x);\n        int k = x \/ a[i], mi = -1, mx = -1;\n        for (int h = 1; h <= 1200000; h++) {\n          double ld = h * a[i] * 0.9;\n          double rd = h * a[i] * 1.1;\n          if (ld <= x && x <= rd) {\n            if (mi == -1)\n              mi = h;\n            mx = h;\n          }\n          if (x < ld)\n            break;\n        }\n        if (mi != -1) {\n          d[i][j].l = mi;\n          d[i][j].r = mx;\n          tmp[e++] = mi;\n        } else\n          d[i][j].l = d[i][j].r = -1;\n      }\n    }\n    for (int i = 0; i < n; i++)\n      sort(d[i], d[i] + m, cmp);\n    sort(tmp, tmp + e);\n    \/*for(int i=0;i<e;i++)printf(\"i:%d tmp:%d \\n\",i,tmp[i]);\n    for(int i=0;i<n;i++)\n    {\n            for(int j=0;j<m;j++)printf(\"l:%d r:%d | \",d[i][j].l,d[i][j].r);\n            puts(\"\");\n    }*\/\n    memset(u, 0, sizeof(u));\n    int ret = 0;\n    for (int i = 0; i < e; i++) {\n      int x = tmp[i], f = 0;\n      for (int j = 0; j < n; j++) {\n        int ps = -1;\n        for (int h = 0; h < m; h++)\n          if (!u[j][h] && d[j][h].l != -1) {\n            if (d[j][h].l <= x && d[j][h].r >= x) {\n              ps = h;\n              break;\n            }\n          }\n        if (ps == -1) {\n          f = 1;\n          break;\n        }\n        pos[j] = ps;\n      }\n      if (!f) {\n        for (int j = 0; j < n; j++) {\n          u[j][pos[j]] = true;\n        }\n        ret++;\n      }\n    }\n    printf(\"%d\\n\", ret);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 105;\nchar s[N][N];\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d:\\n\", ca++);\n    int m, n;\n    scanf(\"%d%d\", &m, &n);\n    for (int i = 0; i < m; i++) {\n      scanf(\"%s\", s[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        if (s[j][i] != '?') {\n          int k = j - 1;\n          while (k >= 0 && s[k][i] == '?') {\n            s[k][i] = s[j][i];\n            k--;\n          }\n          k = j + 1;\n          while (k < m && s[k][i] == '?') {\n            s[k][i] = s[j][i];\n            k++;\n          }\n        }\n      }\n    }\n    for (int i = 1; i < n; i++) {\n      for (int j = 0; j < m; j++)\n        if (s[j][i] == '?') {\n          s[j][i] = s[j][i - 1];\n        }\n    }\n    for (int i = n - 1; i >= 0; i--) {\n      for (int j = 0; j < m; j++)\n        if (s[j][i] == '?') {\n          if (i < n - 1)\n            s[j][i] = s[j][i + 1];\n        }\n    }\n    for (int i = 0; i < m; i++)\n      puts(s[i]);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1050;\ndouble s[N], k[N], t[N];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d: \", ca++);\n    int D, n;\n    scanf(\"%d%d\", &D, &n);\n    double mx = 0.0;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lf%lf\", &k[i], &s[i]);\n      t[i] = (D - k[i]) \/ s[i];\n      if (mx < t[i])\n        mx = t[i];\n    }\n    double ret = D \/ mx;\n    printf(\"%.9lf\\n\", ret);\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1050;\ntypedef pair<int, int> per;\n\nint n, r, o, y, g, b, v, f, nn;\nint ret[N];\nper a[3];\nmap<ll, int> lzs;\nbool gao() {\n  if (g && r <= g)\n    return false;\n  r -= g;\n  if (v && y <= v)\n    return false;\n  y -= v;\n  if (o && b <= o)\n    return false;\n  b -= o;\n  return true;\n}\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    lzs.clear();\n    printf(\"Case #%d: \", ca++);\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    if (o == b && o + b == n) {\n      for (int i = 0; i < n; i++) {\n        if (i % 2)\n          putchar('O');\n        else\n          putchar('B');\n      }\n      puts(\"\");\n      continue;\n    }\n    if (g == r && g + r == n) {\n      for (int i = 0; i < n; i++) {\n        if (i % 2)\n          putchar('G');\n        else\n          putchar('R');\n      }\n      puts(\"\");\n      continue;\n    }\n    if (v == y && v + y == n) {\n      for (int i = 0; i < n; i++) {\n        if (i % 2)\n          putchar('V');\n        else\n          putchar('Y');\n      }\n      puts(\"\");\n      continue;\n    }\n    if (!gao()) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    if (r > y + b || y > r + b || b > r + y) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    f = 0;\n    int k = 0;\n    nn = r + y + b;\n    a[0] = make_pair(r, 1);\n    a[1] = make_pair(y, 2);\n    a[2] = make_pair(b, 3);\n    sort(a, a + 3);\n    int kk = a[0].first - (a[2].first - a[1].first);\n    for (int i = 0; i < a[1].first; i++) {\n      ret[k++] = a[2].second;\n      if (kk) {\n        ret[k++] = a[0].second;\n        kk--;\n      }\n      ret[k++] = a[1].second;\n    }\n    a[2].first -= a[1].first;\n    if (a[0].first < a[2].first) {\n      puts(\"IMPOSSIBLE\");\n      continue;\n    }\n    for (int i = 0; i < a[2].first; i++) {\n      ret[k++] = a[2].second;\n      ret[k++] = a[0].second;\n    }\n    for (int i = 0; i < nn; i++) {\n      if (ret[i] == 1) {\n        if (g) {\n          for (int j = 0; j < g; j++)\n            printf(\"RG\");\n          putchar('R');\n          g = 0;\n        } else\n          putchar('R');\n      } else if (ret[i] == 2) {\n        if (v) {\n          for (int j = 0; j < g; j++)\n            printf(\"YV\");\n          putchar('Y');\n          v = 0;\n        } else\n          putchar('Y');\n      } else {\n        if (o) {\n          for (int j = 0; j < g; j++)\n            printf(\"BO\");\n          putchar('B');\n          o = 0;\n        } else\n          putchar('B');\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"qingl","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst int N = 105;\ndouble e[N], s[N], d[N][N], t[N][N], r[N][N];\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T, ca = 1;\n  scanf(\"%d\", &T);\n  while (T--) {\n    printf(\"Case #%d:\", ca++);\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%lf%lf\", &e[i], &s[i]);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        scanf(\"%lf\", &d[i][j]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        for (int k = 0; k < n; k++)\n          if (i != k && i != j && k != j && d[j][i] != -1 && d[i][k] != -1) {\n            double mi = d[j][i] + d[i][k];\n            if (d[j][k] < 0 || d[j][k] > mi)\n              d[j][k] = mi;\n          }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (i != j && d[i][j] != -1 && d[i][j] <= e[i])\n          t[i][j] = d[i][j] \/ s[i];\n        else\n          t[i][j] = -1;\n      }\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        r[i][j] = t[i][j];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        for (int k = 0; k < n; k++)\n          if (i != k && i != j && k != j && r[j][i] != -1 && r[i][k] != -1) {\n            double mi = r[j][i] + r[i][k];\n            if (r[j][k] < 0 || r[j][k] > mi)\n              r[j][k] = mi;\n          }\n      }\n    }\n    \/*for(int i=0;i<n;i++)\n    {\n            for(int j=0;j<n;j++)printf(\"%.3lf \",r[i][j]);puts(\"\");\n    }*\/\n    for (int i = 0; i < m; i++) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      x--;\n      y--;\n      printf(\" %.9lf\", r[x][y]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint t;\n\nstring s;\n\nvoid fix(int p) {\n  for (int i = p; i > 0 && s[i] < '0'; i--) {\n    s[i] = '9';\n    s[i - 1]--;\n  }\n}\n\nvoid solve() {\n  cin >> s;\n  for (int i = 1; i < s.size(); i++) {\n    if (s[i] < s[i - 1]) {\n      for (int j = i; j < s.size(); j++)\n        s[j] = '9';\n      s[i - 1]--;\n      fix(i - 1);\n      i = 0;\n    }\n  }\n  if (s[0] == '0') {\n    for (int i = 1; i < s.size(); i++)\n      cout << '9';\n    cout << '\\n';\n    return;\n  }\n  cout << s << '\\n';\n}\n\nint main() {\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll t, n, k;\n\npair<int, int> go(vector<int> &v) {\n  vector<int> ls(v.size()), rs(v.size());\n  for (int i = 0; i < n; i++) {\n    if (v[i] != 0) {\n      ls[i] = rs[i] = -1;\n      continue;\n    }\n    for (int j = i - 1; j >= 0; j--) {\n      if (v[j] != 0)\n        break;\n      ls[i]++;\n    }\n\n    for (int j = i + 1; j < n; j++) {\n      if (v[j] != 0)\n        break;\n      rs[i]++;\n    }\n  }\n  int mpos = -1, maxmin = -1e9, maxmax = -1e9;\n  for (int i = 0; i < n; i++) {\n    if (v[i] != 0)\n      continue;\n    int curmin = min(ls[i], rs[i]);\n    int curmax = max(ls[i], rs[i]);\n    if (mpos == -1 || curmin > maxmin ||\n        (curmin == maxmin && curmax > maxmax)) {\n      mpos = i;\n      maxmin = curmin;\n      maxmax = curmax;\n    }\n  }\n\n  v[mpos] = 1;\n\n  return {maxmax, maxmin};\n}\n\nvoid solve() {\n  cin >> n >> k;\n\n  vector<int> v(n);\n\n  pair<int, int> p;\n\n  for (int i = 0; i < k; i++)\n    p = go(v);\n\n  cout << p.first << ' ' << p.second << '\\n';\n}\n\nint main() {\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint t;\n\nvoid solve() {\n  string s;\n  int x;\n  cin >> s >> x;\n  int cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '-' && i + x <= s.size()) {\n      for (int j = i; j < i + x; j++)\n        s[j] = (s[j] == '-' ? '+' : '-');\n      cnt++;\n      \/\/ cerr << \"STRING AFTER: \" << s << endl;\n    }\n  }\n  for (char i : s) {\n    if (i == '-') {\n      cout << \"IMPOSSIBLE\\n\";\n      return;\n    }\n  }\n  cout << cnt << '\\n';\n}\n\nint main() {\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst ll MAX = 1e6 + 777;\n\nint isfine1(ll r, ll p) {\n  if (false)\n    cerr << \"ISFINE1: \" << r << ' ' << p << endl;\n  ll x = 0;\n  while (++x < MAX) {\n    if (p * 10 >= x * r * 9 && p * 10 <= x * r * 11) {\n      if (false)\n        cerr << \"returns ok\" << endl;\n      return 1; \/\/ it's fine\n    }\n  }\n  if (false)\n    cerr << \"returns no\" << endl;\n  return 0;\n}\n\nbool isfine2(const vector<ll> &r, const vector<ll> &p) {\n  if (false)\n    cerr << \"ISFINE2 GOT: \" << endl;\n  if (false)\n    cerr << \"R: \" << r[0] << ' ' << r[1] << endl;\n  if (false)\n    cerr << \"P: \" << p[0] << ' ' << p[1] << endl;\n  ll x = 0;\n  ll l = 1, rt = 1e6 + 1;\n  while (l < rt) {\n    ll x = (l + rt) \/ 2;\n    if (p[0] * 10 >= x * r[0] * 9 && p[0] * 10 <= x * r[0] * 11 &&\n        p[1] * 10 >= x * r[1] * 9 && p[1] * 10 <= x * r[1] * 11) {\n      return true; \/\/ it's fine\n    }\n    if (p[0] * 10 > x * r[0] * 11 || p[1] * 10 > x * r[1] * 11) {\n      l = x + 1;\n    }\n    if (p[0] * 10 < x * r[0] * 9 || p[1] * 10 < x * r[1] * 9) {\n      rt = x;\n    }\n  }\n\n  \/\/ just in case\n  if (p[0] * 10 >= l * r[0] * 9 && p[0] * 10 <= l * r[0] * 11 &&\n      p[1] * 10 >= l * r[1] * 9 && p[1] * 10 <= l * r[1] * 11) {\n    return true; \/\/ it's fine\n  }\n  if (p[0] * 10 >= rt * r[0] * 9 && p[0] * 10 <= rt * r[0] * 11 &&\n      p[1] * 10 >= rt * r[1] * 9 && p[1] * 10 <= rt * r[1] * 11) {\n    return true; \/\/ it's fine\n  }\n  return false;\n}\n\nll t, n, p;\ninline void solve() {\n  cin >> n >> p;\n  vector<ll> r(n);\n  vector<vector<ll>> q(n, vector<ll>(p));\n  for (int i = 0; i < n; i++) {\n    cin >> r[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      cin >> q[i][j];\n    }\n  }\n\n  for (int i = 0; i < n; i++)\n    sort(q[i].begin(), q[i].end());\n\n  ll anw = 0;\n  if (n == 1) {\n    for (int i = 0; i < p; i++) {\n      if (isfine1(r[0], q[0][i]))\n        anw++;\n    }\n    cout << anw << '\\n';\n    return;\n  }\n  do {\n    ll res = 0;\n    for (int i = 0; i < p; i++) {\n      vector<ll> cv(2);\n      cv[0] = q[0][i];\n      cv[1] = q[1][i];\n      res += (isfine2(r, cv));\n    }\n    anw = max(anw, res);\n  } while (next_permutation(q[0].begin(), q[0].end()));\n  cout << anw << '\\n';\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \":\\n\";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nll t, r, c;\nstring cake[30];\n\nconst string EMPTY = \"!@#$\";\n\ninline void solve() {\n  cin >> r >> c;\n  for (int i = 0; i < r; i++)\n    cin >> cake[i];\n\n  vector<vector<char>> v(r, vector<char>(c));\n\n  for (int i = 0; i < r; i++) {\n    char last = 0;\n    for (int j = c - 1; j >= 0; j--) {\n      if (cake[i][j] != '?')\n        last = cake[i][j];\n      else if (last != 0)\n        cake[i][j] = last;\n    }\n    last = 0;\n    for (int j = 0; j < c; j++) {\n      if (cake[i][j] != '?')\n        last = cake[i][j];\n      else if (last != 0)\n        cake[i][j] = last;\n    }\n  }\n\n  \/\/ cerr << \"SETTED ROWS\" << endl;\n\n  vector<bool> is(r);\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      if (cake[i][j] != '?') {\n        is[i] = true;\n        break;\n      }\n    }\n  }\n\n  \/\/ cerr << \"CHECKED ROWS\" << endl;\n\n  string last = EMPTY;\n  for (int i = 0; i < r; i++) {\n    if (is[i])\n      last = cake[i];\n    else if (last != EMPTY)\n      cake[i] = last;\n  }\n  last = EMPTY;\n  for (int i = r - 1; i >= 0; i--) {\n    if (is[i])\n      last = cake[i];\n    else if (last != EMPTY)\n      cake[i] = last;\n  }\n\n  \/\/ cerr << \"DONE!\" << endl;\n\n  for (int i = 0; i < r; i++)\n    cout << cake[i] << '\\n';\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \":\\n\";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll t;\nll d, n;\n\nvoid solve() {\n  cin >> d >> n;\n  vector<pair<double, double>> horses;\n  double tme = -1e9;\n  for (int i = 0; i < n; i++) {\n    double k, s;\n    cin >> k >> s;\n    double ctme = (d - k) \/ s;\n    tme = max(ctme, tme);\n  }\n  cout << fixed << double(d) \/ tme << endl;\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  cout.precision(10);\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef void (*VoidFunc)(ll, ll, ll);\n\nll t, n;\nll r, y, b, tmp;\nbool solved = false;\nll TME;\n\nvoid colR(ll, ll, ll), colB(ll, ll, ll), colY(ll, ll, ll);\n\nvector<ll> anw;\nvoid rec(ll r, ll y, ll b) {\n  if (solved || (double)(clock() - TME) \/ CLOCKS_PER_SEC > 1) {\n    return;\n  }\n  if (anw.size() < n - 1) {\n    VoidFunc funcs[] = {colR, colY, colB};\n    random_shuffle(funcs, funcs + 3);\n    funcs[0](r, y, b);\n    funcs[1](r, y, b);\n    funcs[2](r, y, b);\n  } else {\n    if (r > 0 && (anw.back() != 'R' && anw[0] != 'R')) {\n      anw.push_back('R');\n      solved = true;\n      for (char l : anw)\n        cout << l;\n      cout << endl;\n    } else if (y > 0 && (anw.back() != 'Y' && anw[0] != 'Y')) {\n      anw.push_back('Y');\n      solved = true;\n      for (char l : anw)\n        cout << l;\n      cout << endl;\n    } else if (b > 0 && (anw.back() != 'B' && anw[0] != 'B')) {\n      anw.push_back('B');\n      solved = true;\n      for (char l : anw)\n        cout << l;\n      cout << endl;\n    }\n  }\n}\n\nvoid colR(ll r, ll y, ll b) {\n  if (r > 0 && (anw.empty() || anw.back() != 'R')) {\n    anw.push_back('R');\n    rec(r - 1, y, b);\n    anw.pop_back();\n  }\n}\n\nvoid colY(ll r, ll y, ll b) {\n  if (y > 0 && (anw.empty() || anw.back() != 'Y')) {\n    anw.push_back('Y');\n    rec(r, y - 1, b);\n    anw.pop_back();\n  }\n}\n\nvoid colB(ll r, ll y, ll b) {\n  if (b > 0 && (anw.empty() || anw.back() != 'B')) {\n    anw.push_back('B');\n    rec(r, y, b - 1);\n    anw.pop_back();\n  }\n}\n\nvoid solve() {\n  TME = clock();\n  cin >> n >> r >> tmp >> y >> tmp >> b >> tmp;\n  solved = false;\n  anw.clear();\n  rec(r, y, b);\n  if (!solved) {\n    cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  cout.precision(10);\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Qumeric","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nll t, n, q;\n\nll calcd(vector<ll> &d, ll a, ll b) {\n  ll r = 0;\n  for (int i = a; i < b; i++)\n    r += d[i];\n  return r;\n}\n\nvoid solve() {\n  cin >> n >> q;\n  vector<pair<ll, ll>> horses(n);\n  vector<ll> d(n - 1);\n  for (int i = 0; i < n; i++) {\n    cin >> horses[i].first >> horses[i].second;\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      int a;\n      cin >> a;\n      if (a == -1)\n        continue;\n      d[i] = a;\n    }\n  }\n  ll tmp;\n  cin >> tmp >> tmp;\n\n  vector<ld> dp(n, 1e18);\n  dp[0] = 0;\n\n  for (int i = 0; i < n - 1; i++) {\n    ll hd = horses[i].first;\n    ll j = i;\n    ll rd = 0;\n    while (hd >= d[j] && j < n - 1) {\n      rd++;\n      hd -= d[j];\n      j++;\n    }\n    horses[i].first = rd;\n  }\n\n  \/*for (int i = 0; i < n; i++) {\n    cerr << \"HORSE #\" << i << \" DIST IS \" << horses[i].DIST << endl;\n  }*\/\n\n  for (int i = 0; i < n; i++) {\n    for (int j = i + 1; j < min(i + horses[i].first + 1, n); j++) {\n      dp[j] = min(dp[j], dp[i] + ((ld)calcd(d, i, j) \/ horses[i].second));\n      \/\/ cerr << \"NEW DP[\" << j << \"] IS \" << dp[j] << endl;\n    }\n  }\n  cout << fixed << dp[n - 1] << endl;\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  cout.precision(10);\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"Raycosine","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nchar a[30], ch;\nint l;\nint lastup, lastdown;\nint now, tmp;\nint main() {\n  \/\/\tfreopen(\"B.in\",\"r\",stdin);\n  \/\/\tfreopen(\"B.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    l = 0;\n    ch = getchar();\n    while (ch < '0' || ch > '9')\n      ch = getchar();\n    while (1) {\n      while (ch < '0' || ch > '9')\n        ch = getchar();\n      if (l == 0 && ch == '0') {\n      } else\n        a[l++] = ch;\n      ch = getchar();\n      if (ch == '\\n')\n        break;\n    }\n    if (l == 0) {\n      printf(\"Case #%d: 0\\n\", casen);\n\n      casen++;\n      continue;\n    }\n    if (l == 1) {\n      printf(\"Case #%d: %c\\n\", casen, a[0]);\n      continue;\n    }\n    lastup = 0;\n    lastdown = 0;\n    for (int i = 1; i < l; i++)\n      if (a[i] > a[i - 1])\n        lastup = i;\n      else if (a[i] < a[i - 1]) {\n        lastdown = i;\n        break;\n      }\n    if (lastdown == 0) {\n      printf(\"Case #%d: \", casen);\n      for (int i = 0; i < l; i++)\n        printf(\"%c\", a[i]);\n      printf(\"\\n\");\n      continue;\n    }\n    a[lastup] = a[lastup] - 1;\n    if (a[lastup] == '0') {\n      printf(\"Case #%d: \", casen);\n      for (int i = 1; i < l; i++)\n        printf(\"9\");\n      printf(\"\\n\");\n      continue;\n    }\n    printf(\"Case #%d: \", casen);\n    for (int i = 0; i < lastup; i++)\n      printf(\"%c\", a[i]);\n    printf(\"%c\", a[lastup]);\n    for (int i = lastup + 1; i < l; i++)\n      printf(\"9\");\n    printf(\"\\n\");\n  }\n  \/\/\/\/\/\/\/\/\tfclose(stdin);\n  \/\/\tfclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nlong long n, k;\nlong long x, y, a, b, t, s, t1;\nlong long ans;\nlong long ta, tb;\nint main() {\n  \/\/\tfreopen(\"C.in\",\"r\",stdin);\tfreopen(\"C.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%lld%lld\", &n, &k);\n    printf(\"Case #%d: \", casen);\n    t = 0;\n    ta = tb = n;\n    while ((1 << t) <= k) {\n      t++;\n      if (t > 1)\n        if (ta == tb) {\n          if (ta % 2)\n            ta = tb = ta \/ 2;\n          else {\n            ta = (ta - 2) \/ 2;\n            tb = ta + 1;\n          }\n        } else {\n          if (ta % 2) {\n            ta = (ta - 1) \/ 2;\n            tb = tb - 1 - ta;\n            if (tb < ta) {\n              ta ^= tb;\n              tb ^= ta;\n              ta ^= tb;\n            }\n          } else {\n            tb = (tb - 1) \/ 2;\n            ta = ta - 1 - tb;\n            if (tb < ta) {\n              ta ^= tb;\n              tb ^= ta;\n              ta ^= tb;\n            }\n          }\n        }\n    }\n    \/\/ n-(1<<(T-1))000+1\n\n    x = t;\n    y = k + 1 - (1 << (t - 1));\n    s = n - (1 << (t - 1)) + 1; \/\/\u8be5\u5c42\u603b\u548c 8\n    if (ta == tb) {\n      if (ta % 2 == 1)\n        printf(\"%lld %lld\\n\", ta >> 1, ta >> 1);\n      else\n        printf(\"%lld %lld\\n\", 1 + ((ta - 2) >> 1), (ta - 2) >> 1);\n    } else {\n      a = s % (1 << (t - 1));\n      if (a >= y)\n        if (tb % 2)\n          printf(\"%lld %lld\\n\", (tb - 1) \/ 2, (tb - 1) \/ 2);\n        else\n          printf(\"%lld %lld\\n\", tb \/ 2, tb \/ 2 - 1);\n      else if (ta % 2)\n        printf(\"%lld %lld\\n\", (ta - 1) \/ 2, (ta - 1) \/ 2);\n      else\n        printf(\"%lld %lld\\n\", ta \/ 2, ta \/ 2 - 1);\n    }\n    continue;\n    t1 = s % (1 << t); \/\/\n    if (t1) {\n      if ((n % 4) < 2) {\n        \/\/\t\t\ttmp = (n\/(n-(n&(n-1))))-2;\n        a = (1 << t) - t1;\n        b = (s + a) >> t;\n        if ((1 << (t - 1)) - a < y)\n          printf(\"%lld %lld\\n\", b - 1, b - 1);\n        else\n          printf(\"%lld %lld\\n\", b, b - 1);\n      } else {\n        t1 = s % (1 << (t - 1));\n        if (!t1)\n          a = 0;\n        else\n          a = ((1 << (t - 1)) - t1);\n        b = (s + a - (1 << (t - 1))) >> t;\n        if ((1 << (t - 1)) - a < y)\n          printf(\"%lld %lld\\n\", b, b - 1);\n        else\n          printf(\"%lld %lld\\n\", b, b);\n      }\n    } else {\n      ans = s >> (t - 1);\n      if (ans % 2 == 1)\n        printf(\"%lld %lld\\n\", ans >> 1, ans >> 1);\n      else\n        printf(\"%lld %lld\\n\", 1 + ((ans - 2) >> 1), (ans - 2) >> 1);\n    }\n  }\n  \/\/\tfclose(stdin);\tfclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint T;\nchar ch;\nint a[1010], b[1010], cnt;\nint n, k, m;\nint flag;\nint main() {\n  \/\/ freopen(\"A.in\",\"r\",stdin);\n  \/\/ freopen(\"A.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    n = 0;\n    m = 0;\n    while (1) {\n      ch = getchar();\n      if (ch == ' ')\n        break;\n      while (ch != '+' && ch != '-')\n        ch = getchar();\n      a[n++] = (ch == '+') ? 1 : 0;\n      if (!a[n - 1])\n        m++;\n    }\n    scanf(\"%d\", &k);\n    printf(\"Case #%d: \", casen);\n    if (!(k % 2) && (m % 2)) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    cnt = 0;\n    for (int i = 0; i <= n - k; i++)\n      if (!a[i]) {\n        cnt++;\n        for (int j = i; j <= i + k - 1; j++)\n          a[j] = !a[j];\n      }\n    flag = 0;\n    for (int i = n - k + 1; i < n; i++)\n      if (!a[i]) {\n        printf(\"IMPOSSIBLE\\n\");\n        flag = 1;\n        break;\n      }\n    if (flag == 0)\n      printf(\"%d\\n\", cnt);\n  }\n  \/\/\tfclose(stdin);\n  \/\/\tfclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nint n, p;\nint r[100];\nint q[100][100], minq[100][100], maxq[100][100], flag[100];\nint mark, tmin[100], tmax[100], last[100];\nint top, ans;\nint themin(int a, int b) {\n  if (a < b)\n    return a;\n  return b;\n}\nint themax(int a, int b) {\n  if (a > b)\n    return a;\n  return b;\n}\nint dfs(int k) {\n  if (k == 0) {\n    tmin[k] = minq[0][flag[k]];\n    tmax[k] = maxq[0][flag[k]];\n  } else {\n    tmin[k] = themax(minq[k][flag[k]], tmin[k - 1]);\n    tmax[k] = themin(maxq[k][flag[k]], tmax[k - 1]);\n  }\n  if (k == n - 1) {\n    if (k > 0) {\n      if (tmin[k] <= tmax[k]) {\n        ans++;\n        for (int i = 0; i <= n - 1; i++)\n          last[i] = flag[i];\n        return 1;\n      }\n      return 0;\n    }\n    if (k == 0) {\n      for (int i = 0; i <= p - 1; i++)\n        if (minq[0][i] <= maxq[0][i])\n          ans++;\n      return 1;\n    }\n  }\n  int mark = 0;\n  while (1) {\n    if (tmin[k] <= tmax[k])\n      for (int j = last[k + 1] + 1; j <= p - 1; j++)\n        if (minq[k + 1][j] <= maxq[k + 1][j] &&\n            !(minq[k + 1][j] > tmax[k] || maxq[k + 1][j] < tmin[k])) \/\/ satisfy\n        {\n          flag[k + 1] = j;\n          if (dfs(k + 1)) {\n            mark = 1;\n            break;\n          }\n        }\n    flag[k]++;\n    if (flag[k] == p)\n      break;\n    if (k == 0) {\n      tmin[k] = minq[0][flag[k]];\n      tmax[k] = maxq[0][flag[k]];\n    } else {\n      tmin[k] = themax(minq[k][flag[k]], tmin[k - 1]);\n      tmax[k] = themin(maxq[k][flag[k]], tmax[k - 1]);\n    }\n  }\n  return mark;\n}\nint main() {\n  \/\/\tfreopen(\"B.in\",\"r\",stdin);\tfreopen(\"B.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i <= n - 1; i++)\n      scanf(\"%d\", &r[i]);\n    for (int i = 0; i <= n - 1; i++) {\n      for (int j = 0; j <= p - 1; j++)\n        scanf(\"%d\", &q[i][j]);\n      sort(q[i], q[i] + p);\n    }\n    for (int i = 0; i <= n - 1; i++)\n      for (int j = 0; j <= p - 1; j++) {\n        minq[i][j] = int(ceil(float(q[i][j]) * 10 \/ float(r[i]) \/ 11));\n        while ((minq[i][j] - 1) * r[i] * 9 <= q[i][j] * 10 &&\n               (minq[i][j] - 1) * r[i] * 11 >= q[i][j] * 10)\n          minq[i][j]--;\n        maxq[i][j] = int(float(q[i][j]) * 10 \/ float(r[i]) \/ 9);\n        while ((maxq[i][j] + 1) * r[i] * 9 <= q[i][j] * 10 &&\n               (maxq[i][j] + 1) * r[i] * 11 >= q[i][j] * 10)\n          maxq[i][j]++;\n      }\n    ans = 0;\n    memset(flag, 0, sizeof(flag));\n    for (int i = 0; i <= n - 1; i++)\n      last[i] = -1;\n    dfs(0);\n\n    printf(\"Case #%d: %d\\n\", casen, ans);\n  }\n  \/\/\tfclose(stdin);fclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T, casen;\nint r, c;\nchar a[100][100];\nint mark[26];\nchar ch;\nint k;\nint main() {\n  \/\/\tfreopen(\"A.in\",\"r\",stdin);\n  \/\/\tfreopen(\"A.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%d%d\", &r, &c);\n    memset(mark, 0, sizeof(mark));\n    for (int i = 0; i <= r - 1; i++)\n      for (int j = 0; j <= c - 1; j++) {\n        ch = getchar();\n        while ((ch < 'A' || ch > 'Z') && ch != '?')\n          ch = getchar();\n        a[i][j] = ch;\n      }\n    for (int i = 0; i <= r - 1; i++)\n      for (int j = 0; j <= c - 1; j++)\n        if (a[i][j] != '?') {\n          k = j + 1;\n          while (k < c && a[i][k] == '?') {\n            a[i][k] = a[i][j];\n            k++;\n          }\n        }\n    for (int i = r - 1; i >= 0; i--)\n      for (int j = c - 1; j >= 0; j--)\n        if (a[i][j] != '?') {\n          k = j - 1;\n          while (k >= 0 && a[i][k] == '?') {\n            a[i][k] = a[i][j];\n            k--;\n          }\n        }\n    for (int i = 0; i <= r - 1; i++)\n      for (int j = 0; j <= c - 1; j++)\n        if (a[i][j] == '?') {\n          if (i == 0) {\n            for (k = 0; k < c; k++)\n              a[i][k] = a[i + 1][k];\n            break;\n          } else {\n            for (k = 0; k < c; k++)\n              a[i][k] = a[i - 1][k];\n            break;\n          }\n        }\n\n    for (int i = r - 1; i >= 0; i--)\n      for (int j = 0; j <= c - 1; j++)\n        if (a[i][j] == '?') {\n          if (i == r - 1) {\n            for (k = 0; k < c; k++)\n              a[i][k] = a[i - 1][k];\n            break;\n          } else {\n            for (k = 0; k < c; k++)\n              a[i][k] = a[i + 1][k];\n            break;\n          }\n        }\n    printf(\"Case #%d:\\n\", casen);\n    for (int i = 0; i <= r - 1; i++) {\n      for (int j = 0; j <= c - 1; j++)\n        printf(\"%c\", a[i][j]);\n      printf(\"\\n\");\n    }\n  }\n  \/\/\tfclose(stdin);fclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nint N;\ndouble D;\ndouble k[1010], s[1010];\nint ord[1010];\ndouble t0[1010], res;\nint cmp(int a, int b) { return s[a] > s[b]; }\ndouble themin(double a, double b) {\n  if (a < b)\n    return a;\n  return b;\n}\nint main() {\n  \/\/\tfreopen(\"A.in\",\"r\",stdin);freopen(\"A.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%lf%d\", &D, &N);\n    for (int i = 0; i <= N - 1; i++) {\n      scanf(\"%lf%lf\", &k[i], &s[i]);\n      ord[i] = i;\n      t0[i] = 20000000000000;\n    }\n    sort(ord, ord + N, cmp);\n    for (int i = 0; i <= N - 1; i++)\n      for (int j = 0; j <= N - 1; j++)\n        if (i != j)\n          if (s[ord[i]] > s[ord[j]] &&\n\n              k[ord[i]] < k[ord[j]] &&\n              (k[ord[i]] * (s[ord[i]] - s[ord[j]]) +\n                   s[ord[i]] * (k[ord[j]] - k[ord[i]]) <=\n               D * (s[ord[i]] - s[ord[j]]))) {\n            t0[ord[i]] = themin(t0[ord[j]], (k[ord[j]] - k[ord[i]]) \/\n                                                (s[ord[i]] - s[ord[j]]));\n          }\n    res = 20000000000000;\n    for (int i = 0; i <= N - 1; i++)\n      if (t0[i] != 20000000000000)\n        res = themin(res, k[i] \/ t0[i] + s[i]);\n      else\n        res = themin(res, D * s[i] \/ (D - k[i]));\n    printf(\"Case #%d: %.6f\\n\", casen, res);\n  }\n  \/\/\tfclose(stdin);fclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nint n, r, o, y, g, B, v;\nint a[3];\nchar b[3];\nint ord[3];\nint cmp(int x, int y) { return a[x] < a[y]; }\nint main() {\n  \/\/\tfreopen(\"B.in\",\"r\",stdin);freopen(\"B.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%d\", &n);\n    scanf(\"%d%d%d%d%d%d\", &r, &o, &y, &g, &B, &v);\n    a[0] = r;\n    a[1] = y;\n    a[2] = B;\n    b[0] = 'R';\n    b[1] = 'Y';\n    b[2] = 'B';\n    ord[0] = 0;\n    ord[1] = 1;\n    ord[2] = 2;\n    sort(ord, ord + 3, cmp);\n    if (a[ord[2]] - a[ord[1]] > a[ord[0]])\n      printf(\"Case #%d: IMPOSSIBLE\\n\", casen);\n    else {\n      printf(\"Case #%d: \", casen);\n      for (int i = 1; i <= a[ord[2]] - a[ord[1]]; i++)\n        printf(\"%c%c\", b[ord[0]], b[ord[2]]);\n      for (int i = 1; i <= a[ord[0]] - (a[ord[2]] - a[ord[1]]); i++)\n        printf(\"%c%c%c\", b[ord[0]], b[ord[1]], b[ord[2]]);\n      for (int i = 1; i <= a[ord[2]] - a[ord[0]]; i++)\n        printf(\"%c%c\", b[ord[1]], b[ord[2]]);\n      printf(\"\\n\");\n    }\n  }\n  \/\/\tfclose(stdin);fclose(stdout);\n  return 0;\n}\n"}
{"target":"Raycosine","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nint T;\nint N, Q;\ndouble e[1010], s[1010];\ndouble dist[1010], tmp;\ndouble f[1010], cnt;\nint main() {\n  \/\/\tfreopen(\"C.in\",\"r\",stdin);freopen(\"C.out\",\"w\",stdout);\n  scanf(\"%d\", &T);\n  for (int casen = 1; casen <= T; casen++) {\n    scanf(\"%d%d\", &N, &Q);\n    for (int i = 0; i <= N - 1; i++) {\n      scanf(\"%lf%lf\", &e[i], &s[i]);\n      f[i] = 20000000000000;\n    }\n    for (int i = 0; i <= N - 1; i++)\n      for (int j = 0; j <= N - 1; j++) {\n        scanf(\"%lf\", &tmp);\n        if (i + 1 == j)\n          dist[j] = tmp;\n      }\n    scanf(\"%lf\", &tmp);\n    scanf(\"%lf\", &tmp);\n    dist[0] = 0;\n    f[0] = 0;\n    for (int i = 0; i <= N - 2; i++) {\n      cnt = 0;\n      for (int j = i + 1; j <= N - 1; j++) {\n        cnt += dist[j];\n        if (cnt > e[i])\n          break;\n        if (cnt \/ s[i] + f[i] < f[j])\n          f[j] = cnt \/ s[i] + f[i];\n      }\n    }\n    printf(\"Case #%d: %.9lf\\n\", casen, f[N - 1]);\n  }\n  \/\/\tfclose(stdin);fclose(stdout);\n  return 0;\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 4686825 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, t;\nll a[N];\n\nvoid gen() {\n  queue<ll> q;\n  for (int i = 1; i <= 9; i++)\n    q.push(i);\n  while ((int)q.size()) {\n    ll v = q.front();\n    q.pop();\n\n    if (v < (ll)1e18) {\n      a[++n] = v;\n      for (int i = v % 10; i <= 9; i++)\n        q.push(v * 10 + i);\n    }\n  }\n}\n\nvoid solve(int id) {\n  ll x;\n  cin >> x;\n  int pos = upper_bound(a + 1, a + 1 + n, x) - a - 1;\n  cout << \"Case #\" << id << \": \" << a[pos] << '\\n';\n}\nint main() {\n\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> t;\n  gen();\n  for (int i = 1; i <= t; i++)\n    solve(i);\n\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 1e6 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, k;\nbool bad[N];\n\npair<int, int> calc(int p) {\n  pair<int, int> res = {0, 0};\n  for (int i = p; i <= n; i++) {\n    if (bad[i]) {\n      break;\n    }\n    res.second++;\n  }\n  for (int i = p; i >= 1; i--) {\n    if (bad[i]) {\n      break;\n    }\n    res.first++;\n  }\n  return res;\n}\n\npair<int, int> get(pair<int, int> l, pair<int, int> r) {\n  if (min(l.first, l.second) > min(r.first, r.second))\n    return l;\n  if (min(l.first, l.second) < min(r.first, r.second))\n    return r;\n  if (max(l.first, l.second) > max(r.first, r.second))\n    return l;\n  return r;\n}\n\nvoid solve(int id) {\n  scanf(\"%d%d\", &n, &k);\n  memset(bad, 0, sizeof(bad));\n  for (int i = 1; i <= k; i++) {\n    pair<int, int> mx = {-1, -1};\n    int idx = -1;\n    for (int j = 1; j <= n; j++) {\n      pair<int, int> cur = calc(j);\n      pair<int, int> res = get(mx, cur);\n      if (mx != res)\n        idx = j, mx = res;\n    }\n    if (i == k) {\n      cout << \"Case #\" << id << \": \" << max(mx.first, mx.second) - 1 << ' '\n           << min(mx.first, mx.second) - 1 << '\\n';\n      return;\n    }\n    bad[idx] = 1;\n  }\n}\n\nint T;\nint main() {\n\n  freopen(\"C-small-1-attempt4\"\n          \".in\",\n          \"r\", stdin);\n  freopen(\"C-small-1-attempt4\"\n          \".out\",\n          \"w\", stdout);\n\n  scanf(\"%d\", &T);\n  for (int i = 1; i <= T; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 4e5 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, k, t;\nint d[1 << 14];\nstring second;\n\nint get_mask(string x) {\n  int res = 0;\n  reverse(x.begin(), x.end());\n  for (int i = 0; i <= (int)x.size() - 1; i++)\n    if (x[i] == '+')\n      res |= 1 << i;\n  return res;\n}\nint inverse(int l, int x) {\n  for (int i = l; i <= l + k - 1; i++)\n    x ^= 1 << i;\n  return x;\n}\n\nvoid solve(int id) {\n  cin >> second >> k;\n  n = (int)second.size();\n\n  memset(d, -1, sizeof(d));\n  queue<int> q;\n  int st = get_mask(second);\n  d[st] = 0;\n  q.push(st);\n\n  while ((int)q.size()) {\n    int v = q.front();\n    q.pop();\n    for (int i = 0; i <= n - 1 - k + 1; i++) {\n      int x = inverse(i, v);\n      if (d[x] == -1)\n        d[x] = d[v] + 1, q.push(x);\n    }\n  }\n\n  int res = d[(1 << n) - 1];\n  cout << \"Case #\" << id << \": \";\n  if (res == -1)\n    cout << \"IMPOSSIBLE\" << '\\n';\n  else\n    cout << res << '\\n';\n}\nint main() {\n\n  \/\/  freopen (\"A-small-attempt0.in\", \"r\", stdin);\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 1e6 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, p;\ndouble a[51];\nvoid solve(int _id) {\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++)\n    cin >> a[i];\n  set<pair<double, int>> can[n + 1];\n\n  double mx = -inf;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= p; j++) {\n      double x;\n      cin >> x;\n      mx = max(mx, x);\n      can[i].insert({x, j});\n    }\n\n  mx += mx * 0.1;\n  mx += 10;\n  int ans = 0;\n  for (int take = 1; take <= mx; take++) {\n    vector<pair<double, int>> pos[n + 1];\n    int mn = inf;\n    for (int i = 1; i <= n; i++) {\n      double l = (a[i] * take \/ 100.00) * 90.00,\n             r = (a[i] * take \/ 100.00) * 110.000;\n      auto it = can[i].lower_bound({l, -inf});\n      for (int cnt = mn; cnt && it != can[i].end(); cnt--, it++) {\n        if (it->first <= r)\n          pos[i].push_back(*it);\n        else\n          break;\n      }\n      mn = min(mn, (int)pos[i].size());\n    }\n    ans += mn;\n    if (mn) {\n      for (int i = 1; i <= n; i++)\n        for (int j = 0; j <= mn - 1; j++)\n          can[i].erase(pos[i][j]);\n    }\n  }\n\n  cout << \"Case #\" << _id << \": \" << ans << '\\n';\n}\n\nint main() {\n\n  freopen(\"B-small-attempt0\"\n          \".in\",\n          \"r\", stdin);\n  freopen(\"B-small-attempt0\"\n          \".out\",\n          \"w\", stdout);\n\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++)\n    solve(i);\n\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 1e6 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, m;\nchar c[33][33], cur[33][33];\n\nstruct node {\n  int x1, y1, x2, y2;\n  node() {}\n  node(int x1, int y1, int x2, int y2) : x1(x1), y1(y1), x2(x2), y2(y2) {}\n} a[26];\nbool cmp(char x, char y) { return a[x - 'a'].x2 > a[y - 'a'].x2; }\nint get(int x) { return ((rand() << 16) + rand()) % x + 1; }\nvoid gen() {\n  n = get(25), m = get(25);\n\n  set<char> st;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      char x = get(26) - 1;\n      if (st.count(x))\n        c[i][j] = '?';\n      else\n        c[i][j] = x + 'A';\n      st.insert(x);\n    }\n  }\n}\nvoid solve(int _id) {\n  cin >> n >> m;\n  \/\/ gen();\n  vector<char> v;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      cin >> c[i][j];\n      cur[i][j] = c[i][j];\n      if (isalpha(c[i][j]))\n        a[c[i][j] - 'a'] = node(i, j, i, j), v.push_back(c[i][j]);\n    }\n    \/\/  cout << nl;\n  }\n\n  sort(v.begin(), v.end(), cmp);\n  for (int blin = 1; blin <= 10000; blin++) {\n    for (auto z : v) {\n      int u = a[z - 'a'].x1, l = a[z - 'a'].y1, r = a[z - 'a'].y2;\n      for (int i = u - 1; i >= 1; i--) {\n        bool good = 1;\n        for (int j = l; j <= r; j++)\n          if (isalpha(c[i][j])) {\n            good = 0;\n            break;\n          }\n        if (!good)\n          break;\n        for (int j = l; j <= r; j++)\n          c[i][j] = z;\n        a[z - 'a'].x1 = i;\n      }\n      int d = a[z - 'a'].x2;\n      for (int i = d + 1; i <= n; i++) {\n        bool good = 1;\n        for (int j = l; j <= r; j++)\n          if (isalpha(c[i][j])) {\n            good = 0;\n            break;\n          }\n        if (!good)\n          break;\n        for (int j = l; j <= r; j++)\n          c[i][j] = z;\n        a[z - 'a'].x2 = i;\n      }\n      u = a[z - 'a'].x1, d = a[z - 'a'].x2;\n      for (int i = r + 1; i <= m; i++) {\n        bool good = 1;\n        for (int j = u; j <= d; j++)\n          if (isalpha(c[j][i])) {\n            good = 0;\n            break;\n          }\n        if (!good)\n          break;\n        for (int j = u; j <= d; j++)\n          c[j][i] = z;\n        a[z - 'a'].y2 = i;\n      }\n      for (int i = l - 1; i >= 1; i--) {\n        bool good = 1;\n        for (int j = u; j <= d; j++)\n          if (isalpha(c[j][i])) {\n            good = 0;\n            break;\n          }\n        if (!good)\n          break;\n        for (int j = u; j <= d; j++)\n          c[j][i] = z;\n        a[z - 'a'].y1 = i;\n      }\n    }\n    bool good = 1;\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= m; j++) {\n        if (c[i][j] == '?') {\n          good = 0;\n          break;\n        }\n      }\n    if (good)\n      break;\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= m; j++)\n        c[i][j] = cur[i][j];\n    random_shuffle(v.begin(), v.end());\n  }\n\n  cout << \"Case #\" << _id << \":\\n\";\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      cout << c[i][j];\n      assert(c[i][j] != '?');\n    }\n    cout << '\\n';\n  }\n}\n\nint T;\nint main() {\n\n  \/\/ Kazakhstan\n  srand(time(0));\n  cin >> T;\n  for (int i = 1; i <= T; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 1e6 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n;\ndouble d;\ndouble k[N], second[N];\nvoid solve(int id) {\n  cin >> d >> n;\n  for (int i = 1; i <= n; i++)\n    cin >> k[i] >> second[i];\n  double res = -linf;\n  for (int i = 1; i <= n; i++)\n    res = max(res, (d - k[i]) \/ second[i]);\n  cout << \"Case #\" << id << \": \" << setprecision(10) << fixed << d \/ res\n       << '\\n';\n}\nint main() {\n\n  freopen(\"A-small-attempt0\"\n          \".in\",\n          \"r\", stdin);\n  freopen(\"A-small-attempt0\"\n          \".out\",\n          \"w\", stdout);\n\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T = 1;\n  cin >> T;\n  for (int i = 1; i <= T; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 100 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n;\npair<int, int> a[7], b[7];\nchar c[] = {' ', 'R', 'O', 'Y', 'G', 'B', 'V'};\nmap<char, set<char>> bad;\nbool check(char x, char y) {\n  if (bad[x].count(y))\n    return 0;\n  return 1;\n}\nbool checkid(int x) {\n  for (int i = 1; i <= 6; i++)\n    if (a[i].second == x && a[i].first > 0)\n      return 1;\n  return 0;\n}\nvoid solve(int testcase) {\n  cin >> n;\n  for (int i = 1; i <= 6; i++)\n    cin >> a[i].first, a[i].second = i;\n  sort(a + 1, a + 1 + 6, greater<pair<int, int>>());\n  for (int i = 1; i <= 6; i++)\n    b[i] = a[i];\n  int l = 1, r = 1;\n  while (r + 1 <= n && a[r + 1].first == a[r].first)\n    r++;\n  cout << \"Case #\" << testcase << \": \";\n  for (int i = 1; i <= 6; i++) {\n    if (!a[i].first)\n      break;\n    string ans;\n    ans += c[a[i].second];\n    while ((int)ans.size() < n) {\n      bool done = 0;\n      for (int j = 1; j <= 6; j++) {\n        if (a[j].first && check(ans.back(), c[a[j].second]))\n          a[j].first--, ans += c[a[j].second], done = 1;\n      }\n      if (!done)\n        break;\n    }\n    bool ok = 1;\n    for (int j = 0; j <= (int)ans.size() - 1; j++)\n      if (!check(ans[j], ans[(j + 1) % n])) {\n        ok = 0;\n        break;\n      }\n    if (ok && (int)ans.size() == n) {\n      cout << ans << '\\n';\n      return;\n    }\n    for (int j = 1; j <= 6; j++)\n      a[j] = b[j];\n  }\n  cout << \"IMPOSSIBLE\\n\";\n}\nint main() {\n\n  freopen(\"B-small-attempt2\"\n          \".in\",\n          \"r\", stdin);\n  freopen(\"B-small-attempt2\"\n          \".out\",\n          \"w\", stdout);\n\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  bad['R'].insert('R');\n  bad['R'].insert('O');\n  bad['R'].insert('V');\n\n  bad['O'].insert('O');\n  bad['O'].insert('V');\n  bad['O'].insert('G');\n  bad['O'].insert('R');\n  bad['O'].insert('Y');\n\n  bad['Y'].insert('Y');\n  bad['Y'].insert('G');\n  bad['Y'].insert('O');\n\n  bad['G'].insert('G');\n  bad['G'].insert('Y');\n  bad['G'].insert('B');\n  bad['G'].insert('O');\n  bad['G'].insert('V');\n\n  bad['B'].insert('B');\n  bad['B'].insert('G');\n  bad['B'].insert('V');\n\n  bad['V'].insert('V');\n  bad['V'].insert('R');\n  bad['V'].insert('B');\n  bad['V'].insert('G');\n  bad['V'].insert('O');\n\n  int T = 1;\n  cin >> T;\n  for (int i = 1; i <= T; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"RockyB","func":"#include <bits\/stdc++.h>\n\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/detail\/standard_policies.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nconst int N = 100 + 7, inf = 1e9 + 7, mod = 1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1},\n          dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nint n, q;\nll e[N], second[N], a[N][N];\nbool was[N];\nld d[N];\nll dist[N];\nvector<pair<int, int>> go[N];\nvector<pair<int, ld>> g[N];\nvoid bfs(int x) {\n  for (int i = 1; i <= n; i++)\n    dist[i] = linf;\n  dist[x] = 0;\n  set<pair<ll, int>> st;\n  st.insert({0, x});\n  while ((int)st.size()) {\n    pair<ll, int> v = *st.begin();\n    st.erase(st.begin());\n    for (auto to : go[v.second])\n      if (v.first + to.second < dist[to.first]) {\n        st.insert({dist[to.first], to.first});\n        dist[to.first] = v.first + to.second;\n        st.insert({dist[to.first], to.first});\n      }\n  }\n  for (int i = 1; i <= n; i++)\n    if (dist[i] != -1 && e[x] >= dist[i])\n      g[x].push_back({i, (ld)dist[i] \/ (ld)second[x]});\n}\nld get(int v, int u) {\n  for (int i = 1; i <= n; i++)\n    d[i] = linf;\n  d[v] = 0;\n  set<pair<ld, int>> st;\n  st.insert({0, v});\n  while ((int)st.size()) {\n    pair<ld, int> x = *st.begin();\n    st.erase(st.begin());\n    for (auto to : g[x.second])\n      if (x.first + to.second < d[to.first]) {\n        st.erase({d[to.first], to.first});\n        d[to.first] = x.first + to.second;\n        st.insert({d[to.first], to.first});\n      }\n  }\n  return d[u];\n}\nvoid solve(int id) {\n  cin >> n >> q;\n  for (int i = 1; i <= n; i++)\n    cin >> e[i] >> second[i];\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) {\n      cin >> a[i][j];\n      if (a[i][j] != -1)\n        go[i].push_back({j, a[i][j]});\n    }\n  for (int i = 1; i <= n; i++)\n    bfs(i);\n  cout << \"Case #\" << id << \": \";\n  for (int i = 1; i <= q; i++) {\n    int v, u;\n    cin >> v >> u;\n    cout << setprecision(10) << fixed << get(v, u) << ' ';\n  }\n  cout << '\\n';\n  for (int i = 1; i <= n; i++)\n    go[i].clear(), g[i].clear();\n}\n\nint main() {\n\n  freopen(\"C-small-attempt0\"\n          \".in\",\n          \"r\", stdin);\n  freopen(\"C-small-attempt0\"\n          \".out\",\n          \"w\", stdout);\n\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T = 1;\n  cin >> T;\n  for (int i = 1; i <= T; i++)\n    solve(i);\n  exit(0);\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n  while (t--) {\n    string num;\n    cin >> num;\n    cout << \"Case #\" << casecnt++ << \": \";\n    int pos = 1;\n    while (pos < num.size() and num[pos] >= num[pos - 1])\n      pos++;\n    if (pos != num.size()) {\n      pos--;\n      num[pos]--;\n      pos--;\n      while (pos >= 0 and num[pos] > num[pos + 1]) {\n        num[pos]--;\n        pos--;\n      }\n\n      pos += 2;\n      while (pos < num.size()) {\n        num[pos] = '9';\n        pos++;\n      }\n      if (num[0] == '0')\n        num.erase(num.begin());\n    }\n    cout << num << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nmap<ll, ll> memo;\n\nll cnt(ll x, ll mi, ll ma) {\n  if (x == 0)\n    return 0;\n\n  ll l = (x - 1) \/ 2, r = x \/ 2;\n  if (min(l, r) < mi or min(l, r) == mi and max(l, r) < ma)\n    return 0;\n\n  if (memo.count(x))\n    return memo[x];\n\n  return memo[x] = 1 + cnt(l, mi, ma) + cnt(r, mi, ma);\n}\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n  while (t--) {\n    ll n, k;\n    cin >> n >> k;\n    ll lo = 0, hi = (n - 1) \/ 2;\n    while (lo < hi) {\n      ll mid = (lo + hi + 1) \/ 2;\n      memo.clear();\n      ll c = cnt(n, mid, 0);\n      \/\/ printf(\"mi = %lld, c = %lld\\n\", mid, c);\n      if (c >= k)\n        lo = mid;\n      else\n        hi = mid - 1;\n    }\n    ll mi = lo;\n\n    lo = mi, hi = n \/ 2;\n\n    while (lo < hi) {\n      ll mid = (lo + hi + 1) \/ 2;\n      memo.clear();\n      ll c = cnt(n, mi, mid);\n      if (c >= k)\n        lo = mid;\n      else\n        hi = mid - 1;\n    }\n\n    printf(\"Case #%d: %lld %lld\\n\", casecnt++, lo, mi);\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n  while (t--) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = 0; i + k - 1 < s.size(); i++) {\n      if (s[i] == '-') {\n        ans++;\n        for (int j = 0; j < k; j++) {\n          if (s[i + j] == '-')\n            s[i + j] = '+';\n          else\n            s[i + j] = '-';\n        }\n      }\n    }\n    for (int i = 0; i < s.size() && ans != -1; i++) {\n      if (s[i] == '-')\n        ans = -1;\n    }\n    printf(\"Case #%d: \", casecnt++);\n    if (ans != -1)\n      printf(\"%d\\n\", ans);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nconst int N = 52;\nint need[N];\nint inter[N][N][2];\n\nstruct event {\n  int x, ingr, type, idx;\n  event() {}\n  event(int x, int ingr, int type, int idx)\n      : x(x), ingr(ingr), type(type), idx(idx) {}\n  bool operator<(const event &e) {\n    if (x == e.x)\n      return type < e.type;\n    return x < e.x;\n  }\n};\n\nint main() {\n  int t, casecnt = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, p;\n    scanf(\"%d %d\", &n, &p);\n    printf(\"Case #%d: \", casecnt++);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", need + i);\n\n    vector<event> ev;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int x;\n        int y = need[i];\n        scanf(\"%d\", &x);\n        int lo = 10 * x \/ (11 * y);\n        if ((10 * x) % (11 * y))\n          lo++;\n        int hi = 10 * x \/ (9 * y);\n        inter[i][j][0] = lo;\n        inter[i][j][1] = hi;\n        if (hi >= lo) {\n          ev.push_back(event(lo, i, 0, j));\n          ev.push_back(event(hi, i, 1, j));\n        }\n      }\n    }\n    sort(ev.begin(), ev.end());\n    set<ii> s[N];\n    int cnt = 0;\n    int ans = 0;\n    for (int i = 0; i < ev.size(); i++) {\n      if (ev[i].type == 0) {\n        s[ev[i].ingr].insert(ii(inter[ev[i].ingr][ev[i].idx][1], ev[i].idx));\n        if (s[ev[i].ingr].size() == 1)\n          cnt++;\n\n        if (cnt == n) {\n          ans++;\n          for (int i = 0; i < n; i++) {\n            s[i].erase(s[i].begin());\n            if (s[i].empty())\n              cnt--;\n          }\n        }\n      } else {\n        if (!s[ev[i].ingr].count(\n                ii(inter[ev[i].ingr][ev[i].idx][1], ev[i].idx)))\n          continue;\n\n        s[ev[i].ingr].erase(ii(inter[ev[i].ingr][ev[i].idx][1], ev[i].idx));\n        if (s[ev[i].ingr].size() == 0)\n          cnt--;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nchar grid[27][27];\nint vis[27][27];\n\nint countt(int i1, int j1, int i2, int j2) {\n  int mask = 0;\n  for (int i = i1; i <= i2; i++) {\n    for (int j = j1; j <= j2; j++) {\n      if (grid[i][j] != '?')\n        mask |= (1 << (grid[i][j] - 'A'));\n    }\n  }\n  return mask;\n}\n\nvoid paint(int i1, int j1, int i2, int j2, char c) {\n  for (int i = i1; i <= i2; i++) {\n    for (int j = j1; j <= j2; j++) {\n      vis[i][j] = 1;\n      grid[i][j] = c;\n    }\n  }\n}\n\nint main() {\n  int t, casecnt = 1;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int r, c;\n    scanf(\"%d %d\", &r, &c);\n    for (int i = 0; i < r; i++)\n      scanf(\"%s\", grid[i]);\n    memset(vis, 0, sizeof(vis));\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (vis[i][j])\n          continue;\n        int ei = i, ej = j;\n        char l;\n        for (int ii = i; ii < r; ii++) {\n          for (int jj = j; jj < c; jj++) {\n            int mask = countt(i, j, ii, jj);\n            if (__builtin_popcount(mask) == 1) {\n              if ((ii - i + 1) * (jj - j + 1) >= (ei - i + 1) * (ej - j + 1)) {\n                ei = ii;\n                ej = jj;\n                l = 'A' + __builtin_ctz(mask);\n              }\n            }\n          }\n        }\n        paint(i, j, ei, ej, l);\n      }\n    }\n    printf(\"Case #%d:\\n\", casecnt++);\n    for (int i = 0; i < r; i++)\n      printf(\"%s\\n\", grid[i]);\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n\n  while (t--) {\n    int d, n;\n    cin >> d >> n;\n    double mintime = 0.0;\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      cin >> k >> s;\n      double time = 1.0 * (d - k) \/ (1.0 * s);\n      mintime = max(mintime, time);\n    }\n    printf(\"Case #%d: %lf\\n\", casecnt++, 1.0 * d \/ mintime);\n  }\n\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\n\nconst int N = 1010;\nchar color[N];\nchar ans[N];\n\nint n, r, o, y, g, b, v;\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n\n  while (t--) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    printf(\"Case #%d: \", casecnt++);\n\n    char last;\n    int m = max(r, max(b, y));\n    if (r == m) {\n      last = 'R';\n      r--;\n    } else if (b == m) {\n      last = 'B';\n      b--;\n    } else {\n      last = 'Y';\n      y--;\n    }\n    ans[0] = last;\n    for (int i = 1; i < n; i++) {\n      if (last == 'R') {\n        if (y > b) {\n          ans[i] = 'Y';\n          y--;\n        } else {\n          ans[i] = 'B';\n          b--;\n        }\n      } else if (last == 'Y') {\n        if (r > b) {\n          ans[i] = 'R';\n          r--;\n        } else {\n          ans[i] = 'B';\n          b--;\n        }\n      } else if (last == 'B') {\n        if (y > r) {\n          ans[i] = 'Y';\n          y--;\n        } else {\n          ans[i] = 'R';\n          r--;\n        }\n      }\n      last = ans[i];\n    }\n\n    if (min(r, min(y, b)) < 0)\n      printf(\"IMPOSSIBLE\\n\");\n    else {\n\n      if (ans[n - 1] == ans[0])\n        swap(ans[n - 1], ans[n - 2]);\n\n      bool ok = true;\n      for (int i = 0; i < n - 1 and ok; i++) {\n        if (ans[i] == ans[i + 1])\n          ok = false;\n      }\n\n      if (ok)\n        for (int i = 0; i < n; i++)\n          printf(\"%c\", ans[i]);\n      else\n        printf(\"IMPOSSIBLE\");\n\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"rodz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long ll;\n\nconst int N = 110;\nint dist[N][N];\nint e[N], s[N];\nint n;\ndouble pd[N][N];\nbool vis[N][N];\n\nll tdist[N][N];\nbool vis2[N][N];\n\nll calc_tdist(int i, int j) {\n  if (i == j)\n    return 0;\n\n  if (vis2[i][j] == true)\n    return tdist[i][j];\n\n  vis2[i][j] = true;\n  return tdist[i][j] = dist[i][i + 1] + calc_tdist(i + 1, j);\n}\n\nconst double oo = 1e20;\n\ndouble solve(int pos, int horse) {\n  ll traversed = calc_tdist(horse, pos);\n  ll rem = (ll)e[horse] - traversed;\n\n  if (rem < 0)\n    return oo;\n\n  if (pos == n)\n    return 0.0;\n\n  if (vis[pos][horse])\n    return pd[pos][horse];\n\n  vis[pos][horse] = true;\n\n  pd[pos][horse] =\n      min(1.0 * dist[pos][pos + 1] \/ s[horse] + solve(pos + 1, horse),\n          1.0 * dist[pos][pos + 1] \/ s[pos] + solve(pos + 1, pos));\n  return pd[pos][horse];\n}\n\nint main() {\n  int t, casecnt = 1;\n  cin >> t;\n\n  while (t--) {\n    int q;\n    memset(vis, 0, sizeof(vis));\n    memset(vis2, 0, sizeof(vis2));\n\n    cin >> n >> q;\n\n    for (int i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        cin >> dist[i][j];\n      }\n    }\n\n    int u1, v1;\n    cin >> u1 >> v1;\n\n    double ans = 1.0 * dist[1][2] \/ s[1] + solve(2, 1);\n    printf(\"Case #%d: %lf\\n\", casecnt++, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nchar A[20];\nint n;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%s\", A);\n    printf(\"Case #%d: \", c);\n    int n = strlen(A);\n    for (int i = 0; i < n - 1; i++) {\n      if (A[i] > A[i + 1]) {\n        int j = i;\n        while (j >= 0) {\n          A[j]--;\n          if (A[j] < '0')\n            A[j] = '9';\n          else\n            break;\n          j--;\n        }\n        j = i + 1;\n        while (j < n)\n          A[j++] = '9';\n        i = max(i - 2, -1);\n      }\n    }\n    int p = 0;\n    while (p < n && A[p] == '0')\n      p++;\n    for (; p < n; p++)\n      printf(\"%c\", A[p]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nclass inter {\npublic:\n  int l, r;\n  inter() {}\n  inter(int a, int b) {\n    l = a;\n    r = b;\n  }\n  bool operator<(const inter &other) const {\n    int s1 = r - l + 1, s2 = other.r - other.l + 1;\n    if (s1 != s2)\n      return s1 < s2;\n    else\n      return l > other.l;\n  }\n};\npriority_queue<inter> S;\nint A[1000010];\nint main() {\n  int t, n, k;\n  scanf(\"%d\", &t);\n  for (int i = 1; i <= t; i++) {\n    scanf(\"%d %d\", &n, &k);\n    S.push(inter(1, n));\n    int s = 1;\n    while (s < k) {\n      inter x = S.top();\n      S.pop();\n      int l = x.l, r = x.r;\n      int med = (l + r) >> 1;\n      A[med] = s++;\n      if (med - 1 >= l)\n        S.push(inter(l, med - 1));\n      if (med + 1 <= r)\n        S.push(inter(med + 1, r));\n    }\n    inter final = S.top();\n    S.pop();\n    int med = (final.l + final.r) >> 1;\n    printf(\"Case #%d: %d %d\\n\", i, max(med - final.l, final.r - med),\n           min(med - final.l, final.r - med));\n    while (!S.empty())\n      S.pop();\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nchar S[100010];\nint n, k;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%s %d\", S, &k);\n    n = strlen(S);\n    printf(\"Case #%d: \", c);\n    int f = 0;\n    for (int i = 0; i <= n - k; i++) {\n      if (S[i] == '+')\n        continue;\n      for (int j = 0; j < k; j++) {\n        S[i + j] = ((S[i + j] == '+') ? ('-') : ('+'));\n      }\n      f++;\n    }\n    bool ok = true;\n    for (int i = 0; i < n && ok; i++)\n      ok = (S[i] == '+');\n    if (!ok)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", f);\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nint n, R[51], Q[51][51], p, t;\nint match[1010];\nbool v[1010];\nvector<int> g[1010];\nint cap[51][51];\npair<int, int> M[51][51];\nbool matching(int cur) {\n  if (cur == -1)\n    return true;\n  v[cur] = true;\n  for (int i = 0; i < (int)g[cur].size(); i++) {\n    int next = g[cur][i];\n    if (v[next])\n      continue;\n    v[next] = true;\n    if (matching(match[next])) {\n      match[next] = cur;\n      return true;\n    }\n  }\n  return false;\n}\nint mf() {\n  memset(match, -1, sizeof(match));\n  int flow = 0;\n  for (int i = 1; i <= p; i++) {\n    memset(v, false, sizeof(v));\n    flow += matching(i);\n  }\n  return flow;\n}\nbool inter(pair<int, int> a, pair<int, int> b) {\n  int li = a.first, ls = a.second, i = b.first, j = b.second;\n  return !(i > ls || j < li);\n}\nint main() {\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%d %d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &R[i]);\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        scanf(\"%d\", &Q[i][j]);\n        int l = 90 * R[i] \/ 100 + (bool)((90 * R[i]) % 100);\n        int r = (110 * R[i]) \/ 100;\n        int x = Q[i][j] \/ l, y = (Q[i][j] \/ r) + (bool)(Q[i][j] % r);\n        if (x < y)\n          M[i][j] = make_pair(-0x3f3f3f3f, -0x3f3f3f3f);\n        else {\n          M[i][j] = make_pair(y, x);\n        }\n      }\n    }\n    for (int i = 1; i <= p; i++) {\n      for (int j = 1; j <= p; j++) {\n        if (M[1][i].first == -0x3f3f3f3f || M[2][j].first == -0x3f3f3f3f)\n          continue;\n        if (inter(M[1][i], M[2][j]))\n          g[i].push_back(j + p);\n      }\n    }\n    printf(\"Case #%d: %d\\n\", c, mf());\n    for (int i = 0; i <= n * p; i++)\n      g[i].clear();\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nchar A[30][30];\nint t, n, m;\nvoid solve(int x, int y) {\n  for (int i = x - 1; i >= 0; i--) {\n    if (A[i][y] != '?') {\n      A[x][y] = A[i][y];\n      return;\n    }\n  }\n  for (int i = x + 1; i < n; i++) {\n    if (A[i][y] != '?') {\n      A[x][y] = A[i][y];\n      return;\n    }\n  }\n}\nint main() {\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", A[i]);\n    printf(\"Case #%d:\\n\", c);\n    for (int i = 0; i < n; i++) {\n      for (int j = 1; j < m; j++) {\n        if (A[i][j] == '?')\n          A[i][j] = A[i][j - 1];\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = m - 2; j >= 0; j--) {\n        if (A[i][j] == '?')\n          A[i][j] = A[i][j + 1];\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        if (A[i][j] == '?')\n          solve(i, j);\n      }\n    }\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", A[i]);\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nint t, n, d;\npair<int, int> horse[1010];\nbool can(double speed) { double t = d \/ speed; }\ndouble T[1010];\nint main() {\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%d %d\", &d, &n);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d %d\", &horse[i].first, &horse[i].second);\n    double speed = 1000000000000000000.0;\n    for (int i = 0; i < n; i++) {\n      double d1 = (double)(d - horse[i].first);\n      double s1 = horse[i].second;\n      double s = s1 * d \/ d1;\n      speed = min(speed, s);\n    }\n    printf(\"Case #%d: %.10lf\\n\", c, speed);\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nchar A[1000010];\nchar S[3];\nint C[3];\nint main() {\n  int t, n, r, o, y, g, b, v;\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: \", c);\n    if (2 * g > r || 2 * o > b || 2 * v > y)\n      printf(\"IMPOSSIBLE\\n\");\n    else {\n      r -= g;\n      b -= o;\n      y -= v;\n      int N = r + b + y;\n      char col;\n      for (int i = 0; i < N; i++)\n        A[i] = '*';\n      A[N] = '\\0';\n      if (r > b && r > y)\n        col = 'R';\n      else if (b > r && b > y)\n        col = 'B';\n      else\n        col = 'Y';\n      for (int i = 0; i < N; i += 2) {\n        A[i] = col;\n        if (col == 'R')\n          r--;\n        else if (col == 'B')\n          b--;\n        else\n          y--;\n        if (col == 'R' && !r)\n          break;\n        if (col == 'Y' && !y)\n          break;\n        if (col == 'B' && !b)\n          break;\n      }\n      if (A[0] == A[N - 1] || (col == 'R' && r) || (col == 'Y' && y) ||\n          (col == 'B' && b)) {\n        printf(\"IMPOSSIBLE\\n\");\n        continue;\n      }\n      if (col == 'R') {\n        S[0] = 'B';\n        S[1] = 'Y';\n        C[0] = b;\n        C[1] = y;\n      } else if (col == 'Y') {\n        S[0] = 'R';\n        S[1] = 'B';\n        C[0] = r;\n        C[1] = b;\n      } else {\n        S[0] = 'R';\n        S[1] = 'Y';\n        C[0] = r;\n        C[1] = y;\n      }\n      int s = 0;\n      for (int i = N - 1; i >= 0; i--) {\n        if (A[i] == '*') {\n          if (s == 0 && C[0]) {\n            A[i] = S[0];\n            s = 1 - s;\n            C[0]--;\n          } else if (s == 1 && C[1]) {\n            A[i] = S[1];\n            s = 1 - s;\n            C[1]--;\n          } else if (C[0] == 0 && C[1] == 0)\n            break;\n          else if (C[0]) {\n            A[i] = S[0];\n            C[0]--;\n          } else if (C[1]) {\n            A[i] = S[1];\n            C[1]--;\n          }\n        }\n      }\n      bool ok = true;\n      for (int i = 0; i < N && ok; i++) {\n        if (A[i] == '*' || (A[i] == A[(i + 1) % N]))\n          ok = false;\n      }\n      if (!ok)\n        printf(\"IMPOSSIBLE\\n\");\n      else {\n        for (int i = 0; i < N; i++) {\n          if (A[i] == 'R') {\n            if (g) {\n              printf(\"RGR\");\n              g--;\n            } else\n              printf(\"R\");\n          } else if (A[i] == 'B') {\n            if (o) {\n              printf(\"BOB\");\n              o--;\n            } else\n              printf(\"B\");\n          } else if (A[i] == 'Y') {\n            if (v) {\n              printf(\"YVY\");\n              v--;\n            } else\n              printf(\"Y\");\n          }\n        }\n        printf(\"\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"sam721","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ndouble D[110][110];\ndouble adj[110][110];\nint n, q, t;\ndouble s[110];\ndouble d[110];\nclass edge {\npublic:\n  int u, v;\n  double dist;\n  edge(int a, int b, double c) {\n    u = a;\n    v = b;\n    dist = c;\n  }\n};\nclass node {\npublic:\n  int n;\n  double t, d;\n  node() {}\n  node(int a, double b, double c) {\n    n = a;\n    t = b;\n    d = c;\n  }\n  bool operator<(const node &other) const { return other.t < t; }\n};\nbool V[110];\nvector<edge> g[110];\ndouble dd[110];\nvoid dijkstra(int h) {\n  priority_queue<node> pq;\n  pq.push(node(h, 0.0, 0.0));\n  for (int i = 0; i < n; i++)\n    dd[i] = 1e100;\n  dd[h] = 0.0;\n  memset(V, false, sizeof(V));\n  while (!pq.empty()) {\n    node aux = pq.top();\n    pq.pop();\n    int cur = aux.n;\n    double dist = aux.d;\n    double tt = aux.t;\n    if (dist > d[h])\n      continue;\n    if (V[cur])\n      continue;\n    V[cur] = true;\n    for (int i = 0; i < (int)g[cur].size(); i++) {\n      int next = g[cur][i].v;\n      double nd = dist + g[cur][i].dist;\n      double nt = tt + g[cur][i].dist \/ s[h];\n      if (nt < dd[next]) {\n        dd[next] = nt;\n        pq.push(node(next, nt, nd));\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (V[i])\n      D[h][i] = dd[i];\n  }\n}\n\nvoid fw() {\n  for (int k = 0; k < n; k++) {\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        D[i][j] = min(D[i][j], D[i][k] + D[k][j]);\n      }\n    }\n  }\n}\nint main() {\n  scanf(\"%d\", &t);\n  for (int c = 1; c <= t; c++) {\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        D[i][j] = 1e100;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lf %lf\", &d[i], &s[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%lf\", &adj[i][j]);\n        if (adj[i][j] != -1)\n          g[i].push_back(edge(i, j, adj[i][j]));\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      dijkstra(i);\n    }\n    fw();\n    printf(\"Case #%d: \", c);\n    for (int i = 0; i < q; i++) {\n      int x, y;\n      scanf(\"%d %d\", &x, &y);\n      printf(\"%s%.10lf\", (i == 0) ? (\"\") : (\" \"), D[x - 1][y - 1]);\n    }\n    printf(\"\\n\");\n    for (int i = 0; i <= n; i++)\n      g[i].clear();\n  }\n\n  return 0;\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"B-small3.in\");\nofstream fout(\"B-small3.out\");\n\nstring solves(string s, char prev) {\n  if (s.size() == 0)\n    return \"\";\n  char minc = '9';\n  for (char c : s)\n    minc = min(minc, c);\n  if (s[0] > minc) {\n    if (s.size() > 1 && s[1] > s[0]) {\n      return s[0] + solves(s.substr(1), s[0]);\n    } else {\n      string res = \"\";\n      if (s[0] > minc && s[0] > '1')\n        res += (char)(s[0] - 1);\n      for (int i = 1; i < s.size(); i++)\n        res += '9';\n      return res;\n    }\n  }\n  return minc + solves(s.substr(1), minc);\n}\n\nvoid solve() {\n  string s;\n  fin >> s;\n  fout << solves(s, '0') << '\\n';\n}\n\nint main() {\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"C-small1.in\");\nofstream fout(\"C-small1.out\");\n\nvoid solve() {\n  int k, n;\n  fin >> k >> n;\n  map<int, int> ct;\n  ct[k] = 1;\n  for (int i = 1; i < n; i++) {\n    auto p = *(ct.rbegin());\n    if (p.second == 1)\n      ct.erase(p.first);\n    else\n      ct[p.first]--;\n\n    ct[(p.first - 1) \/ 2]++;\n    ct[p.first - 1 - (p.first - 1) \/ 2]++;\n  }\n  fout << ct.rbegin()->first \/ 2 << ' ' << (ct.rbegin()->first - 1) \/ 2 << '\\n';\n}\n\nint main() {\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"A-small-attempt1.in\");\nofstream fout(\"A-small1.out\");\n\nvoid solve() {\n  string s;\n  int fsize;\n  fin >> s >> fsize;\n\n  int flips[1005] = {}, res = 0, i = 0;\n  for (char c : s) {\n    if (i >= fsize)\n      res -= flips[i - fsize];\n    int now = (c == '+');\n    if (i <= s.size() - fsize && (now + res) % 2 == 0)\n      flips[i] = 1;\n    res += flips[i];\n    i++;\n    if ((now + res) % 2 == 0) {\n      fout << \"IMPOSSIBLE\\n\";\n      return;\n    }\n  }\n  res = 0;\n  for (int a : flips)\n    res += a;\n  fout << res << '\\n';\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"B-small0.in\");\nofstream fout(\"B-small0.out\");\n\nvoid solve() {\n  int ing, per, ingL[100], packs[100][100];\n  vector<pair<int, pair<int, int>>> packV[100];\n  fin >> ing >> per;\n  for (int i = 0; i < ing; i++)\n    fin >> ingL[i];\n  for (int i = 0; i < ing; i++) {\n    for (int j = 0; j < per; j++) {\n      fin >> packs[i][j];\n      int low = (10 * packs[i][j] + 11 * ingL[i] - 1) \/ (11 * ingL[i]);\n      int high = (10 * packs[i][j]) \/ (9 * ingL[i]);\n      packV[i].push_back({packs[i][j], {low, high}});\n      cout << packs[i][j] << ' ' << low << ' ' << high << '\\n';\n    }\n    sort(packV[i].begin(), packV[i].end());\n  }\n  int inds[100] = {}, imax = 0, res = 0;\n  cout << \"good here\" << endl;\n  while (imax < per) {\n    int curL = 0, curH = 1 << 30;\n    int curLi = 0, curHi = 0;\n    for (int i = 0; i < ing; i++) {\n      if (packV[i][inds[i]].second.first > curL)\n        curL = packV[i][inds[i]].second.first, curLi = i;\n      if (packV[i][inds[i]].second.second < curH)\n        curH = packV[i][inds[i]].second.second, curHi = i;\n    }\n    cout << \"cur \" << curLi << ' ' << curHi << '\\n';\n    if (curH < curL) {\n      inds[curHi]++;\n      imax = max(imax, inds[curHi]);\n    } else {\n      res++;\n      for (int i = 0; i < ing; i++)\n        inds[i]++;\n      imax++;\n    }\n  }\n  fout << res << '\\n';\n}\n\nint main() {\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"A-small-attempt0.in\");\nofstream fout(\"A-small0.out\");\n\nvoid rsolve(int r0, int r1, int c0, int c1, vector<string> &rows) {\n  vector<pair<int, int>> founds;\n  for (int i = r0; i < r1; i++)\n    for (int j = c0; j < c1; j++)\n      if (rows[i][j] != '?')\n        founds.push_back({i, j});\n  cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << ' ' << founds.size()\n       << '\\n';\n  if (founds.size() == 0) {\n    cout << \"WTF???\\n\";\n    return;\n  }\n  if (founds.size() == 1) {\n    char found = rows[founds[0].first][founds[0].second];\n    for (int i = r0; i < r1; i++)\n      for (int j = c0; j < c1; j++)\n        rows[i][j] = found;\n    return;\n  } else {\n    int R1 = founds[0].first, C1 = founds[0].second, R2 = founds[1].first,\n        C2 = founds[1].second;\n    if (C1 == C2) {\n      rsolve(r0, max(R1, R2), c0, c1, rows);\n      rsolve(max(R1, R2), r1, c0, c1, rows);\n    } else {\n      rsolve(r0, r1, c0, max(C1, C2), rows);\n      rsolve(r0, r1, max(C1, C2), c1, rows);\n    }\n  }\n  cout << r0 << ' ' << r1 << ' ' << c0 << ' ' << c1 << \"done\\n\";\n}\n\nvoid solve() {\n  int r, c;\n  fin >> r >> c;\n  vector<string> rows(r);\n  for (string &s : rows)\n    fin >> s;\n  rsolve(0, r, 0, c, rows);\n  for (string s : rows)\n    fout << s << '\\n';\n  cout << \"solve done\";\n}\n\nint main() {\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \":\\n\", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nifstream fin(\"A-small-attempt0.in\");\nofstream fout(\"A-small0.out\");\n\nvoid solve() {\n  ll dest, nh;\n  fin >> dest >> nh;\n  double res = 0;\n  for (int i = 0; i < nh; i++) {\n    ll cur, speed;\n    fin >> cur >> speed;\n    res = max(res, 1.0 * (dest - cur) \/ speed);\n  }\n  fout << fixed << setprecision(12);\n  fout << dest \/ res << '\\n';\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nifstream fin(\"B-small-attempt1.in\");\nofstream fout(\"B-small1.out\");\n\nvoid solve() {\n  int n, r, o, y, g, b, v;\n  fin >> n >> r >> o >> y >> g >> b >> v;\n  int res[2000] = {};\n  int cs[] = {r, y, b};\n  for (int i = 0; i < n; i++) {\n    int mxi = 0, mxamt = -1;\n    for (int j = 0; j < 3; j++) {\n      if (i > 0 && res[i - 1] == j)\n        continue;\n      if (cs[j] > mxamt || (cs[j] == mxamt && j == res[0]))\n        mxi = j, mxamt = cs[j];\n    }\n    if (mxamt <= 0 || (i == n - 1 && mxi == res[0])) {\n      fout << \"IMPOSSIBLE\\n\";\n      return;\n    }\n    cs[mxi]--, res[i] = mxi;\n  }\n  string conv = \"RYB\";\n  for (int i = 0; i < n; i++)\n    fout << conv[res[i]];\n  fout << '\\n';\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"sammyMaX","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nifstream fin(\"C-small-attempt1.in\");\nofstream fout(\"C-small1.out\");\n\nconst int SZ = 105;\n\/\/ [i][j] is cost to go from i to j\nint n, q;\nll cost[SZ];\nll hspeed[SZ], hrange[SZ];\n\nvoid solve() {\n  fin >> n >> q;\n  for (int i = 0; i < n; i++)\n    fin >> hrange[i] >> hspeed[i];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < n; j++) {\n      int tmp;\n      fin >> tmp;\n      if (j == i + 1)\n        cost[i] = tmp;\n    }\n  for (int i = 0; i < q; i++) {\n    int a, b;\n    fin >> a >> b;\n  }\n  double dp[SZ] = {}, dprange[SZ] = {};\n  dprange[0] = hrange[0];\n  for (int i = 1; i < n; i++) {\n    double mindp = 1e15;\n    for (int j = 0; j < i; j++) {\n      if (dprange[j] >= cost[i - 1])\n        dp[j] += 1.0 * cost[i - 1] \/ hspeed[j], dprange[j] -= cost[i - 1];\n      else\n        dp[j] = 1e15, dprange[j] = 0;\n      mindp = min(mindp, dp[j]);\n    }\n    dp[i] = mindp, dprange[i] = hrange[i];\n  }\n  fout << dp[n - 1] << '\\n';\n  cout << dp[n - 1] << '\\n';\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  fout << fixed << setprecision(12);\n\n  int t;\n  fin >> t;\n  for (int i = 0; i < t; i++)\n    fout << \"Case #\" << i + 1 << \": \", solve();\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nchar s[20];\n\nlli solve() {\n  scanf(\"%s\", s);\n  int ls = strlen(s);\n  for (;;) {\n    bool ok = true;\n    for (int i = 0; i < ((int)(ls - 1)); i++) {\n      if (s[i] > s[i + 1]) {\n        ok = false;\n        s[i] -= 1;\n        for (int j = ((int)(i + 1)); j <= ((int)(ls - 1)); j++) {\n          s[j] = '9';\n        }\n        break;\n      }\n    }\n    if (ok)\n      break;\n  }\n\n  lli res = 0;\n  for (int i = 0; i < ((int)(ls)); i++) {\n    res *= 10;\n    res += s[i] - '0';\n  }\n  return res;\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    lli x = solve();\n    printf(\"Case #%d: %lld\\n\", qqq, x);\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nint n, k;\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    scanf(\"%d%d\", &n, &k);\n    priority_queue<int> que;\n    que.push(n);\n    for (int i = 0; i < ((int)(k - 1)); i++) {\n      int x = que.top();\n      que.pop();\n      x--;\n      if (x <= 0)\n        continue;\n      que.push(x - x \/ 2);\n      if (x \/ 2 > 0)\n        que.push(x \/ 2);\n    }\n    int t = que.top();\n    t--;\n\n    printf(\"Case #%d: %d %d\\n\", qqq, t - t \/ 2, t \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nchar s[1005];\nint solve() {\n  int k;\n  scanf(\"%s%d\", s, &k);\n  int ls = strlen(s);\n  for (int i = 0; i < ((int)(ls)); i++) {\n    s[i] = (s[i] == '+' ? 1 : 0);\n  }\n\n  int res = 0;\n  for (int i = 0; i < ((int)(ls)); i++) {\n    if (s[i] == 0) {\n      if (i + k - 1 >= ls)\n        return -1;\n      res++;\n      for (int j = ((int)(i)); j <= ((int)(min(ls - 1, i + k - 1))); j++) {\n        s[j] = 1 - s[j];\n      }\n    }\n  }\n  return res;\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    int x = solve();\n    if (x >= 0)\n      printf(\"Case #%d: %d\\n\", qqq, x);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", qqq);\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nint n;\nint pn;\nint re[55];\nint dat[55][55];\n\ntypedef pair<mp, int> mmp;\nint solve() {\n  priority_queue<mmp> que;\n  for (int i = 0; i < ((int)(n)); i++)\n    for (int j = 0; j < ((int)(pn)); j++) {\n      int x = dat[i][j];\n      int t = re[i];\n      \/\/ printf(\"%d %d\\n\",x,t);\n      int r = (x * 10 + 11 * t - 1) \/ (11 * t);\n      int l = (10 * x) \/ (9 * t);\n      if (l < r)\n        continue;\n      que.push(mmp(mp(r, -1), i));\n      que.push(mmp(mp(l, 1), i));\n    }\n\n  int res = 0;\n  int dn[55];\n  memset(dn, 0, sizeof(dn));\n  while (!que.empty()) {\n    mmp pa = que.top();\n    que.pop();\n    int ty = pa.first.second, ni = pa.second;\n\n    dn[ni] += ty;\n    \/\/ printf(\"t %d ty %d i %d\\n\",pa.fir.fir,ty,ni);\n    dn[ni] = max(dn[ni], 0);\n    int ng = 100;\n    for (int i = 0; i < ((int)(n)); i++) {\n      ng = min(ng, dn[i]);\n    }\n    \/\/ printf(\"%d %d\\n\",pn,ng);\n    res += ng;\n    for (int i = 0; i < ((int)(n)); i++)\n      dn[i] -= ng;\n  }\n  return res;\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    scanf(\"%d%d\", &n, &pn);\n    for (int i = 0; i < ((int)(n)); i++)\n      scanf(\"%d\", &re[i]);\n    for (int i = 0; i < ((int)(n)); i++)\n      for (int j = 0; j < ((int)(pn)); j++)\n        scanf(\"%d\", &dat[i][j]);\n    printf(\"Case #%d: %d\\n\", qqq, solve());\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nint h, w;\nchar s[30][30];\nvoid solve() {\n  for (int c = ((int)('A')); c <= ((int)('z')); c++) {\n    if (c > 'Z' && c <= 'a')\n      continue;\n    int u = 100, d = -1, l = 100, r = -1;\n    for (int y = 0; y < ((int)(h)); y++) {\n      for (int x = 0; x < ((int)(w)); x++) {\n        if (s[y][x] == c) {\n          u = min(u, y);\n          d = max(d, y);\n          l = min(l, x);\n          r = max(r, x);\n        }\n      }\n    }\n\n    for (int y = ((int)(u)); y <= ((int)(d)); y++)\n      for (int x = ((int)(l)); x <= ((int)(r)); x++) {\n        s[y][x] = c;\n      }\n  }\n\n  for (int y = 0; y < ((int)(h)); y++) {\n    int ox = -1;\n    for (int x = 0; x < ((int)(w)); x++) {\n      if (s[y][x] != '?') {\n        ox = x;\n        break;\n      }\n    }\n    if (ox >= 0) {\n      for (int x = 0; x < ((int)(ox)); x++)\n        s[y][x] = s[y][ox];\n      char nc = s[y][ox];\n      for (int x = ((int)(ox)); x <= ((int)(w - 1)); x++) {\n        if (s[y][x] == '?') {\n          s[y][x] = nc;\n        } else\n          nc = s[y][x];\n      }\n    }\n  }\n  for (int y = ((int)(1)); y <= ((int)(h - 1)); y++) {\n    if (s[y][0] != '?')\n      continue;\n    if (s[y - 1][0] == '?')\n      continue;\n    for (int x = 0; x < ((int)(w)); x++) {\n      s[y][x] = s[y - 1][x];\n    }\n  }\n  for (int y = ((int)(h - 2)); y >= ((int)(0)); y--) {\n    if (s[y][0] != '?')\n      continue;\n    if (s[y + 1][0] == '?')\n      continue;\n    for (int x = 0; x < ((int)(w)); x++) {\n      s[y][x] = s[y + 1][x];\n    }\n  }\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    scanf(\"%d%d\", &h, &w);\n    for (int y = 0; y < ((int)(h)); y++)\n      scanf(\"%s\", s[y]);\n    solve();\n    printf(\"Case #%d:\\n\", qqq);\n    for (int y = 0; y < ((int)(h)); y++) {\n      puts(s[y]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\ndouble d;\nint n;\ndouble solve() {\n  double ans = -1;\n  for (int i = 0; i < ((int)(n)); i++) {\n    double k, s;\n    scanf(\"%lf%lf\", &k, &s);\n    double na = d \/ ((d - k) \/ s);\n    if (ans < 0 || na < ans)\n      ans = na;\n  }\n  return ans;\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    scanf(\"%lf%d\", &d, &n);\n    printf(\"Case #%d: %f\\n\", qqq, solve());\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\n#include <cassert>\n\nint sn;\nint d[10];\n\nchar ans[1005];\n\nconst char *ass[7] = {\"\", \"R\", \"Y\", \"BO\", \"B\", \"VY\", \"GR\"};\n\nint solve() {\n  int tb[3] = {3, 5, 6};\n  \/\/ reg(i,1,6)printf(\"%d \",d[i]); puts(\"\");\n  for (int i = 0; i < ((int)(3)); i++) {\n    int x = tb[i], a = d[x];\n    \/\/ printf(\"%d %d %d\\n\",x,a,d[7-x]);\n    if (a > 0) {\n      if (d[7 - x] < a + 1) {\n        for (int j = ((int)(1)); j <= ((int)(6)); j++) {\n          if (j == x || j == 7 - x)\n            continue;\n          if (d[j] != 0)\n            return 0;\n        }\n        if (d[7 - x] == a) {\n          sn = 0;\n          for (int j = 0; j < ((int)(a)); j++) {\n            printf(\"%s\", ass[x]);\n          }\n          puts(\"\");\n          return -1;\n        }\n        return 0;\n      }\n      d[7 - x] -= a + 1;\n      sn -= 2 * a;\n    }\n  }\n\n  mp ps[3];\n  for (int i = 0; i < ((int)(3)); i++) {\n    int p = 1 << i;\n    int t = d[p] + (d[7 - p] ? 1 : 0);\n    \/\/ printf(\"pd[%d] %d\\n\",i,t);\n    if (t * 2 > sn)\n      return 0;\n    ps[i] = mp(t, i);\n  }\n\n  sort(ps, ps + 3, greater<mp>());\n\n  for (int i = 0; i < ((int)(sn)); i++) {\n    ans[i] = ps[2].second;\n  }\n  int np = 0;\n  for (int i = 0; i < ((int)(ps[0].first)); i++) {\n    ans[np] = ps[0].second;\n    np += 2;\n  }\n\n  np = (np - 1 + sn) % sn;\n  for (int i = 0; i < ((int)(ps[1].first)); i++) {\n    assert(ans[np] == ps[2].second);\n    ans[np] = ps[1].second;\n    if (np + 2 < sn)\n      np += 2;\n    else\n      np = 1;\n  }\n\n  \/*\n  printf(\"sn %d\\n\",sn);\n  rep(i,sn)printf(\"%d \",ans[i]);\n  puts(\"\");\n  *\/\n\n  return 1;\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  int ds[6] = {1, 3, 2, 6, 4, 5};\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    scanf(\"%d\", &sn);\n    for (int i = 0; i < ((int)(6)); i++) {\n      int x;\n      scanf(\"%d\", &x);\n      d[ds[i]] = x;\n    }\n    printf(\"Case #%d: \", qqq);\n    int t = solve();\n    if (t == 1) {\n      for (int i = 0; i < ((int)(sn)); i++) {\n        int x = 1 << ans[i];\n        if (d[x] <= 0) {\n          x = 7 - x;\n          assert(d[x] > 0);\n          printf(\"%s\", ass[7 - x]);\n          for (int i = 0; i < ((int)(d[x])); i++) {\n            printf(\"%s\", ass[x]);\n          }\n          d[x] = 0;\n        } else {\n          printf(\"%s\", ass[x]);\n          d[x]--;\n        }\n      }\n      puts(\"\");\n    } else if (t == 0)\n      puts(\"IMPOSSIBLE\");\n    else\n      continue;\n  }\n  return 0;\n}\n"}
{"target":"satos","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long int lli;\ntypedef pair<int, int> mp;\nint n;\nlli vs[105][105];\ndouble wes[105][105];\n\nlli he[105];\ndouble hs[105];\n\ntemplate <class T> void verfo(T vect[105][105]) {\n  for (int k = 0; k < ((int)(n)); k++)\n    for (int i = 0; i < ((int)(n)); i++)\n      for (int j = 0; j < ((int)(n)); j++) {\n        T a = vect[i][k], b = vect[k][j];\n        T &c = vect[i][j];\n        if (a < 0 || b < 0)\n          continue;\n        if (c < 0 || (a + b < c))\n          c = a + b;\n      }\n}\n\nvoid init() {\n  verfo<lli>(vs);\n  \/*\n  rep(i,n){\n          rep(j,n)printf(\"%d \",vs[i][j]);\n          puts(\"\");\n  }*\/\n  for (int i = 0; i < ((int)(n)); i++) {\n    for (int j = 0; j < ((int)(n)); j++) {\n      wes[i][j] = -1;\n      if (i == j || vs[i][j] < 0)\n        continue;\n      if (vs[i][j] > he[i])\n        continue;\n      wes[i][j] = vs[i][j] \/ hs[i];\n    }\n    wes[i][i] = 0;\n  }\n\n  verfo<double>(wes);\n}\n\nint main(void) {\n  int qn;\n  scanf(\"%d\", &qn);\n  for (int qqq = ((int)(1)); qqq <= ((int)(qn)); qqq++) {\n    int m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < ((int)(n)); i++) {\n      scanf(\"%lld%lf\", &he[i], &hs[i]);\n    }\n    for (int i = 0; i < ((int)(n)); i++)\n      for (int j = 0; j < ((int)(n)); j++) {\n        scanf(\"%lld\", &vs[i][j]);\n      }\n    for (int i = 0; i < ((int)(n)); i++)\n      vs[i][i] = 0;\n    init();\n\n    printf(\"Case #%d: \", qqq);\n    for (int i = 0; i < ((int)(m)); i++) {\n      int a, b;\n      scanf(\"%d%d\", &a, &b);\n      a--;\n      b--;\n      printf(\"%lf \", wes[a][b]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> ii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nvector<int> arr;\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  \/\/ cout<<arr.size()<<endl;\n\n  int t, x = 1;\n  cin >> t;\n  \/\/ t=1;\n  while (t--) {\n\n    ll val;\n    cin >> val;\n\n    ll z = val;\n    arr.clear();\n    while (val) {\n      arr.push_back(val % 10);\n      val \/= 10;\n    }\n    reverse(arr.begin(), arr.end());\n\n    bool ok = true;\n    for (int i = 1; i < (int)arr.size(); i++)\n      if (arr[i] < arr[i - 1])\n        ok = false;\n    if (ok) {\n      cout << \"Case #\" << x++ << \": \" << z << endl;\n      continue;\n    }\n\n    int pos = 0;\n    for (int i = 1; i < (int)arr.size(); i++) {\n      if (arr[i] < arr[i - 1])\n        break;\n      if (arr[i] > arr[i - 1])\n        pos = i;\n    }\n\n    arr[pos]--;\n    for (int i = pos + 1; i < (int)arr.size(); i++)\n      arr[i] = 9;\n    ll ans = 0;\n    for (auto it : arr)\n      ans = ans * 10 + it;\n    cout << \"Case #\" << x++ << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> ii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nstruct compare {\n  bool operator()(const ii &a, const ii &b) const {\n    if ((a.first - 1) \/ 2 != (b.first - 1) \/ 2)\n      return a.first > b.first;\n    return (a.first - 1 - (a.first - 1) \/ 2) >\n           (b.first - 1 - (b.first - 1) \/ 2);\n  }\n};\n\nset<ii> arr;\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"C-small-1-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  \/\/ for(int i=1;i<=10;i++)\n  \/\/     arr.insert(ii(i, 0));\n  \/\/ for(auto it : arr)\n  \/\/     cout<<it.ff<<\" \";cout<<endl;\n\n  int t, x = 1;\n  cin >> t;\n  \/\/ t=1;\n  while (t--) {\n\n    ll n, k;\n    cin >> n >> k;\n    \/\/ k--;\n\n    arr.clear();\n    arr.insert(ii(-n, 1));\n    set<ii>::iterator it;\n    ll ans_l, ans_r;\n\n    \/\/ int ctr = 0;\n    while (k > 0) {\n\n      \/\/ ctr++;\n      \/\/ if(ctr == 10)   break;\n\n      assert(!arr.empty());\n      it = arr.begin();\n      ii temp = (*it);\n      temp.first *= -1;\n      arr.erase(it);\n      if (temp.second == 0)\n        continue;\n\n      \/\/ cout<<endl;\n      \/\/ cout<<\"now at \"<<temp.ff<<\" \"<<temp.ss<<endl;\n\n      ll z = min(k, temp.second);\n      if (temp.second > z) {\n        arr.insert(ii(-temp.first, temp.second - z));\n        temp.second = z;\n      }\n      k -= z;\n\n      ll l = (temp.first - 1) \/ 2, r = temp.first - 1 - l;\n      ans_l = max(l, r);\n      ans_r = min(l, r);\n\n      \/\/ cout<<\"got \"<<l<<\" \"<<r<<\" and k = \"<<k<<endl;\n\n      if (l > 0) {\n        it = arr.lower_bound(ii(-l, -1));\n        if (it != arr.end() && (*it).first == -l) {\n          ll cnt = (*it).second + temp.second;\n          arr.erase(it);\n          arr.insert(ii(-l, cnt));\n          \/\/ cout<<\"pushed \"<<l<<\" \"<<cnt<<\" at left\"<<endl;\n        } else {\n          ll cnt = temp.second;\n          arr.insert(ii(-l, cnt));\n          \/\/ cout<<\"pushed \"<<l<<\" \"<<cnt<<\" at left\"<<endl;\n        }\n      }\n\n      if (r > 0) {\n        it = arr.lower_bound(ii(-r, -1));\n        if (it != arr.end() && (*it).first == -r) {\n          ll cnt = (*it).second + temp.second;\n          arr.erase(it);\n          arr.insert(ii(-r, cnt));\n          \/\/ cout<<\"pushed \"<<r<<\" \"<<cnt<<\" at right\"<<endl;\n        } else {\n          ll cnt = temp.second;\n          arr.insert(ii(-r, cnt));\n          \/\/ cout<<\"pushed \"<<r<<\" \"<<cnt<<\" at right\"<<endl;\n        }\n      }\n    }\n\n    cout << \"Case #\" << x++ << \": \" << ans_l << \" \" << ans_r << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> ii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  while (t--) {\n\n    string str;\n    cin >> str;\n\n    int k;\n    cin >> k;\n\n    int n = (int)str.length(), ans = 0;\n    for (int i = 0; i + k - 1 < n; i++)\n      if (str[i] == '-') {\n        ans++;\n        for (int j = i; j < i + k; j++)\n          if (str[j] == '-')\n            str[j] = '+';\n          else\n            str[j] = '-';\n      }\n\n    for (int i = 0; i < n; i++)\n      if (str[i] == '-')\n        ans = -1;\n\n    if (ans == -1)\n      cout << \"Case #\" << x++ << \": IMPOSSIBLE\" << endl;\n    else\n      cout << \"Case #\" << x++ << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef pair<int, ii> iii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint n, p, arr[55][55], req[55], DP[10][1024];\n\nint dp(int i, int mask) {\n  if (i == p)\n    return 0;\n  int &ans = DP[i][mask];\n  if (ans != -1)\n    return ans;\n  ans = dp(i + 1, mask);\n  for (int j = 0; j < p; j++) {\n    if ((mask >> j) & 1)\n      continue;\n    int z = arr[0][i] \/ req[0];\n    for (int x = z + 5; x >= z - 5 && x >= 1; x--) {\n      int lo1 = ceil(1LL * x * req[0] * 0.9),\n          hi1 = floor(1LL * x * req[0] * 1.1);\n      int lo2 = ceil(1LL * x * req[1] * 0.9),\n          hi2 = floor(1LL * x * req[1] * 1.1);\n      if (arr[0][i] >= lo1 && arr[0][i] <= hi1 && arr[1][j] >= lo2 &&\n          arr[1][j] <= hi2)\n        ans = max(ans, 1 + dp(i + 1, mask | (1 << j)));\n    }\n  }\n  \/\/ cout<<\"dp \"<<i<<\" \"<<mask<<\" returns \"<<ans<<endl;\n  return ans;\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  \/\/ t=1;\n  while (t--) {\n\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cin >> req[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        cin >> arr[i][j];\n\n    if (n == 1) {\n      int ans = 0;\n      for (int i = 0; i < p; i++) {\n        bool ok = false;\n        for (int x = 2000000; x >= 1; x--) {\n          int lo = ceil(1LL * x * req[0] * 0.9),\n              hi = floor(1LL * x * req[0] * 1.1);\n          if (arr[0][i] >= lo && arr[0][i] <= hi) {\n            ok = true;\n            break;\n          }\n        }\n        ans += ok;\n      }\n\n      cout << \"Case #\" << x++ << \": \" << ans << endl;\n      continue;\n    }\n\n    memset(DP, -1, sizeof(DP));\n    cout << \"Case #\" << x++ << \": \" << dp(0, 0) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef pair<int, ii> iii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint r, c;\nchar arr[26][26];\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  \/\/ t=1;\n  while (t--) {\n\n    cin >> r >> c;\n    for (int i = 1; i <= r; i++)\n      cin >> (arr[i] + 1);\n\n    for (int i = 1; i <= r; i++)\n      for (int j = 1; j <= c; j++)\n        if (arr[i][j] != '?') {\n\n          int miny = j, maxy = j;\n\n          int y = j - 1;\n          while (y >= 1 && arr[i][y] == '?') {\n            arr[i][y--] = arr[i][j];\n            miny = y + 1;\n          }\n\n          y = j + 1;\n          while (y <= c && arr[i][y] == '?') {\n            arr[i][y++] = arr[i][j];\n            maxy = y - 1;\n          }\n        }\n\n    queue<ii> qq;\n    for (int i = 1; i <= r; i++)\n      if (arr[i][1] != '?') {\n\n        int x = i - 1;\n        while (x >= 1 && arr[x][1] == '?') {\n          for (int j2 = 1; j2 <= c; j2++)\n            arr[x][j2] = arr[x + 1][j2];\n          x--;\n        }\n\n        x = i + 1;\n        while (x <= r && arr[x][1] == '?') {\n          for (int j2 = 1; j2 <= c; j2++)\n            arr[x][j2] = arr[x - 1][j2];\n          x++;\n        }\n      }\n\n    cout << \"Case #\" << x++ << \":\" << endl;\n    for (int i = 1; i <= r; i++)\n      cout << (arr[i] + 1) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef pair<int, ii> iii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint n;\ndouble D, dist[1005], speed[1005];\n\nbool possible(double mid) {\n  for (int i = 1; i <= n; i++) {\n    if (speed[i] > mid)\n      continue;\n    double x = (dist[i] \/ speed[i]) \/ (1.0 \/ speed[i] - 1.0 \/ mid);\n    if (x <= D)\n      return false;\n  }\n  return true;\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  while (t--) {\n\n    cin >> D >> n;\n    for (int i = 1; i <= n; i++)\n      cin >> dist[i] >> speed[i];\n\n    double ans = 0, lo = 0, hi = 1e18 + 2;\n    for (int iter = 0; iter < 100; iter++) {\n      double mid = (lo + hi) \/ 2;\n      if (possible(mid)) {\n        ans = max(ans, mid);\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n\n    cout << \"Case #\" << x++ << \": \" << fixed << setprecision(7) << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef pair<int, ii> iii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint n, red, orange, yellow, green, blue, violet;\nvector<string> arr[5];\n\nstring yolo(int x) {\n  string z = arr[x].back();\n  arr[x].pop_back();\n  return z;\n}\n\nstring check(int x) {\n\n  int y = -1, z = -1;\n  for (int i = 1; i <= 3; i++) {\n    if (i == x)\n      continue;\n    if (y == -1)\n      y = i;\n    else\n      z = i;\n  }\n\n  int xsz = (int)arr[x].size(), ysz = (int)arr[y].size(),\n      zsz = (int)arr[z].size();\n  if (ysz + zsz < xsz)\n    return \"\";\n  if (ysz < zsz) {\n    swap(y, z);\n    swap(ysz, zsz);\n  }\n\n  \/\/ cout<<x<<\" \"<<y<<\" \"<<z<<endl;\n\n  if (ysz >= xsz) {\n    int rem = ysz - xsz;\n    if (rem > zsz)\n      return \"\";\n    zsz -= rem;\n    string ans = \"\";\n    for (int i = 0; i < xsz; i++) {\n      ans += yolo(x) + yolo(y);\n      if (i == 0) {\n        while (rem--) {\n          ans += yolo(z) + yolo(y);\n        }\n      }\n      if (i < zsz)\n        ans += yolo(z);\n    }\n    return ans;\n  } else {\n    int rem = zsz - (xsz - ysz);\n    if (rem > ysz)\n      return \"\";\n    string ans = \"\";\n    for (int i = 0; i < xsz; i++) {\n      ans += yolo(x);\n      if (i < ysz) {\n        ans += yolo(y);\n        if (i < rem)\n          ans += yolo(z);\n      } else {\n        ans += yolo(z);\n      }\n    }\n    return ans;\n  }\n  return \"\";\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"B-small-attempt2.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  \/\/ t=1;\n  while (t--) {\n\n    cin >> n >> red >> orange >> yellow >> green >> blue >> violet;\n\n    orange = green = violet = 0;\n\n    if (orange > 0 && blue < orange + 1) {\n      cout << \"Case #\" << x++ << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    if (green > 0 && red < green + 1) {\n      cout << \"Case #\" << x++ << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    if (violet > 0 && yellow < violet + 1) {\n      cout << \"Case #\" << x++ << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    arr[1].clear();\n    arr[2].clear();\n    arr[3].clear();\n\n    if (orange > 0) {\n      blue -= orange + 1;\n      string str = \"B\";\n      while (orange--)\n        str += \"OB\";\n      arr[1].push_back(str);\n    }\n\n    if (green > 0) {\n      red -= green + 1;\n      string str = \"R\";\n      while (green--)\n        str += \"GR\";\n      arr[2].push_back(str);\n    }\n\n    if (violet > 0) {\n      yellow -= violet + 1;\n      string str = \"Y\";\n      while (violet--)\n        str += \"VY\";\n      arr[3].push_back(str);\n    }\n\n    while (blue--)\n      arr[1].push_back(\"B\");\n    while (red--)\n      arr[2].push_back(\"R\");\n    while (yellow--)\n      arr[3].push_back(\"Y\");\n\n    string ans = \"\";\n    ans = check(1);\n    \/\/ cout<<ans<<endl;\n    if ((int)ans.length() == n) {\n      cout << \"Case #\" << x++ << \": \" << ans << endl;\n      continue;\n    }\n\n    ans = check(2);\n    if ((int)ans.length() == n) {\n      cout << \"Case #\" << x++ << \": \" << ans << endl;\n      continue;\n    }\n\n    ans = check(3);\n    if ((int)ans.length() == n) {\n      cout << \"Case #\" << x++ << \": \" << ans << endl;\n      continue;\n    }\n\n    ans = \"\";\n    if ((int)ans.length() != n) {\n      cout << \"Case #\" << x++ << \": IMPOSSIBLE\" << endl;\n      continue;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"satyaki3794","func":"\/\/ satyaki3794\n#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef pair<int, ii> iii;\n\nll pwr(ll base, ll p, ll mod = (1000000007LL)) {\n  ll ans = 1;\n  while (p) {\n    if (p & 1)\n      ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    p \/= 2;\n  }\n  return ans;\n}\n\nll gcd(ll a, ll b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nconst int N = 102;\nint n, q;\ndouble endurance[N], speed[N], adj[N][N], dist[N][N];\n\ntypedef pair<double, int> pdi;\nvoid dijkstra(int src) {\n  for (int i = 1; i <= n; i++)\n    dist[src][i] = 1e15;\n  priority_queue<pdi> pq;\n  dist[src][src] = 0;\n  pq.push(pdi(0, src));\n  while (!pq.empty()) {\n\n    int v = pq.top().second;\n    double d = -pq.top().first;\n    pq.pop();\n    if (d > dist[src][v])\n      continue;\n\n    for (int vv = 1; vv <= n; vv++) {\n      if (adj[v][vv] > endurance[v])\n        continue;\n      double dd = d + adj[v][vv] \/ speed[v];\n      if (dd < dist[src][vv]) {\n        dist[src][vv] = dd;\n        pq.push(pdi(-dd, vv));\n      }\n    }\n  }\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, x = 1;\n  cin >> t;\n  while (t--) {\n\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++)\n      cin >> endurance[i] >> speed[i];\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        cin >> adj[i][j];\n        if (adj[i][j] == -1)\n          adj[i][j] = 1e15;\n      }\n    }\n\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);\n\n    for (int i = 1; i <= n; i++)\n      dijkstra(i);\n\n    cout << \"Case #\" << x++ << \":\";\n    while (q--) {\n      int a, b;\n      cin >> a >> b;\n      cout << fixed << setprecision(7) << \" \" << dist[a][b];\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nbool check(int n) {\n  vector<int> V;\n  while (n) {\n    V.push_back(n % 10);\n    n = n \/ 10;\n  }\n  reverse(V.begin(), V.end());\n  for (int i = 1; i < V.size(); ++i)\n    if (V[i] < V[i - 1])\n      return false;\n  return true;\n}\nint main() {\n  freopen(\"A.txt\", \"r\", stdin);\n  freopen(\"W.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    while (true) {\n      if (check(n))\n        break;\n      --n;\n    }\n\n    cout << \"Case #\" << index++ << \": \" << n << endl;\n  }\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\npair<long long, long long> func(long long n, long long k) {\n  if (k == 1) {\n    if (n % 2 == 0) {\n      return make_pair(n \/ 2, n \/ 2 - 1);\n    }\n    return make_pair(n \/ 2, n \/ 2);\n  }\n  --k;\n  if (n % 2 == 0) {\n    long long lef = (n - 1) \/ 2;\n    long long righ = n \/ 2;\n    if (k % 2) {\n      return func(righ, (k + 1) \/ 2);\n    }\n    return func(lef, k \/ 2);\n  }\n  return func(n \/ 2, (k + 1) \/ 2);\n}\n\nint main() {\n  freopen(\"A.txt\", \"r\", stdin);\n  freopen(\"W.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    cout << \"Case #\" << index++ << \": \" << func(n, k).first << \" \"\n         << func(n, k).second << endl;\n  }\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  freopen(\"A.txt\", \"r\", stdin);\n  freopen(\"W.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    string s;\n    cin >> s;\n    int k;\n    cin >> k;\n    int coun = 0;\n    for (int i = 0; i < s.size(); ++i) {\n      if (i + k > s.size())\n        break;\n      if (s[i] == '+')\n        continue;\n      for (int j = 0; j < k; ++j) {\n        if (s[i + j] == '+')\n          s[i + j] = '-';\n        else\n          s[i + j] = '+';\n      }\n      ++coun;\n    }\n    \/\/ cout << s << endl;\n    bool flag = 1;\n    for (int i = 0; i < s.size(); ++i) {\n      if (s[i] == '-') {\n        flag = 0;\n        break;\n      }\n    }\n    if (!flag)\n      cout << \"Case #\" << index++ << \": \"\n           << \"IMPOSSIBLE\" << endl;\n    else\n      cout << \"Case #\" << index++ << \": \" << coun << endl;\n  }\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nvector<pair<pair<long long, long long>, long long>> V;\nlong long R[55];\nlong long P[55][55];\nset<pair<long long, long long>> S[55];\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n\n  while (t--) {\n    \/\/ M.clear();\n    long long int n, p;\n    cin >> n >> p;\n    V.clear();\n    for (int i = 1; i <= n; ++i) {\n      cin >> R[i];\n    }\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= p; ++j)\n        cin >> P[i][j];\n    for (int i = 1; i <= n; ++i) {\n\n      S[i].clear();\n      for (int j = 1; j <= p; ++j) {\n\n        long long lindex =\n            ceil((100.0 \/ 110.0) * (1.0 * P[i][j]) \/ (1.0 * R[i]));\n        long long rindex =\n            floor((100.0 \/ 90.0) * (1.0 * P[i][j]) \/ (1.0 * R[i]));\n        V.push_back(make_pair(make_pair(lindex, rindex), i));\n      }\n    }\n\n    sort(V.begin(), V.end());\n    int ans = 0;\n    for (int i = 0; i < V.size(); ++i) {\n      if (V[i].second == 1)\n        S[V[i].second].insert(V[i].first);\n      else\n        S[V[i].second].insert(make_pair(V[i].first.second, V[i].first.first));\n    }\n    auto it = S[1].begin();\n    while (!S[1].empty()) {\n      it = S[1].begin();\n      int coun = 0;\n      for (int j = 2; j <= n; ++j) {\n        auto ip = S[j].begin();\n        while ((ip) != S[j].end()) {\n          if ((*ip).first >= (*it).first && (*ip).second <= (*it).second) {\n            ++coun;\n            break;\n          }\n          ++ip;\n        }\n      }\n      S[1].erase(it);\n      if (coun < n - 1)\n        continue;\n      ++ans;\n      for (int j = 2; j <= n; ++j) {\n        auto ip = S[j].begin();\n        while ((ip) != S[j].end()) {\n          if ((*ip).first >= (*it).first && (*ip).second <= (*it).second) {\n            S[j].erase(ip);\n            break;\n          }\n          ++ip;\n        }\n      }\n    }\n    cout << \"Case #\" << index++ << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nstring s[30];\nstring a[30];\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    int r, c;\n    cin >> r >> c;\n\n    for (int i = 1; i <= r; ++i)\n      cin >> s[i];\n    for (int i = 1; i <= r; ++i)\n      s[i] = \"a\" + s[i];\n\n    int rindex = 0;\n    int cindex = 0;\n    for (int i = 1; i <= r; ++i) {\n      for (int j = 1; j <= c; ++j) {\n        if (s[i][j] != '?') {\n          cindex = j;\n          break;\n        }\n      }\n      if (cindex) {\n        rindex = i;\n        break;\n      }\n    }\n\n    string st = \"\";\n    char C = (s[rindex][cindex]);\n    for (int i = 1; i <= C; ++i) {\n      if (C != (s[rindex][i]) && s[rindex][i] != '?') {\n        C = s[rindex][i];\n      }\n      st += C;\n    }\n    for (int i = 1; i <= r; ++i) {\n      bool flag = 1;\n      int index;\n      for (int j = 1; j <= c; ++j) {\n        if (s[i][j] != '?') {\n          flag = 0;\n          index = j;\n          break;\n        }\n      }\n      if (flag) {\n        a[i] = st;\n        continue;\n      }\n      st = \"\";\n      char C = s[i][index];\n      for (int j = 1; j <= c; ++j) {\n        if (C != s[i][j] && s[i][j] != '?')\n          C = s[i][j];\n        st += C;\n      }\n      a[i] = st;\n    }\n    cout << \"Case #\" << index++ << \":\" << endl;\n    for (int i = 1; i <= r; ++i) {\n      for (int j = 0; j < c; ++j)\n        cout << a[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\npair<long long, long long> K[1005];\ndouble T[1005][1005];\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    long long d, n;\n    cin >> d >> n;\n    for (int i = 1; i <= n; ++i)\n      cin >> K[i].first >> K[i].second;\n    double low = 1e-10;\n    double high = 1e30;\n\n    int coun = 0;\n\n    while (coun != 300) {\n      double mid = (low + high) \/ 2.0;\n      double check = ((1.0 * d) \/ mid);\n      bool flag = 1;\n      for (int i = 1; i <= n; ++i) {\n        if (mid <= K[i].second)\n          continue;\n        double tim = (1.0 * K[i].first) \/ (1.0 * mid - 1.0 * K[i].second);\n        if (tim <= check) {\n          flag = 0;\n          break;\n        }\n      }\n      if (flag) {\n        low = mid;\n      } else\n        high = mid;\n      ++coun;\n    }\n    cout << \"Case #\" << index++ << \": \";\n    double ans = (low + high) \/ 2.0;\n    printf(\"%.10f\\n\", ans);\n  }\n\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nstring ok(int n) {\n  if (n == 1)\n    return \"R\";\n  if (n == 2)\n    return \"B\";\n  return \"Y\";\n}\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    int ma = max(r, max(y, b));\n    if (2 * ma > r + y + b) {\n      cout << \"Case #\" << index++ << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    string ans = \"\";\n    vector<pair<int, int>> V;\n    V.push_back(make_pair(r, 1));\n    V.push_back(make_pair(b, 2));\n    V.push_back(make_pair(y, 3));\n    sort(V.begin(), V.end());\n    r = V[2].first;\n    b = V[1].first;\n    y = V[0].first;\n    if (r >= b && r >= y) {\n      if (b >= y) {\n        int u = r - b;\n        u = y - u;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RBY\";\n        }\n        u = b - u;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RB\";\n        }\n        u = r - b;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RY\";\n        }\n      } else {\n        int u = r - y;\n        u = b - u;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RYB\";\n        }\n        u = y - u;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RY\";\n        }\n        u = r - y;\n        for (int i = 1; i <= u; ++i) {\n          ans += \"RB\";\n        }\n      }\n    }\n    string temp = \"\";\n    for (int i = 0; i < ans.size(); ++i) {\n      if (ans[i] == 'R') {\n        temp += ok(V[2].second);\n      } else if (ans[i] == 'B') {\n        temp += ok(V[1].second);\n      } else {\n        temp += ok(V[0].second);\n      }\n    }\n    cout << \"Case #\" << index++ << \": \" << temp << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sazerterus","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nstring ok(int n) {\n  if (n == 1)\n    return \"R\";\n  if (n == 2)\n    return \"B\";\n  return \"Y\";\n}\nlong long dis[1005][1005];\nlong long E[1005];\nlong long s[1005];\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int index = 1;\n  while (t--) {\n    int n, q;\n    cin >> n >> q;\n    for (int i = 1; i <= n; ++i) {\n      cin >> E[i] >> s[i];\n    }\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= n; ++j) {\n        cin >> dis[i][j];\n        if (dis[i][j] == -1)\n          dis[i][j] = 1000000000000000000;\n      }\n    }\n    for (int k = 1; k <= n; ++k) {\n      for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= n; ++j) {\n          dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n        }\n      }\n    }\n\n    cout << \"Case #\" << index++ << \":\";\n    while (q--) {\n      int uk, vk;\n      cin >> uk >> vk;\n      set<pair<double, int>> S;\n      S.insert(make_pair(0, uk));\n      bool vis[1005];\n      for (int i = 1; i <= n; ++i)\n        vis[i] = 0;\n      while (!S.empty()) {\n        auto it = S.begin();\n        if (vis[(*it).second]) {\n          S.erase(it);\n          continue;\n        }\n        if ((*it).second == vk) {\n          cout << \" \";\n          printf(\"%.10f\", (*it).first);\n          break;\n        }\n        vis[(*it).second] = 1;\n        for (int i = 1; i <= n; ++i) {\n          if (dis[(*it).second][i] <= E[(*it).second] &&\n              dis[(*it).second][i] != 1000000000000000000) {\n            S.insert(make_pair((*it).first + ((1.0 * dis[(*it).second][i]) \/\n                                              (1.0 * s[(*it).second])),\n                               i));\n          }\n        }\n      }\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstring solve() {\n  string s;\n  cin >> s;\n  int n = s.length();\n  int i;\n  for (i = 1; i < n; i++)\n    if (s[i] < s[i - 1])\n      break;\n  if (i == n)\n    return s;\n  i--;\n  while (i && s[i] == s[i - 1])\n    i--;\n  for (int j = i + 1; j < n; j++)\n    s[j] = '9';\n  if (i == 0 && s[i] == '1')\n    s.erase(0, 1);\n  else\n    s[i]--;\n  return s;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    cout << solve() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\npair<long long, long long> solve() {\n  long long n, k, l = 1, r = 0;\n  cin >> n >> k;\n  while (k > (l + r)) {\n    k -= (l + r);\n    if (n % 2)\n      l = l * 2 + r;\n    else\n      r = r * 2 + l;\n    n = (n - 1) \/ 2;\n  }\n  if (k <= r)\n    n++;\n  return {n \/ 2, n \/ 2 - !(n % 2)};\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    auto p = solve();\n    cout << p.first << \" \" << p.second << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint k;\nstring s;\nbool f[1010];\n\nchar flipped(char c) { return c == '-' ? '+' : '-'; }\n\nint solve() {\n  cin >> s >> k;\n  int n = s.length();\n  int ans = 0;\n  bool flipping = false;\n  for (int i = 0; i < n; i++)\n    f[i] = false;\n  for (int i = 0; i < n; i++) {\n    if (f[i])\n      flipping = !flipping;\n    if (flipping)\n      s[i] = flipped(s[i]);\n    if (s[i] == '-') {\n      if (i + k > n)\n        return -1;\n      f[i + k] = true;\n      flipping = !flipping;\n      s[i] = '+';\n      ans++;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    int ans = solve();\n    if (ans == -1)\n      cout << \"IMPOSSIBLE\";\n    else\n      cout << ans;\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint a[50][1200000];\nint b[50][1200000];\nint y[50];\nint cnt[50];\nint u[50];\nint n, p;\n\nvoid solve() {\n  cin >> n >> p;\n  set<int> s;\n  for (int i = 0; i < n; i++)\n    cin >> y[i];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      int x;\n      cin >> x;\n      int n1 = lround(ceil((10.0 * x) \/ (11.0 * y[i])));\n      int n2 = lround(floor((10.0 * x) \/ (9.0 * y[i])));\n      if (n1 == 0)\n        n1++;\n      if (n1 > n2)\n        continue;\n      a[i][n1]++;\n      b[i][n2 + 1]++;\n      s.insert(n1);\n      s.insert(n2);\n    }\n  }\n  for (int i = 0; i < n; i++)\n    u[i] = cnt[i] = 0;\n  int ans = 0;\n  for (int i : s) {\n    int m = 1000000000;\n    for (int j = 0; j < n; j++) {\n      if (u[j] && b[j][i]) {\n        if (u[j] > b[j][i]) {\n          u[j] -= b[j][i];\n          b[j][i] = 0;\n        } else {\n          b[j][i] -= u[j];\n          u[j] = 0;\n        }\n      }\n      cnt[j] += a[j][i];\n      cnt[j] -= b[j][i];\n      a[j][i] = b[j][i] = 0;\n      m = min(m, cnt[j]);\n    }\n    if (m > 0) {\n      ans += m;\n      for (int j = 0; j < n; j++) {\n        u[j] += m;\n        cnt[j] -= m;\n      }\n    }\n  }\n  cout << ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nvoid solve() {\n  int n, m;\n  cin >> n >> m;\n  string a[30];\n  for (int i = 0; i < n; i++)\n    cin >> a[i];\n  int er = 0, ec = 0;\n  bool r = false;\n  for (int i = 0; i < n; i++) {\n    char q = 0;\n    for (int j = 0; j < m; j++)\n      if (a[i][j] == '?') {\n        if (q)\n          a[i][j] = q;\n      } else {\n        if (!q) {\n\n          for (int k = 0; k < j; k++)\n            a[i][k] = a[i][j];\n        }\n        q = a[i][j];\n      }\n    if (!q) {\n      if (r)\n        a[i] = a[i - 1];\n    } else {\n      if (!r) {\n        r = true;\n        for (int k = 0; k < i; k++)\n          a[k] = a[i];\n      }\n    }\n  }\n  for (int i = 0; i < n; i++)\n    cout << a[i] << endl;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \" << endl;\n    ;\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstruct horse {\n  int k, s;\n  bool operator<(const horse &h) const { return k < h.k; }\n} a[1100];\n\nvoid solve() {\n  int n, d;\n  cin >> d >> n;\n  for (int i = 0; i < n; i++)\n    cin >> a[i].k >> a[i].s;\n  sort(a, a + n);\n  double ans = 1e18;\n  for (int i = 0; i < n; i++)\n    ans = min(ans, ((double)a[i].s * d) \/ ((double)d - a[i].k));\n  cout << setprecision(20) << ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nstring imp = \"IMPOSSIBLE\";\n\nstring build(char u, char c, int &iu, int &ic) {\n  string ret;\n  if (iu < ic)\n    return imp;\n  iu -= ic;\n  while (ic--) {\n    ret.push_back(u);\n    ret.push_back(c);\n  }\n  return ret;\n}\n\nstruct letter {\n  int n;\n  char c;\n  bool operator<(const letter &l) const { return n > l.n; }\n};\n\nstring solve() {\n  int n, r, o, y, g, b, v;\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  string a[3];\n  a[0] = build('R', 'G', r, g);\n  a[1] = build('Y', 'V', y, v);\n  a[2] = build('B', 'O', b, o);\n  for (int i = 0; i < 3; i++)\n    if (a[i] == imp)\n      return imp;\n  int cnt = 0;\n  for (int i = 0; i < 3; i++)\n    cnt += a[i].length();\n  if (cnt == n) {\n    if (a[0].length() == n)\n      return a[0];\n    if (a[1].length() == n)\n      return a[1];\n    if (a[2].length() == n)\n      return a[2];\n  }\n  if (a[0].length()) {\n    if (!r)\n      return imp;\n    r--;\n    cnt++;\n    a[0].push_back('R');\n    r++;\n  }\n  if (a[1].length()) {\n    if (!y)\n      return imp;\n    y--;\n    cnt++;\n    a[1].push_back('Y');\n    y++;\n  }\n  if (a[2].length()) {\n    if (!b)\n      return imp;\n    b--;\n    cnt++;\n    a[2].push_back('B');\n    b++;\n  }\n  string ans;\n  letter l[3] = {{r, 'R'}, {y, 'Y'}, {b, 'B'}};\n  sort(l, l + 3);\n  while (l[0].n) {\n    ans.push_back(l[0].c);\n    l[0].n--;\n    if (l[1].n == 0 && l[2].n == 0)\n      return imp;\n    if (l[0].n == 0)\n      break;\n    if (l[1].n > l[2].n) {\n      ans.push_back(l[1].c);\n      l[1].n--;\n    } else {\n      ans.push_back(l[2].c);\n      l[2].n--;\n    }\n  }\n  if (l[1].n - l[2].n > 1)\n    return imp;\n  while (l[1].n || l[2].n) {\n    if (l[1].n > l[2].n) {\n      ans.push_back(l[1].c);\n      l[1].n--;\n    } else {\n      ans.push_back(l[2].c);\n      l[2].n--;\n    }\n  }\n  string ret;\n  bool f1 = false, f2 = false, f3 = false;\n  if (a[0].length() == 0)\n    f1 = true;\n  if (a[1].length() == 0)\n    f2 = true;\n  if (a[2].length() == 0)\n    f3 = true;\n  for (char c : ans)\n    if (c == 'R' && !f1)\n      ret += a[0], f1 = true;\n    else if (c == 'Y' && !f2)\n      ret += a[1], f2 = true;\n    else if (c == 'B' && !f3)\n      ret += a[2], f3 = true;\n    else\n      ret.push_back(c);\n  return ret;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    cout << solve() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Scomip","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint n, q;\nstruct horse {\n  int e, s;\n} h[110];\nint a[110][110];\n\nvoid solve() {\n  cin >> n >> q;\n  for (int i = 0; i < n; i++)\n    cin >> h[i].e >> h[i].s;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < n; j++)\n      cin >> a[i][j];\n  cin >> q >> q;\n\n  vector<pair<horse, double>> x, y;\n  x.push_back({h[0], 0});\n  for (int i = 1; i < n; i++) {\n    y.clear();\n    double best = 1e18;\n    for (auto p : x) {\n      if (p.first.e >= a[i - 1][i]) {\n        double d = p.second + (double)a[i - 1][i] \/ p.first.s;\n        y.push_back({{p.first.e - a[i - 1][i], p.first.s}, d});\n        best = min(best, d);\n      }\n    }\n    y.push_back({h[i], best});\n    x = y;\n  }\n  double ans = 1e18;\n  for (auto p : x)\n    ans = min(ans, p.second);\n  cout << setprecision(20) << ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n\n  int T;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst long long inf = 1000000000000000000LL;\n\nvector<long long> res;\n\nvoid rec(long long value, long long d) {\n  if (value >= inf) {\n    return;\n  }\n  res.push_back(value);\n  for (long long i = d; i <= 9; ++i) {\n    if (value < inf \/ 10LL) {\n      rec(value * 10LL + i, i);\n    }\n  }\n}\n\nvoid solve(int test) {\n  long long n;\n  cin >> n;\n\n  int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;\n  printf(\"Case #%d: %lld\\n\", test, res[index]);\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  for (int i = 1; i <= 9; ++i) {\n    rec(i, i);\n  }\n\n  sort(res.begin(), res.end());\n  cerr << \"Res size: \" << res.size() << endl;\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; ++i) {\n    solve(i + 1);\n    cerr << i + 1 << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nmap<long long, long long> M;\n\npair<long long, long long> trivial(long long n, long long k) {\n  vector<bool> a(n + 2, false);\n  a[0] = a[n + 1] = true;\n\n  pair<long long, long long> res;\n  for (int i = 0; i < k; ++i) {\n    pair<long long, long long> best = make_pair(-1, -1);\n    int index = -1;\n\n    for (int j = 1; j <= n; ++j) {\n      if (a[j] == true) {\n        continue;\n      }\n\n      long long l = 0, r = 0;\n      for (int k = j - 1; k >= 0; --k) {\n        if (!a[k]) {\n          ++l;\n        } else {\n          break;\n        }\n      }\n\n      for (int k = j + 1; k <= n + 1; ++k) {\n        if (!a[k]) {\n          ++r;\n        } else {\n          break;\n        }\n      }\n\n      if (min(l, r) > best.first) {\n        best = make_pair(min(l, r), max(l, r));\n        index = j;\n      } else if (min(l, r) == best.first && max(l, r) > best.second) {\n        best = make_pair(min(l, r), max(l, r));\n        index = j;\n      }\n    }\n\n    \/\/ cout << best.first << \" \" << best.second << \" \" << index << endl;\n\n    a[index] = true;\n    res = best;\n  }\n\n  return res;\n}\n\nvoid solve(int test) {\n  M.clear();\n  long long n, k;\n\n  cin >> n >> k;\n  long long oldk = k;\n  M[n] = 1;\n\n  long long len = 0;\n  while (k > 0) {\n    pair<long long, long long> p = *M.rbegin();\n\n    long long d = min(k, p.second);\n\n    len = p.first;\n\n    M[p.first] -= d;\n    k -= d;\n\n    M[(p.first - 1) \/ 2] += d;\n    M[p.first \/ 2] += d;\n\n    if (M[p.first] == 0) {\n      M.erase(p.first);\n    }\n  }\n\n  \/*if (make_pair((len - 1) \/ 2, len \/ 2) != trivial(n, oldk)) {\n      cout << \"BAD \" << trivial(n, oldk).first << \" \" << trivial(n, oldk).second\n  << endl;\n  }*\/\n  printf(\"Case #%d: %lld %lld\\n\", test, len \/ 2, (len - 1) \/ 2);\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; ++i) {\n    solve(i + 1);\n    cerr << i + 1 << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(int test) {\n  string s;\n  cin >> s;\n  int k;\n  cin >> k;\n\n  int n = s.size();\n\n  int res = 0;\n  for (int i = 0; i + k - 1 < n; ++i) {\n    if (s[i] == '-') {\n      ++res;\n      for (int j = i; j < i + k; ++j) {\n        s[j] = (s[j] == '+' ? '-' : '+');\n      }\n    }\n  }\n\n  if (count(s.begin(), s.end(), '+') != n) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", test);\n  } else {\n    printf(\"Case #%d: %d\\n\", test, res);\n  }\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; ++i) {\n    solve(i + 1);\n    cerr << i + 1 << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n#pragma comment(linker, \"\/STACK:256000000\")\n\nusing namespace std;\n\nvoid readData() {}\n\nconst int maxN = 60;\nconst int maxL = 2000000;\nint n, p;\nint a[maxN];\nint b[maxN][maxN];\n\nint d[maxN][maxN];\nint q[maxL];\n\npair<int, int> c[maxN][maxN];\nbool used[maxN][maxN];\n\npair<int, int> getPackages(int value, int t) {\n  int r = (value * 10) \/ (9 * t);\n  int l = (value * 10 + 11 * t - 1) \/ (11 * t);\n\n  return make_pair(l, r);\n}\n\nvoid solve(int test) {\n  cin >> n >> p;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n\n  for (int i = 0; i < maxL; ++i) {\n    q[i] = 0;\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < p; ++j) {\n      cin >> b[i][j];\n      c[i][j] = getPackages(b[i][j], a[i]);\n      for (int k = c[i][j].first; k <= c[i][j].second; ++k) {\n        q[k] = true;\n      }\n    }\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < p; ++j) {\n      used[i][j] = false;\n    }\n  }\n\n  int res = 0;\n  for (int k = 0; k < maxL; ++k) {\n    if (!q[k]) {\n      continue;\n    }\n    while (true) {\n      bool good = true;\n      for (int i = 0; i < n; ++i) {\n        bool have = false;\n        for (int j = 0; j < p; ++j) {\n          if (used[i][j]) {\n            continue;\n          }\n          if (k >= c[i][j].first && k <= c[i][j].second) {\n            have = true;\n            break;\n          }\n        }\n        if (!have) {\n          good = false;\n          break;\n        }\n      }\n      if (!good) {\n        break;\n      }\n      ++res;\n      for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < p; ++j) {\n          if (used[i][j]) {\n            continue;\n          }\n          if (k >= c[i][j].first && k <= c[i][j].second) {\n            used[i][j] = true;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  printf(\"Case #%d: %d\\n\", test, res);\n}\n\nint main(int argc, char *argv[]) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int left_bound, right_bound;\n\n  \/*freopen(argv[3], \"w\", stdout);\n  sscanf(argv[1], \"%d\", &left_bound);\n  sscanf(argv[2], \"%d\", &right_bound);*\/\n\n  int t;\n  cin >> t;\n  left_bound = 1, right_bound = t;\n  for (int i = 1; i <= t; ++i) {\n    if (i >= left_bound && i <= right_bound) {\n      solve(i);\n    } else {\n      readData();\n    }\n    cerr << i << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n#pragma comment(linker, \"\/STACK:256000000\")\n\nusing namespace std;\n\nvoid readData() {}\n\nconst int maxN = 50;\nstring s[maxN];\nint n, m;\n\nvoid solve(int test) {\n  cin >> n >> m;\n  for (int i = 0; i < n; ++i) {\n    cin >> s[i];\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 1; j < m; ++j) {\n      if (s[i][j] == '?') {\n        s[i][j] = s[i][j - 1];\n      }\n    }\n    for (int j = m - 2; j >= 0; --j) {\n      if (s[i][j] == '?') {\n        s[i][j] = s[i][j + 1];\n      }\n    }\n  }\n\n  for (int j = 0; j < m; ++j) {\n    for (int i = 1; i < n; ++i) {\n      if (s[i][j] == '?') {\n        s[i][j] = s[i - 1][j];\n      }\n    }\n    for (int i = n - 2; i >= 0; --i) {\n      if (s[i][j] == '?') {\n        s[i][j] = s[i + 1][j];\n      }\n    }\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      if (s[i][j] == '?') {\n        cerr << \"BAD\" << endl;\n      }\n    }\n  }\n\n  printf(\"Case #%d:\\n\", test);\n  for (int i = 0; i < n; ++i) {\n    printf(\"%s\\n\", s[i].c_str());\n  }\n}\n\nint main(int argc, char *argv[]) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int left_bound, right_bound;\n\n  \/*freopen(argv[3], \"w\", stdout);\n  sscanf(argv[1], \"%d\", &left_bound);\n  sscanf(argv[2], \"%d\", &right_bound);*\/\n\n  int t;\n  cin >> t;\n  left_bound = 1, right_bound = t;\n  for (int i = 1; i <= t; ++i) {\n    if (i >= left_bound && i <= right_bound) {\n      solve(i);\n    } else {\n      readData();\n    }\n    cerr << i << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n#pragma comment(linker, \"\/STACK:256000000\")\n\nusing namespace std;\n\nvoid readData() {}\n\nconst int maxN = 1100;\ndouble d;\nlong long n;\ndouble s[maxN], k[maxN];\n\nvoid solve(int test) {\n  if (test == 29) {\n    int f = 0;\n  }\n  cin >> d >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> k[i] >> s[i];\n  }\n\n  double l = 0.0, r = 1e18;\n  for (int t = 0; t < 400; ++t) {\n    double m = (l + r) \/ 2.0;\n    bool ok = true;\n\n    double p = d \/ m;\n    for (int j = 0; j < n; ++j) {\n      if (k[j] + s[j] * p < d) {\n        ok = false;\n        break;\n      }\n    }\n\n    if (ok) {\n      l = m;\n    } else {\n      r = m;\n    }\n  }\n\n  printf(\"Case #%d: %.10lf\\n\", test, (l + r) \/ 2.0);\n}\n\nint main(int argc, char *argv[]) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int left_bound, right_bound;\n\n  \/*freopen(argv[3], \"w\", stdout);\n  sscanf(argv[1], \"%d\", &left_bound);\n  sscanf(argv[2], \"%d\", &right_bound);*\/\n\n  int t;\n  cin >> t;\n  left_bound = 1, right_bound = t;\n  for (int i = 1; i <= t; ++i) {\n    if (i >= left_bound && i <= right_bound) {\n      solve(i);\n    } else {\n      readData();\n    }\n    cerr << i << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n#pragma comment(linker, \"\/STACK:256000000\")\n\nusing namespace std;\n\nvoid readData() {}\n\nint n, r, o, y, g, b, v;\n\nstring solve(int r, int y, int b) {\n  int a[3] = {r, y, b};\n  string t = \"RYB\";\n\n  for (int i = 0; i < 3; ++i) {\n    for (int j = i + 1; j < 3; ++j) {\n      if (a[j] > a[i]) {\n        swap(a[j], a[i]);\n        swap(t[j], t[i]);\n      }\n    }\n  }\n\n  string res(n, ' ');\n  for (int i = 0; i < n; i += 2) {\n    for (int j = 0; j < 3; ++j) {\n      if (a[j] > 0) {\n        res[i] = t[j];\n        --a[j];\n        break;\n      }\n    }\n  }\n  for (int i = 1; i < n; i += 2) {\n    for (int j = 0; j < 3; ++j) {\n      if (a[j] > 0) {\n        res[i] = t[j];\n        --a[j];\n        break;\n      }\n    }\n  }\n\n  bool ok = true;\n  for (int i = 1; i < n; ++i) {\n    if (res[i] == res[i - 1] || (n > 1 && res[0] == res[n - 1])) {\n      ok = false;\n    }\n  }\n\n  if (!ok) {\n    cerr << \"BAD\" << endl;\n  }\n\n  return res;\n}\n\nvoid solve(int test) {\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  if (2 * r > n || 2 * y > n || 2 * b > n) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", test);\n    return;\n  }\n  if (r + y + b != n) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", test);\n    return;\n  }\n\n  printf(\"Case #%d: %s\\n\", test, solve(r, y, b).c_str());\n}\n\nint main(int argc, char *argv[]) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int left_bound, right_bound;\n\n  \/*freopen(argv[3], \"w\", stdout);\n  sscanf(argv[1], \"%d\", &left_bound);\n  sscanf(argv[2], \"%d\", &right_bound);*\/\n\n  int t;\n  cin >> t;\n  left_bound = 1, right_bound = t;\n  for (int i = 1; i <= t; ++i) {\n    if (i >= left_bound && i <= right_bound) {\n      solve(i);\n    } else {\n      readData();\n    }\n    cerr << i << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sdya","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n#pragma comment(linker, \"\/STACK:256000000\")\n\nusing namespace std;\n\nvoid readData() {}\n\nconst int maxN = 110;\nconst long long inf = 1000000000000000000LL;\n\nint n, q;\nlong long d[maxN][maxN];\nlong long e[maxN], s[maxN];\n\nlong long a[maxN], b[maxN];\n\ndouble c[maxN];\n\ndouble solve(int u, int v) {\n  --u;\n  --v;\n\n  for (int i = 0; i < n; ++i) {\n    c[i] = 1e50;\n  }\n  c[u] = 0.0;\n\n  for (int steps = 0; steps < 200; ++steps) {\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        if (i == j || d[i][j] == inf || e[i] < d[i][j]) {\n          continue;\n        }\n        c[j] = min(c[j], c[i] + (double)(d[i][j]) \/ (double)(s[i]));\n      }\n    }\n  }\n  return c[v];\n}\n\nvoid solve(int test) {\n  cin >> n >> q;\n  for (int i = 0; i < n; ++i) {\n    cin >> e[i] >> s[i];\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < n; ++j) {\n      cin >> d[i][j];\n      if (d[i][j] == -1) {\n        d[i][j] = inf;\n      }\n    }\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < n; ++j) {\n      for (int k = 0; k < n; ++k) {\n        d[j][k] = min(d[j][k], d[j][i] + d[i][k]);\n      }\n    }\n  }\n\n  vector<double> res;\n  for (int i = 0; i < q; ++i) {\n    int u, v;\n    cin >> u >> v;\n    res.push_back(solve(u, v));\n  }\n\n  printf(\"Case #%d:\", test);\n  for (int i = 0; i < q; ++i) {\n    printf(\" %.10lf\", res[i]);\n  }\n  printf(\"\\n\");\n}\n\nint main(int argc, char *argv[]) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int left_bound, right_bound;\n\n  \/*freopen(argv[3], \"w\", stdout);\n  sscanf(argv[1], \"%d\", &left_bound);\n  sscanf(argv[2], \"%d\", &right_bound);*\/\n\n  int t;\n  cin >> t;\n  left_bound = 1, right_bound = t;\n  for (int i = 1; i <= t; ++i) {\n    if (i >= left_bound && i <= right_bound) {\n      solve(i);\n    } else {\n      readData();\n    }\n    cerr << i << \": \" << clock() << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\nbool is_tidy(int n) {\n  vector<int> d;\n  while (n) {\n    int x = n % 10;\n    if (((int)(d).size()) && x > d.back())\n      return false;\n    d.push_back(x);\n    n \/= 10;\n  }\n  return true;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n    int n;\n    cin >> n;\n    do {\n      if (is_tidy(n)) {\n        cout << n << endl;\n        break;\n      }\n    } while (n--);\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\nint main() {\n  ios::sync_with_stdio(false);\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, k;\n    cin >> n >> k;\n    queue<int> q;\n    q.push(1);\n    q.push(n + 1);\n\n    int x, y, mid;\n    for (int i = 0; i < k; i++) {\n      x = q.front();\n      q.pop();\n      y = q.front();\n      q.pop();\n      mid = (x + y) \/ 2;\n\n      \/\/ cerr << VAL(x) << VAL(y) << VAL(mid) << endl;\n\n      if ((y - x) % 2 == 0) {\n        if (mid - x > 0) {\n          q.push(x);\n          q.push(mid);\n        }\n        if (y - mid - 1 > 0) {\n          q.push(mid + 1);\n          q.push(y);\n        }\n      } else {\n        if (y - mid - 1 > 0) {\n          q.push(mid + 1);\n          q.push(y);\n        }\n        if (mid - x > 0) {\n          q.push(x);\n          q.push(mid);\n        }\n      }\n    }\n    cout << mid - x << ' ' << y - mid - 1 << endl;\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\nvoid flip(string &s, int x, int k) {\n  for (int i = x; i < x + k; i++)\n    s[i] = (s[i] == '+' ? '-' : '+');\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    string s;\n    cin >> s;\n    int k;\n    cin >> k;\n\n    int n = ((int)(s).size());\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == '-') {\n        if (n - i >= k) {\n          flip(s, i, k);\n          ans++;\n        } else {\n          ans = -1;\n          break;\n        }\n      }\n    }\n    if (ans == -1)\n      cout << \"IMPOSSIBLE\";\n    else\n      cout << ans;\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 100 + 10;\n\nint r[MAXN];\nint q[MAXN][MAXN];\nset<pair<pii, int>> s[MAXN];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tc;\n  cin >> tc;\n  for (int tt = 1; tt <= tc; tt++) {\n    for (int i = 0; i < (MAXN); i++)\n      s[i].clear();\n    cout << \"Case #\" << tt << \": \";\n\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        cin >> q[i][j];\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++) {\n        int k1 = ceil((double)q[i][j] \/ ((double)r[i] * 1.1));\n        int k2 = floor((double)q[i][j] \/ ((double)r[i] * 0.9));\n\n        if (k1 <= k2)\n          s[i].insert(make_pair(make_pair(k1, k2), j));\n      }\n\n    int ans = 0;\n    while (((int)(s[0]).size())) {\n      pair<pii, int> tmp = *s[0].begin();\n      s[0].erase(s[0].begin());\n      int k1 = tmp.first.first, k2 = tmp.first.second;\n\n      bool check = true;\n      for (int i = 1; i < n; i++) {\n        if (s[i].empty())\n          check = false;\n\n        while (((int)(s[i]).size())) {\n          pair<pii, int> tmp = *s[i].begin();\n          int t1 = tmp.first.first, t2 = tmp.first.second;\n          if (t2 < k1) {\n            s[i].erase(s[i].begin());\n            if (s[i].empty())\n              check = false;\n            continue;\n          }\n          k1 = max(k1, t1);\n          k2 = min(k2, t2);\n          break;\n        }\n      }\n      if (k1 <= k2 && check) {\n        for (int i = 1; i < n; i++)\n          s[i].erase(s[i].begin());\n        ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 30;\n\nchar a[MAXN][MAXN];\nint n, m;\nint d[MAXN][MAXN];\nbool mark[MAXN][MAXN];\n\nvoid colorize(int x1, int y1, int x2, int y2, char c) {\n  for (int i = x1; i <= x2; i++)\n    for (int j = y1; j <= y2; j++) {\n      mark[i][j] = true;\n      a[i][j] = c;\n    }\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      d[i][j] = (a[i][j] != '?');\n      if (i > 0)\n        d[i][j] += d[i - 1][j];\n      if (j > 0)\n        d[i][j] += d[i][j - 1];\n      if (i > 0 && j > 0)\n        d[i][j] -= d[i - 1][j - 1];\n    }\n}\n\nbool check(int x1, int y1, int x2, int y2) {\n  int res = d[x2][y2];\n  if (x1 > 0)\n    res -= d[x1 - 1][y2];\n  if (y1 > 0)\n    res -= d[x2][y1 - 1];\n  if (x1 > 0 && y1 > 0)\n    res += d[x1 - 1][y1 - 1];\n  return (res == 1);\n}\n\nvoid go(int x, int y) {\n  for (int i1 = 0; i1 <= x; i1++)\n    for (int j1 = 0; j1 <= y; j1++)\n      for (int i2 = n - 1; i2 >= x; i2--)\n        for (int j2 = m - 1; j2 >= y; j2--)\n          if (check(i1, j1, i2, j2)) {\n            colorize(i1, j1, i2, j2, a[x][y]);\n            return;\n          }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tc;\n  cin >> tc;\n  for (int tt = 1; tt <= tc; tt++) {\n    memset(d, 0, sizeof d);\n    memset(mark, 0, sizeof mark);\n    cout << \"Case #\" << tt << \":\" << endl;\n\n    cin >> n >> m;\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++)\n        cin >> a[i][j];\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++) {\n        d[i][j] = (a[i][j] != '?');\n        if (i > 0)\n          d[i][j] += d[i - 1][j];\n        if (j > 0)\n          d[i][j] += d[i][j - 1];\n        if (i > 0 && j > 0)\n          d[i][j] -= d[i - 1][j - 1];\n      }\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++)\n        if (a[i][j] != '?' && !mark[i][j]) {\n          go(i, j);\n        }\n\n    for (int i = 0; i < n; i++, cout << endl)\n      for (int j = 0; j < m; j++)\n        cout << a[i][j];\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\npii h[MAXN];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n    int d, n;\n    cin >> d >> n;\n    for (int i = 0; i < n; i++)\n      cin >> h[i].second >> h[i].first;\n    sort(h, h + n);\n\n    double max_t = 0;\n    for (int i = 0; i < n; i++) {\n      int vi = h[i].first, ki = h[i].second;\n      double nxt = d;\n      double t = 0;\n      for (int j = 0; j < i; j++) {\n        int vj = h[j].first, kj = h[j].second;\n        if (kj > ki) {\n          double cx = (double)(vj * ki - vi * kj) \/ (double)(vj - vi);\n          if (cx < nxt && cx > kj) {\n            t += (double)(nxt - cx) \/ (double)vj;\n            nxt = cx;\n          }\n        }\n      }\n      if (ki < nxt)\n        t += (double)(nxt - ki) \/ (double)vi;\n\n      max_t = max(max_t, t);\n    }\n\n    cout << fixed << setprecision(6) << (double)d \/ max_t << endl;\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\npair<int, char> p[10];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    p[0] = make_pair(r, 'R');\n    p[1] = make_pair(y, 'Y');\n    p[2] = make_pair(b, 'B');\n    sort(p, p + 3);\n\n    if (p[2].first > n \/ 2) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      string ans;\n      for (int i = 0; i < n; i++)\n        ans.push_back(' ');\n\n      for (int c = 2; c >= 0; c--) {\n        if (c % 2 == 0) {\n          for (int i = 0; i < n; i++) {\n            if (p[c].first == 0)\n              break;\n\n            int prev = (i - 1 + n) % n;\n            if (ans[prev] != p[c].second && ans[i] == ' ') {\n              ans[i] = p[c].second;\n              p[c].first--;\n            }\n          }\n        } else {\n          for (int i = n - 1; i >= 0; i--) {\n            if (p[c].first == 0)\n              break;\n\n            int next = (i + 1 + n) % n;\n            if (ans[next] != p[c].second && ans[i] == ' ') {\n              ans[i] = p[c].second;\n              p[c].first--;\n            }\n          }\n        }\n      }\n      for (int i = 0; i < n; i++)\n        if (ans[i] == ' ')\n          cerr << \"BUG\" << endl;\n\n      cout << ans << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"ShayanH","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 1 * 1000 + 10;\n\nint e[MAXN], s[MAXN];\nint d[MAXN][MAXN];\nint qx[MAXN], qy[MAXN];\ndouble dp[MAXN];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int tc = 1; tc <= tt; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, q;\n    cin >> n >> q;\n    for (int i = 0; i < n; i++)\n      cin >> e[i] >> s[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        cin >> d[i][j];\n    for (int i = 0; i < q; i++)\n      cin >> qx[i] >> qy[i];\n\n    dp[0] = 0;\n    for (int i = 1; i < n; i++)\n      dp[i] = 1e15;\n\n    for (int i = 0; i < n; i++) {\n      int cur = 0;\n      for (int j = i + 1; j < n; j++) {\n        cur += d[j - 1][j];\n        if (cur > e[i])\n          break;\n\n        dp[j] = min(dp[j], dp[i] + (double)cur \/ (double)s[i]);\n      }\n    }\n    cout << fixed << setprecision(6) << dp[n - 1] << endl;\n  }\n  return 0;\n}\n"}
{"target":"Shloub","func":"#include <iostream>\n#include <string>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    std::string r{\"\"};\n    std::string s;\n    std::cin >> s;\n    \/\/ std::cerr << s << '\\n';\n    auto ns = s;\n    auto i = 0U;\n    while ((i < s.size() - 1) and (s[i] <= s[i + 1]))\n      ++i;\n    if (i == s.size() - 1)\n      r = s;\n    else {\n      --ns[i];\n      while (i > 0 and ns[i] < ns[i - 1]) {\n        --i;\n        --ns[i];\n      }\n      while (i + 1 < s.size()) {\n        ++i;\n        ns[i] = '9';\n      }\n      i = 0;\n      while (ns[i] == '0')\n        ns.erase(0, 1);\n      r = ns;\n    }\n    std::cout << \"Case #\" << t << \": \" << r << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <iostream>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    long long n, k;\n    std::cin >> n >> k;\n    auto ma = 0LL;\n    auto mi = 0LL;\n    auto cur = n;\n    \/\/ auto cur2 = n;\n    auto nbcur = 1LL;\n    auto nbcur2 = 0LL;\n    auto i = 1LL;\n    while (k >= 2 * i) {\n      \/\/ auto oldcur = cur;\n      i *= 2;\n      --cur;\n      if (cur % 2 == 1) {\n        cur = cur \/ 2 + 1;\n        \/\/ cur2 = (oldcur-1)\/2;\n        nbcur2 = nbcur + 2 * nbcur2;\n      } else {\n        cur = cur \/ 2;\n        \/\/ cur2 = (oldcur-1)\/2 - 1;\n        nbcur = 2 * nbcur + nbcur2;\n      }\n      \/\/ std::cerr << cur << ' ' << nbcur << '\\n';\n      \/\/ std::cerr << cur2 << ' ' << nbcur2 << '\\n';\n    }\n    \/\/ std::cerr << cur << '\\n';\n    if (k > i + nbcur - 1)\n      --cur;\n    --cur;\n    ma = cur \/ 2;\n    mi = cur \/ 2;\n    if (cur % 2)\n      ++ma;\n\n    std::cout << \"Case #\" << t << \": \" << ma << ' ' << mi << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <iostream>\n#include <string>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    std::string r{\"\"};\n    auto n = 0;\n    std::string s;\n    std::cin >> s;\n    int k;\n    std::cin >> k;\n    for (auto i = 0U; i < s.size(); ++i) {\n      if (s[i] != '+') {\n        ++n;\n        for (auto j = i; j < i + k; ++j) {\n          \/\/ std::cerr << t << ' ' << j << '\\n';\n          if (j >= s.size()) {\n            r = \"IMPOSSIBLE\";\n            break;\n          }\n          s[j] = (s[j] == '+') ? '-' : '+';\n        }\n        if (r == \"IMPOSSIBLE\")\n          break;\n      }\n    }\n    if (r != \"IMPOSSIBLE\")\n      r = std::to_string(n);\n    std::cout << \"Case #\" << t << \": \" << r << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <algorithm>\n#include <array>\n#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    int N, P;\n    std::cin >> N >> P;\n    std::vector<int> rec(N);\n    for (auto i = 0; i < N; ++i)\n      std::cin >> rec[i];\n    std::vector<std::vector<int>> pac(N);\n    for (auto i = 0; i < N; ++i) {\n      std::vector<int> mypac(P);\n      for (auto j = 0; j < P; ++j)\n        std::cin >> mypac[j];\n      pac[i] = mypac;\n    }\n    auto r = 0;\n    if (N == 1) {\n      auto cnt = 0;\n      for (auto i = 0; i < P; ++i) {\n        int nb = (pac[0][i] \/ static_cast<double>(rec[0])) + .5;\n        if (!nb)\n          continue;\n        auto need = nb * rec[0];\n        if ((pac[0][i] * 10 <= 11 * need) and (10 * pac[0][i] >= 9 * need))\n          ++cnt;\n      }\n      r = cnt;\n    } else {\n      std::sort(pac[1].begin(), pac[1].end());\n      do {\n        auto cnt = 0;\n        for (auto i = 0; i < P; ++i) {\n          \/\/ double cnb0 = (pac[0][i] \/ static_cast<double>(rec[0]));\n          \/\/ double cnb1 = (pac[1][i] \/ static_cast<double>(rec[1]));\n\n          int nb0 = (pac[0][i] \/ rec[0]);\n          int nb1 = (pac[1][i] \/ rec[1]);\n          int mymin = nb0;\n          int mymax = nb0;\n          if (nb1 < nb0)\n            mymin = nb1;\n          if (mymin < 1)\n            mymin = 1;\n          if (nb1 > nb0)\n            mymax = nb1;\n          \/\/ auto nb = nb0;\n          \/\/ if(nb1 < nb)\n          \/\/   nb = nb1;\n          for (auto nb = mymin; nb <= mymax + 1; ++nb) {\n            auto need0 = nb * rec[0];\n            auto need1 = nb * rec[1];\n            if ((pac[0][i] * 10 <= 11 * need0) and\n                (10 * pac[0][i] >= 9 * need0) and\n                (pac[1][i] * 10 <= 11 * need1) and\n                (10 * pac[1][i] >= 9 * need1)) {\n              ++cnt;\n              break;\n            }\n          }\n        }\n        if (cnt > r)\n          r = cnt;\n      } while (std::next_permutation(pac[1].begin(), pac[1].end()));\n    }\n\n    std::cout << \"Case #\" << t << \": \" << r << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <algorithm>\n#include <array>\n#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    int R, C;\n    std::cin >> R >> C;\n    std::vector<std::string> v(R);\n    for (auto i = 0; i < R; ++i)\n      std::cin >> v[i];\n    std::set<char> seen{};\n    for (auto i = 0; i < R; ++i)\n      for (auto j = 0; j < C; ++j) {\n        if (v[i][j] == '?')\n          continue;\n        if (seen.find(v[i][j]) != seen.end())\n          continue;\n        seen.insert(v[i][j]);\n        auto minr = i;\n        while (minr - 1 >= 0 and v[minr - 1][j] == '?')\n          --minr;\n        auto ok = true;\n        auto minc = j;\n        while (true) {\n          if (minc - 1 < 0)\n            break;\n          for (auto ii = minr; ii <= i; ++ii)\n            if (v[ii][minc - 1] != '?')\n              ok = false;\n          if (!ok)\n            break;\n          --minc;\n        }\n        auto maxc = j;\n        ok = true;\n        while (true) {\n          if (maxc + 1 >= C)\n            break;\n          for (auto ii = minr; ii <= i; ++ii)\n            if (v[ii][maxc + 1] != '?')\n              ok = false;\n          if (!ok)\n            break;\n          ++maxc;\n          \/\/ std::cerr << maxc << '\\n';\n        }\n        auto maxr = i;\n        ok = true;\n        while (true) {\n          if (maxr + 1 >= R)\n            break;\n          for (auto jj = minc; jj <= maxc; ++jj)\n            if (v[maxr + 1][jj] != '?')\n              ok = false;\n          if (!ok)\n            break;\n          \/\/ std::cerr << maxr << '\\n';\n          ++maxr;\n        }\n        for (auto ii = minr; ii <= maxr; ++ii)\n          for (auto jj = minc; jj <= maxc; ++jj)\n            v[ii][jj] = v[i][j];\n      }\n\n    std::cout << \"Case #\" << t << \":\\n\";\n    for (auto &s : v)\n      std::cout << s << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <utility>\n#include <vector>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    long long int D, N;\n    std::cin >> D >> N;\n    std::vector<std::pair<long long int, long long int>> ks(N);\n    for (auto i = 0; i < N; ++i)\n      std::cin >> ks[i].first >> ks[i].second;\n    std::sort(ks.begin(), ks.end(),\n              std::greater<std::pair<long long int, long long int>>());\n    auto r = 0.;\n    auto max = 0.;\n    for (auto &h : ks) {\n      auto d = D - h.first;\n      auto t = d \/ (h.second * 1.);\n      if (t > max)\n        max = t;\n    }\n    r = D \/ max;\n    std::cout << \"Case #\" << t << \": \" << std::setprecision(10) << r << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <utility>\n#include <vector>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    int N, R, O, Y, G, B, V;\n    std::cin >> N >> R >> O >> Y >> G >> B >> V;\n    std::string s(N, 'N');\n    auto ok = true;\n    for (auto i = 0; i < N - 1; ++i) {\n      auto cmax = 'R';\n      auto max = R;\n      if (B > max) {\n        cmax = 'B';\n        max = B;\n      }\n      if (Y > max) {\n        cmax = 'Y';\n        max = Y;\n      }\n\n      if ((!i and O) or (i and O and s[i - 1] == 'B')) {\n        --O;\n        s[i] = 'O';\n        if (!i and B) {\n          --B;\n          s[N - 1] = 'B';\n        }\n        continue;\n      }\n      if ((!i and G) or (i and G and s[i - 1] == 'R')) {\n        --G;\n        s[i] = 'G';\n        if (!i and R) {\n          --R;\n          s[N - 1] = 'R';\n        }\n        continue;\n      }\n      if ((!i and V) or (i and V and s[i - 1] == 'Y')) {\n        --V;\n        s[i] = 'V';\n        if (!i and Y) {\n          --Y;\n          s[N - 1] = 'Y';\n        }\n        continue;\n      }\n      if (i and s[i - 1] == 'O' and B) {\n        --B;\n        s[i] = 'B';\n        continue;\n      }\n      if (i and s[i - 1] == 'G' and R) {\n        --R;\n        s[i] = 'R';\n        continue;\n      }\n      if (i and s[i - 1] == 'V' and Y) {\n        --Y;\n        s[i] = 'Y';\n        continue;\n      }\n      if (!i) {\n        s[i] = cmax;\n        if (cmax == 'B')\n          --B;\n        if (cmax == 'R')\n          --R;\n        if (cmax == 'Y')\n          --Y;\n        continue;\n      }\n      if (i and s[i - 1] == 'R') {\n        if (B > Y or (B == Y and s[0] == 'B')) {\n          s[i] = 'B';\n          --B;\n        } else {\n          s[i] = 'Y';\n          --Y;\n        }\n        continue;\n      }\n      if (i and s[i - 1] == 'B') {\n        if (R > Y or (R == Y and s[0] == 'R')) {\n          s[i] = 'R';\n          --R;\n        } else {\n          s[i] = 'Y';\n          --Y;\n        }\n        continue;\n      }\n      if (i and s[i - 1] == 'Y') {\n        if (B > R or (B == R and s[0] == 'B')) {\n          s[i] = 'B';\n          --B;\n        } else {\n          s[i] = 'R';\n          --R;\n        }\n        continue;\n      }\n      if (i < N - 1)\n        ok = false;\n    }\n    if (B) {\n      s[N - 1] = 'B';\n      --B;\n      if (s[0] == 'B' or s[0] == 'V' or s[0] == 'G')\n        ok = false;\n      if (s[N - 2] == 'B' or s[N - 2] == 'V' or s[N - 2] == 'G')\n        ok = false;\n    }\n    if (R) {\n      s[N - 1] = 'R';\n      --R;\n      if (s[0] == 'R' or s[0] == 'V' or s[0] == 'O')\n        ok = false;\n      if (s[N - 2] == 'R' or s[N - 2] == 'V' or s[N - 2] == 'O')\n        ok = false;\n    }\n    if (Y) {\n      s[N - 1] = 'Y';\n      --Y;\n      if (s[0] == 'Y' or s[0] == 'O' or s[0] == 'G')\n        ok = false;\n      if (s[N - 2] == 'Y' or s[N - 2] == 'O' or s[N - 2] == 'G')\n        ok = false;\n    }\n    if (G) {\n      s[N - 1] = 'G';\n      --G;\n      if (s[0] != 'R')\n        ok = false;\n      if (s[N - 2] != 'R')\n        ok = false;\n    }\n    if (O) {\n      s[N - 1] = 'O';\n      --O;\n      if (s[0] != 'B')\n        ok = false;\n      if (s[N - 2] != 'B')\n        ok = false;\n    }\n    if (V) {\n      s[N - 1] = 'V';\n      --V;\n      if (s[0] != 'Y')\n        ok = false;\n      if (s[N - 2] != 'Y')\n        ok = false;\n    }\n    \/\/ if(t==12){\n    \/\/   std::cerr << s << '\\n';\n    \/\/   std::cerr << R << ' ' << O << ' ' << Y << ' ' << G << ' ' << B << ' '\n    \/\/   << V << '\\n';\n    \/\/ }\n    auto m = std::min({R, O, Y, G, B, V});\n    if (m < 0)\n      ok = false;\n    auto M = std::max({R, O, Y, G, B, V});\n    if (M > 0)\n      ok = false;\n    if (s[N - 1] == 'N')\n      ok = false;\n    for (auto i = 0; i < N; ++i) {\n      if (s[i] == 'R' and s[(i + 1) % N] == 'R')\n        ok = false;\n      if (s[i] == 'R' and s[(i + 1) % N] == 'O')\n        ok = false;\n      if (s[i] == 'R' and s[(i + 1) % N] == 'V')\n        ok = false;\n      if (s[i] == 'B' and s[(i + 1) % N] == 'B')\n        ok = false;\n      if (s[i] == 'B' and s[(i + 1) % N] == 'G')\n        ok = false;\n      if (s[i] == 'B' and s[(i + 1) % N] == 'V')\n        ok = false;\n      if (s[i] == 'Y' and s[(i + 1) % N] == 'Y')\n        ok = false;\n      if (s[i] == 'Y' and s[(i + 1) % N] == 'G')\n        ok = false;\n      if (s[i] == 'Y' and s[(i + 1) % N] == 'O')\n        ok = false;\n      if (s[i] == 'O' and s[(i + 1) % N] != 'B')\n        ok = false;\n      if (s[i] == 'G' and s[(i + 1) % N] != 'R')\n        ok = false;\n      if (s[i] == 'V' and s[(i + 1) % N] != 'Y')\n        ok = false;\n    }\n    if (!ok)\n      s = \"IMPOSSIBLE\";\n    std::cout << \"Case #\" << t << \": \" << s << '\\n';\n  }\n}\n"}
{"target":"Shloub","func":"#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <utility>\n#include <vector>\n\nint main() {\n  int T;\n  std::cin >> T;\n  for (auto t = 1; t <= T; ++t) {\n    int N, Q;\n    std::cin >> N >> Q;\n    std::vector<std::pair<long long int, long long int>> es(N);\n    for (auto i = 0; i < N; ++i)\n      std::cin >> es[i].first >> es[i].second;\n    std::vector<std::vector<long long int>> m(N);\n    for (auto i = 0; i < N; ++i) {\n      m[i] = std::vector<long long int>(N);\n      for (auto j = 0; j < N; ++j)\n        std::cin >> m[i][j];\n    }\n    std::cout << \"Case #\" << t << \": \";\n    for (auto i = 0; i < Q; ++i) {\n      int u, v;\n      std::cin >> u >> v;\n      auto r = 0.;\n      std::vector<double> dp(N, 999999999999999);\n      dp[N - 1] = 0.;\n      for (auto j = N - 2; j >= 0; --j) {\n        auto k = j;\n        long long int d = 0;\n        auto min = 999999999999999.;\n        while (k + 1 < N and es[j].first >= m[k][k + 1]) {\n          es[j].first -= m[k][k + 1];\n          d += m[k][k + 1];\n          auto t = d \/ (1. * es[j].second);\n          t += dp[k + 1];\n          if (t < min)\n            min = t;\n          ++k;\n        }\n        dp[j] = min;\n      }\n      r = dp[0];\n      std::cout << std::setprecision(10) << r;\n      if (i < Q - 1)\n        std::cout << ' ';\n    }\n    std::cout << '\\n';\n  }\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\nmap<char, char> m;\n\ninline bool ok(long long int n) {\n  string s = to_string(n);\n  string ss = s;\n  sort((ss).begin(), (ss).end());\n  return ss == s;\n}\n\ninline void solve() {\n  long long int n;\n  cin >> n;\n  while (!ok(n))\n    --n;\n  cout << n;\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\ninline void solve() {\n  long long int n, k;\n  cin >> n >> k;\n  priority_queue<long long int> pq;\n  pq.push(n);\n  for (long long int i = 0; i < ((long long int)(k - 1)); i++) {\n    long long int now = pq.top();\n    pq.pop();\n    --now;\n    pq.push(now \/ 2);\n    pq.push(now - now \/ 2);\n  }\n  long long int res = pq.top();\n  --res;\n  cout << res - res \/ 2 << \" \" << res \/ 2;\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\nmap<char, char> m;\n\ninline void flip(string &s, long long int idx, long long int l) {\n  for (long long int i = (long long int)(idx); i < ((long long int)(idx + l));\n       i++) {\n    s[i] = m[s[i]];\n  }\n}\n\ninline void solve() {\n  string s;\n  long long int l;\n  cin >> s >> l;\n  long long int res = 0;\n  for (long long int i = 0;\n       i < ((long long int)(((long long int)(s).size()) - l + 1)); i++) {\n    if (s[i] == '-') {\n      flip(s, i, l);\n      ++res;\n    }\n  }\n  for (long long int i = 0; i < ((long long int)(((long long int)(s).size())));\n       i++) {\n    if (s[i] != '+') {\n      cout << \"IMPOSSIBLE\";\n      return;\n    }\n  }\n  cout << res;\n}\n\nint main() {\n  m['-'] = '+';\n  m['+'] = '-';\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\ninline bool ok_1(long long int x, long long int unit) {\n  x *= 10;\n  unit *= 10;\n  long long int near = x \/ unit;\n  if (x >= unit * near * 9 \/ 10 && x <= unit * near * 11 \/ 10) {\n    return true;\n  }\n  ++near;\n  if (x >= unit * near * 9 \/ 10 && x <= unit * near * 11 \/ 10) {\n    return true;\n  }\n  return false;\n}\n\ninline PI get_range(long long int x, long long int unit) {\n  PI res;\n  res.second = (x * 10 \/ 9) \/ unit;\n  res.first = (x * 10 \/ 11) \/ unit;\n  if ((x * 10 \/ 11) % unit > 0)\n    res.first++;\n  return res;\n}\n\ninline bool has_common(PI r1, PI r2) {\n  return r1.second >= r2.first && r2.second >= r1.first;\n}\n\ninline bool ok_2(PI x, PI unit) {\n  PI range1 = get_range(x.first, unit.first);\n  PI range2 = get_range(x.second, unit.second);\n  \/\/ p4(range1.F, range1.S, range2.F, range2.S);\n  return has_common(range1, range2);\n}\n\ninline void solve() {\n  long long int n, p;\n  cin >> n >> p;\n  vector<vector<long long int>> a(n, vector<long long int>(p));\n  vector<long long int> r(n);\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    cin >> r[i];\n  }\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    for (long long int j = 0; j < ((long long int)(p)); j++)\n      cin >> a[i][j];\n  }\n  if (n == 1) {\n    long long int res = 0;\n    for (long long int i = 0; i < ((long long int)(p)); i++) {\n      if (ok_1(a[0][i], r[0])) {\n        ++res;\n      }\n    }\n    cout << res << endl;\n  } else if (n == 2) {\n    long long int res = 0;\n    do {\n      long long int tres = 0;\n      for (long long int i = 0; i < ((long long int)(p)); i++) {\n        if (ok_2(make_pair(a[0][i], a[1][i]), make_pair(r[0], r[1]))) {\n          ++tres;\n        }\n      }\n      res = max(res, tres);\n    } while (next_permutation(a[1].begin(), a[1].end()));\n    cout << res << endl;\n  } else {\n    cout << 1 << endl;\n  }\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\ninline void solve() {\n  cout << endl;\n  long long int r, c;\n  cin >> r >> c;\n  vector<string> board(r);\n  for (long long int i = 0; i < ((long long int)(r)); i++)\n    cin >> board[i];\n  vector<string> res(r);\n  for (long long int i = 0; i < ((long long int)(r)); i++)\n    res[i] = board[i];\n  long long int last_unknown_row = 0;\n  for (long long int i = 0; i < ((long long int)(r)); i++) {\n    bool empty = true;\n    char cc = '?';\n    long long int last_unknown_col = 0;\n    for (long long int j = 0; j < ((long long int)(c)); j++) {\n      if (board[i][j] != '?') {\n        empty = false;\n        cc = board[i][j];\n        for (long long int k = (long long int)(last_unknown_col);\n             k < ((long long int)(j)); k++) {\n          res[i][k] = cc;\n        }\n        last_unknown_col = j + 1;\n      }\n    }\n    if (!empty) {\n      \/\/ \u53f3\u7aef\u3092\u306a\u3093\u3068\u304b\u3059\u308b\n      for (long long int k = (long long int)(last_unknown_col);\n           k < ((long long int)(c)); k++) {\n        res[i][k] = cc;\n      }\n      \/\/ \u4eca\u307e\u3067\u306e\u672a\u78ba\u5b9a\u884c\u3092\u306a\u3093\u3068\u304b\u3059\u308b\n      for (long long int rr = (long long int)(last_unknown_row);\n           rr < ((long long int)(i)); rr++) {\n        res[rr] = res[i];\n      }\n      last_unknown_row = i + 1;\n    }\n  }\n  \/\/ \u6700\u5f8c\u306e\u65b9\u306e\u672a\u78ba\u5b9a\u884c\u3092\u4f55\u3068\u304b\u3059\u308b\n  if (last_unknown_row == 0) {\n    throw;\n  }\n  for (long long int i = (long long int)(last_unknown_row);\n       i < ((long long int)(r)); i++) {\n    res[i] = res[last_unknown_row - 1];\n  }\n  for (long long int i = 0; i < ((long long int)(r)); i++)\n    cout << res[i] << endl;\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \":\";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\nlong long int pos[1010];\nlong long int speed[1010];\n\ninline void solve() {\n  long long int d, n;\n  cin >> d >> n;\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    cin >> pos[i] >> speed[i];\n  }\n  double res = 0;\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    res = max(res, (d - pos[i]) * 1.0 \/ speed[i]);\n  }\n  printf(\"%.12f\\n\", d \/ res);\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\ninline void solve() {\n  long long int n;\n  cin >> n;\n  long long int r, o, y, g, b, v;\n  cin >> r >> o >> y >> g >> b >> v;\n  long long int ma = max(r, max(y, b));\n  if (ma > n \/ 2) {\n    puts(\"IMPOSSIBLE\");\n    return;\n  }\n  string left, right;\n  vector<pair<long long int, char>> p;\n  p.push_back({r, 'R'});\n  p.push_back({y, 'Y'});\n  p.push_back({b, 'B'});\n  sort((p).begin(), (p).end());\n  for (long long int i = 0; i < ((long long int)((n + 1) \/ 2 - p[2].first));\n       i++)\n    left += p[0].second;\n  for (long long int i = 0; i < ((long long int)(p[2].first)); i++)\n    left += p[2].second;\n  for (long long int i = 0; i < ((long long int)(p[1].first)); i++)\n    right += p[1].second;\n  for (long long int i = 0; i < ((long long int)(n \/ 2 - p[1].first)); i++)\n    right += p[0].second;\n  for (long long int i = 0;\n       i < ((long long int)(((long long int)(right).size()) - 1)); i++) {\n    if (right[i] != right[i + 1]) {\n      swap(right[i], right[((long long int)(right).size()) - 1]);\n      break;\n    }\n  }\n\n  string ress;\n  for (long long int i = 0;\n       i < ((long long int)(((long long int)(right).size()))); i++) {\n    ress += left[i];\n    ress += right[i];\n  }\n  if (n % 2 > 0)\n    ress += left[((long long int)(left).size()) - 1];\n  cout << ress << endl;\n\n  \/\/ check\n  if (ress[0] == ress[((long long int)(ress).size()) - 1])\n    throw;\n  for (long long int i = 0;\n       i < ((long long int)(((long long int)(ress).size()) - 1)); i++) {\n    if (ress[i] == ress[i + 1])\n      throw;\n  }\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"Shuto","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef pair<long long int, long long int> PI;\ntypedef pair<long long int, long long int> PI;\n\nlong long int e[111];\nlong long int s[111];\nlong long int d[111][111];\nlong long int n, q;\nlong long int from, to;\n\n\/\/ dp[i][j] : i\u756a\u76ee\u306e\u753a\u307e\u3067j\u756a\u76ee\u306e\u99ac\u3067\u6765\u308b\u3068\u304d\u306e\u6700\u5c0f\u6642\u9593\ndouble dp[111][111];\n\/\/ dp2[i] :\n\/\/ \u306a\u3093\u3067\u3082\u3044\u3044\u304b\u3089i\u756a\u76ee\u306e\u753a\u306b\u3064\u304f\u3068\u304d\u306e\u6700\u5c0f\u6642\u9593\uff08\u99ac\u306e\u308a\u304b\u3048\u308b\u6642\u306b\u53c2\u7167\uff09\ndouble dp2[111];\nlong long int sum_distance[111];\n\ninline double calc() {\n  \/\/ \u307e\u305a2\u70b9\u9593\u8ddd\u96e2\u8a08\u7b97\u3092\u306a\u3093\u3068\u304b\u3059\u308b\n  sum_distance[0] = 0;\n  for (long long int i = 0; i < ((long long int)(n - 1)); i++) {\n    sum_distance[i + 1] = sum_distance[i] + d[i][i + 1];\n  }\n  dp[0][0] = 0;\n  dp2[0] = 0;\n  for (long long int i = (long long int)(1); i < ((long long int)(n)); i++) {\n    dp2[i] = (1ll << (long long int)(60));\n    for (long long int j = 0; j < ((long long int)(i)); j++) {\n      \/\/ j\u756a\u76ee\u306e\u753a\u306e\u99ac\u3067\u3053\u3053\u307e\u3067\u304f\u308b\n      dp[i][j] = (1ll << (long long int)(60));\n      const long long int dd = sum_distance[i] - sum_distance[j];\n      if (dd <= e[j]) {\n        double tmp_part_time = dd * 1.0 \/ s[j];\n        dp[i][j] = dp2[j] + tmp_part_time;\n        dp2[i] = min(dp2[i], dp[i][j]);\n      }\n    }\n  }\n  return dp2[n - 1];\n}\n\ninline void solve() {\n  cin >> n >> q;\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    cin >> e[i] >> s[i];\n  }\n  for (long long int i = 0; i < ((long long int)(n)); i++) {\n    for (long long int j = 0; j < ((long long int)(n)); j++)\n      cin >> d[i][j];\n  }\n  for (long long int i = 0; i < ((long long int)(q)); i++) {\n    cin >> from >> to;\n    printf(\"%.12f\\n\", calc());\n  }\n}\n\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int case_num = 0; case_num < ((long long int)(t));\n       case_num++) {\n    cout << \"Case #\" << case_num + 1 << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nbool lessThan(string a, string b) {\n  if (a.size() < b.size())\n    return true;\n  if (a.size() > b.size())\n    return false;\n  \/\/ equal size\n  for (int i = 0; i < a.size(); ++i) {\n    if (a[i] < b[i])\n      return true;\n    if (a[i] > b[i])\n      return false;\n  }\n  \/\/ equal string\n  return false;\n}\nvoid set(string &c, int st, int num) {\n\n  for (int i = st; i < c.size(); ++i)\n    c[i] = '0' + num;\n}\n\nstring work(string s) {\n\n  string current = s;\n\n  if (s.size() == 1)\n    return s;\n\n  for (int i = 0; i < s.size(); ++i) {\n    current[i] = '1';\n  }\n  if (lessThan(s, current)) { \/\/      return \"99999....9999\"\n    for (int i = 0; i < current.size(); ++i)\n      current[i] = '9';\n    current = current.substr(0, current.size() - 1);\n    return current;\n  }\n\n  for (int i = 0; i < s.size(); ++i) {\n\n    for (int num = (i == 0 ? 1 : current[i - 1] - '0'); num < 10; ++num) {\n      set(current, i, num);\n      if (lessThan(s, current)) {\n        current[i] = num - 1 + '0';\n        break;\n      }\n    }\n  }\n  return current;\n}\n\nint main() {\n\n  int T;\n  cin >> T;\n  for (int test = 0; test < T; ++test) {\n    string s;\n    cin >> s;\n    string output = work(s);\n    cout << \"Case #\" << test + 1 << \": \" << output << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\nlong long res1, res2;\n\nvoid getSplit(long long n, long long &res1, long long &res2) {\n  res1 = (n - 1) \/ 2;\n  res2 = (n - 1) - res1;\n  if (res1 < res2)\n    swap(res1, res2);\n}\n\nvoid work(long long a, long long x, long long b, long long y, long long k) {\n  if (k == 0) {\n    return;\n  }\n\n  long long r1, r2, r3, r4;\n\n  getSplit(x, r1, r2);\n  getSplit(y, r3, r4);\n\n  if (k <= a) {\n    res1 = r1;\n    res2 = r2;\n    return;\n  }\n  k -= a;\n\n  if (k <= b) {\n    res1 = r3;\n    res2 = r4;\n    return;\n  }\n  k -= b;\n\n  long long aa = 0, bb = 0;\n  long long maxr, minr;\n  maxr = max(r1, r2);\n  minr = maxr - 1;\n\n  if (r1 == maxr)\n    aa += a;\n  else\n    bb += a;\n  if (r2 == maxr)\n    aa += a;\n  else\n    bb += a;\n  if (r3 == maxr)\n    aa += b;\n  else\n    bb += b;\n  if (r4 == maxr)\n    aa += b;\n  else\n    bb += b;\n\n  work(aa, maxr, bb, minr, k);\n}\n\nint main() {\n  int T;\n\n  cin >> T;\n  for (int test = 1; test <= T; ++test) {\n    long long n, k;\n    cin >> n >> k;\n    getSplit(n, res1, res2);\n    work(1, res1, 1, res2, k - 1);\n    cout << \"Case #\" << test << \": \" << res1 << \" \" << res2 << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nstring work(string s, int k) {\n\n  string res;\n  int cnt = 0;\n\n  for (int i = 0; i + k - 1 < s.size(); ++i) {\n    if (s[i] == '-') {\n      cnt++;\n      for (int j = 0; j < k; ++j)\n        s[i + j] = '-' + '+' - s[i + j];\n    }\n  }\n\n  for (int i = 0; i < s.size(); ++i)\n    if (s[i] == '-')\n      return \"IMPOSSIBLE\";\n  return std::to_string(cnt);\n}\n\nint main() {\n  int T;\n\n  cin >> T;\n\n  for (int test = 0; test < T; ++test) {\n    string s;\n    int k;\n    cin >> s >> k;\n    string res = work(s, k);\n    printf(\"Case #%d: %s\\n\", test + 1, res.c_str());\n  }\n\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nint a[1001];\nint b[100][100];\nint HHHash[10000];\n\nvector<pair<pair<int, int>, int>> xx;\n\npair<int, int> make(int k, int x) {\n\n  int a = k \/ x \/ 1.1;\n  int b = k \/ x \/ 0.9;\n\n  while (a * x * 1.1 < k)\n    ++a;\n  while ((a - 1) * x * 1.1 >= k)\n    --a;\n  while (b * x * 0.9 > k)\n    --b;\n  while ((b + 1) * x * 0.9 <= k)\n    ++b;\n\n  return make_pair(a, b);\n}\n\nint main() {\n\n  int T;\n  cin >> T;\n  for (int test = 0; test < T; ++test) {\n\n    int N, P;\n    int ans = 0;\n\n    cin >> N >> P;\n\n    for (int i = 0; i < N; ++i) {\n      cin >> a[i];\n    }\n\n    xx.clear();\n    for (int j = 0; j < N; ++j) {\n\n      for (int k = 0; k < P; ++k) {\n        cin >> b[j][k];\n\n        pair<int, int> r = make(b[j][k], a[j]);\n        if (r.first <= r.second) {\n\n          xx.push_back(make_pair(r, j));\n        }\n      }\n    }\n    sort(xx.begin(), xx.end());\n\n    for (int i = 0; i < xx.size(); ++i)\n      HHHash[i] = 0;\n\n    int vis[100];\n    for (int i = 0; i < xx.size(); ++i) {\n\n      for (int j = 0; j < N; ++j) {\n        vis[j] = -1;\n      }\n\n      pair<int, int> thi = xx[i].first;\n      int num = xx[i].second;\n\n      vis[num] = i;\n\n      for (int j = 0; j < i; ++j) {\n        if (HHHash[j] == 0) {\n          if (xx[j].first.second >= thi.first) {\n            int num2 = xx[j].second;\n            if (num2 != num)\n              if (vis[num2] == -1 ||\n                  xx[vis[num2]].first.second > xx[j].first.second) {\n                vis[num2] = j;\n              }\n          }\n        }\n      }\n\n      bool flag = true;\n      for (int j = 0; j < N; ++j) {\n        if (vis[j] == -1)\n          flag = false;\n      }\n\n      if (flag) {\n        ans++;\n        for (int j = 0; j < N; ++j)\n          HHHash[vis[j]] = 1;\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", test + 1, ans);\n  }\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n\nchar mat[30][30];\n\nint cnt(int x0, int y0, int x1, int y1) {\n\n  int cnt = 0;\n  for (int i = x0; i < x1; ++i)\n    for (int j = y0; j < y1; ++j)\n      if (mat[i][j] != '?')\n        cnt++;\n\n  return cnt;\n}\nint get(int x0, int y0, int x1, int y1) {\n\n  for (int i = x0; i < x1; ++i)\n    for (int j = y0; j < y1; ++j)\n      if (mat[i][j] != '?')\n        return mat[i][j];\n  return 0;\n}\n\nvoid cut(int x0, int y0, int x1, int y1) {\n\n  int c = cnt(x0, y0, x1, y1);\n  if (c == 1) {\n    char x = get(x0, y0, x1, y1);\n    for (int i = x0; i < x1; ++i)\n      for (int j = y0; j < y1; ++j)\n        mat[i][j] = x;\n    return;\n  }\n\n  else {\n\n    for (int k = x0 + 1; k < x1; ++k) {\n      if (cnt(x0, y0, k, y1) && cnt(k, y0, x1, y1)) {\n        cut(x0, y0, k, y1);\n        cut(k, y0, x1, y1);\n        return;\n      }\n    }\n    for (int k = y0 + 1; k < y1; ++k) {\n      if (cnt(x0, y0, x1, k) && cnt(x0, k, x1, y1)) {\n        cut(x0, y0, x1, k);\n        cut(x0, k, x1, y1);\n        return;\n      }\n    }\n  }\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int test = 1; test <= T; ++test) {\n\n    int r, c;\n    scanf(\"%d%d\", &r, &c);\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        scanf(\" %c \", &mat[i][j]);\n      }\n    }\n    cut(0, 0, r, c);\n\n    printf(\"Case #%d:\\n\", test);\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j)\n        printf(\"%c\", mat[i][j]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int test = 0; test < T; ++test) {\n    int D, N;\n    cin >> D >> N;\n    double ans = -1;\n    for (int i = 0; i < N; ++i) {\n      int K, S;\n      cin >> K >> S;\n      double time = 1.0 * (D - K) \/ S;\n\n      double speed = D \/ time;\n      if (speed < ans || i == 0) {\n        ans = speed;\n      }\n    }\n    cout << \"Case #\" << test + 1 << \": \";\n    \/\/                cout << ans << endl;\n    printf(\"%.6f\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n  int T;\n  cin >> T;\n  for (int test = 1; test <= T; ++test) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    cout << \"Case #\" << test << \": \";\n    if (R > B + Y || B > R + Y || Y > R + B) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n\n    string ans = \"\";\n    if (R)\n      ans += \"R\", --R;\n    else if (B)\n      ans += \"B\", --B;\n    else\n      ans += \"Y\", --Y;\n\n    for (int i = 1; i < N; ++i) {\n      if (i != N - 2) {\n        if (ans[i - 1] == 'R') {\n          if (Y > B)\n            ans += \"Y\", --Y;\n          else\n            ans += \"B\", --B;\n        } else if (ans[i - 1] == 'Y') {\n          if (B > R)\n            ans += \"B\", --B;\n          else\n            ans += \"R\", --R;\n        } else { \/\/ 'B'\n          if (Y > R)\n            ans += \"Y\", --Y;\n          else\n            ans += \"R\", --R;\n        }\n      } else {\n        if (ans[0] == 'R' && R)\n          ans += 'R', --R;\n        else if (ans[0] == 'Y' && Y)\n          ans += 'Y', --Y;\n        else if (ans[0] == 'B' && B)\n          ans += 'B', --B;\n        else {\n          if (ans[i - 1] == 'R') {\n            if (Y > B)\n              ans += \"Y\", --Y;\n            else\n              ans += \"B\", --B;\n          } else if (ans[i - 1] == 'Y') {\n            if (B > R)\n              ans += \"B\", --B;\n            else\n              ans += \"R\", --R;\n          } else { \/\/ 'B'\n            if (Y > R)\n              ans += \"Y\", --Y;\n            else\n              ans += \"R\", --R;\n          }\n        }\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"}
{"target":"siqisiqi","func":"#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nconst int N = 101;\nlong long dist[N][N], D[N][N];\nint E[N], speed[N];\nint n, q;\n\ndouble TTime[N];\nint vis[N];\n\nint main() {\n\n  int T;\n  cin >> T;\n  for (int test = 0; test < T; ++test) {\n    cin >> n >> q;\n    for (int i = 0; i < n; ++i)\n      cin >> E[i] >> speed[i];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j) {\n        cin >> dist[i][j];\n        if (dist[i][j] == -1)\n          dist[i][j] = 1000000000000; \/\/ 1e12\n        D[i][j] = dist[i][j];\n      }\n    for (int k = 0; k < n; ++k)\n      for (int i = 0; i < n; ++i)\n        for (int j = 0; j < n; ++j)\n          if (D[i][j] > D[i][k] + D[k][j])\n            D[i][j] = D[i][k] + D[k][j];\n\n    cout << \"Case #\" << 1 + test << \":\";\n    for (int ii = 0; ii < q; ++ii) {\n      int s, t;\n      cin >> s >> t;\n      --s, --t;\n\n      for (int j = 0; j < n; ++j) {\n        TTime[j] = 1e13;\n        vis[j] = 0;\n      }\n      TTime[s] = 0;\n\n      for (int i = 0; i < n; ++i) {\n\n        int mini = -1;\n        for (int j = 0; j < n; ++j)\n          if (vis[j] == 0)\n            if (mini == -1 || TTime[mini] > TTime[j])\n              mini = j;\n        vis[mini] = 1;\n\n        for (int j = 0; j < n; ++j) {\n          if (vis[j] == 0)\n            if (D[mini][j] <= E[mini])\n              if (TTime[j] > TTime[mini] + 1.0 * D[mini][j] \/ speed[mini])\n                TTime[j] = TTime[mini] + 1.0 * D[mini][j] \/ speed[mini];\n        }\n      }\n      printf(\" %.6f\", TTime[t]);\n    }\n    printf(\"\\n\");\n  }\n\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <stdio.h>\n#include <string.h>\n\nint n, p;\nchar data[1001];\n\nint main() {\n  int i, j, t;\n\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\" %s\", data);\n    int answer = 0;\n    n = strlen(data);\n\n    for (i = 0; i < n - 1; i++) {\n      if (data[i] > data[i + 1]) {\n        data[i]--;\n        while (i > 0 && data[i] < data[i - 1]) {\n          i--;\n          data[i]--;\n        }\n        if (i == 0 && data[i] == '0')\n          answer = 1;\n        for (i = i + 1; i < n; i++)\n          data[i] = '9';\n      }\n    }\n\n    printf(\"Case #%d: %s\\n\", tt, data + answer);\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <functional>\n#include <queue>\n#include <stdio.h>\n#include <vector>\n\nusing namespace std;\n\nint n, p;\n\nint main() {\n  int i, j, t;\n\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &n, &p);\n    int answer = 0, ls, rs, s;\n\n    priority_queue<int> q;\n    q.push(n);\n\n    for (i = 1; i <= p; i++) {\n      s = q.top();\n      q.pop();\n\n      if (s \/ 2)\n        q.push(s \/ 2);\n      if ((s - 1) \/ 2)\n        q.push((s - 1) \/ 2);\n    }\n\n    printf(\"Case #%d: %d %d\\n\", tt, s \/ 2, (s - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <stdio.h>\n#include <string.h>\n\nint n, p;\nchar data[1001];\n\nint main() {\n  int i, j, t;\n\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\" %s %d\", data, &p);\n    int answer = 0;\n    n = strlen(data);\n\n    for (i = 0; i < n; i++) {\n      if (data[i] == '-') {\n        if (i + p > n) {\n          answer = -1;\n          break;\n        }\n        answer++;\n        for (j = i; j < i + p; j++) {\n          data[j] = data[j] == '-' ? '+' : '-';\n        }\n      }\n    }\n    if (answer == -1) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", tt);\n    } else {\n      printf(\"Case #%d: %d\\n\", tt, answer);\n    }\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <algorithm>\n#include <stdio.h>\n\nusing namespace std;\n\nint n, m, data[51], mp[51][51];\npair<int, int> mp2[51][51];\nint check[51][2], mx;\n\nvoid dfs(int node) {\n  int i;\n  if (node == m + 1) {\n    int cnt = 0;\n    for (i = 1; i <= m; i++) {\n      if (mp2[1][i].first == -1 || mp2[2][check[i][1]].first == -1)\n        continue;\n      if (mp2[1][i].first <= mp2[2][check[i][1]].second &&\n          mp2[2][check[i][1]].first <= mp2[1][i].second)\n        cnt++;\n    }\n\n    if (cnt > mx) {\n      mx = cnt;\n    }\n    return;\n  }\n\n  for (i = 1; i <= m; i++) {\n    if (check[i][0] == 0) {\n      check[i][0] = 1;\n      check[node][1] = i;\n      dfs(node + 1);\n      check[i][0] = 0;\n      check[node][1] = 0;\n    }\n  }\n}\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, i, j, k;\n\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &n, &m);\n\n    for (i = 1; i <= n; i++) {\n      scanf(\"%d\", &data[i]);\n    }\n    mx = 0;\n    for (i = 1; i <= n; i++) {\n      for (j = 1; j <= m; j++) {\n        scanf(\"%d\", &mp[i][j]);\n        if (mp[i][j] >= data[i] * 9) {\n          mp2[i][j] =\n              make_pair(((mp[i][j] * 10 + 10) \/ 11 + data[i] - 1) \/ data[i],\n                        (mp[i][j] * 10 + 8) \/ 9 \/ data[i]);\n          mx++;\n        } else {\n          int node = mp[i][j] * 10 \/ 9 \/ data[i];\n          if (data[i] * node * 9 \/ 10 <= mp[i][j] &&\n              mp[i][j] <= data[i] * node * 11 \/ 10) {\n            mp2[i][j] = make_pair(node, node);\n            mx++;\n          } else\n            mp2[i][j] = make_pair(-1, -1);\n        }\n      }\n    }\n\n    if (n == 2) {\n      mx = 0;\n      dfs(1);\n    }\n\n    printf(\"Case #%d: %d\\n\", tt, mx);\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <stdio.h>\n\nint n, m;\nchar mp[26][26];\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int t, i, j, k;\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &n, &m);\n\n    for (i = 1; i <= n; i++) {\n      scanf(\" %s\", mp[i] + 1);\n    }\n    bool a;\n    for (i = 1; i <= n; i++) {\n      a = false;\n      for (j = 1; j <= m; j++) {\n        if (mp[i][j] != '?') {\n          a = true;\n          for (k = j - 1; k >= 1; k--) {\n            if (mp[i][k] != '?')\n              break;\n            mp[i][k] = mp[i][j];\n          }\n          for (k = j + 1; k <= m; k++) {\n            if (mp[i][k] != '?')\n              break;\n            mp[i][k] = mp[i][j];\n          }\n        }\n      }\n    }\n    for (i = 1; i <= n; i++) {\n      if (mp[i][1] != '?') {\n        for (j = i - 1; j >= 1; j--) {\n          if (mp[j][1] != '?')\n            break;\n\n          for (k = 1; k <= m; k++) {\n            mp[j][k] = mp[j + 1][k];\n          }\n        }\n        for (j = i + 1; j <= n; j++) {\n          if (mp[j][1] != '?')\n            break;\n\n          for (k = 1; k <= m; k++) {\n            mp[j][k] = mp[j - 1][k];\n          }\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", tt);\n    for (i = 1; i <= n; i++)\n      printf(\"%s\\n\", mp[i] + 1);\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <stdio.h>\n\ndouble n;\nint m;\ndouble mx;\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, i;\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%lf%d\", &n, &m);\n    mx = 0;\n    for (i = 1; i <= m; i++) {\n      double a, b;\n      scanf(\"%lf%lf\", &a, &b);\n      if ((n - a) \/ b > mx) {\n        mx = (n - a) \/ b;\n      }\n    }\n\n    printf(\"Case #%d: %.6lf\\n\", tt, n \/ mx);\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <stdio.h>\n\nint n, a[7];\nint ttt[1001];\nchar m[] = {\"ROYGBV\"};\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, i, j;\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d\", &n);\n    int c = 0;\n    for (i = 0; i < 6; i++) {\n      scanf(\"%d\", &a[i]);\n      c += a[i] != 0;\n    }\n    printf(\"Case #%d: \", tt);\n\n    if (a[0] + a[2] < a[4] || a[2] + a[4] < a[0] || a[4] + a[0] < a[2]) {\n      printf(\"IMPOSSIBLE\");\n    } else {\n      int b = -1, mx = 0;\n      ttt[1] = -1;\n      for (i = 1; i <= n; i++) {\n        if (a[0] == 1 && a[2] == 1 && a[4] == 1)\n          break;\n        mx = 7;\n        for (j = 0; j < 6; j++) {\n          if (b != j && a[j] > a[mx]) {\n            mx = j;\n          }\n        }\n        a[mx]--;\n        b = mx;\n        ttt[i] = b;\n        printf(\"%c\", m[b]);\n      }\n      if (a[0] == 1 && a[2] == 1 && a[4] == 1) {\n        for (i = n - 2; i <= n; i++) {\n          if (b != ttt[1] && a[ttt[1]]) {\n            mx = ttt[1];\n          } else {\n            mx = 7;\n            for (j = 0; j < 6; j++) {\n              if (b != j && a[j] > a[mx]) {\n                mx = j;\n              }\n            }\n          }\n          a[mx]--;\n          b = mx;\n          ttt[i] = b;\n          printf(\"%c\", m[b]);\n        }\n      }\n    }\n\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"SiruPorong","func":"#include <algorithm>\n#include <stdio.h>\n\nusing namespace std;\n\nint n, m, mp[101][101];\npair<int, double> h[101];\ndouble dist[101];\n\nint main() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, i, j, k;\n\n  scanf(\"%d\", &t);\n\n  for (int tt = 1; tt <= t; tt++) {\n    scanf(\"%d%d\", &n, &m);\n\n    for (i = 1; i <= n; i++) {\n      scanf(\"%d%lf\", &h[i].first, &h[i].second);\n      dist[i] = -1;\n    }\n\n    for (i = 1; i <= n; i++)\n      for (j = 1; j <= n; j++) {\n        scanf(\"%d\", &mp[i][j]);\n      }\n    int a, b;\n    for (i = 1; i <= m; i++)\n      scanf(\"%d%d\", &a, &b);\n    double c;\n    dist[1] = 0;\n    for (i = 1; i <= n; i++) {\n      c = 0;\n      for (j = i + 1; j <= n; j++) {\n        c += mp[j - 1][j];\n        if (c > h[i].first)\n          break;\n\n        if (dist[j] == -1 || dist[j] > dist[i] + c \/ h[i].second) {\n          dist[j] = dist[i] + c \/ h[i].second;\n        }\n      }\n    }\n\n    printf(\"Case #%d: %lf\\n\", tt, dist[n]);\n  }\n  return 0;\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n\n    string S;\n    cin >> S;\n    for (int i = 0; i < S.size() - 1; i++)\n      if (S[i] > S[i + 1]) {\n        S[i]--;\n        for (int j = i + 1; j < S.size(); j++)\n          S[j] = '9';\n        for (int j = i - 1; j >= 0; j--)\n          if (S[j] > S[j + 1]) {\n            S[j]--;\n            S[j + 1] = '9';\n          }\n        break;\n      }\n    cout << stoll(S) << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nclass Interval {\npublic:\n  int x, y, size, midpoint;\n  Interval() {}\n  Interval(int xx, int yy) {\n    x = xx;\n    y = yy;\n    size = (y - x + 1);\n    midpoint = (y + x) \/ 2;\n  }\n  bool operator<(const Interval &i) const {\n    if (size != i.size)\n      return size > i.size;\n    else\n      return x < i.x;\n  }\n};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    long long N, K;\n    cin >> N >> K;\n\n    set<Interval> s;\n    Interval cur;\n    s.insert(Interval(1, N));\n    for (int i = 1; i <= K; i++) {\n      cur = *s.begin();\n      s.erase(s.begin());\n      if (cur.x != cur.midpoint)\n        s.insert(Interval(cur.x, cur.midpoint - 1));\n      if (cur.y != cur.midpoint)\n        s.insert(Interval(cur.midpoint + 1, cur.y));\n    }\n    cout << cur.size \/ 2 << \" \" << (cur.size - 1) \/ 2 << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar inv(char c) {\n  if (c == '-')\n    return '+';\n  else\n    return '-';\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    string s;\n    int k;\n    cin >> s >> k;\n    int cnt = 0;\n    for (int i = 0; i <= s.size() - k; i++) {\n      if (s[i] == '-') {\n        cnt++;\n        for (int j = i; j < i + k; j++)\n          s[j] = inv(s[j]);\n      }\n    }\n    if (s.find('-') != -1)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << cnt << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint dp[1 << 18];\nint N, P;\ndouble ing[2], pack[10][10];\n\nint solve(int mask) {\n  if (dp[mask] == -1) {\n    dp[mask] = 0;\n    for (int i = 0; i < P; i++)\n      for (int k = 0; k < P; k++)\n        if (!(mask & (1 << i)) && !(mask & (1 << (P + k)))) {\n          double A = pack[0][i] \/ (1.1 * ing[0]);\n          double B = pack[0][i] \/ (0.9 * ing[0]);\n          double C = pack[1][k] \/ (1.1 * ing[1]);\n          double D = pack[1][k] \/ (0.9 * ing[1]);\n          pair<double, double> rng = {max(A, C), min(B, D)};\n          if ((int)ceil(rng.first) <= (int)floor(rng.second)) {\n            int mk = mask;\n            mk |= 1 << i;\n            mk |= 1 << (P + k);\n            dp[mask] = max(dp[mask], solve(mk) + 1);\n          }\n        }\n  }\n  return dp[mask];\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> N >> P;\n\n    for (int i = 0; i < N; i++)\n      cin >> ing[i];\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < P; j++)\n        cin >> pack[i][j];\n\n    int ans = 0;\n    if (N == 1) {\n      for (int i = 0; i < P; i++)\n        for (int j = 1; j <= 1000000; j++)\n          if (0.9 * j * ing[0] <= pack[0][i] &&\n              pack[0][i] <= 1.1 * j * ing[0]) {\n            ans++;\n            break;\n          }\n    } else {\n      memset(dp, -1, sizeof(dp));\n      ans = solve(0);\n    }\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int N, M;\n    cin >> N >> M;\n    char G[30][30];\n    vector<int> cnt(N, 0);\n    for (int i = 0; i < N; i++) {\n      int fill = 0;\n      char last;\n      for (int j = 0; j < M; j++) {\n        cin >> G[i][j];\n        if (G[i][j] != '?') {\n          cnt[i]++;\n          for (int k = j - 1; k >= fill; k--)\n            G[i][k] = G[i][j];\n          fill = j + 1;\n          last = G[i][j];\n        }\n      }\n      for (int j = fill; j < M; j++)\n        G[i][j] = last;\n    }\n\n    for (int i = 0; i < N; i++) {\n      if (cnt[i] == 0) {\n        int fix = 0;\n        for (int j = i - 1; j >= 0 && !fix; j--)\n          if (cnt[j]) {\n            for (int k = 0; k < M; k++)\n              G[i][k] = G[j][k];\n            fix = 1;\n          }\n        for (int j = i + 1; j < N && !fix; j++)\n          if (cnt[j]) {\n            for (int k = 0; k < M; k++)\n              G[i][k] = G[j][k];\n            fix = 1;\n          }\n      }\n    }\n\n    cout << \"Case #\" << t << \":\" << endl;\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < M; j++)\n        cout << G[i][j];\n      cout << endl;\n    }\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    long long int D, N;\n    double K[1111], S[1111];\n    cin >> D >> N;\n    long double time_fin, spd = 1e15;\n    for (int i = 0; i < N; i++) {\n      cin >> K[i] >> S[i];\n      time_fin = (D - K[i]) \/ S[i];\n      spd = min(spd, D \/ time_fin);\n    }\n\n    \/* to viajando\n    set<tuple<double,int,int>> s;\n    for (int i = 0; i < N; i++)\n        for (int j = i+1; j < N; j++)\n        {\n            int time_intersect, pos_intersect;\n            if (K[i] < K[j] && S[i] > S[j])\n            {\n                time_intersect = (K[j]-K[i])\/(S[i]-S[j]);\n                pos_intersect = K[i] + time_intersect*S[i];\n                if (pos_intersect > D) break;\n                s.insert(make_tuple(pos_intersect,i,j))\n            }\n            else if (K[i] > K[j] && S[i] < S[j])\n            {\n                time_intersect = (K[i]-K[j])\/(S[j]-S[i]);\n                pos_intersect = K[i] + time_intersect*S[i];\n                if (pos_intersect > D) break;\n                s.insert(make_tuple(pos_intersect,j,i))\n            }\n        }\n    *\/\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(10) << spd << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    if (R + Y == 0 || R + B == 0 || Y + B == 0)\n      cout << \"IMPOSSIBLE\";\n    else if (R == 0)\n      if (Y == B)\n        for (int i = 0; i < Y; i++)\n          cout << \"YB\";\n      else\n        cout << \"IMPOSSIBLE\";\n    else if (Y == 0)\n      if (R == B)\n        for (int i = 0; i < R; i++)\n          cout << \"RB\";\n      else\n        cout << \"IMPOSSIBLE\";\n    else if (B == 0)\n      if (R == Y)\n        for (int i = 0; i < R; i++)\n          cout << \"RY\";\n      else\n        cout << \"IMPOSSIBLE\";\n    else {\n      int mx = max(R, max(Y, B));\n      int mn = min(R, min(Y, B));\n      int md = N - mx - mn;\n      if (mx > N \/ 2)\n        cout << \"IMPOSSIBLE\";\n      else {\n        vector<pair<int, char>> vt(3);\n        vt[0] = {R, 'R'};\n        vt[1] = {Y, 'Y'};\n        vt[2] = {B, 'B'};\n        sort(vt.begin(), vt.end());\n        char cmx, cmn, cmd;\n        cmx = vt[2].second;\n        cmd = vt[1].second;\n        cmn = vt[0].second;\n        string S(N, '*');\n        for (int i = 0; i < mx * 2; i += 2)\n          S[i] = cmx;\n        for (int i = mx * 2; i < N; i += 2) {\n          S[i] = cmd;\n          md--;\n        }\n        for (int i = 1; i < N && md; i += 2) {\n          S[i] = cmd;\n          md--;\n        }\n        for (int i = 0; i < N; i++)\n          cout << (S[i] == '*' ? cmn : S[i]);\n      }\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"skavurskaa","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef tuple<int, int, int> T;\n\nint N, Q, adj[101][101];\nint E[101], S[101], U, V;\nmap<T, double> dp;\ndouble solve(int v, int c, int h) {\n  if (v == V)\n    return 0;\n  if (dp.find(T(v, c, h)) == dp.end()) {\n    dp[T(v, c, h)] = 1e20;\n    for (int i = 1; i <= N; i++)\n      if (adj[v][i] != -1) {\n        if (h >= adj[v][i])\n          dp[T(v, c, h)] = min(dp[T(v, c, h)], solve(i, c, h - adj[v][i]) +\n                                                   adj[v][i] \/ (double)S[c]);\n        if (E[v] >= adj[v][i])\n          dp[T(v, c, h)] = min(dp[T(v, c, h)], solve(i, v, E[v] - adj[v][i]) +\n                                                   adj[v][i] \/ (double)S[v]);\n      }\n  }\n  return dp[T(v, c, h)];\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> N >> Q;\n    for (int i = 1; i <= N; i++)\n      cin >> E[i] >> S[i];\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= N; j++)\n        cin >> adj[i][j];\n    cout << \"Case #\" << t << \":\";\n    for (int i = 0; i < Q; i++) {\n      cin >> U >> V;\n      dp.clear();\n      cout << \" \" << fixed << setprecision(10) << solve(U, U, E[U]);\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(2e5) + 555;\n\nli n;\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> n))\n    return false;\n  return true;\n}\n\nint a[20], b[20];\n\ninline void solve() {\n  for (int i = 0; i < int(20); i++)\n    a[i] = b[i] = 0;\n  int len = 0;\n  li nn = n;\n  while (n) {\n    a[len] = n % 10;\n    n \/= 10;\n    len++;\n  }\n\n  n = nn;\n\n  reverse(a, a + len);\n\n  for (int i = 0; i < len; i++) {\n    int st = (i == 0 ? 0 : b[i - 1]);\n    bool found = false;\n    for (int d = 9; d >= st; d--) {\n      for (int j = i; j < len; j++)\n        b[j] = d;\n      li val = 0;\n      for (int k = 0; k < int(len); k++)\n        val = val * 10 + b[k];\n      if (val <= n) {\n        found = true;\n        break;\n      } else {\n        for (int j = i; j < len; j++)\n          b[j] = 0;\n      }\n    }\n\n    assert(found);\n  }\n\n  li ans = 0;\n  for (int i = 0; i < int(len); i++)\n    ans = ans * 10 + b[i];\n  cout << ans << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    \/\/ cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(1111);\n\nint n, k;\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> n >> k))\n    return false;\n  return true;\n}\n\nbool used[N];\n\ninline void solve() {\n  for (int i = 0; i < int(N); i++)\n    used[i] = false;\n  used[1] = used[n + 2] = true;\n  pt ans;\n  for (int kk = 0; kk < int(k); kk++) {\n    int bst = -1;\n    int minVal = INF;\n    int maxVal = -INF;\n    int maxLen = -1;\n    for (int i = 2; i <= n + 1; i++) {\n      if (used[i])\n        continue;\n      int curL = 0, curR = 0;\n      int j = i - 1;\n      while (!used[j]) {\n        curL++;\n        j--;\n      }\n\n      j = i + 1;\n      while (!used[j]) {\n        curR++;\n        j++;\n      }\n\n      int mn = min(curL, curR);\n      int mx = max(curL, curR);\n      if (mn > maxLen) {\n        \/\/ minVal = mn;\n        maxVal = mx;\n        maxLen = mn;\n        bst = i;\n      } else if (mn == maxLen && mx > maxVal) {\n        maxVal = mx;\n        bst = i;\n      }\n    }\n\n    \/\/ cerr << \"bst == \" << bst << endl;\n    used[bst] = true;\n    int l = 0, r = 0;\n    int j = bst - 1;\n    while (!used[j]) {\n      j--;\n      l++;\n    }\n\n    j = bst + 1;\n    while (!used[j]) {\n      j++;\n      r++;\n    }\n\n    ans = pt(max(l, r), min(l, r));\n  }\n\n  cout << ans.first << ' ' << ans.second << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    \/\/ cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(2e5) + 555;\n\nstring s;\nint k;\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> s >> k))\n    return false;\n  return true;\n}\n\ninline void solve() {\n  int n = int((s).size());\n  int ans = 0;\n  for (int i = 0; i + k - 1 < n; i++) {\n    if (s[i] == '+')\n      continue;\n    ans++;\n    for (int j = i; j <= i + k - 1; j++) {\n      if (s[j] == '+')\n        s[j] = '-';\n      else\n        s[j] = '+';\n    }\n  }\n\n  bool ok = true;\n  for (int i = 0; i < int(n); i++)\n    if (s[i] == '-')\n      ok = false;\n  if (ok)\n    cout << ans << endl;\n  else\n    cout << \"IMPOSSIBLE\" << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    \/\/ cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(33);\n\nint n, m, a[N], b[N][N];\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> n >> m))\n    return false;\n  for (int i = 0; i < int(n); i++)\n    (cin >> a[i]);\n  for (int i = 0; i < int(n); i++) {\n    for (int j = 0; j < int(m); j++)\n      (cin >> b[i][j]);\n  }\n  return true;\n}\n\nbool used[N][N];\nint ans = 0;\n\ninline bool can(const vector<int> &v) {\n  \/\/ cerr << \"v to check == \" << endl;\n  \/\/ for (int x : v) cerr << x << ' '; cerr << endl;\n  for (int cnt = 1; cnt <= 1111111; cnt++) {\n    bool ok = true;\n    \/\/ cerr << \"cnt == \" << cnt << endl;\n    for (int i = 0; i < int(n); i++) {\n      \/\/\tcerr << \"ing == \" << i << endl;\n      li need = a[i] * 1LL * cnt;\n      li lf = need * 90;\n      if (lf % 100 == 0)\n        lf \/= 100;\n      else\n        lf = lf \/ 100 + 1;\n      li rg = need * 110;\n      rg \/= 100;\n      li cur = v[i];\n      \/\/ cerr << \"lf rg cur == \" << lf << ' ' << rg << ' ' << cur << endl;\n      if (!(lf <= cur && cur <= rg)) {\n        ok = false;\n        \/\/ break;\n      }\n    }\n\n    if (ok)\n      return true;\n    \/\/ if (cnt > 5) break;\n  }\n\n  \/\/ cerr << \"wtf == \" << endl;\n  return false;\n}\n\nvoid brute(int cnt, int i, int cur, vector<int> v) {\n  \/\/ cerr << \"cnt i cur == \" << cnt << ' ' << i << ' ' << cur << endl;\n  if (cnt == m) {\n    ans = max(ans, cur);\n    return;\n  }\n\n  if (i == n) {\n    cur += can(v);\n    brute(cnt + 1, 0, cur, {});\n    return;\n  }\n\n  for (int j = 0; j < int(m); j++)\n    if (!used[i][j]) {\n      used[i][j] = true;\n      v.push_back(b[i][j]);\n      brute(cnt, i + 1, cur, v);\n      v.pop_back();\n      used[i][j] = false;\n    }\n}\n\nbool good[N][N];\n\ninline void solve() {\n  for (int i = 0; i < int(N); i++)\n    for (int j = 0; j < int(N); j++)\n      good[i][j] = used[i][j] = false;\n  ans = 0;\n  \/\/ brute(0, 0, 0, {});\n  if (n == 1) {\n    for (int j = 0; j < int(m); j++)\n      ans += can(vector<int>(1, b[0][j]));\n  } else if (n == 2) {\n    for (int i = 0; i < int(m); i++)\n      for (int j = 0; j < int(m); j++)\n        good[i][j] = can({b[0][i], b[1][j]});\n    vector<vector<int>> dp((1 << m), vector<int>((1 << m), -1));\n    dp[0][0] = 0;\n    for (int mask1 = 0; mask1 < int((1 << m)); mask1++)\n      for (int mask2 = 0; mask2 < int((1 << m)); mask2++) {\n        int cur = dp[mask1][mask2];\n        if (cur < 0)\n          continue;\n        for (int i = 0; i < int(m); i++) {\n          if (mask1 & (1 << i))\n            continue;\n          for (int j = 0; j < int(m); j++) {\n            if (mask2 & (1 << j))\n              continue;\n            dp[mask1 | (1 << i)][mask2 | (1 << j)] =\n                max(dp[mask1 | (1 << i)][mask2 | (1 << j)], cur + good[i][j]);\n          }\n        }\n      }\n\n    for (int mask1 = 0; mask1 < int((1 << m)); mask1++)\n      for (int mask2 = 0; mask2 < int((1 << m)); mask2++)\n        ans = max(ans, dp[mask1][mask2]);\n  } else\n    cerr << \"bad test\" << endl;\n  cout << ans << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n  \/\/#ifdef _DEBUG\n  (freopen(\"input.txt\", \"rt\", stdin));\n  (freopen(\"output.txt\", \"wt\", stdout));\n  \/\/#endif\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  (scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n    \/\/#ifdef _DEBUG\n    cerr << \"TEST == \" << i << endl;\n    \/\/#endif\n    (read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    \/\/ cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(33);\n\nint n, m;\nchar a[N][N];\n\ninline void gen() {\n  n = 25, m = 25;\n  vector<char> v;\n  for (char c = 'A'; c <= 'Z'; c++)\n    v.push_back(c);\n  random_shuffle((v).begin(), (v).end());\n  for (int i = 1; i <= int(n); i++)\n    for (int j = 1; j <= int(m); j++) {\n      if ((rnd() % 3 == 2) && !v.empty()) {\n        a[i][j] = v.back();\n        v.pop_back();\n      } else\n        a[i][j] = '?';\n    }\n  return;\n}\n\ninline bool read() {\n  \/\/ gen(); return true;\n  if (!(cin >> n >> m))\n    return false;\n  for (int i = 1; i <= int(n); i++)\n    for (int j = 1; j <= int(m); j++)\n      assert(cin >> a[i][j]);\n  return true;\n}\n\nbool used[N][N];\n\ninline void solve() {\n  for (int i = 0; i < int(N); i++)\n    for (int j = 0; j < int(N); j++)\n      used[i][j] = false;\n  for (int ii = 1; ii <= int(n); ii++)\n    for (int jj = 1; jj <= int(m); jj++) {\n      if (used[ii][jj])\n        continue;\n      if (a[ii][jj] == '?')\n        continue;\n      \/\/ cerr << \"ii jj == \" << ii << ' ' << jj << endl;\n      int j1 = jj - 1;\n      while (j1 >= 1 && a[ii][j1] == '?')\n        j1--;\n      int j2 = jj + 1;\n      while (j2 <= m && a[ii][j2] == '?')\n        j2++;\n      j1++, j2--;\n      \/\/\tcerr << \"j1 j2 == \" << j1 << ' ' << j2 << endl;\n      int i1 = ii;\n      bool ok = true;\n      while (ok) {\n        if (i1 == 0) {\n          ok = false;\n          break;\n        }\n\n        for (int j = j1; j <= j2; j++)\n          if (a[i1][j] != '?' && a[i1][j] != a[ii][jj]) {\n            ok = false;\n            break;\n          }\n\n        if (!ok)\n          break;\n        i1--;\n      }\n\n      i1++;\n      int i2 = ii;\n      ok = true;\n      while (ok) {\n        \/\/\tcerr << \"tocheck == \" << i2 << endl;\n        if (i2 == n + 1) {\n          ok = false;\n          break;\n        }\n\n        for (int j = j1; j <= j2; j++) {\n          \/\/\tcerr << \" sym tocheck == \" << a[i2][j] << endl;\n          if (a[i2][j] != '?' && a[i2][j] != a[ii][jj]) {\n            ok = false;\n            break;\n          }\n        }\n\n        if (!ok)\n          break;\n        \/\/ cerr << \"i2 is good == \" << i2 << endl;\n        i2++;\n      }\n\n      i2--;\n\n      \/\/ cerr << \"i1 i2 == \" << i1 << ' ' << i2 << endl;\n      \/\/ cerr << \"ii jj i1 i2 j1 j2 == \" << ii << ' ' << jj << ' ' << i1 << ' '\n      \/\/ << i2 << ' ' << j1 << ' ' << j2 << endl;\n      for (int i = i1; i <= i2; i++)\n        for (int j = j1; j <= j2; j++) {\n          used[i][j] = true;\n          a[i][j] = a[ii][jj];\n        }\n\n      \/*\n      cerr << \"curtab == \" << endl;\n      forn1(iii, n) {\n              forn1(jjj, m) cerr << a[iii][jjj];\n              cerr << endl;\n      }\n      *\/\n    }\n\n  for (int i = 1; i <= int(n); i++)\n    for (int j = 1; j <= int(m); j++)\n      assert(used[i][j]);\n  cout << endl;\n  for (int i = 1; i <= int(n); i++) {\n    for (int j = 1; j <= int(m); j++)\n      cout << a[i][j];\n    cout << endl;\n  }\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    \/\/ cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(2e5) + 555;\n\nint n, D;\npt a[N];\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> D >> n))\n    return false;\n  for (int i = 0; i < int(n); i++)\n    assert(scanf(\"%d %d\", &a[i].first, &a[i].second) == 2);\n  return true;\n}\n\nld t[N];\n\ninline void solve() {\n  sort(a, a + n);\n  t[n - 1] = ld(D - a[n - 1].first) \/ a[n - 1].second;\n  for (int i = n - 2; i >= 0; i--) {\n    ld cur = ld(D - a[i].first) \/ a[i].second;\n    t[i] = max(cur, t[i + 1]);\n  }\n\n  \/*\n  v * t == D\n  v == D \/ t\n  *\/\n  ld ans = ld(D) \/ t[0];\n  cout << ans << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(2e5) + 555;\n\nint n;\nconst string types = \"ROYGBV\";\nint a[6];\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (!(cin >> n))\n    return false;\n  for (int i = 0; i < int(6); i++)\n    assert(cin >> a[i]);\n  return true;\n}\n\ninline int lf(int pos) {\n  pos--;\n  if (pos < 0)\n    pos = n - 1;\n  return pos;\n}\n\ninline int rg(int pos) {\n  pos++;\n  if (pos == n)\n    pos = 0;\n  return pos;\n}\n\ninline void solve() {\n  string ans(n, '.');\n  int lst = 0;\n  while (1) {\n    int mx = 0;\n    for (int i = 0; i < int(6); i++)\n      if (a[i] > a[mx])\n        mx = i;\n    char c = types[mx];\n    int pos = mx;\n    mx = a[mx];\n    a[pos] = 0;\n    if (mx == 0)\n      break;\n    \/\/ int tries = 0;\n    \/\/ cerr << \"pos mx c == \" << pos << ' ' << mx << ' ' << c << endl;\n    for (int kk = 0; kk < int(mx); kk++) {\n      bool has = false;\n      int tries = 0;\n      while (ans[lst] != '.' || ans[lf(lst)] == c || ans[rg(lst)] == c) {\n        tries++;\n        lst = rg(lst);\n        if (tries > 10 * n)\n          break;\n      }\n\n      if (tries > 10 * n) {\n        puts(\"IMPOSSIBLE\");\n        return;\n      }\n\n      \/\/ cerr << \"set to pos == \" << lst << endl;\n      ans[lst] = c;\n    }\n  }\n\n  cout << ans << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"SlavaSSU","func":"\n\n#include <cstdio>\n#include <fstream>\n#include <iomanip>\n#include <iostream>\n#include <sstream>\n\n\/\/#include <cstdint>\n\/\/#include <cstdlib>\n#include <cassert>\n\/\/#include <cctype>\n#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <ctime>\n#include <functional>\n#include <numeric>\n\n#include <array>\n#include <bitset>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld PI = acosl(ld(-1));\nconst ld EPS = 1e-9;\n\ntemplate <typename T> inline T sqr(const T &first) { return first * first; }\n\ntemplate <typename T> inline T abs(const T &first) {\n  return first > 0 ? first : -first;\n}\n\ninline bool inside(int first, int second, int n, int m) {\n  return first >= 1 && first <= n && second >= 1 && second <= m;\n}\n\ninline int rnd() { return abs(rand() ^ (rand() << 15)); }\n\ninline int rnd(int n) {\n  assert(n > 0);\n  return rnd() % n;\n}\n\ninline int rnd(int lf, int rg) { return lf + rnd(rg - lf + 1); }\n\ninline li rndLL() { return rnd() * 1LL * rnd() + rnd(); }\n\nconst int dx[4] = {-1, 0, +1, 0};\nconst int dy[4] = {0, +1, 0, -1};\n\nconst int dx8[8] = {-1, -1, 0, +1, +1, +1, 0, -1};\nconst int dy8[8] = {0, +1, +1, +1, 0, -1, -1, -1};\n\nconst int N = int(111);\n\nint n, q;\nint g[N][N];\npt qs[N];\nint maxdist[N], speed[N];\n\ninline void gen() { return; }\n\ninline bool read() {\n  if (scanf(\"%d %d\", &n, &q) != 2)\n    return false;\n  for (int i = 0; i < int(n); i++)\n    assert(scanf(\"%d %d\", &maxdist[i], &speed[i]) == 2);\n  for (int i = 0; i < int(n); i++)\n    for (int j = 0; j < int(n); j++)\n      assert(scanf(\"%d\", &g[i][j]) == 1);\n  for (int i = 0; i < int(q); i++) {\n    assert(scanf(\"%d %d\", &qs[i].first, &qs[i].second) == 2);\n    qs[i].first--;\n    qs[i].second--;\n  }\n  return true;\n}\n\nli d[N][N];\nld minTime[N][N];\n\ninline void Dijkstra(li *d, int s) {\n  for (int i = 0; i < int(N); i++)\n    d[i] = INF64;\n  d[s] = 0;\n  set<pair<li, int>> Q;\n  Q.insert(make_pair(0, s));\n\n  while (!Q.empty()) {\n    int v = Q.begin()->second;\n    Q.erase(Q.begin());\n    for (int i = 0; i < int(n); i++) {\n      int to = i;\n      if (g[v][to] != -1 && d[v] + g[v][to] < d[to]) {\n        Q.erase(make_pair(d[to], to));\n        d[to] = d[v] + g[v][to];\n        Q.insert(make_pair(d[to], to));\n      }\n    }\n  }\n}\n\ninline void prepareTimes() {\n  for (int i = 0; i < int(n); i++)\n    Dijkstra(d[i], i);\n  for (int i = 0; i < int(N); i++)\n    for (int j = 0; j < int(N); j++)\n      minTime[i][j] = INF64;\n  for (int i = 0; i < int(n); i++)\n    for (int j = 0; j < int(n); j++)\n      if (d[i][j] < INF64 \/ 2 && d[i][j] <= maxdist[i]) {\n        minTime[i][j] = ld(d[i][j]) \/ speed[i];\n      }\n}\n\nld dp[N][N];\nbool was[N];\n\ninline void solve() {\n  for (int i = 0; i < int(N); i++)\n    was[i] = false;\n  for (int kk = 0; kk < int(q); kk++) {\n    int s = qs[kk].first, t = qs[kk].second;\n    for (int i = 0; i < int(N); i++)\n      for (int j = 0; j < int(N); j++)\n        dp[i][j] = INF64;\n    dp[0][s] = 0;\n    for (int step = 0; step < int(N - 1); step++)\n      for (int v = 0; v < int(n); v++) {\n        ld cur = dp[step][v];\n        if (cur > INF64 \/ 2)\n          continue;\n        for (int to = 0; to < int(n); to++)\n          if (minTime[v][to] < INF64 \/ 2) {\n            dp[step + 1][to] = min(dp[step + 1][to], cur + minTime[v][to]);\n          }\n      }\n\n    ld nans = INF64;\n    for (int step = 0; step < int(N); step++)\n      nans = min(nans, dp[step][t]);\n    assert(nans < INF64 \/ 2);\n    if (kk)\n      cout << ' ';\n    cout << nans;\n  }\n  cout << endl;\n  return;\n}\n\nint main() {\n  \/\/ assert(false);\n\n  cout << setprecision(10) << fixed;\n  cerr << setprecision(10) << fixed;\n\n  srand(int(time(NULL)));\n\n  int T = 1;\n\n  assert(scanf(\"%d\", &T) == 1);\n\n  for (int i = 0; i < int(T); i++) {\n\n    assert(read());\n    \/\/ read();\n    prepareTimes();\n    cout << \"Case #\" << i + 1 << \": \";\n    solve();\n    cerr << \"curTime == \" << clock() << \" ms\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/ input reading\ntemplate <class T> vector<T> takeInput(int n) {\n  vector<T> v;\n  T a;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    v.push_back(a);\n  }\n  return v;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    string s;\n    cin >> s;\n    while (true) {\n      int idx = -1;\n      for (int i = 1; i < s.size(); i++) {\n        if (s[i] < s[i - 1]) {\n          idx = i - 1;\n          break;\n        }\n      }\n      if (idx == -1)\n        break;\n      s[idx]--;\n      for (int i = idx + 1; i < s.size(); i++)\n        s[i] = '9';\n    }\n\n    int idx;\n    for (idx = 0; s[idx] == '0'; idx++)\n      ;\n    s = s.substr(idx);\n    cout << \"Case #\" << cases << \": \" << s << endl;\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/ input reading\ntemplate <class T> vector<T> takeInput(int n) {\n  vector<T> v;\n  T a;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    v.push_back(a);\n  }\n  return v;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    long long n, k;\n    cin >> n >> k;\n    map<long long int, long long> m;\n    m[n] = 1;\n\n    long long res = -1;\n    while (true) {\n      long long key = m.rbegin()->first;\n      long long value = m.rbegin()->second;\n      if (value >= k) {\n        res = key;\n        break;\n      }\n\n      k -= value;\n\n      long long half = key \/ 2;\n      if (key % 2) {\n        m[half] += value * 2;\n      } else {\n        m[half] += value;\n        m[half - 1] += value;\n      }\n      map<long long, long long>::iterator it = m.end();\n      --it;\n      m.erase(it);\n    }\n\n    cout << \"Case #\" << cases << \": \";\n    long long left = res \/ 2;\n    long long right = res \/ 2;\n    if (res % 2 == 0)\n      right--;\n    cout << left << \" \" << right << endl;\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\n\/\/ input reading\ntemplate <class T> vector<T> takeInput(int n) {\n  vector<T> v;\n  T a;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    v.push_back(a);\n  }\n  return v;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    string s;\n    int K;\n    cin >> s >> K;\n    int res = 0;\n    for (int i = 0; i + K <= s.size(); i++) {\n      if (s[i] == '-') {\n        res++;\n        for (int j = i; j < i + K; j++) {\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n        }\n      }\n    }\n    bool ok = true;\n    for (int i = 0; i < s.size(); i++)\n      if (s[i] == '-')\n        ok = false;\n    if (ok)\n      cout << \"Case #\" << cases << \": \" << res << endl;\n    else\n      cout << \"Case #\" << cases << \": \"\n           << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint n, p;\nvector<int> R_;\nvector<int> V[60];\n\nstruct Node {\n  int l, r;\n};\n\nbool cmp(const Node &a, const Node &b) {\n  if (a.r != b.r)\n    return a.r > b.r;\n  return a.l > b.l;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    cin >> n >> p;\n    R_.clear();\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      R_.push_back(a);\n    }\n    for (int i = 0; i < n; i++)\n      V[i].clear();\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int a;\n        cin >> a;\n        V[i].push_back(a);\n      }\n    }\n    vector<int> L[55];\n    vector<int> R[55];\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        double apx = 10.0 * V[i][j] \/ 9.0 \/ R_[i];\n        int ap = (int)apx;\n        ap -= 5;\n        int minV, maxV;\n        minV = maxV = -1;\n        for (int k = 1; k <= 1000000; k++) {\n          if (k < 1)\n            continue;\n          if (10 * V[i][j] >= k * 9 * R_[i] && 10 * V[i][j] <= k * 11 * R_[i]) {\n            if (minV == -1)\n              minV = maxV = k;\n            else {\n              maxV = k;\n            }\n          } else {\n            if (10 * V[i][j] < k * 9 * R_[i])\n              break;\n          }\n        }\n        \/\/ cout << i << \" \" << j << \" \" << minV << \" \" << maxV << endl;\n        L[i].push_back(minV);\n        R[i].push_back(maxV);\n      }\n    }\n\n    int res = 0;\n    vector<Node> vn[55];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        if (L[i][j] == -1)\n          continue;\n        Node node;\n        node.l = L[i][j];\n        node.r = R[i][j];\n        vn[i].push_back(node);\n      }\n    }\n    for (int i = 0; i < n; i++)\n      sort(vn[i].begin(), vn[i].end(), cmp);\n\n    for (int j = vn[0].size() - 1; j >= 0; j--) {\n      \/\/ cout << \"j \" << j << endl;\n      int i;\n      for (i = 1; i < n; i++) {\n        int idx = -1;\n        for (int k = vn[i].size() - 1; k >= 0; k--) {\n          if (vn[i][k].l == -1)\n            continue;\n          int mini = max(vn[0][j].l, vn[i][k].l);\n          int maxi = min(vn[0][j].r, vn[i][k].r);\n          \/\/\t\tcout << i << \" \" << j << \" \" << k << \" \" << mini << \" \"\n          \/\/<<  maxi << endl;\n          if (mini <= maxi) {\n            idx = k;\n            break;\n          }\n        }\n        if (idx != -1) {\n          vn[i][idx].l = vn[i][idx].r = -1;\n        } else {\n          break;\n        }\n      }\n      \/\/ cout << \"i \" << i << endl;\n      if (i == n)\n        res++;\n    }\n    printf(\"Case #%d: %d\\n\", cases, res);\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint n, m;\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    cin >> n >> m;\n    vector<string> v;\n    for (int i = 0; i < n; i++) {\n      string s;\n      cin >> s;\n      v.push_back(s);\n    }\n\n    for (int j = 0; j < m; j++) {\n      for (int i = 0; i < n; i++) {\n        if (v[i][j] != '?') {\n          for (int k = 0; k < i; k++) {\n            if (v[k][j] == '?')\n              v[k][j] = v[i][j];\n          }\n        }\n      }\n    }\n\n    \/\/ fill bottom section\n    for (int i = 1; i < n; i++)\n      for (int j = 0; j < m; j++) {\n        if (v[i][j] == '?' && v[i - 1][j] != '?') {\n          for (int k = i; k < n; k++)\n            if (v[k][j] == '?')\n              v[k][j] = v[i - 1][j];\n        }\n      }\n\n    \/\/ fill left\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j + 1 < m; j++) {\n        if (v[i][j] == '?' && v[i][j + 1] != '?') {\n          for (int k = 0; k <= j; k++) {\n            if (v[i][k] == '?')\n              v[i][k] = v[i][j + 1];\n          }\n        }\n      }\n\n    \/\/ fill right\n    for (int i = 0; i < n; i++) {\n      for (int j = m - 1; j > 0; j--) {\n        if (v[i][j] == '?' && v[i][j - 1] != '?') {\n          for (int k = j; k < m; k++) {\n            if (v[i][k] == '?')\n              v[i][k] = v[i][j - 1];\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", cases);\n    for (int i = 0; i < n; i++)\n      cout << v[i] << endl;\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    int D, N;\n    cin >> D >> N;\n    double maxTm = 0;\n    for (int i = 0; i < N; i++) {\n      int k, s;\n      cin >> k >> s;\n      double tm = 1.0 * (D - k) \/ s;\n      if (tm > maxTm)\n        maxTm = tm;\n    }\n    double sp = D \/ maxTm;\n    printf(\"Case #%d: %.8lf\\n\", cases, sp);\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    int N;\n    int R, O, Y, G, B, V;\n    cin >> N;\n    cin >> R >> O >> Y >> G >> B >> V;\n\n    int maxi = R;\n    maxi = max(maxi, Y);\n    maxi = max(maxi, B);\n\n    bool ok = true;\n\n    if (maxi > N \/ 2)\n      ok = false;\n\n    string res = \"\";\n    if (ok == false) {\n      res = \"IMPOSSIBLE\";\n    } else {\n      char c;\n      for (int i = 0; i < N; i++)\n        res += \" \";\n      if (R == maxi)\n        c = 'R', R = 0;\n      else if (Y == maxi)\n        c = 'Y', Y = 0;\n      else\n        c = 'B', B = 0;\n      for (int i = 0; i < maxi; i++) {\n        res[i * 2] = c;\n      }\n\n      for (int i = 0; i < maxi; i++) {\n        char c;\n        int m = R;\n        c = 'R';\n        if (Y > m)\n          m = Y, c = 'Y';\n        if (B > m)\n          m = B, c = 'B';\n\n        if (c == 'R')\n          R--;\n        else if (c == 'Y')\n          Y--;\n        else if (c == 'B')\n          B--;\n\n        res[i * 2 + 1] = c;\n      }\n\n      for (int i = maxi * 2; i < N; i++) {\n        if (R > 0 && res[i - 1] != 'R')\n          res[i] = 'R', R--;\n        else if (Y > 0 && res[i - 1] != 'Y')\n          res[i] = 'Y', Y--;\n        else if (B > 0 && res[i - 1] != 'B')\n          res[i] = 'B', B--;\n      }\n    }\n\n    cout << \"Case #\" << cases << \": \" << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"sohelH","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint n, q;\nvector<int> d, s;\nint D[105][105];\n\ndouble G[105][105];\n\nvoid bfs(int u) {\n  double dp[105];\n  for (int i = 0; i < n; i++)\n    dp[i] = 1e15;\n  dp[u] = 0;\n  queue<int> Q;\n  Q.push(u);\n\n  while (!Q.empty()) {\n    int A = Q.front();\n    Q.pop();\n    if (dp[A] > d[u])\n      continue;\n    for (int i = 0; i < n; i++) {\n      if (D[A][i] > 0 && (dp[i] > dp[A] + D[A][i])) {\n        dp[i] = dp[A] + D[A][i];\n        Q.push(i);\n      }\n    }\n  }\n\n  for (int i = 0; i < n; i++) {\n    if (dp[i] <= d[u])\n      G[u][i] = 1.0 * dp[i] \/ s[u];\n  }\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int cases = 1; cases <= test; cases++) {\n    cin >> n >> q;\n    d.clear();\n    s.clear();\n    for (int i = 0; i < n; i++) {\n      int e, sp;\n      cin >> e >> sp;\n      d.push_back(e);\n      s.push_back(sp);\n    }\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        cin >> D[i][j];\n\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++) {\n        if (i == j)\n          G[i][j] = 0;\n        else\n          G[i][j] = 1e15;\n      }\n\n    for (int i = 0; i < n; i++) {\n      bfs(i);\n    }\n\n    for (int k = 0; k < n; k++)\n      for (int i = 0; i < n; i++)\n        for (int j = 0; j < n; j++) {\n          if (G[i][k] + G[k][j] < G[i][j])\n            G[i][j] = G[i][k] + G[k][j];\n        }\n    printf(\"Case #%d:\", cases);\n    while (q--) {\n      int a, b;\n      cin >> a >> b;\n      a--;\n      b--;\n      printf(\" %.8lf\", G[a][b]);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\n\/\/ How many tidy numbers are in [1..N]?\nll count_tidy(ll N) {\n  const auto log = 20;\n  auto digits = vector<int>();\n  while (N != 0) {\n    digits.push_back(int(N % 10));\n    N \/= 10;\n  }\n  digits.resize(log);\n\n  static auto dp = new ll[log][2][10];\n  memset(dp, -1, sizeof(ll) * log * 2 * 10);\n  const function<ll(int, bool, int)> f = [&](const int i, const bool tight,\n                                             const int last) {\n    if (i == -1)\n      return 1LL;\n\n    auto &result = dp[i][tight][last];\n    if (result != -1)\n      return result;\n\n    result = 0;\n    for (auto d = last; d <= 9; d++) {\n      if (tight && d > digits[i])\n        continue;\n      result += f(i - 1, tight && d == digits[i], d);\n    }\n    return result;\n  };\n  return f(log - 1, true, 0);\n}\n\nll solve_case() {\n  ll N;\n  cin >> N;\n\n  const auto goal = count_tidy(N);\n\n  auto lower = 1LL, upper = N;\n  while (lower < upper) {\n    const auto guess = (lower + upper) \/ 2;\n    if (count_tidy(guess) == goal)\n      upper = guess;\n    else\n      lower = guess + 1;\n  }\n  return lower;\n}\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (auto t = 1; t <= T; t++)\n    cout << \"Case #\" << t << \": \" << solve_case() << endl;\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nll solve_case() {\n  ll N, K;\n  cin >> N >> K;\n\n  auto seen = 0LL;\n  auto counts = map<ll, ll, greater<ll>>{{N, 1}};\n  while (true) {\n    const auto previous = counts;\n\n    counts.clear();\n    for (const auto kv : previous) {\n      const auto gap = kv.first, count = kv.second;\n      if (seen + count >= K)\n        return gap;\n      else {\n        seen += count;\n\n        const auto smaller = (gap - 1) \/ 2;\n        const auto larger = gap - 1 - smaller;\n        counts[smaller] += count;\n        counts[larger] += count;\n      }\n    }\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    const auto gap = solve_case();\n    const auto smaller = (gap - 1) \/ 2;\n    const auto larger = gap - 1 - smaller;\n    cout << larger << \" \" << smaller << endl;\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvoid solve_case() {\n  string S;\n  int K;\n  cin >> S >> K;\n  const auto N = int(S.size());\n\n  auto result = 0;\n  for (auto i = 0; i + K - 1 < N; i++) {\n    if (S[i] == '-') {\n      for (auto j = 0; j < K; j++)\n        S[i + j] = S[i + j] == '-' ? '+' : '-';\n      result++;\n    }\n  }\n\n  auto ok = true;\n  for (const auto c : S)\n    ok &= c == '+';\n  if (ok)\n    cout << result << endl;\n  else\n    cout << \"IMPOSSIBLE\" << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    solve_case();\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint fld(const int a, const int b) { return a \/ b; }\nint cld(const int a, const int b) { return (a + b - 1) \/ b; }\n\nvoid solve_case() {\n  int N, P;\n  cin >> N >> P;\n\n  auto ratatouille = vector<int>(N);\n  for (auto &x : ratatouille)\n    cin >> x;\n\n  struct Event {\n    int id, ingredient, time, time2;\n    bool start;\n  };\n  auto events = vector<Event>();\n  for (auto i = 0; i < N; i++) {\n    const auto r = ratatouille[i];\n    for (auto j = 0; j < P; j++) {\n      int q;\n      cin >> q;\n      const auto start = cld(10 * q, 11 * r), finish = fld(10 * q, 9 * r);\n      if (start <= finish) {\n        events.push_back({i * P + j, i, start, finish + 1, true});\n        events.push_back({i * P + j, i, finish + 1, 0, false});\n      }\n    }\n  }\n\n  const auto compare = [](const Event a, const Event b) {\n    if (a.time != b.time)\n      return a.time < b.time;\n    else\n      return a.start < b.start;\n  };\n  sort(begin(events), end(events), compare);\n\n  auto result = 0;\n  struct S {\n    int id, time;\n  };\n  const auto compare2 = [](const S a, const S b) { return a.time < b.time; };\n  auto active = vector<set<S, decltype(compare2)>>(\n      N, set<S, decltype(compare2)>(compare2));\n  for (const auto e : events) {\n    if (e.start) {\n      active[e.ingredient].insert({e.id, e.time2});\n\n      auto non_empty = 0;\n      for (const auto &s : active)\n        non_empty += s.size() != 0;\n      if (non_empty == N) {\n        result++;\n        for (auto &s : active)\n          s.erase(begin(s));\n      }\n    } else\n      active[e.ingredient].erase({e.id, e.time});\n  }\n  cout << result << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    solve_case();\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvoid solve_case() {\n  int R, C;\n  cin >> R >> C;\n\n  auto grid = vector<string>(R);\n  for (auto &row : grid)\n    cin >> row;\n\n  for (auto &row : grid) {\n    for (auto c = 0; c + 1 < C; c++)\n      if (row[c + 1] == '?')\n        row[c + 1] = row[c];\n    for (auto c = C - 1; c - 1 >= 0; c--)\n      if (row[c - 1] == '?')\n        row[c - 1] = row[c];\n  }\n\n  for (auto r = 0; r + 1 < R; r++)\n    if (grid[r + 1][0] == '?')\n      grid[r + 1] = grid[r];\n  for (auto r = R - 1; r - 1 >= 0; r--)\n    if (grid[r - 1][0] == '?')\n      grid[r - 1] = grid[r];\n\n  for (const auto &row : grid)\n    cout << row << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \" << endl;\n    solve_case();\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvoid solve_case() {\n  int D, N;\n  cin >> D >> N;\n\n  struct Horse {\n    int start, speed;\n  };\n  auto horses = vector<Horse>(N);\n  for (auto &h : horses)\n    cin >> h.start >> h.speed;\n\n  auto lower = 1.0, upper = 1e15;\n  for (auto iterations = 0; iterations < 100; iterations++) {\n    const auto speed = (lower + upper) \/ 2;\n\n    auto first_collision = numeric_limits<double>::infinity();\n    for (const auto h : horses)\n      if (speed > h.speed) {\n        const auto collision = h.start \/ (speed - h.speed);\n        first_collision = min(first_collision, collision);\n      }\n    if (first_collision * speed >= D)\n      lower = speed;\n    else\n      upper = speed;\n  }\n  cout << lower << endl;\n}\n\nint main() {\n  cout << fixed << setprecision(9);\n\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    solve_case();\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvoid solve_case() {\n  int N, R, O, Y, G, B, V;\n  cin >> N >> R >> O >> Y >> G >> B >> V;\n\n  struct Group {\n    int count;\n    char type;\n  };\n  auto groups = array<Group, 3>{{{R, 'R'}, {Y, 'Y'}, {B, 'B'}}};\n  sort(begin(groups), end(groups),\n       [](const Group a, const Group b) { return a.count < b.count; });\n\n  const auto place = [&](const int i) {\n    cout << groups[i].type;\n    groups[i].count--;\n  };\n\n  if (groups[2].count <= N \/ 2) {\n    while (groups[1].count > groups[0].count) {\n      place(2);\n      place(1);\n    }\n    for (auto i = 0; groups[i].count; i = 1 - i) {\n      if (groups[2].count)\n        place(2);\n      place(i);\n    }\n    cout << endl;\n  } else\n    cout << \"IMPOSSIBLE\" << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    solve_case();\n  }\n}\n"}
{"target":"spencer","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nvoid solve_case() {\n  int N, Q;\n  cin >> N >> Q;\n\n  struct Horse {\n    int max_distance, speed;\n  };\n  auto horses = vector<Horse>(N);\n  for (auto &h : horses)\n    cin >> h.max_distance >> h.speed;\n\n  auto locations = vector<ll>(N);\n  for (auto i = 0; i < N; i++) {\n    auto row = vector<int>(N);\n    for (auto &x : row)\n      cin >> x;\n    if (i != N - 1)\n      locations[i + 1] = locations[i] + row[i + 1];\n  }\n\n  int U, V;\n  cin >> U >> V;\n\n  auto dp = vector<double>(N, numeric_limits<double>::infinity());\n  dp[0] = 0;\n  for (auto i = 0; i < N; i++) {\n    for (auto j = i + 1; j < N; j++) {\n      const auto dx = locations[j] - locations[i];\n      if (dx > horses[i].max_distance)\n        break;\n      dp[j] = min(dp[j], dp[i] + double(dx) \/ horses[i].speed);\n    }\n  }\n  cout << dp[N - 1] << endl;\n}\n\nint main() {\n  cout << fixed << setprecision(9);\n\n  int T;\n  cin >> T;\n  for (auto t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \": \";\n    solve_case();\n  }\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nstring S;\n\nbool valid(string first) {\n  for (int i = 0; i < ((int)(first).size()) - 1; i++) {\n    if (first[i] > first[i + 1])\n      return false;\n  }\n  return true;\n}\nbool lessThanAllOnes(string first) {\n  for (int(i) = 0; (i) < (((int)(first).size())); ++(i)) {\n    if (first[i] > '1')\n      return false;\n    else if (first[i] < '1')\n      return true;\n  }\n  return false;\n}\nchar ans2[1005];\n\nvoid solve() {\n  cin >> S;\n  if (valid(S)) {\n    cout << S << endl;\n    return;\n  }\n  if (lessThanAllOnes(S)) {\n    for (int(i) = 0; (i) < (((int)(S).size()) - 1); ++(i)) {\n      cout << \"9\";\n    }\n    cout << endl;\n    return;\n  }\n  for (int(i) = 0; (i) < (((int)(S).size()) - 1); ++(i)) {\n    if (S[i + 1] < S[i]) {\n      ans2[i] = S[i] - 1;\n      int cur = i;\n      while (cur - 1 >= 0 && ans2[cur - 1] > ans2[cur]) {\n        ans2[cur - 1]--;\n        cur--;\n      }\n      cur++;\n      while (cur < ((int)(S).size())) {\n        ans2[cur] = '9';\n        cur++;\n      }\n      break;\n    } else {\n      ans2[i] = S[i];\n    }\n  }\n  ans2[((int)(S).size())] = '\\0';\n  cout << ans2 << endl;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<LL, LL> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nP2 get_pair(LL first) { return P2(first \/ 2, (first - 1) \/ 2); }\n\nvoid compute(P2 maxx, LL num_maxx, P2 minn, LL num_minn, LL K) {\n  if (K <= num_maxx) {\n    cout << maxx.first << \" \" << maxx.second << endl;\n    return;\n  }\n  K -= num_maxx;\n  if (K <= num_minn) {\n    cout << minn.first << \" \" << minn.second << endl;\n    return;\n  }\n  K -= num_minn;\n  map<P2, LL> cnt;\n  if (num_maxx && maxx.first)\n    cnt[get_pair(maxx.first)] += num_maxx;\n  if (num_maxx && maxx.second)\n    cnt[get_pair(maxx.second)] += num_maxx;\n  if (num_minn && minn.first)\n    cnt[get_pair(minn.first)] += num_minn;\n  if (num_minn && minn.second)\n    cnt[get_pair(minn.second)] += num_minn;\n  P2 n_maxx = P2(-1, -1);\n  LL n_num_maxx = 0;\n  P2 n_minn = P2(-1, -1);\n  LL n_num_minn = 0;\n  for (auto it = cnt.begin(); it != cnt.end(); it++) {\n    if (n_num_minn == 0) {\n      n_num_minn = it->second;\n      n_minn = it->first;\n    } else {\n      n_num_maxx = it->second;\n      n_maxx = it->first;\n    }\n  }\n  compute(n_maxx, n_num_maxx, n_minn, n_num_minn, K);\n}\n\nLL N, K;\n\nvoid solve() {\n  cin >> N >> K;\n  compute(get_pair(N), 1, P2(0, 0), 0, K);\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nstring S;\nint K;\n\nvoid solve() {\n  cin >> S >> K;\n  int N = ((int)(S).size());\n  int ans = 0;\n  for (int i = 0; i < N - K + 1; i++) {\n    if (S[i] == '-') {\n      for (int j = 0; j < K; j++) {\n        if (S[i + j] == '-') {\n          S[i + j] = '+';\n        } else {\n          S[i + j] = '-';\n        }\n      }\n      ans++;\n    }\n  }\n  bool good = true;\n  for (int i = 0; i < N; i++) {\n    if (S[i] == '-')\n      good = false;\n  }\n  if (good) {\n    cout << ans << endl;\n  } else {\n    cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nconst int MAXN = 55;\nconst int MAXP = 55;\nint N, P;\nint in[MAXN];\nint gram[MAXN][MAXP];\nint cur[MAXN];\n\nvoid solve() {\n\n  cin >> N >> P;\n  for (int(i) = 0; (i) < (N); ++(i))\n    cin >> in[i];\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    for (int(j) = 0; (j) < (P); ++(j)) {\n      cin >> gram[i][j];\n    }\n  }\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    sort(gram[i], gram[i] + P);\n  }\n  memset(cur, 0, sizeof(cur));\n  int ans = 0;\n\n  int maxx = in[0];\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    maxx = max(maxx, in[i]);\n  }\n  for (int servings = 1; servings <= 2000000 \/ maxx; servings++) {\n    for (int(i) = 0; (i) < (N); ++(i)) {\n      while (cur[i] < P && gram[i][cur[i]] * 100 < 90 * in[i] * servings)\n        cur[i]++;\n    }\n    bool good = true;\n    for (int(i) = 0; (i) < (N); ++(i)) {\n      if (cur[i] >= P) {\n        good = false;\n        break;\n      }\n    }\n    if (!good)\n      break;\n    bool succ = true;\n    for (int(i) = 0; (i) < (N); ++(i)) {\n      if (gram[i][cur[i]] * 100 > 110 * in[i] * servings) {\n        succ = false;\n        break;\n      }\n    }\n    if (succ) {\n      ans++;\n      for (int(i) = 0; (i) < (N); ++(i))\n        cur[i]++;\n      servings--;\n    }\n  }\n  cout << ans << endl;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nconst int MAXN = 25;\n\nstring in[MAXN];\nstring ans[MAXN];\n\nvoid solve() {\n  int R, C;\n  cin >> R >> C;\n  for (int(i) = 0; (i) < (R); ++(i)) {\n    cin >> in[i];\n    ans[i] = in[i];\n  }\n  for (int(i) = 0; (i) < (R); ++(i)) {\n    for (int(j) = 0; (j) < (C); ++(j)) {\n      if (in[i][j] != '?') {\n        \/\/                int rr = C - 1;\n        \/\/                int ll = 0;\n        int bb = R - 1;\n        for (int i2 = i + 1; i2 < R; i2++) {\n          for (int j2 = j; j2 < C; j2++) {\n            if (in[i2][j2] != '?' && in[i2][j2] != in[i][j]) {\n              bb = min(bb, i2 - 1);\n            }\n          }\n        }\n        int rr = C - 1;\n        for (int j2 = j + 1; j2 < C; j2++) {\n          for (int i2 = 0; i2 < R; i2++) {\n            if (in[i2][j2] != '?' && in[i2][j2] != in[i][j]) {\n              rr = min(rr, j2 - 1);\n            }\n          }\n        }\n        for (int i2 = i; i2 <= bb; i2++) {\n          for (int j2 = j; j2 <= rr; j2++) {\n            ans[i2][j2] = in[i][j];\n          }\n        }\n      }\n    }\n  }\n  for (int(i) = 0; (i) < (R); ++(i)) {\n    for (int(j) = 0; (j) < (C); ++(j)) {\n      if (i && ans[i - 1][j] != '?' && ans[i][j] == '?') {\n        ans[i][j] = ans[i - 1][j];\n      }\n    }\n  }\n  \/\/ REP(i, R)\n  \/\/     cout << in[i] << endl;\n  for (int(i) = 0; (i) < (R); ++(i)) {\n    for (int(j) = 0; (j) < (C); ++(j)) {\n      if (ans[i][j] == '?') {\n        char color = '?';\n        for (int j2 = j; j2 < C && color == '?'; j2++) {\n          for (int i2 = i; i2 < R && color == '?'; i2++) {\n            if (ans[i2][j2] != '?') {\n              color = ans[i2][j2];\n            }\n          }\n        }\n        ans[i][j] = color;\n      }\n    }\n  }\n  for (int(i) = 0; (i) < (R); ++(i))\n    cout << ans[i] << endl;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \":\\n\";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nconst int MAXN = 1005;\n\nint D, N;\nint K[MAXN];\nint S[MAXN];\n\nvoid solve() {\n  cin >> D >> N;\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    cin >> K[i] >> S[i];\n  }\n  double tt = (D - K[0]) * 1.0 \/ S[0];\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    maxa(tt, (D - K[i]) * 1.0 \/ S[i]);\n  }\n  printf(\"%.9lf\\n\", D \/ tt);\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, char> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nint N, R, O, Y, G, B, V;\nint B2, R2, Y2;\n\nvoid solve() {\n  cin >> N >> R >> O >> Y >> G >> B >> V;\n  if (B < O || R < G || Y < V) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  if (B == O && B) {\n    if (B + O == N) {\n      for (int(i) = 0; (i) < (B); ++(i)) {\n        cout << \"BO\";\n      }\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << endl;\n    return;\n  }\n  if (R == G && R) {\n    if (R + G == N) {\n      for (int(i) = 0; (i) < (R); ++(i)) {\n        cout << \"RG\";\n      }\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << endl;\n    return;\n  }\n  if (Y == V && Y) {\n    if (Y + V == N) {\n      for (int(i) = 0; (i) < (Y); ++(i)) {\n        cout << \"YV\";\n      }\n    } else {\n      cout << \"IMPOSSIBLE\";\n    }\n    cout << endl;\n    return;\n  }\n  B -= O;\n  R -= G;\n  Y -= V;\n  P2 in[3];\n  in[0] = P2(R, 'R');\n  in[1] = P2(B, 'B');\n  in[2] = P2(Y, 'Y');\n  sort(in, in + 3);\n  if (in[2].first > in[0].first + in[1].first) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  string ans = \"\";\n  for (int(i) = 0; (i) < (in[2].first); ++(i)) {\n    ans += in[2].second;\n    if (in[1].first) {\n      ans += in[1].second;\n      in[1].first--;\n    } else {\n      ans += in[0].second;\n      in[0].first--;\n    }\n  }\n  \/\/ cout << ans << endl;\n  string ans2 = \"\";\n  while (in[0].first) {\n    ans2 += ans.substr(0, 2);\n    ans2 += in[0].second;\n    in[0].first--;\n    ans = ans.substr(2);\n  }\n  ans2 += ans;\n  for (int(i) = 0; (i) < (((int)(ans2).size())); ++(i)) {\n    if (O && ans2[i] == 'B') {\n      for (int(j) = 0; (j) < (O); ++(j)) {\n        printf(\"BO\");\n      }\n      O = 0;\n    } else if (G && ans2[i] == 'R') {\n      for (int(j) = 0; (j) < (G); ++(j)) {\n        printf(\"RG\");\n      }\n      G = 0;\n    } else if (V && ans2[i] == 'Y') {\n      for (int(j) = 0; (j) < (V); ++(j)) {\n        printf(\"YV\");\n      }\n      V = 0;\n    }\n    printf(\"%c\", ans2[i]);\n  }\n  cout << endl;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \": \";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"sping128","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> P2;\ntemplate <class A, class B> inline bool mina(A &first, B second) {\n  return (first > second) ? (first = second, 1) : 0;\n}\ntemplate <class A, class B> inline bool maxa(A &first, B second) {\n  return (first < second) ? (first = second, 1) : 0;\n}\n\nconst int MAXN = 105;\n\nint N, Q;\nint E[MAXN], S[MAXN];\nLL dist[MAXN][MAXN];\n\ndouble min_cost[MAXN];\n\nP2 queries[MAXN];\n\nvoid solve() {\n  cin >> N >> Q;\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    cin >> E[i] >> S[i];\n    min_cost[i] = 1e15;\n  }\n  for (int(i) = 0; (i) < (N); ++(i)) {\n    for (int(j) = 0; (j) < (N); ++(j)) {\n      cin >> dist[i][j];\n      if (dist[i][j] == -1) {\n        dist[i][j] = (0x3f3f3f3f);\n      }\n    }\n  }\n  for (int(i) = 0; (i) < (Q); ++(i)) {\n    cin >> queries[i].first >> queries[i].second;\n    queries[i].first--;\n    queries[i].second--;\n  }\n  for (int(k) = 0; (k) < (N); ++(k)) {\n    for (int(i) = 0; (i) < (N); ++(i)) {\n      for (int(j) = 0; (j) < (N); ++(j)) {\n        mina(dist[i][j], dist[i][k] + dist[k][j]);\n      }\n    }\n  }\n  min_cost[0] = 0.0;\n  for (int i = 1; i < N; i++) {\n    for (int j = 0; j < i; j++) {\n      if (dist[j][i] <= E[j]) {\n        double nx = min_cost[j] + dist[j][i] * 1.0 \/ S[j];\n        mina(min_cost[i], nx);\n      }\n    }\n  }\n  \/\/  cout << queries[0].y << endl;\n  for (int(i) = 0; (i) < (Q); ++(i)) {\n    printf(\" %.9lf\", min_cost[queries[i].second]);\n  }\n  cout << endl;\n}\n\nint main() {\n  int test;\n  cin >> test;\n  for (int(tt) = 0; (tt) < (test); ++(tt)) {\n    cout << \"Case #\" << (tt + 1) << \":\";\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  char str[30], *start;\n  int n, T;\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\" %s\", str);\n    n = strlen(str);\n    for (int i = 0; i + 1 < n; i++) {\n      if (str[i] > str[i + 1]) {\n        str[i]--;\n        while (i > 0 && str[i] < str[i - 1]) {\n          i--;\n          str[i]--;\n        }\n        for (int j = i + 1; j < n; j++) {\n          str[j] = '9';\n        }\n        break;\n      }\n    }\n    start = str;\n    while (start[0] == '0')\n      start++;\n    printf(\"Case #%d: %s\\n\", caseNo, start);\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll, ll> ii;\n\nstruct config {\n  ll L, count;\n  config(ll _L, ll _c) : L(_L), count(_c) {}\n};\n\nll N, K;\n\nbool operator<(config a, config b) { return a.L > b.L; }\n\nll simulate() {\n  set<config> values;\n  set<config>::iterator it;\n  values.insert(config(N, 1));\n  config cur(0, 0);\n  ll tore, prev, L, S[2];\n  K--;\n  while (K > 0 && !values.empty()) {\n    cur = *(values.begin());\n    values.erase(values.begin());\n    L = cur.L;\n    tore = min(K, cur.count);\n    \/\/ printf(\"%lld people go into size %lld\\n\", tore, L);\n    K -= tore;\n    if (cur.count > tore) {\n      cur.count -= tore;\n      values.insert(cur);\n    }\n    if (L % 2 == 0) {\n      S[0] = L \/ 2 - 1;\n      S[1] = L \/ 2;\n    } else {\n      S[0] = L \/ 2;\n      S[1] = L \/ 2;\n    }\n    for (int i = 0; i < 2; i++) {\n      L = S[i];\n      if (L == 0)\n        continue;\n      it = values.find(config(L, 0));\n      if (it == values.end()) {\n        prev = 0;\n      } else {\n        prev = it->count;\n        values.erase(it);\n      }\n      values.insert(config(L, tore + prev));\n    }\n  }\n  return values.begin()->L;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  ll L, S[2];\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%lld %lld\", &N, &K);\n    L = simulate();\n    if (L % 2 == 0) {\n      S[0] = L \/ 2 - 1;\n      S[1] = L \/ 2;\n    } else {\n      S[0] = L \/ 2;\n      S[1] = L \/ 2;\n    }\n    printf(\"Case #%d: %lld %lld\\n\", caseNo, S[1], S[0]);\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T, K, n, ans;\n  char str[1009];\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\" %s %d\", str, &K);\n    n = strlen(str);\n    ans = 0;\n    for (int i = 0; i < n - K + 1; i++) {\n      if (str[i] == '-') {\n        for (int j = 0; j < K; j++) {\n          str[i + j] = (str[i + j] == '-' ? '+' : '-');\n        }\n        ans++;\n      }\n    }\n    for (int i = n - K + 1; i < n; i++)\n      if (str[i] == '-')\n        ans = -1;\n    if (ans < 0)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", caseNo);\n    else\n      printf(\"Case #%d: %d\\n\", caseNo, ans);\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint N, P, R[60];\n\nbool can(const int i, int n, int am) {\n  int ram = n * R[i];\n  if (ram - (ram \/ 10) <= am && ram + (ram \/ 10) >= am)\n    return true;\n  else\n    return false;\n}\n\nvector<int> nrat(const int i, int am) {\n  vector<int> ans;\n  int n = am \/ R[i];\n  for (int a = n - 3; a <= n + 3; a++) {\n    if (can(i, a, am))\n      ans.push_back(a);\n  }\n  return ans;\n}\n\nvector<int> Q[60][1000009], Nrat[60][60];\nbool used[60][60];\ntypedef pair<int, int> ii;\nset<int> quant;\n\nbool comp(vector<int> &a, vector<int> &b) {\n  if (a.size() != b.size())\n    return a.size() < a.size();\n  for (int i = 0; i < (int)a.size(); i++) {\n    if (a[i] != b[i])\n      return a[i] < b[i];\n  }\n  return false;\n}\n\nbool count(vector<int> &v, int a) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    if (a == v[i])\n      return true;\n  }\n  return false;\n}\n\nint main() {\n  int T, x;\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%d %d\", &N, &P);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d\", &R[i]);\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        scanf(\"%d\", &x);\n        Nrat[i][j] = nrat(i, x);\n        for (int k = 0; k < (int)Nrat[i][j].size(); k++) {\n          quant.insert(Nrat[i][j][k]);\n        }\n        sort(Nrat[i], Nrat[i] + P, comp);\n      }\n    }\n    int ans = 0;\n    memset(&used, false, sizeof used);\n    for (set<int>::iterator it = quant.begin(); it != quant.end();) {\n      int a = *it;\n      vector<ii> way;\n      for (int i = 0; i < N; i++) {\n        for (int j = 0; j < P; j++) {\n          if (!used[i][j] && count(Nrat[i][j], a)) {\n            way.push_back(ii(i, j));\n            break;\n          }\n        }\n      }\n      if ((int)way.size() == N) {\n        ans++;\n        for (int i = 0; i < N; i++) {\n          used[way[i].first][way[i].second] = true;\n        }\n      } else\n        it++;\n    }\n    printf(\"Case #%d: %d\\n\", caseNo, ans);\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar board[30][30];\nint R, C;\n\nbool nocolumn(int j) {\n  for (int i = 0; i < R; i++) {\n    if (board[i][j] != '?')\n      return false;\n  }\n  return true;\n}\n\nvoid copycolumn(int j, int jf) {\n  for (int i = 0; i < R; i++) {\n    board[i][j] = board[i][jf];\n  }\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%d %d\", &R, &C);\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        scanf(\" %c\", &board[i][j]);\n      }\n    }\n    for (int j = 0; j < C; j++) {\n      if (nocolumn(j)) {\n        bool switched = false;\n        for (int jl = j - 1; jl >= 0; jl--) {\n          if (!nocolumn(jl)) {\n            copycolumn(j, jl);\n            switched = true;\n            break;\n          }\n        }\n        if (switched)\n          continue;\n        for (int jl = j + 1; jl < C; jl++) {\n          if (!nocolumn(jl)) {\n            copycolumn(j, jl);\n            switched = true;\n            break;\n          }\n        }\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (board[i][j] == '?')\n          continue;\n        int ni = i - 1;\n        while (ni >= 0 && board[ni][j] == '?') {\n          board[ni][j] = board[ni + 1][j];\n          ni--;\n        }\n        ni = i + 1;\n        while (ni < R && board[ni][j] == '?') {\n          board[ni][j] = board[ni - 1][j];\n          ni++;\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", caseNo);\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        printf(\"%c\", board[i][j]);\n      }\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T, N;\n  double D, K, S, t, mt, ans;\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%lf %d\", &D, &N);\n    mt = 0.0;\n    while (N--) {\n      scanf(\"%lf %lf\", &K, &S);\n      t = (D - K) \/ S;\n      mt = max(mt, t);\n    }\n    ans = D \/ mt;\n    printf(\"Case #%d: %.6f\\n\", caseNo, ans);\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint T, N, R, O, Y, G, B, V, caseNo;\n\nbool specialcase() {\n  if (G == R && G > 0) {\n    printf(\"Case #%d: \", caseNo);\n    if (G + R == N) {\n      for (int i = 0; i < R; i++)\n        printf(\"RG\");\n      printf(\"\\n\");\n    } else\n      printf(\"IMPOSSIBLE\\n\");\n    return true;\n  }\n  if (G > R) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", caseNo);\n    return true;\n  }\n  if (Y == V && Y > 0) {\n    printf(\"Case #%d: \", caseNo);\n    if (V + Y == N) {\n      for (int i = 0; i < Y; i++)\n        printf(\"YV\");\n      printf(\"\\n\");\n    } else\n      printf(\"IMPOSSIBLE\\n\");\n    return true;\n  }\n  if (V > Y) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", caseNo);\n    return true;\n  }\n  if (O == B && O > 0) {\n    printf(\"Case #%d: \", caseNo);\n    if (O + B == N) {\n      for (int i = 0; i < B; i++)\n        printf(\"OB\");\n      printf(\"\\n\");\n    } else\n      printf(\"IMPOSSIBLE\\n\");\n    return true;\n  }\n  if (O > B) {\n    printf(\"Case #%d: IMPOSSIBLE\\n\", caseNo);\n    return true;\n  }\n  return false;\n}\n\nchar lastprinted;\n\nvoid printred() {\n  if (G > 0) {\n    printf(\"RGR\");\n    G--;\n  } else\n    printf(\"R\");\n  R--;\n  lastprinted = 'r';\n}\n\nvoid printyellow() {\n  if (V > 0) {\n    printf(\"YVY\");\n    V--;\n  } else\n    printf(\"Y\");\n  Y--;\n  lastprinted = 'y';\n}\n\nvoid printblue() {\n  if (O > 0) {\n    printf(\"BOB\");\n    O--;\n  } else\n    printf(\"B\");\n  B--;\n  lastprinted = 'b';\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  for (caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n    if (specialcase())\n      continue;\n    R -= G;\n    Y -= V;\n    B -= O;\n    if (R > Y + B || Y > R + B || B > R + Y) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", caseNo);\n      continue;\n    }\n    lastprinted = 'a';\n    printf(\"Case #%d: \", caseNo);\n    if (R >= Y && R >= B) {\n      while (R > 0) {\n        printred();\n        if (Y > B)\n          printyellow();\n        else\n          printblue();\n      }\n      if (B > Y)\n        printblue();\n      while (B > 0) {\n        bool first = (lastprinted != 'b');\n        if (first)\n          printblue();\n        printyellow();\n        if (!first)\n          printblue();\n      }\n    } else if (B >= R && B >= Y) {\n      while (B > 0) {\n        printblue();\n        if (R > Y)\n          printred();\n        else\n          printyellow();\n      }\n      if (R > Y)\n        printred();\n      while (R > 0) {\n        bool first = (lastprinted != 'r');\n        if (first)\n          printred();\n        printyellow();\n        if (!first)\n          printred();\n      }\n    } else if (Y >= R && Y >= B) {\n      while (Y > 0) {\n        printyellow();\n        if (R > B)\n          printred();\n        else\n          printblue();\n      }\n      if (R > B)\n        printred();\n      while (R > 0) {\n        bool first = (lastprinted != 'r');\n        if (first)\n          printred();\n        printblue();\n        if (!first)\n          printred();\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"splucs","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nll dist[109][109], E[109], S[109];\nint N;\ndouble t[109][109];\n\nvoid floydwarshall1() {\n  for (int k = 1; k <= N; k++)\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= N; j++)\n        dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n}\n\nvoid floydwarshall2() {\n  for (int k = 1; k <= N; k++)\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= N; j++)\n        t[i][j] = min(t[i][j], t[i][k] + t[k][j]);\n}\n\nint main() {\n  int T, Q, U, V;\n  scanf(\"%d\", &T);\n  for (int caseNo = 1; caseNo <= T; caseNo++) {\n    scanf(\"%d %d\", &N, &Q);\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%I64d %I64d\", &E[i], &S[i]);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        scanf(\"%I64d\", &dist[i][j]);\n        if (dist[i][j] == -1)\n          dist[i][j] = (1ll << 60);\n      }\n    }\n    floydwarshall1();\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        if (dist[i][j] > E[i])\n          t[i][j] = 1e+14;\n        else\n          t[i][j] = dist[i][j] * 1.0 \/ S[i];\n      }\n    }\n    floydwarshall2();\n    \/*for(int i=1; i<=N; i++){\n            for(int j=1; j<=N; j++){\n                    printf(\" %.3f\", t[i][j]);\n            }\n            printf(\"\\n\");\n    }*\/\n    printf(\"Case #%d:\", caseNo);\n    while (Q--) {\n      scanf(\"%d %d\", &U, &V);\n      printf(\" %.7f\", t[U][V]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar s[32];\nint num[32];\nint ans[32];\nint Min[32];\n\nint len = 0;\n\nbool dfs(int pos, int Min, bool Any) {\n  if (pos == len)\n    return 1;\n\n  if (Any) {\n    ans[pos] = 9;\n    return dfs(pos + 1, Min, Any);\n  } else {\n    for (int i = num[pos]; i >= Min; i--) {\n      if (dfs(pos + 1, i, i != num[pos])) {\n        ans[pos] = i;\n        return 1;\n      }\n    }\n\n    return 0;\n  }\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int cas = 0;\n  while (t--) {\n    cas++;\n\n    scanf(\"%s\", s);\n    len = strlen(s);\n\n    for (int i = 0; i < len; i++) {\n      num[i] = s[i] - '0';\n    }\n\n    dfs(0, 0, 0);\n\n    printf(\"Case #%d: \", cas);\n\n    bool flag = 0;\n    for (int i = 0; i < len; i++) {\n      if (ans[i]) {\n        flag = 1;\n      }\n\n      if (!flag && !ans[i])\n        continue;\n\n      cout << ans[i];\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  freopen(\"C-small-1-attempt2.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt2.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int cas = 0;\n  while (t--) {\n    cas++;\n\n    long long n, k;\n    cin >> n >> k;\n\n    while (k > 1) {\n      \/\/ cout<<n<<\" \"<<k<<endl;\n      if (n & 1) {\n        n >>= 1;\n        k >>= 1;\n      } else {\n        n >>= 1;\n        if (k & 1) {\n          n--;\n        }\n        k >>= 1;\n      }\n    }\n    printf(\"Case #%d: \", cas);\n    cout << n \/ 2 << \" \" << (n - 1) \/ 2 << endl;\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar s[1010];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int cas = 0;\n  while (t--) {\n    cas++;\n\n    scanf(\"%s\", s);\n    int k;\n    cin >> k;\n\n    int n = strlen(s);\n\n    int ans = 0;\n    for (int i = 0; i <= n - k; i++) {\n      if (s[i] == '+') {\n      } else {\n        ans++;\n        for (int j = 0; j < k; j++) {\n          if (s[i + j] == '+') {\n            s[i + j] = '-';\n          } else {\n            s[i + j] = '+';\n          }\n        }\n      }\n    }\n\n    bool ok = 1;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == '-') {\n        ok = 0;\n      }\n    }\n\n    printf(\"Case #%d: \", cas);\n    if (ok) {\n      cout << ans << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint r[55];\nint q[55][55];\n\nint match[8];\n\nint n, p;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n  int cas = 0;\n  while (t--) {\n    cas++;\n    cin >> n >> p;\n\n    for (int i = 0; i < p; i++) {\n      match[i] = i;\n    }\n\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n      }\n    }\n\n    int ans = 0;\n\n    if (n == 1) {\n      int tmp = 0;\n      for (int i = 0; i < p; i++) {\n        int val0 = q[0][i];\n\n        int mn = floor((double)val0 \/ r[0]);\n        int mx = ceil((double)val0 \/ r[0]);\n        if (mn > mx) {\n          swap(mn, mx);\n        }\n\n        for (int j = mn; j <= mx; j++) {\n          if (r[0] * j * 0.9 <= val0 && r[0] * j * 1.1 >= val0) {\n            tmp++;\n            break;\n          }\n        }\n        ans = max(tmp, ans);\n      }\n    } else if (n == 2) {\n      while (1) {\n\n        int tmp = 0;\n        for (int i = 0; i < p; i++) {\n\n          int val0 = q[0][i];\n          int val1 = q[1][match[i]];\n\n          int mn = min(floor((double)val0 \/ r[0]), floor((double)val1 \/ r[1]));\n          int mx = max(ceil((double)val0 \/ r[0]), ceil((double)val1 \/ r[1]));\n          if (mn > mx) {\n            swap(mn, mx);\n          }\n\n          for (int j = mn; j <= mx; j++) {\n            if (r[0] * j * 0.9 <= val0 && r[0] * j * 1.1 >= val0) {\n              if (r[1] * j * 0.9 <= val1 && r[1] * j * 1.1 >= val1) {\n                tmp++;\n                break;\n              }\n            }\n          }\n          ans = max(tmp, ans);\n        }\n\n        if (next_permutation(match, match + p) == false) {\n          break;\n        }\n      }\n    }\n\n    printf(\"Case #%d: \", cas);\n\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint r, c;\n\nchar mp[33][33];\nbool vis[33][33];\n\n\/*\nbool test(char ch,int mnr,int mnc,int mxr,int mxc){\n        bool ok = 1;\n        for(int i=mnr;i<=mxr;i++){\n                for(int j=mnc;j<=mxc;j++){\n                        if(mp[i][j] == '?' || mp[i][j] == ch){\n                        }else{\n                                ok = 0;\n                        }\n                }\n        }\n\n        if(!ok){\n                return 0;\n        }\n        for(int i=mnr;i<=mxr;i++){\n                for(int j=mnc;j<=mxc;j++){\n                        if(mp[i][j] == '?' ){\n                                mp[i][j] = ch;\n                                vis[i][j] = 1;\n                        }\n                }\n        }\n        return 1;\n}\n\nvoid solve(char ch,int mnr,int mnc,int mxr,int mxc){\n        for(;;){\n                if(mnr == 1){\n                        break;\n                }\n                mnr--;\n                if(test(ch,mnr,mnc,mxr,mxc)){\n                        \/\/ go on\n                }else{\n                        mnr++;\n                        break;\n                }\n        }\n\n        for(;;){\n                if(mnc == 1){\n                        break;\n                }\n                mnc--;\n                if(test(ch,mnr,mnc,mxr,mxc)){\n                        \/\/ go on\n                }else{\n                        mnc++;\n                        break;\n                }\n\n\n        }\n\n        for(;;){\n                if(mxr == r){\n                        break;\n                }\n                mxr++;\n                if(test(ch,mnr,mnc,mxr,mxc)){\n                        \/\/ go on\n                }else{\n                        mxr--;\n                        break;\n                }\n\n\n        }\n\n        for(;;){\n                if(mxc == c){\n                        break;\n                }\n                mxc++;\n                if(test(ch,mnr,mnc,mxr,mxc)){\n                        \/\/ go on\n                }else{\n                        mxc--;\n                        break;\n                }\n\n\n        }\n}*\/\n\nvoid solve(int mnr, int mnc, int mxr, int mxc) {\n\n  int pr1 = 0;\n  int pc1 = 0;\n  int pr2 = 0;\n  int pc2 = 0;\n  char ch1;\n\n  for (int rr = mnr; rr <= mxr; rr++) {\n    for (int cc = mnc; cc <= mxc; cc++) {\n      if (mp[rr][cc] != '?') {\n        if (pr1 == 0) {\n          pr1 = rr;\n          pc1 = cc;\n          ch1 = mp[rr][cc];\n        } else {\n          pr2 = rr;\n          pc2 = cc;\n          goto outter;\n        }\n      }\n    }\n  }\noutter:\n  if (pr2 == 0) {\n    for (int rr = mnr; rr <= mxr; rr++) {\n      for (int cc = mnc; cc <= mxc; cc++) {\n        mp[rr][cc] = ch1;\n      }\n    }\n  } else {\n    if (pr1 != pr2) {\n      solve(mnr, mnc, pr1, mxc);\n      solve(pr1 + 1, mnc, mxr, mxc);\n    } else {\n      solve(mnr, mnc, mxr, pc1);\n      solve(mnr, pc1 + 1, mxr, mxc);\n    }\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"A-small-attempt1.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  int cas = 0;\n  while (t--) {\n    cas++;\n    memset(vis, 0, sizeof(vis));\n    cin >> r >> c;\n    for (int i = 1; i <= r; i++) {\n      scanf(\"%s\", mp[i] + 1);\n    }\n\n    solve(1, 1, r, c);\n\n    printf(\"Case #%d:\\n\", cas);\n    for (int i = 1; i <= r; i++) {\n      printf(\"%s\\n\", mp[i] + 1);\n    }\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n  int cas = 0;\n\n  while (t--) {\n    cas++;\n    double len;\n    int n;\n    cin >> len >> n;\n\n    double time = 0;\n\n    for (int i = 1; i <= n; i++) {\n      double k, s;\n      cin >> k >> s;\n\n      time = max(time, (len - k) \/ s);\n    }\n\n    double v = len \/ time;\n    printf(\"Case #%d: %.6f\\n\", cas, v);\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar chs[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\nmap<char, int> mp;\n\nstruct Color {\n  int val;\n  char col;\n  bool operator<(const Color &o) const {\n    return (val * 10 + mp[col]) > (o.val * 10 + mp[o.col]);\n  }\n} color[6];\n\nchar ans[1005];\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n\n  mp['R'] = 2;\n  mp['Y'] = 2;\n  mp['B'] = 2;\n\n  mp['O'] = 1;\n  mp['G'] = 1;\n  mp['V'] = 1;\n\n  int t;\n  cin >> t;\n  int cas = 0;\n\n  while (t--) {\n    cas++;\n    memset(ans, 0, sizeof(ans));\n\n    int n;\n    cin >> n;\n\n    for (int i = 0; i < 6; i++) {\n      cin >> color[i].val;\n      color[i].col = chs[i];\n    }\n\n    sort(color, color + 6);\n\n    if (color[0].val > (n \/ 2)) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n      continue;\n    }\n\n    int pos = 0;\n    while (color[0].val--) {\n      ans[pos] = color[0].col;\n      pos += 2;\n    }\n\n    pos--;\n    for (; pos < n; pos += 2) {\n      if (color[1].val) {\n        ans[pos] = color[1].col;\n        color[1].val--;\n      }\n    }\n\n    for (int i = 0; i < n; i++) {\n      if (ans[i] == 0) {\n        if (color[1].val > 0) {\n          color[1].val--;\n          ans[i] = color[1].col;\n        } else {\n          ans[i] = color[2].col;\n        }\n      }\n    }\n\n    ans[n] = '\\0';\n\n    printf(\"Case #%d: %s\\n\", cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"squeespoon","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 105;\nconst int INF = 2e9;\n\nint n, q;\n\nint e[maxn]; \/\/\t\u8010\u529b\nint s[maxn]; \/\/\t\u901f\u5ea6\n\nint d[maxn][maxn];\n\nint dd[maxn][maxn];\n\nint needEn[maxn];\n\nvoid floyd() {\n  for (int k = 1; k <= n; k++) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        if (dd[i][k] != -1 && dd[k][j] != -1) {\n          if (dd[i][j] == -1) {\n            dd[i][j] = dd[i][k] + dd[k][j];\n          } else {\n            dd[i][j] = min(dd[i][k] + dd[k][j], dd[i][j]);\n          }\n        }\n      }\n    }\n  }\n}\n\ndouble ans[maxn][1005];\n\nstruct node {\n  int uu;\n  int speed;\n  int en;\n  double time;\n  node(int uu, int speed, int en, double time)\n      : uu(uu), speed(speed), en(en), time(time) {}\n  node() {}\n};\n\nvoid spfa(int u, int v) {\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= 1000; j++) {\n      ans[i][j] = 1e18;\n    }\n  }\n\n  ans[u][s[u]] = 0;\n  queue<node> que;\n\n  que.push(node(u, s[u], e[u], 0));\n\n  while (que.size()) {\n    node cur = que.front();\n    que.pop();\n    \/\/ cout<<\"cur node \"<<cur.uu<<\" \"<<cur.time<<endl;\n    for (int i = 1; i <= n; i++) {\n      if (d[cur.uu][i] != -1) {\n        if (cur.en - d[cur.uu][i] >= needEn[i]) {\n          if (cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed < ans[i][cur.speed]) {\n            ans[i][cur.speed] = cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed;\n            node newnd = node(i, cur.speed, cur.en - d[cur.uu][i],\n                              cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed);\n\n            que.push(newnd);\n          }\n        }\n\n        \/\/ change\n        if (e[i] >= needEn[i]) {\n          if (cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed < ans[i][s[i]]) {\n            ans[i][s[i]] = cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed;\n            node newnd = node(i, s[i], e[i],\n                              cur.time + (d[cur.uu][i] + 0.0) \/ cur.speed);\n\n            que.push(newnd);\n          }\n        }\n      }\n    }\n  }\n}\n\nint main() {\n  freopen(\"C-small-attempt1.in\", \"r\", stdin);\n  freopen(\"C-small-attempt1.out\", \"w\", stdout);\n\n  int t;\n  cin >> t;\n  int cas = 0;\n\n  while (t--) {\n    cas++;\n    cin >> n >> q;\n\n    for (int i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= n; j++) {\n        cin >> d[i][j];\n        dd[i][j] = d[i][j];\n      }\n    }\n\n    floyd();\n\n    printf(\"Case #%d: \", cas);\n\n    while (q--) {\n      int u, v;\n      cin >> u >> v;\n\n      for (int i = 1; i <= n; i++) {\n        needEn[i] = INF;\n        if (dd[i][v] != -1) {\n          needEn[i] = dd[i][v];\n        }\n      }\n      needEn[v] = 0;\n\n      for (int k = 0; k < 100; k++)\n        for (int i = 1; i <= n; i++) {\n          for (int j = 1; j <= n; j++) {\n            if (i == j)\n              continue;\n            if (dd[i][j] != -1 && dd[j][v] != -1) {\n              needEn[i] = min(needEn[i], dd[i][j]);\n            }\n          }\n        }\n\n      \/*for(int i=1;i<=n;i++){\n              cout<<needEn[i]<<\" \";\n      }\n      cout<<endl;\n      *\/\n      spfa(u, v);\n\n      double res = 1e18;\n      for (int i = 1; i <= 1000; i++) {\n        res = min(res, ans[v][i]);\n      }\n\n      printf(\"%.8f\", res);\n      if (q) {\n        printf(\" \");\n      }\n      \/\/ cout<<res<<endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nchar num[100];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%s\", num);\n    int len = strlen(num);\n    for (int x = 0; x < len; x++) {\n      for (int i = 0; i < len - 1; i++) {\n        if (num[i] > num[i + 1]) {\n          num[i]--;\n          for (int j = i + 1; j < len; j++) {\n            num[j] = '9';\n          }\n        }\n      }\n    }\n    char *out;\n    for (int i = 0; i < len; i++) {\n      out = num + i;\n      if (*out != '0')\n        break;\n    }\n    printf(\"Case #%d: %s\\n\", I, out);\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nunsigned long long k, n;\nusing ull = unsigned long long;\nint getpow(ull x) {\n  int pow = 0;\n  for (ull i = 1; i <= x; i *= 2) {\n    pow++;\n  }\n  return pow;\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    cin >> n >> k;\n    int pow = getpow(k);\n    ull upcnt = (1llu << (pow - 1)) - 1;\n    ull left = n - upcnt;\n    ull cnt = 1llu << (pow - 1);\n    ull base = left \/ cnt;\n    ull curcnt = k - upcnt;\n    ull ans = base;\n    if (curcnt <= left % cnt)\n      ans++;\n    cout << \"Case #\" << I << \": \" << (ans - 1) \/ 2 + (ans - 1) % 2 << \" \"\n         << (ans - 1) \/ 2 << endl;\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nchar in[1010];\nbool p[1010];\nint k;\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%s%d\", in, &k);\n    int len = strlen(in);\n    for (int i = 0; i < len; i++) {\n      if (in[i] == '+')\n        p[i] = true;\n      else\n        p[i] = false;\n    }\n    int cnt = 0;\n    for (int i = 0; i <= len - k; i++) {\n      if (!p[i]) {\n        for (int j = 0; j < k; j++) {\n          p[i + j] = !p[i + j];\n        }\n        cnt++;\n      }\n    }\n    bool fail = false;\n    for (int i = 0; i < len; i++) {\n      if (!p[i])\n        fail = true;\n    }\n    printf(\"Case #%d: \", I);\n    if (!fail)\n      printf(\"%d\", cnt);\n    else\n      printf(\"IMPOSSIBLE\");\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\nusing namespace std;\n\nint n, p;\nint r[60];\nint q[60][60];\nint minq[60][60];\nint maxq[60][60];\nbool used[60][60];\n\nint nexthead() {\n  for (int i = 0; i < p; i++) {\n    if (used[0][i] == false)\n      return i;\n  }\n  return p;\n}\nint dfs(int nown, int nowp, int nowmin, int nowmax) {\n  nowmin = max(nowmin, minq[nown][nowp]);\n  nowmax = min(nowmax, maxq[nown][nowp]);\n  if (nowp == p)\n    return 0;\n  used[nown][nowp] = true;\n  if (nown == n - 1) {\n    int ans = 1;\n    if (nowmin > nowmax)\n      ans = 0;\n    ans += dfs(0, nexthead(), 0, 10000000);\n    used[nown][nowp] = false;\n    return ans;\n  }\n  if (nowmin > nowmax) {\n    used[nown][nowp] = false;\n    return -1;\n  }\n  int ans = -1;\n  for (int i = 0; i < p; i++) {\n    if (used[nown + 1][i] != true) {\n      ans = max(dfs(nown + 1, i, nowmin, nowmax), ans);\n    }\n  }\n  if (ans == -1) {\n    ans = dfs(0, nexthead(), 0, 10000000);\n  }\n  used[nown][nowp] = false;\n  return ans;\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    fill((bool *)used, (bool *)used + 3600, false);\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", r + i);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &(q[i][j]));\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int tmp = q[i][j] * 10;\n        int tmpr = r[i] * 9;\n        maxq[i][j] = tmp \/ tmpr;\n        tmpr = r[i] * 11;\n        minq[i][j] = tmp \/ tmpr;\n        if (tmp % tmpr != 0)\n          minq[i][j]++;\n      }\n    }\n    int ans = dfs(0, 0, 0, 10000000);\n    if (ans == -1)\n      ans = 0;\n    printf(\"Case #%d: %d\\n\", I, ans);\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\nchar cake[30][30];\nint r, c;\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%d%d\", &r, &c);\n    for (int i = 0; i < r; i++) {\n      scanf(\"%s\", cake[i]);\n    }\n    bool firstempty = true;\n    for (int i = 0; i < c; i++) {\n      if (cake[0][i] != '?')\n        firstempty = false;\n    }\n    if (firstempty) {\n      int nonempty = 0;\n      for (int i = 0; i < r; i++) {\n        bool empty = true;\n        for (int j = 0; j < c; j++) {\n          if (cake[i][j] != '?')\n            empty = false;\n        }\n        if (!empty) {\n          nonempty = i;\n          break;\n        }\n      }\n      for (int i = 0; i < c; i++) {\n        cake[0][i] = cake[nonempty][i];\n      }\n    }\n    for (int i = 1; i < r; i++) {\n      bool empty = true;\n      for (int j = 0; j < c; j++) {\n        if (cake[i][j] != '?')\n          empty = false;\n      }\n      if (empty) {\n        for (int j = 0; j < c; j++) {\n          cake[i][j] = cake[i - 1][j];\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      if (cake[i][0] == '?') {\n        for (int j = 0; j < c; j++) {\n          if (cake[i][j] != '?') {\n            cake[i][0] = cake[i][j];\n            break;\n          }\n        }\n      }\n      for (int j = 0; j < c; j++) {\n        if (cake[i][j] == '?') {\n          cake[i][j] = cake[i][j - 1];\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", I);\n    for (int i = 0; i < r; i++) {\n      printf(\"%s\\n\", cake[i]);\n    }\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n\nusing namespace std;\n\nint d, n;\nint k[1010], s[1010];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%d%d\", &d, &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d%d\", k + i, s + i);\n    }\n    double maxt = 0;\n    for (int i = 0; i < n; i++) {\n      double t = ((double)(d - k[i])) \/ s[i];\n      maxt = max(maxt, t);\n    }\n    printf(\"Case #%d: %.15f\\n\", I, d \/ maxt);\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint n;\nint c_b[3];\nint c_m[3];\nconst char c_c_b[] = \"RYB\";\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < 3; i++) {\n      scanf(\"%d%d\", c_b + i, c_m + i);\n    }\n    auto maxit = max_element(c_b, c_b + 3);\n    if (*maxit > (n - *maxit))\n      printf(\"Case #%d: IMPOSSIBLE\\n\", I);\n    else {\n      auto maxn = *maxit;\n      int *c1, *c2;\n      if (maxit == c_b) {\n        c1 = c_b + 1;\n        c2 = c_b + 2;\n      }\n      if (maxit == c_b + 1) {\n        c1 = c_b;\n        c2 = c_b + 2;\n      }\n      if (maxit == c_b + 2) {\n        c1 = c_b;\n        c2 = c_b + 1;\n      }\n      string s[1010];\n      for (int i = 0; i < maxn; i++) {\n        if (*c1 > 0) {\n          s[i] += c_c_b[c1 - c_b];\n          (*c1)--;\n        }\n      }\n      for (int i = maxn - 1; i >= 0; i--) {\n        if (*c2 > 0) {\n          s[i] += c_c_b[c2 - c_b];\n          (*c2)--;\n        }\n      }\n      printf(\"Case #%d: \", I);\n      for (int i = 0; i < maxn; i++) {\n        printf(\"%c\", c_c_b[maxit - c_b]);\n        printf(\"%s\", s[i].c_str());\n      }\n      printf(\"\\n\");\n    }\n  }\n}\n"}
{"target":"ss1h2a3tw","func":"#include <algorithm>\n#include <cstdio>\n#include <queue>\nusing namespace std;\n\nint n, q;\nint e[110];\nint s[110];\nint d[110][110];\nint u[110];\nint k[110];\ndouble t[110][110];\nbool visited[110];\nusing ll = long long;\nvoid mark(int from) {\n  fill(visited, visited + 110, false);\n  fill(t[from], t[from] + 110, -1);\n  priority_queue<pair<ll, int>, vector<pair<ll, int>>, greater<pair<ll, int>>>\n      pq;\n  pq.push({0, from});\n  while (!pq.empty()) {\n    auto now = pq.top();\n    pq.pop();\n    auto nowv = now.second;\n    auto nowd = now.first;\n    if (visited[nowv])\n      continue;\n    visited[nowv] = true;\n    t[from][nowv] = double(nowd) \/ s[from];\n    for (int i = 0; i < n; i++) {\n      if (d[nowv][i] != -1 && (!visited[i]) && (nowd + d[nowv][i] <= e[from])) {\n        pq.push({nowd + d[nowv][i], i});\n      }\n    }\n  }\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int I = 1; I <= T; I++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d%d\", e + i, s + i);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%d\", &(d[i][j]));\n      }\n    }\n    for (int i = 0; i < q; i++) {\n      scanf(\"%d%d\", u + i, k + i);\n    }\n    for (int i = 0; i < n; i++) {\n      mark(i);\n    }\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          if (i != j && j != k && i != k) {\n            if (t[i][k] > 0 && t[k][j] > 0) {\n              if (t[i][j] == -1) {\n                t[i][j] = t[i][k] + t[k][j];\n              }\n              if (t[i][j] > t[i][k] + t[k][j]) {\n                t[i][j] = t[i][k] + t[k][j];\n              }\n            }\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\", I);\n    for (int i = 0; i < q; i++) {\n      printf(\" %.15f\", t[u[i] - 1][k[i] - 1]);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"ssor96","func":"#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int q = 1; q <= t; ++q) {\n    string s;\n    cin >> s;\n    int n = s.size();\n    cout << \"Case #\" << q << \": \";\n    for (int i = 1; i < n; ++i) {\n      if (s[i] < s[i - 1]) {\n        for (int j = i; j < n; ++j)\n          s[j] = '9';\n        if (s[i - 1] == '0')\n          s[i - 1] = '9';\n        else\n          s[i - 1]--;\n        i--;\n        while (i && s[i] < s[i - 1]) {\n          s[i] = '9';\n          if (s[i - 1] == '0')\n            s[i - 1] = '9';\n          else\n            s[i - 1]--;\n          i--;\n        }\n        break;\n      }\n    }\n    long long int ans = 0;\n    for (int i = 0; i < n; ++i) {\n      ans = ans * 10 + s[i] - '0';\n    }\n    cout << ans << endl;\n  }\n}\n"}
{"target":"ssor96","func":"#include <iostream>\n#include <map>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int q = 1; q <= t; ++q) {\n    long long int n, k;\n    cin >> n >> k;\n    cout << \"Case #\" << q << \": \";\n    map<long long int, long long int> ar;\n    ar[-n] = 1;\n    for (;;) {\n      map<long long int, long long int>::iterator it = ar.begin();\n      long long int cur = -it->first - 1;\n      long long int cnt = it->second;\n      ar.erase(it);\n      long long int l = cur \/ 2;\n      long long int r = cur - l;\n      if (k <= cnt) {\n        cout << r << \" \" << l << endl;\n        break;\n      }\n      k -= cnt;\n      if (l)\n        ar[-l] += cnt;\n      if (r)\n        ar[-r] += cnt;\n    }\n  }\n}\n"}
{"target":"ssor96","func":"#include <iostream>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  for (int q = 1; q <= t; ++q) {\n    string s;\n    cin >> s;\n    int k;\n    cin >> k;\n    int n = s.size();\n    int ans = 0;\n    cout << \"Case #\" << q << \": \";\n    for (int i = 0; i <= n - k; ++i) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; ++j) {\n          if (s[i + j] == '-')\n            s[i + j] = '+';\n          else\n            s[i + j] = '-';\n        }\n        ans++;\n      }\n    }\n    for (int i = n - k; i < n; ++i) {\n      if (s[i] == '-')\n        ans = -1;\n    }\n    if (ans == -1) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << ans << endl;\n    }\n  }\n}\n"}
{"target":"ssor96","func":"#include <cmath>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint ans;\nvector<int> idx;\nvector<long long int> rr;\nvector<vector<long long int>> ar;\nint n, p;\n\nvoid solve(int goal, int beg, int cur) {\n  if (cur == goal) {\n    int tmp = 0;\n    for (int i = 0; i < p; ++i) {\n      int l = int(ceil(ar[0][i] \/ (rr[0] * 1.1)));\n      int r = int(ar[0][i] \/ (rr[0] * 0.9));\n      if (n == 2) {\n        l = max(l, int(ceil(ar[1][idx[i]] \/ (rr[1] * 1.1))));\n        r = min(r, int(ar[1][i] \/ (rr[1] * 0.9)));\n      }\n      if (l <= r && r)\n        tmp++;\n    }\n    ans = max(ans, tmp);\n    return;\n  }\n  for (int i = beg; cur + p - i >= goal && i < p; ++i) {\n    idx[cur] = i;\n    solve(goal, i + 1, cur + 1);\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; ++t) {\n    ans = 0;\n    cin >> n >> p;\n    rr.resize(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> rr[i];\n    }\n    ar.resize(n);\n    for (int i = 0; i < n; ++i) {\n      ar[i].resize(p);\n      for (int j = 0; j < p; ++j) {\n        cin >> ar[i][j];\n      }\n    }\n    idx.resize(p);\n    solve(p, 0, 0);\n\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n}\n"}
{"target":"ssor96","func":"#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; ++t) {\n    int n, m;\n    cin >> n >> m;\n    vector<string> ar(n);\n    vector<vector<bool>> used(n, vector<bool>(m, false));\n    for (int i = 0; i < n; ++i) {\n      cin >> ar[i];\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < m; ++j) {\n        if (ar[i][j] != '?' && !used[i][j]) {\n          int l = j;\n          int r = j;\n          int u = i;\n          int d = i;\n          while (l >= 1 && ar[i][l - 1] == '?')\n            l--;\n          while (r <= m - 2 && ar[i][r + 1] == '?')\n            r++;\n          for (; u >= 1;) {\n            bool f = true;\n            for (int jj = l; jj <= r; ++jj) {\n              if (ar[u - 1][jj] != '?') {\n                f = false;\n                break;\n              }\n            }\n            if (!f)\n              break;\n            else\n              --u;\n          }\n          for (; d <= n - 2;) {\n            bool f = true;\n            for (int jj = l; jj <= r; ++jj) {\n              if (ar[d + 1][jj] != '?') {\n                f = false;\n                break;\n              }\n            }\n            if (!f)\n              break;\n            else\n              ++d;\n          }\n          for (int ii = u; ii <= d; ++ii) {\n            for (int jj = l; jj <= r; ++jj) {\n              ar[ii][jj] = ar[i][j];\n              used[ii][jj] = true;\n            }\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << t << \":\" << endl;\n    for (int i = 0; i < n; ++i) {\n      cout << ar[i] << endl;\n    }\n  }\n}\n"}
{"target":"ssor96","func":"#include <iomanip>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; ++t) {\n    int d, n;\n    cin >> d >> n;\n    double ti = 0;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      cin >> k >> s;\n      ti = max(ti, (d - k) \/ double(s));\n    }\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(20) << d \/ ti\n         << endl;\n  }\n}\n"}
{"target":"ssor96","func":"#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\n\/\/ o -> b\n\/\/ g -> r\n\/\/ v -> y\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; ++t) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    string s(n, '?');\n    \/\/ vector <vector<pair<vector<int>, string> > > ar(2,\n    \/\/ vector<pair<vector<int>, string> >(3));\n    vector<pair<int, char>> ar(3);\n    \/\/ for (int i = 0; i < 3; ++i) {\n    \/\/ \tar[0].first[j] = r;\n    \/\/ \tar[1].first[j] = y;\n    \/\/ \tar[2].first[j] = b;\n    \/\/ }\n    ar[0] = make_pair(-r, 'R');\n    ar[1] = make_pair(-y, 'Y');\n    ar[2] = make_pair(-b, 'B');\n    sort(ar.begin(), ar.end());\n    char prev = 'Q';\n    bool f = true;\n    char fir = ar[0].second;\n    for (int i = 0; i < n; ++i) {\n      sort(ar.begin(), ar.end());\n      \/\/ cout << s << endl;\n      \/\/ for (int j = 0; j < 3; ++j) {\n      \/\/ \tcout << -ar[j].first << \" \" << ar[j].second << endl;\n      \/\/ }\n      \/\/ cout << \"prev = \" << prev << endl;\n      if (ar[0].first == ar[1].first && prev != fir) {\n        if (ar[0].second == fir) {\n          s[i] = fir;\n          ar[0].first++;\n          prev = fir;\n          continue;\n        } else if (ar[1].second == fir) {\n          s[i] = fir;\n          ar[1].first++;\n          prev = fir;\n          continue;\n        } else if (ar[2].first == ar[0].first) {\n          s[i] = fir;\n          ar[2].first++;\n          prev = fir;\n          continue;\n        }\n      }\n      for (int j = 0; j < 3; ++j) {\n        if (ar[j].first == 0) {\n          f = false;\n          break;\n        }\n        if (prev != ar[j].second) {\n          ar[j].first++;\n          s[i] = ar[j].second;\n          prev = ar[j].second;\n          break;\n        }\n      }\n      if (!f)\n        break;\n    }\n    if (!f || s[0] == s[n - 1])\n      s = \"IMPOSSIBLE\";\n    cout << \"Case #\" << t << \": \" << s << endl;\n  }\n}\n"}
{"target":"ssor96","func":"#include <iomanip>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  int tt;\n  cin >> tt;\n  for (int t = 1; t <= tt; ++t) {\n    int n, q;\n    cin >> n >> q;\n    vector<pair<int, int>> ar(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> ar[i].first >> ar[i].second;\n    }\n    vector<vector<int>> d(n, vector<int>(n));\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        cin >> d[i][j];\n      }\n    }\n    int start, finish;\n    cin >> start >> finish;\n    start--;\n    finish--;\n    vector<double> dp(n, 1e+12);\n    dp[0] = 0;\n    for (int i = 0; i < n - 1; ++i) {\n      long long int dd = d[i][i + 1];\n      int j = i + 1;\n      while (dd <= ar[i].first) {\n        dp[j] = min(dp[j], dp[i] + dd \/ double(ar[i].second));\n        if (j == n - 1)\n          break;\n        else {\n          dd += d[j][j + 1];\n          j++;\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(20) << dp[n - 1]\n         << endl;\n  }\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string.h>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\ntypedef long long ll;\n\nstruct less_than_key {\n  inline bool operator()(const pair<int, int> &p1, const pair<int, int> &p2) {\n    return (p1.first == p2.first ? p1.second < p2.second : p1.first > p2.first);\n  }\n};\n\nbool check(ll d) {\n  string s = to_string(d);\n  for (int i = 0; i < s.length() - 1; i++) {\n    if (s[i] > s[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nint main() {\n  freopen(\"\/Users\/shitian\/Downloads\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Downloads\/B-small-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    ll n, last;\n    cin >> n;\n    for (ll i = 1; i <= n; i++) {\n      if (check(i)) {\n        last = i;\n      }\n    }\n    cout << last << endl;\n  }\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\ntypedef long long ll;\n\nstruct less_than_key {\n  inline bool operator()(const pair<int, int> &p1, const pair<int, int> &p2) {\n    return (p1.first == p2.first ? p1.second < p2.second : p1.first > p2.first);\n  }\n};\n\nll po(ll b, ll d) {\n  if (d == 0) {\n    return 1;\n  }\n  return b * po(b, d - 1);\n}\n\nint main() {\n  freopen(\"\/Users\/shitian\/Downloads\/C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Downloads\/C-small-1-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    ll n, k;\n    cin >> n >> k;\n    set<ll> stalls;\n    stalls.insert(0);\n    stalls.insert(n + 1);\n    for (int kk = 0; kk < k; kk++) {\n      \/\/ min(LS, RS) is maximal.  A\n      \/\/ max(LS, RS) is maximal   B\n      \/\/ left\n      vector<pair<int, pair<int, int>>> vec; \/\/ l,r\n      \/\/ if use i\n      for (int i = 1; i <= n; i++) {\n        if (stalls.find(i) != stalls.end())\n          continue;\n        \/\/ find l, r occupied\n        ll l, r;\n        auto it = stalls.lower_bound(i);\n        r = *it;\n        it--;\n        l = *it;\n\n        vec.push_back(make_pair(i, make_pair(i - l - 1, r - i - 1)));\n      }\n      vector<pair<int, pair<int, int>>> A, B;\n      \/\/ min_lr A\n      ll min_lr = 0;\n      for (int i = 0; i < vec.size(); i++) {\n        int l = vec[i].second.first, r = vec[i].second.second;\n        if (min(l, r) >= min_lr) {\n          if (min(l, r) > min_lr)\n            A.clear();\n          A.push_back(vec[i]);\n          min_lr = min(l, r);\n        }\n      }\n      \/\/ max_lr B\n      ll max_lr = 0;\n      for (int i = 0; i < A.size(); i++) {\n        int l = A[i].second.first, r = A[i].second.second;\n        if (max(l, r) >= max_lr) {\n          if (max(l, r) > max_lr)\n            B.clear();\n          B.push_back(A[i]);\n          max_lr = max(l, r);\n        }\n      }\n      sort(B.begin(), B.end());\n\n      stalls.insert(B[0].first);\n      if (kk == k - 1) {\n        cout << B[0].second.second << \" \" << B[0].second.first << endl;\n      }\n    }\n    \/\/ out_vector(stalls);\n  }\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string.h>\n#include <unordered_map>\n#include <vector>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\ntypedef long long ll;\n\nstruct less_than_key {\n  inline bool operator()(const pair<int, int> &p1, const pair<int, int> &p2) {\n    return (p1.first == p2.first ? p1.second < p2.second : p1.first > p2.first);\n  }\n};\n\nint main() {\n  freopen(\"\/Users\/shitian\/Downloads\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Downloads\/A-small-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n    string s, s2;\n    int k;\n    cin >> s >> k;\n    s2 = s;\n    int ans = 0, ans2 = 0;\n    bool ok = true, ok2 = true;\n    for (int i = 0; i < s.length() - (k - 1); i++) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; j++) {\n          int index_to_flip = i + j;\n          s[index_to_flip] = (s[index_to_flip] == '+' ? '-' : '+');\n        }\n        ans++;\n      }\n    }\n    for (int i = 0; i < s.length(); i++) {\n      if (s[i] == '-') {\n        ok = false;\n      }\n    }\n\n    for (int i = (int)s.length() - 1; i >= k - 1; i--) {\n      if (s2[i] == '-') {\n        for (int j = 0; j < k; j++) {\n          int index_to_flip = i - j;\n          s2[index_to_flip] = (s2[index_to_flip] == '+' ? '-' : '+');\n        }\n        ans2++;\n      }\n    }\n    for (int i = 0; i < s2.length(); i++) {\n      if (s2[i] == '-') {\n        ok2 = false;\n      }\n    }\n    \/\/        if(ok!=ok2||ans!=ans2){\n    \/\/            fprintf(stderr, \"NOT SAME\\n\");\n    \/\/            return 1;\n    \/\/        }\n    if (!ok && !ok2) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      if (ok && ok2) {\n        cout << min(ans, ans2) << endl;\n      } else if (ok) {\n        cout << ans << endl;\n      } else {\n        cout << ans2 << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\nvector<vector<ll>> tree;\n\nint main() {\n  freopen(\"\/Users\/shitian\/Downloads\/B-small-attempt5.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Downloads\/B-small-attempt5.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, p; \/\/ ingredients, packages\n    cin >> n >> p;\n    int r[101];\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    int q[100][100];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++)\n        cin >> q[i][j];\n    vector<pair<int, int>>\n        amount[100]; \/\/ amount[i][j]: ingredient[i] has amount[i][j]\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        double amount_d = q[i][j];\n        double mi = amount_d, ma = amount_d;\n        mi = mi \/ (r[i] * 1.1);\n        ma = ma \/ (r[i] * 0.9);\n        int mi_a = ceil(mi), ma_a = floor(ma);\n        \/\/                cout<<mi_a<<\" \"<<ma_a<<\" \"<<r[i]<<\" \"<<amount_d<<endl;\n        \/\/                while(mi_a*r[i]*1.1<amount_d)mi_a++;\n        \/\/                while(ma_a*r[i]*0.9>amount_d)ma_a--;\n        \/\/                cout<<mi_a<<\" \"<<ma_a<<\" \"<<r[i]<<\" \"<<amount_d<<endl;\n        if (mi_a > ma_a)\n          continue;\n        amount[i].push_back(make_pair(ma_a, mi_a)); \/\/[end, start]\n      }\n      sort(amount[i].begin(), amount[i].end(), greater<pair<int, int>>());\n    }\n    int ans = 0;\n    while (amount[0].size()) {\n      pair<int, int> fr = amount[0][0];\n      \/\/     cout<<fr.first<<\" \"<<fr.second<<endl;\n      amount[0].erase(amount[0].begin());\n      bool ok = true;\n      vector<int> to_erase(n, -1);\n      for (int j = 1; j < n; j++) {\n        for (int k = 0; k < amount[j].size(); k++) {\n          \/\/ cout<<amount[j][k].first<<\" \"<<amount[j][k].second<<endl;\n          if (amount[j][k].first >= fr.second &&\n              amount[j][k].second <= fr.first) {\n            if (to_erase[j] == -1)\n              to_erase[j] = k;\n            else {\n              if (amount[j][to_erase[j]].second < amount[j][k].second) {\n                to_erase[j] = k;\n              }\n            }\n          }\n        }\n        if (to_erase[j] == -1) {\n          ok = false;\n          break;\n        }\n      }\n      if (ok == false) {\n        break;\n      }\n      ans++;\n      for (int i = 0; i < n; i++) {\n        if (i == 0)\n          continue;\n        amount[i].erase(amount[i].begin() + to_erase[i]);\n      }\n    }\n    \/\/        FOR(i,100)amount[i].clear();\n    \/\/        for(int i=0;i<n;i++){\n    \/\/            for(int j=0;j<p;j++){\n    \/\/                double amount_d=q[i][j];\n    \/\/                double mi=amount_d,ma=amount_d;\n    \/\/                mi=mi\/(r[i]*1.1);ma=ma\/(r[i]*0.9);\n    \/\/                int mi_a=floor(mi),ma_a=ceil(ma);\n    \/\/                \/\/                cout<<mi_a<<\" \"<<ma_a<<\" \"<<r[i]<<\"\n    \/\/                \"<<amount_d<<endl; while(mi_a*r[i]*1.1<amount_d)mi_a++;\n    \/\/                while(ma_a*r[i]*0.9>amount_d)ma_a--;\n    \/\/                \/\/                cout<<mi_a<<\" \"<<ma_a<<\" \"<<r[i]<<\"\n    \/\/                \"<<amount_d<<endl; if(mi_a>ma_a)continue;\n    \/\/                amount[i].push_back(make_pair(mi_a, ma_a));\/\/[end, start]\n    \/\/            }\n    \/\/            sort(amount[i].begin(),amount[i].end());\n    \/\/        }\n    \/\/        int ans2=0;\n    \/\/        while(amount[0].size()){\n    \/\/            pair<int,int>fr=amount[0][0];\n    \/\/            \/\/     cout<<fr.first<<\" \"<<fr.second<<endl;\n    \/\/            amount[0].erase(amount[0].begin());\n    \/\/            bool ok=true;\n    \/\/            vector<int>to_erase(n,-1);\n    \/\/            for(int j=1;j<n;j++){\n    \/\/                for(int k=0;k<amount[j].size();k++){\n    \/\/                    \/\/cout<<amount[j][k].first<<\"\n    \/\/                    \"<<amount[j][k].second<<endl;\n    \/\/                    if(amount[j][k].first>=fr.second&&amount[j][k].second<=fr.first){\n    \/\/                        to_erase[j]=k;\n    \/\/                        break;\n    \/\/                    }\n    \/\/                }\n    \/\/                if(to_erase[j]==-1){\n    \/\/                    ok=false;\n    \/\/                    break;\n    \/\/                }\n    \/\/            }\n    \/\/            if(ok==false){\n    \/\/                break;\n    \/\/            }\n    \/\/            ans2++;\n    \/\/            FOR(i,n){\n    \/\/                if(i==0)continue;\n    \/\/                amount[i].erase(amount[i].begin()+to_erase[i]);\n    \/\/            }\n    \/\/        }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\nvector<vector<ll>> tree;\n\nint r, c;\nchar cake[100][100];\nvector<pair<int, char>> v[100];\n\nint main() {\n  freopen(\"\/Users\/shitian\/Downloads\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Downloads\/A-small-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \" << endl;\n    for (int i = 0; i < 100; i++) {\n      v[i].clear();\n    }\n    cin >> r >> c;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cin >> cake[i][j];\n        if (cake[i][j] != '?') {\n          v[i].push_back(make_pair(j, cake[i][j]));\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      sort(v[i].begin(), v[i].end());\n    }\n\n    for (int i = 0; i < r; i++) {\n      if (v[i].size()) {\n        for (int x = 0; x < v[i].size(); x++) {\n          for (int toShare = (x == 0 ? 0 : v[i][x - 1].first + 1);\n               toShare < (x < v[i].size() - 1 ? v[i][x + 1].first : c);\n               toShare++) {\n            cake[i][toShare] = v[i][x].second;\n            if (i > 0) {\n              for (int j = i - 1; j >= 0; j--) {\n                if (v[j].size()) {\n                  break;\n                }\n                cake[j][toShare] = v[i][x].second;\n              }\n            }\n            if (i < r - 1) {\n              for (int j = i + 1; j < r; j++) {\n                if (v[j].size()) {\n                  break;\n                }\n                cake[j][toShare] = v[i][x].second;\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        cout << cake[i][j];\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\n\/\/ ll n,m,k;\nstring str, s1, s2;\n\nint gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint main() {\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/A-small-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int d, n;\n    cin >> d >> n;\n    double max_time = 0;\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      cin >> s >> k;\n      int delta = d - s;\n      double time = (double)delta \/ k;\n      max_time = max(max_time, time);\n    }\n    double speed = (double)d \/ max_time;\n    printf(\"%.10f\\n\", speed);\n  }\n\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\n\/\/ ll n,m,k;\nstring str, s1, s2;\n\nint gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint main() {\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/B-small-attempt0.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    string vec;\n    if (r) {\n      vec.push_back('R');\n      r--;\n    } else if (y) {\n      vec.push_back('Y');\n      y--;\n    } else if (b) {\n      vec.push_back('B');\n      b--;\n    }\n    bool ok = true;\n    while (r > 0 || o > 0 || y > 0 || g > 0 || b > 0 || v > 0) {\n      if (vec.back() == 'R') {\n        if (b > y) {\n          vec.push_back('B');\n          b--;\n        } else if (y > 0) {\n          vec.push_back('Y');\n          y--;\n        } else {\n          ok = false;\n          break;\n        }\n      } else if (vec.back() == 'B') {\n        if (r > y) {\n          vec.push_back('R');\n          r--;\n        } else if (y > 0) {\n          vec.push_back('Y');\n          y--;\n        } else {\n          ok = false;\n          break;\n        }\n      } else if (vec.back() == 'Y') {\n        if (b > r) {\n          vec.push_back('B');\n          b--;\n        } else if (r > 0) {\n          vec.push_back('R');\n          r--;\n        } else {\n          ok = false;\n          break;\n        }\n      }\n    }\n    if (ok) {\n      if (vec.front() == vec.back()) {\n        ok = false;\n      }\n    }\n    if (!ok) {\n      cout << \"Impossible\" << endl;\n    } else {\n      cout << vec << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"st.ni","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\n\/\/ ll n,m,k;\nstring str, s1, s2;\n\nint gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  return gcd(b, a % b);\n}\n\nint main() {\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/C-small-attempt1.in\", \"r\", stdin);\n  freopen(\"\/Users\/shitian\/Desktop\/gcj\/gcj\/C-small-attempt1.txt\", \"w\", stdout);\n  int tcase;\n  cin >> tcase;\n  for (int tc = 1; tc <= tcase; tc++) {\n    cout << \"Case #\" << tc << \": \";\n\n    int n, q;\n    cin >> n >> q;\n    vector<int> e(n), s(n), left(n);\n    vector<pair<int, int>> vec;\n    priority_queue<pair<int, int>> hor;\n    int maxS = 0;\n    double time = 0;\n    for (int i = 0; i < n; i++) {\n      pair<int, int> p;\n      cin >> p.second >> p.first;\n      vec.push_back(p);\n    }\n    ll d[200][200];\n    pair<int, int> best = vec[0];\n    double dp[200]; \/\/ dp[i][j]:=i-th city use j horse min\n    ll dist[1000];\n    dist[0] = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> d[i][j];\n        if (j == i + 1) {\n          dist[j] = dist[i] + d[i][j];\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      dp[i] = 1e13 + 7;\n    }\n    dp[0] = 0;\n    for (int i = 1; i < n; i++) {   \/\/ to i-th city\n      for (int j = 0; j < i; j++) { \/\/ use horse j\n\n        if (dist[i] - dist[j] <= vec[j].second) {\n          dp[i] =\n              min(dp[i], dp[j] + (double)(dist[i] - dist[j]) \/ vec[j].first);\n        }\n      }\n    }\n    vector<int> u(q), v(q);\n    for (int i = 0; i < q; i++) {\n      cin >> u[i] >> v[i];\n    }\n    printf(\"%.10f\\n\", dp[n - 1]);\n  }\n\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  vector<long long> v;\n  queue<long long> q;\n\n  q.push(0);\n\n  while (!q.empty()) {\n    long long val = q.front();\n    q.pop();\n\n    v.push_back(val);\n\n    int now = val % 10;\n    if (now == 0)\n      now = 1;\n    for (int i = now; i <= 9; i++) {\n      if (val * 10 + i > 1000000000000000000LL)\n        continue;\n      q.push(val * 10 + i);\n    }\n  }\n\n  int kase = 0, test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    long long n;\n    scanf(\"%lld\", &n);\n    int idx = lower_bound(v.begin(), v.end(), n) - v.begin();\n    if (v[idx] != n)\n      idx--;\n    printf(\"Case #%d: %lld\\n\", ++kase, v[idx]);\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int test, kase = 0;\n  int n, k;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d%d\", &n, &k);\n    priority_queue<int> q;\n    q.push(n);\n    for (int i = 0; i < k - 1; i++) {\n      int x = q.top();\n      q.pop();\n      if (x & 1) {\n        q.push(x \/ 2);\n        q.push(x \/ 2);\n      } else {\n        q.push(x \/ 2);\n        q.push(x \/ 2 - 1);\n      }\n    }\n\n    int x = q.top();\n    if (x & 1)\n      printf(\"Case #%d: %d %d\\n\", ++kase, x \/ 2, x \/ 2);\n    else\n      printf(\"Case #%d: %d %d\\n\", ++kase, x \/ 2, x \/ 2 - 1);\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar s[2010];\nint dp[2010];\n\nint main() {\n  int test, k, n, kase = 0;\n  scanf(\"%d\", &test);\n  while (test--) {\n    memset(dp, 0, sizeof(dp));\n    scanf(\"%s\", s + 1);\n    int n = strlen(s + 1);\n    char last = '+';\n\n    for (int i = 1; i <= n; i++) {\n      if (s[i] != last) {\n        dp[i] = 1;\n      }\n      last = s[i];\n    }\n\n    scanf(\"%d\", &k);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n      if (dp[i] == 1) {\n        ans++;\n        dp[i + k] ^= 1;\n      }\n    }\n\n    for (int i = n + 2; i <= 2 * n; i++)\n      if (dp[i] == 1)\n        ans = 0x3f3f3f3f;\n\n    if (ans != 0x3f3f3f3f)\n      printf(\"Case #%d: %d\\n\", ++kase, ans);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ++kase);\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nvector<int> v;\nvector<pair<int, int>> seg[100];\nint have[100];\nint idx[100];\n\nbool cmp(pair<int, int> a, pair<int, int> b) {\n  if (b.second == a.second)\n    return a.first < b.first;\n  return a.second < b.second;\n}\n\nint main() {\n  int test, n, m, kase = 0;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      seg[i].clear();\n    v.clear();\n    memset(idx, 0, sizeof(idx));\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &have[i]);\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        int val;\n        scanf(\"%d\", &val);\n        int LL = ceil(val \/ (have[i] * 1.1));\n        int rr = floor(val \/ (have[i] * 0.9));\n        seg[i].push_back(make_pair(LL, rr));\n        v.push_back(LL);\n        v.push_back(rr);\n        \/\/ cout << LL << \" \" << rr << endl;\n      }\n    }\n\n    sort(v.begin(), v.end());\n\n    for (int i = 0; i < n; i++) {\n      sort(seg[i].begin(), seg[i].end(), cmp);\n    }\n\n    for (int i = 0; i < v.size(); i++) {\n      int val = v[i], ok1 = 1;\n      for (int j = 0; j < n; j++) {\n        int ok2 = 0;\n        for (int k = 0; k < m; k++) {\n          if (val >= seg[j][k].first && val <= seg[j][k].second) {\n            idx[j] = k;\n            ok2 = 1;\n            break;\n          }\n        }\n        if (ok2 == 0)\n          ok1 = 0;\n      }\n\n      if (ok1) {\n        for (int j = 0; j < n; j++)\n          seg[j][idx[j]].second = -1;\n        ans++;\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", ++kase, ans);\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nchar a[50][50];\n\nint main() {\n  int test, n, m, kase = 0;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", a[i]);\n    }\n\n    for (int foo = 0; foo < 100; foo++) {\n      for (int i = 0; i < n; i++) {\n        int ok = 0;\n        for (int j = 0; j < m; j++) {\n          if (a[i][j] != '?') {\n            ok = 1;\n            for (int k = j - 1; k >= 0 && a[i][k] == '?'; k--) {\n              a[i][k] = a[i][j];\n            }\n\n            for (int k = j + 1; k < m && a[i][k] == '?'; k++) {\n              a[i][k] = a[i][j];\n            }\n          }\n        }\n\n        int check = 0;\n        if (i != 0) {\n          for (int j = 0; j < m; j++) {\n            if (a[i - 1][j] != '?')\n              check = 1;\n          }\n\n          if (check == 0) {\n            for (int j = 0; j < m; j++)\n              a[i - 1][j] = a[i][j];\n          }\n        }\n\n        check = 0;\n        if (i != n - 1) {\n          for (int j = 0; j < m; j++) {\n            if (a[i + 1][j] != '?') {\n              check = 1;\n            }\n          }\n\n          if (check == 0) {\n            for (int j = 0; j < m; j++)\n              a[i + 1][j] = a[i][j];\n          }\n        }\n      }\n    }\n\n    printf(\"Case #%d:\\n\", ++kase);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        printf(\"%c\", a[i][j]);\n      }\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/#define DEBUG\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\ntemplate <typename Iter> ostream &_out(ostream &s, Iter a, Iter b) {\n  for (auto it = a; it != b; it++)\n    s << (it == a ? \"\" : \" \") << *it;\n  return s;\n}\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, pair<A, B> &p) {\n  return s << \"(\" << p.first << \" , \" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, vector<T> &v) {\n  return _out(s, v.begin(), v.end());\n}\n\ninline ll rit() {\n  int key = 1;\n  char c = getchar();\n  while (!isdigit(c)) {\n    if (c == '-')\n      key = -1;\n    c = getchar();\n  }\n\n  ll x = 0;\n  while (isdigit(c)) {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return x * key;\n}\n\nint __ = 1;\n\n\/*********default*********\/\n\nvoid init() {}\n\nvoid read() {}\n\nvoid solve() {}\n\ndouble k[1010], s[1010];\n\nint main() {\n  int test, n, kase = 0;\n  double d;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%lf%d\", &d, &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lf%lf\", &k[i], &s[i]);\n    }\n\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n      ans = max(ans, (d - k[i]) \/ s[i]);\n    }\n\n    printf(\"Case #%d: %.8lf\\n\", ++kase, d \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\/\/#define DEBUG\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\ntemplate <typename Iter> ostream &_out(ostream &s, Iter a, Iter b) {\n  for (auto it = a; it != b; it++)\n    s << (it == a ? \"\" : \" \") << *it;\n  return s;\n}\n\ntemplate <typename A, typename B>\nostream &operator<<(ostream &s, pair<A, B> &p) {\n  return s << \"(\" << p.first << \" , \" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &s, vector<T> &v) {\n  return _out(s, v.begin(), v.end());\n}\n\ninline ll rit() {\n  int key = 1;\n  char c = getchar();\n  while (!isdigit(c)) {\n    if (c == '-')\n      key = -1;\n    c = getchar();\n  }\n\n  ll x = 0;\n  while (isdigit(c)) {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return x * key;\n}\n\nint __ = 1;\n\n\/*********default*********\/\n\nvoid init() {}\n\nvoid read() {}\n\nvoid solve() {}\n\nchar box[1010];\npair<int, char> a[10];\n\nbool cmp(pair<int, char> a, pair<int, char> b) { return a.first > b.first; }\n\nint main() {\n  int test, kase = 0;\n  scanf(\"%d\", &test);\n  while (test--) {\n    int n = 0;\n    cin >> n;\n    for (int i = 0; i < 6; i++)\n      a[i].first = rit();\n    a[0].second = 'R';\n    a[2].second = 'Y';\n    a[4].second = 'B';\n    sort(a, a + 6, cmp);\n\n    int Max = a[0].first;\n    for (int i = 1; i < 6; i++)\n      Max = max(Max, a[i].first);\n\n    if (Max > n \/ 2) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ++kase);\n      continue;\n    }\n\n    for (int i = 0; i < n; i += 2) {\n      if (a[0].first) {\n        box[i] = a[0].second;\n        a[0].first--;\n      } else if (a[1].first) {\n        box[i] = a[1].second;\n        a[1].first--;\n      } else {\n        box[i] = a[2].second;\n        a[2].first--;\n      }\n    }\n\n    for (int i = 1; i < n; i += 2) {\n      if (a[0].first) {\n        box[i] = a[0].second;\n        a[0].first--;\n      } else if (a[1].first) {\n        box[i] = a[1].second;\n        a[1].first--;\n      } else {\n        box[i] = a[2].second;\n        a[2].first--;\n      }\n    }\n\n    printf(\"Case #%d: \", ++kase);\n    for (int i = 0; i < n; i++)\n      printf(\"%c\", box[i]);\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"StillFantasy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nstruct Edge {\n  int u, v;\n  double w;\n  Edge(int a, int b, double c) : u(a), v(b), w(c){};\n};\n\nstruct Dijkstra {\n\n  int n, m;\n  vector<Edge> edges;\n  vector<int> G[110];\n  bool done[110];\n  double d[110];\n  int p[110];\n\n  void init(int n) {\n    this->n = n;\n    for (int i = 0; i < n; i++)\n      G[i].clear();\n    edges.clear();\n  }\n\n  void AddEdge(int u, int v, double w) {\n    G[u].push_back(edges.size());\n    edges.push_back(Edge(u, v, w));\n  }\n\n  void dijkstra(int s) {\n    priority_queue<pair<double, int>, vector<pair<double, int>>,\n                   greater<pair<double, int>>>\n        q;\n    for (int i = 0; i < n; i++)\n      d[i] = 123456789123456LL;\n    d[s] = 0;\n    memset(done, 0, sizeof(done));\n    q.push(make_pair(0, s));\n    while (!q.empty()) {\n      int u = q.top().second;\n      q.pop();\n      if (done[u])\n        continue;\n      for (int i = 0; i < G[u].size(); i++) {\n        Edge &e = edges[G[u][i]];\n        if (d[e.v] > d[e.u] + e.w) {\n          d[e.v] = d[e.u] + e.w;\n          p[e.v] = G[u][i];\n          q.push(make_pair(d[e.v], e.v));\n        }\n      }\n    }\n  }\n\n} solver;\n\nlong long e[110];\nlong long s[110];\nlong long D[110][110];\n\nint main() {\n  int test, kase = 0;\n  scanf(\"%d\", &test);\n  while (test--) {\n    int n, op;\n    scanf(\"%d%d\", &n, &op);\n    solver.init(n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lld%lld\", &e[i], &s[i]);\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%lld\", &D[i][j]);\n        if (D[i][j] == -1)\n          D[i][j] = 123456789123456LL;\n        if (i == j)\n          D[i][j] = 0;\n      }\n    }\n\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          D[i][j] = min(D[i][j], D[i][k] + D[k][j]);\n        }\n      }\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        if (D[i][j] != 123456789123456LL && i != j) {\n          if (D[i][j] <= e[i]) {\n            \/\/ cout << i << \" \" << j << \" \" << (double)D[i][j] \/ s[i] << endl;\n            solver.AddEdge(i, j, (double)D[i][j] \/ s[i]);\n          }\n        }\n    }\n\n    printf(\"Case #%d:\", ++kase);\n    while (op--) {\n      int st, ed;\n      scanf(\"%d%d\", &st, &ed);\n      st--;\n      ed--;\n      solver.dijkstra(st);\n      printf(\" %.7lf\", solver.d[ed]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/8.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\nint p1() {\n  string str;\n  int n(0), res(0), i(0);\n  cin >> str >> n;\n  for (i = 0; i <= str.length() - n; ++i) {\n    if (str[i] == '+')\n      continue;\n    ++res;\n    for (int j(0); j < n; ++j)\n      str[i + j] = (str[i + j] == '-' ? '+' : '-');\n  }\n  for (; i < str.length(); ++i) {\n    if (str[i] == '-')\n      return -1;\n  }\n  return res;\n}\n\nint p2(char *cstr) {\n  string str;\n  size_t len(0);\n  bool rev(false);\n  int i(1);\n  cin >> str;\n  len = str.copy(cstr, 20);\n  while (i < len) {\n    if (cstr[i] == '0') {\n      rev = true;\n      break;\n    }\n    if (cstr[i - 1] > cstr[i]) {\n      rev = true;\n      break;\n    }\n    ++i;\n  }\n  if (rev) {\n    rev = false;\n    while (i > 0) {\n      --i;\n      --cstr[i];\n      if (i == 0)\n        break;\n      if (cstr[i - 1] <= cstr[i])\n        break;\n    }\n    for (++i; i < len; ++i) {\n      cstr[i] = '9';\n    }\n    if (cstr[0] == '0')\n      return 1;\n  }\n  return 0;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  char cstr[1024] = {0};\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    memset(cstr, 0, 1024);\n    r1 = p2(cstr);\n    cout << \"Case #\" << i + 1 << \": \" << cstr + r1 << endl;\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/8.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\nint p1() {\n  string str;\n  int n(0), res(0), i(0);\n  cin >> str >> n;\n  for (i = 0; i <= str.length() - n; ++i) {\n    if (str[i] == '+')\n      continue;\n    ++res;\n    for (int j(0); j < n; ++j)\n      str[i + j] = (str[i + j] == '-' ? '+' : '-');\n  }\n  for (; i < str.length(); ++i) {\n    if (str[i] == '-')\n      return -1;\n  }\n  return res;\n}\n\nint p2(char *cstr) {\n  string str;\n  size_t len(0);\n  bool rev(false);\n  int i(1);\n  cin >> str;\n  len = str.copy(cstr, 20);\n  while (i < len) {\n    if (cstr[i] == '0') {\n      rev = true;\n      break;\n    }\n    if (cstr[i - 1] > cstr[i]) {\n      rev = true;\n      break;\n    }\n    ++i;\n  }\n  if (rev) {\n    rev = false;\n    while (i > 0) {\n      --i;\n      --cstr[i];\n      if (i == 0)\n        break;\n      if (cstr[i - 1] <= cstr[i])\n        break;\n    }\n    for (++i; i < len; ++i) {\n      cstr[i] = '9';\n    }\n    if (cstr[0] == '0')\n      return 1;\n  }\n  return 0;\n}\n\nint p3(unsigned long long &ma, unsigned long long &mi) {\n  unsigned long long k(0), n(0);\n  int kl(0);\n  cin >> n >> k;\n  for (unsigned long long j(k); j != 0; j >>= 1) {\n    kl++;\n  }\n  ma = n >> kl;\n  if (ma == 0) {\n    mi = 0;\n    return 0;\n  }\n  if (((n) & (1 << (kl - 1))) != 0)\n    mi = ma;\n  else\n    mi = ma - 1;\n  if (kl == 1)\n    return 0;\n  k -= (1 << (kl - 1));\n  if (k > (n & ((1 << (kl - 1)) - 1))) {\n    unsigned long long tmp(mi);\n    mi = ma - 1;\n    ma = tmp;\n  }\n\n  return 0;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  unsigned long long ma(0), mi(0);\n  char cstr[1024] = {0};\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    memset(cstr, 0, 1024);\n    r1 = p3(ma, mi);\n    cout << \"Case #\" << i + 1 << \": \" << ma << ' ' << mi << endl;\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/8.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\nint p1() {\n  string str;\n  int n(0), res(0), i(0);\n  cin >> str >> n;\n  for (i = 0; i <= str.length() - n; ++i) {\n    if (str[i] == '+')\n      continue;\n    ++res;\n    for (int j(0); j < n; ++j)\n      str[i + j] = (str[i + j] == '-' ? '+' : '-');\n  }\n  for (; i < str.length(); ++i) {\n    if (str[i] == '-')\n      return -1;\n  }\n  return res;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    r1 = p1();\n    cout << \"Case #\" << i + 1 << \": \";\n    if (r1 < 0)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << r1 << endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/8.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\nint p1() {\n  int r, c, i, j;\n  char csh[32][32] = {0};\n  cin >> r >> c;\n  for (i = 0; i < r; ++i)\n    for (int j = 0; j < c; ++j)\n      cin >> csh[i][j];\n  for (i = 0; i < r; ++i) {\n    char f = '?';\n    for (j = 0; j < c; ++j) {\n      if (csh[i][j] != '?') {\n        f = csh[i][j];\n        break;\n      }\n    }\n    if (f == '?') {\n      continue;\n    }\n    for (j = 0; j < c; ++j) {\n      if (csh[i][j] != '?')\n        f = csh[i][j];\n      else\n        csh[i][j] = f;\n    }\n    for (int k = i - 1; k >= 0; --k) {\n      if (csh[k][0] == '?')\n        memcpy(csh[k], csh[i], c);\n      else\n        break;\n    }\n  }\n  for (int k = 1; k < r; ++k)\n    if (csh[k][0] == '?')\n      memcpy(csh[k], csh[k - 1], c);\n  for (i = 0; i < r; ++i) {\n    for (j = 0; j < c; ++j)\n      cout << csh[i][j];\n    cout << endl;\n  }\n  return 0;\n}\n\nbool p2pack(int f[60][60], int r[], int t[], int mi, int ma, int n, int p,\n            int ro) {\n  int a, b, i;\n  if (ro > n)\n    return true;\n  for (i = 1; i <= p; ++i) {\n    if (f[ro][i] == 0)\n      continue;\n    a = ceil(f[ro][i] \/ 1.1 \/ r[ro]);\n    b = floor(f[ro][i] \/ 0.9 \/ r[ro]);\n    if (a > b)\n      continue;\n    if (b < mi)\n      continue;\n    if (ma < a)\n      return false;\n    mi = max(mi, a);\n    ma = min(ma, b);\n    if (ro == n) {\n      t[ro] = i;\n      return true;\n    } else if (!p2pack(f, r, t, mi, ma, n, p, ro + 1))\n      continue;\n    else {\n      t[ro] = i;\n      return true;\n    }\n  }\n  return false;\n}\nint p2() {\n  int res(0), i, j;\n  int f[60][60] = {0};\n  int n, p, r[60] = {0}, t[60];\n  cin >> n >> p;\n  for (i = 1; i <= n; ++i)\n    cin >> r[i];\n  for (i = 1; i <= n; ++i) {\n    t[i] = 1;\n    for (j = 1; j <= p; ++j)\n      cin >> f[i][j];\n    sort(f[i] + 1, f[i] + 1 + p);\n  }\n  int mi = 1, ma = 1000001;\n  for (i = 1; i <= p; ++i) {\n    mi = ceil(f[1][i] \/ 1.1 \/ r[1]);\n    ma = floor(f[1][i] \/ 0.9 \/ r[1]);\n    if (ma < 1)\n      continue;\n    if (mi > ma)\n      continue;\n    if (p2pack(f, r, t, mi, ma, n, p, 2)) {\n      res++;\n      for (j = 2; j <= n; ++j)\n        f[j][t[j]] = 0;\n    }\n  }\n  return res;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    r1 = p2();\n    cout << \"Case #\" << i + 1 << \": \" << r1 << endl; \/\/ p1();\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/8.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\nint p1() {\n  int r, c, i, j;\n  char csh[32][32] = {0};\n  cin >> r >> c;\n  for (i = 0; i < r; ++i)\n    for (int j = 0; j < c; ++j)\n      cin >> csh[i][j];\n  for (i = 0; i < r; ++i) {\n    char f = '?';\n    for (j = 0; j < c; ++j) {\n      if (csh[i][j] != '?') {\n        f = csh[i][j];\n        break;\n      }\n    }\n    if (f == '?') {\n      continue;\n    }\n    for (j = 0; j < c; ++j) {\n      if (csh[i][j] != '?')\n        f = csh[i][j];\n      else\n        csh[i][j] = f;\n    }\n    for (int k = i - 1; k >= 0; --k) {\n      if (csh[k][0] == '?')\n        memcpy(csh[k], csh[i], c);\n      else\n        break;\n    }\n  }\n  for (int k = 1; k < r; ++k)\n    if (csh[k][0] == '?')\n      memcpy(csh[k], csh[k - 1], c);\n  for (i = 0; i < r; ++i) {\n    for (j = 0; j < c; ++j)\n      cout << csh[i][j];\n    cout << endl;\n  }\n  return 0;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    \/\/ r1=p1();\n    cout << \"Case #\" << i + 1 << \": \" << endl;\n    p1();\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017b.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/22.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\ndouble p1() {\n  int d, n, k(0), s(0);\n  int i(0);\n  double ma(0), t(0);\n  cin >> d >> n;\n  for (i = 0; i < n; ++i) {\n    cin >> k >> s;\n    t = (d - k) * 1.0 \/ s;\n    ma = max(ma, t);\n  }\n  return d \/ ma;\n}\n\nint p2() { return 0; }\n\nint p3() { return 0; }\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  double r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    r1 = p1();\n    printf(\"Case #%d: %.8lf\\n\", i + 1, r1);\n    \/\/ cout<<\"Case #\"<<i+1<<\": \"<<r1<<endl;\/\/p1();\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017b.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/22.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\ndouble p1() {\n  long int d, n, k(0), s(0);\n  int i(0);\n  double ma(0), t(0);\n  cin >> d >> n;\n  for (i = 0; i < n; ++i) {\n    cin >> k >> s;\n    t = (d - k) * 1.0 \/ s;\n    ma = max(ma, t);\n  }\n  return d \/ ma;\n}\n\nint p2() {\n  int n, r, o, y, g, b, v;\n  int i, j;\n  char c1, c2, c3, c4, c5, c6;\n  int q[7] = {0};\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  if (r > y + b || y > r + b || b > r + y) {\n    cout << \"IMPOSSIBLE\";\n    return 0;\n  }\n  if (r >= max(y, b)) {\n    c1 = 'R';\n    q[1] = r;\n    if (y >= b) {\n      c2 = 'Y';\n      q[2] = y;\n      c3 = 'B';\n      q[3] = b;\n    } else {\n      c3 = 'Y';\n      q[3] = y;\n      c2 = 'B';\n      q[2] = b;\n    }\n  } else if (y >= max(r, b)) {\n    c1 = 'Y';\n    q[1] = y;\n    if (r >= b) {\n      c2 = 'R';\n      q[2] = r;\n      c3 = 'B';\n      q[3] = b;\n    } else {\n      c3 = 'R';\n      q[3] = r;\n      c2 = 'B';\n      q[2] = b;\n    }\n  } else {\n    c1 = 'B';\n    q[1] = b;\n    if (r >= y) {\n      c2 = 'R';\n      q[2] = r;\n      c3 = 'Y';\n      q[3] = y;\n    } else {\n      c3 = 'R';\n      q[3] = r;\n      c2 = 'Y';\n      q[2] = y;\n    }\n  }\n  while (q[1] + q[2] + q[3] > 0) {\n    if (q[1] > 0)\n      cout << c1;\n    if (q[2] > 0) {\n      cout << c2;\n      if (q[2] + q[3] - q[1] > 0) {\n        cout << c3;\n        if (q[3] > 0)\n          --q[3];\n      }\n      --q[2];\n    } else if (q[3] > 0) {\n      cout << c3;\n      --q[3];\n    }\n    if (q[1] > 0)\n      --q[1];\n  }\n  return 0;\n}\n\nint e[128] = {0}, s[128] = {0};\nunsigned int d[101][101] = {0};\n\ndouble p3Calc(int n, int q, int u, int v) {\n  int dis[101] = {0};\n  int bk[101] = {0};\n  double res(0);\n  int i, j;\n  for (i = 0; i < n; ++i)\n    ;\n  return res;\n}\nint p3() {\n  int i, j, n, q, e[128] = {0}, s[128] = {0};\n  unsigned int d[101][101] = {0};\n  int u, v;\n  char str[32] = {0};\n  cin >> n >> q;\n  for (i = 0; i < n; ++i)\n    cin >> e[i] >> s[i];\n  for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n      cin >> d[i][j];\n  for (i = 0; i < q; ++i) {\n    cin >> u >> v;\n    sprintf(str, \"%.8lf\", p3Calc(n, q, u, v));\n    cout << ' ' << str;\n  }\n  return 0;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    \/\/ r1=p1();\n    \/\/ printf(\"Case #%d: %.8lf\\n\",i+1,r1);\n    cout << \"Case #\" << i + 1 << \": \"; \/\/<<r1<<endl;\n    p2();\n    cout << endl;\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"stoness","func":"\/\/\n\/\/  main2017b.cpp\n\/\/  Codejam2015\n\/\/\n\/\/  Created by stoness on 17\/4\/22.\n\/\/  Copyright \u00a9 2017\u5e74 sts. All rights reserved.\n\/\/\n\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <iostream>\n#include <list>\n\nusing namespace std;\n\ndouble p1() {\n  long int d, n, k(0), s(0);\n  int i(0);\n  double ma(0), t(0);\n  cin >> d >> n;\n  for (i = 0; i < n; ++i) {\n    cin >> k >> s;\n    t = (d - k) * 1.0 \/ s;\n    ma = max(ma, t);\n  }\n  return d \/ ma;\n}\n\nint p2() {\n  int n, r, o, y, g, b, v;\n  int i, j;\n  char c1, c2, c3, c4, c5, c6;\n  int q[7] = {0};\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  if (r > y + b || y > r + b || b > r + y) {\n    cout << \"IMPOSSIBLE\";\n    return 0;\n  }\n  if (r >= max(y, b)) {\n    c1 = 'R';\n    q[1] = r;\n    if (y >= b) {\n      c2 = 'Y';\n      q[2] = y;\n      c3 = 'B';\n      q[3] = b;\n    } else {\n      c3 = 'Y';\n      q[3] = y;\n      c2 = 'B';\n      q[2] = b;\n    }\n  } else if (y >= max(r, b)) {\n    c1 = 'Y';\n    q[1] = y;\n    if (r >= b) {\n      c2 = 'R';\n      q[2] = r;\n      c3 = 'B';\n      q[3] = b;\n    } else {\n      c3 = 'R';\n      q[3] = r;\n      c2 = 'B';\n      q[2] = b;\n    }\n  } else {\n    c1 = 'B';\n    q[1] = b;\n    if (r >= y) {\n      c2 = 'R';\n      q[2] = r;\n      c3 = 'Y';\n      q[3] = y;\n    } else {\n      c3 = 'R';\n      q[3] = r;\n      c2 = 'Y';\n      q[2] = y;\n    }\n  }\n  while (q[1] + q[2] + q[3] > 0) {\n    if (q[1] > 0)\n      cout << c1;\n    if (q[2] > 0) {\n      cout << c2;\n      if (q[2] + q[3] - q[1] > 0) {\n        cout << c3;\n        if (q[3] > 0)\n          --q[3];\n      }\n      --q[2];\n    } else if (q[3] > 0) {\n      cout << c3;\n      --q[3];\n    }\n    if (q[1] > 0)\n      --q[1];\n  }\n  return 0;\n}\n\nint e[128] = {0}, s[128] = {0};\nlong d[101][101] = {0};\n\ndouble p3Calc(int n, int q, int u, int v) {\n  double dis[101] = {0};\n  int bk[101] = {0};\n  double res(0), x;\n  int i, j;\n  for (i = 0; i < n; ++i)\n    dis[i] = 10000000001;\n  dis[n - 1] = 0;\n  for (i = n - 2; i >= 0; --i) {\n    for (j = i + 1; j < n; ++j) {\n      int dij(0);\n      for (int a = i + 1; a <= j; a++)\n        dij += d[a - 1][a];\n      if (dij > e[i])\n        break;\n      x = 1.0 * dij \/ s[i];\n      dis[i] = min(dis[i], dis[j] + x);\n    }\n  }\n  res = dis[0];\n  return res;\n}\nint p3() {\n  int i, j, n, q;\n  int u, v;\n  char str[32] = {0};\n  cin >> n >> q;\n  for (i = 0; i < n; ++i)\n    cin >> e[i] >> s[i];\n  for (i = 0; i < n; ++i)\n    for (j = 0; j < n; ++j)\n      cin >> d[i][j];\n  for (i = 0; i < q; ++i) {\n    cin >> u >> v;\n    sprintf(str, \"%.8lf\", p3Calc(n, q, u - 1, v - 1));\n    cout << ' ' << str;\n  }\n  return 0;\n}\n\nint main(int argc, const char *argv[]) {\n  int T(0);\n  int r1(0);\n  cin >> T;\n  for (int i = 0; i < T; ++i) {\n    \/\/ r1=p1();\n    \/\/ printf(\"Case #%d: %.8lf\\n\",i+1,r1);\n    cout << \"Case #\" << i + 1 << \": \"; \/\/<<r1<<endl;\n    p3();\n    cout << endl;\n    \/\/ if (r1<0) cout<<\"IMPOSSIBLE\"<<endl;\n    \/\/ else      cout<<r1<<endl;\n  }\n  return 0;\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nlong long ans;\nint n;\nchar ch[20];\nint a[20];\n\nvoid solve(int x) {\n  for (int i = 1; i < x; ++i) {\n    if (a[i] < a[i - 1]) {\n      a[i - 1] -= 1;\n      for (int j = i; j < x; ++j) {\n        a[j] = 9;\n      }\n      solve(i);\n      return;\n    }\n  }\n}\n\nvoid work() {\n  scanf(\"%s\", ch);\n  n = strlen(ch);\n  for (int i = 0; i < n; ++i) {\n    a[i] = ch[i] - '0';\n  }\n  solve(n);\n  ans = 0;\n  for (int i = 0; i < n; ++i) {\n    ans *= 10;\n    ans += a[i];\n  }\n  printf(\"%lld\\n\", ans);\n}\n\nint main() {\n  int TC;\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\nusing namespace std;\n\nlong long n, k;\n\nmap<long long, long long> f;\n\nvoid work() {\n  scanf(\"%lld%lld\", &n, &k);\n  priority_queue<long long> q;\n  while (!q.empty())\n    q.pop();\n  f.clear();\n  q.push(n);\n  f[n] = 1;\n  while (!q.empty()) {\n    long long x = q.top();\n    \/\/ printf(\"x=%lld \", x);\n    q.pop();\n    long long y = f[x];\n    \/\/ printf(\"y = %lld k = %lld\\n\", y, k);\n    if (y >= k) {\n      printf(\"%lld %lld\\n\", x \/ 2, (x - 1) \/ 2);\n      return;\n    }\n    k -= y;\n    if (f[x \/ 2] == 0) {\n      q.push(x \/ 2);\n      \/\/ printf(\"push %lld\\n\", x\/2);\n    }\n    f[x \/ 2] += y;\n    if (f[(x - 1) \/ 2] == 0) {\n      q.push((x - 1) \/ 2);\n      \/\/ printf(\"push %lld\\n\", (x-1)\/2);\n    }\n    f[(x - 1) \/ 2] += y;\n  }\n}\n\nint main() {\n  int TC;\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint TC, ans, n, k;\nchar a[1111];\n\nvoid work() {\n  ans = 0;\n  scanf(\"%s%d\", a, &k);\n  n = strlen(a);\n  for (int i = 0; i < n; ++i) {\n    if (a[i] == '-') {\n      if (i + k > n) {\n        printf(\"IMPOSSIBLE\\n\");\n        return;\n      }\n      for (int j = i; j < i + k; ++j) {\n        a[j] = a[j] == '-' ? '+' : '-';\n      }\n      ans++;\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A.out\", \"w\", stdout);\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint n, p, b[10], a[10][20], c[20];\nint ans;\n\nvoid calc() {\n  int ret = 0;\n  double xl = b[0] * 0.9, xr = b[0] * 1.1;\n  double yl = b[1] * 0.9, yr = b[1] * 1.1;\n  \/\/ printf(\"%lf %lf\\n\", xl, xr);\n  for (int i = 0; i < p; ++i) {\n    double x = a[0][i], y = a[1][c[i]];\n    int xll = (int)(x \/ xl);\n    int xrr = (int)round(x \/ xr);\n    int yll = (int)(y \/ yl);\n    int yrr = (int)ceil(y \/ yr);\n    \/\/ printf(\"%lf %lf\\n\", y\/yl, y\/yr);\n    \/\/ printf(\"%d %d\\n\", yll, yrr);\n    if (xrr <= xll && yrr <= yll)\n      ret++;\n  }\n  ans = max(ans, ret);\n}\n\nvoid work() {\n  scanf(\"%d%d\", &n, &p);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &b[i]);\n  }\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < p; ++j) {\n      scanf(\"%d\", &a[i][j]);\n    }\n  }\n  for (int i = 0; i < p; ++i) {\n    c[i] = i;\n  }\n  ans = 0;\n  calc();\n  while (next_permutation(c, c + p)) {\n    calc();\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0s.out\", \"w\", stdout);\n  int TC;\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nint n, m;\nchar a[30][30];\n\nvoid work() {\n  scanf(\"%d%d\", &n, &m);\n  memset(a, 0, sizeof(a));\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", a[i]);\n  }\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '?') {\n        if (j > 0 && a[i][j - 1] != '?') {\n          a[i][j] = a[i][j - 1];\n          continue;\n        }\n        int k = j;\n        for (; j < m && a[i][j] == '?'; ++j)\n          ;\n        if (j < m) {\n          for (; k < j; ++k)\n            a[i][k] = a[i][j];\n        }\n      }\n    }\n  }\n\n  for (int i = 0; i < n; ++i) {\n    if (a[i][0] == '?') {\n      if (i > 0) {\n        memcpy(a[i], a[i - 1], sizeof(a[i]));\n      } else {\n        int k = i;\n        for (; i < n && a[i][0] == '?'; ++i)\n          ;\n        if (i < n) {\n          for (; k < i; ++k)\n            memcpy(a[k], a[i], sizeof(a[i]));\n        }\n      }\n    }\n  }\n  for (int i = 0; i < n; ++i) {\n    printf(\"%s\\n\", a[i]);\n  }\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int TC;\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d:\\n\", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nvoid work() {\n  double D;\n  int n;\n  scanf(\"%lf%d\", &D, &n);\n  double ans = 1e20;\n  for (int i = 0; i < n; ++i) {\n    double x, y;\n    scanf(\"%lf%lf\", &x, &y);\n    ans = min(ans, D \/ ((D - x) \/ y));\n  }\n  printf(\"%lf\\n\", ans);\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int TC;\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nchar ch[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nint b[1111], a[10];\nint n;\n\nbool check(int x, int y) {\n  if (x > y)\n    swap(x, y);\n  return (x == y) || (x + 1 == y) || ((x & 1) && (x + 2 == y));\n}\n\nbool solve() {\n  memset(b, -1, sizeof(b));\n  for (int i = 0; i < n; ++i) {\n    if (a[1]) {\n      if (a[4]) {\n        if (i > 0 && check(b[i - 1], 4)) {\n          int x = (b[i - 1] + 3) % 6;\n          if (a[x]) {\n            b[i] = x;\n            i++;\n            a[x]--;\n          } else\n            return false;\n        }\n        b[i] = 4, b[i + 1] = 1;\n        a[1]--, a[4]--;\n        \/\/ printf(\"%d %d\\n\", a[1], a[4]);\n        ++i;\n      } else {\n        return false;\n      }\n    } else if (a[3]) {\n      if (a[0]) {\n        if (i > 0 && check(b[i - 1], 0)) {\n          int x = (b[i - 1] + 3) % 6;\n          if (a[x]) {\n            b[i] = x;\n            i++;\n            a[x]--;\n          } else\n            return false;\n        }\n        b[i] = 0, b[i + 1] = 3;\n        ++i;\n        a[3]--, a[0]--;\n      } else\n        return false;\n    } else if (a[5]) {\n      if (a[2]) {\n        if (i > 0 && check(b[i - 1], 2)) {\n          int x = (b[i - 1] + 3) % 6;\n          if (a[x]) {\n            b[i] = a[x];\n            i++;\n            a[x]--;\n          } else\n            return false;\n        }\n        b[i] = 2, b[i + 1] = 5;\n        ++i;\n        a[2]--, a[5]--;\n      } else\n        return false;\n    } else {\n      \/\/ printf(\"i=%d\\n\", i);\n      if (i == 0) {\n        if (a[0])\n          b[0] = 0, a[0]--;\n        else if (a[2])\n          b[0] = 2, a[2]--;\n        else if (a[4])\n          b[0] = 4, a[4]--;\n      } else {\n        int x = -1, mx = 0;\n        for (int j = 0; j < 6; j += 2) {\n          if (a[j] && !check(b[i - 1], j)) {\n            if (a[j] > mx) {\n              mx = a[j], x = j;\n            }\n          }\n        }\n        if (x == -1)\n          return false;\n        a[x]--, b[i] = x;\n      }\n      \/\/ printf(\"bi=%d\\n\", b[i]);\n      if (b[i] == -1)\n        return false;\n    }\n  }\n  return !check(b[0], b[n - 1]);\n  return true;\n}\n\nvoid work() {\n\n  scanf(\"%d\", &n);\n  for (int i = 0; i < 6; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  if (!solve())\n    printf(\"IMPOSSIBLE\\n\");\n  else {\n    for (int i = 0; i < n; ++i) {\n      printf(\"%c\", ch[b[i]]);\n    }\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"B-small-attempt1.out\", \"w\", stdout);\n  int TC;\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"SummerDAway","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\ndouble f[111], sum[111], e[111], s[111], edge[111][111];\nint n, q;\n\nvoid solve(int u, int t) {\n  memset(f, 0, sizeof(f));\n  memset(sum, 0, sizeof(sum));\n  for (int i = 1; i <= n; ++i) {\n    sum[i] = sum[i - 1] + edge[i - 1][i];\n    \/\/ printf(\"%lf\\n\", sum[i]);\n  }\n  f[1] = 0;\n  for (int i = 2; i <= n; ++i) {\n    f[i] = 1e20;\n    for (int j = 1; j < i; ++j) {\n      if (e[j] >= (sum[i] - sum[j])) {\n        \/\/ printf(\"i = %d j=%d\\n\", i, j);\n        \/\/ printf(\"%lf\\n\", (sum[i]-sum[j-1])\/s[j]);\n        f[i] = min(f[i], f[j] + (sum[i] - sum[j]) \/ s[j]);\n      }\n    }\n  }\n  printf(\"%lf\", f[n]);\n}\n\nvoid work() {\n  scanf(\"%d%d\", &n, &q);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%lf%lf\", &e[i], &s[i]);\n  }\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      scanf(\"%lf\", &edge[i][j]);\n    }\n  }\n  while (q--) {\n    int u, t;\n    scanf(\"%d%d\", &u, &t);\n    solve(u, t);\n    if (q == 0)\n      printf(\"\\n\");\n    else\n      printf(\" \");\n  }\n}\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  int TC;\n  scanf(\"%d\", &TC);\n  for (int tc = 1; tc <= TC; ++tc) {\n    printf(\"Case #%d: \", tc);\n    work();\n  }\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); t++) {\n    string line;\n    cin >> line;\n    int sz = line.size();\n    int idx = -1;\n    for (int i = sz - 1; i > 0; i--) {\n      char now = line[i];\n      char pre = line[i - 1];\n      int num = (int)now - (int)('0');\n      int prenum = (int)pre - (int)('0');\n      if (num < prenum) {\n        idx = i;\n        prenum = prenum - 1;\n        if (prenum == -1)\n          prenum = 9;\n      }\n      line[i - 1] = prenum + (int)('0');\n      \/\/ cout << line << endl;\n    }\n    if (idx != -1) {\n      for (int i = (idx); i < (sz); i++) {\n        line[i] = '9';\n      }\n    }\n    ll re = stoll(line);\n    printf(\"Case #%d: %lld\\n\", t, re);\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18 + 10;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); t++) {\n    ll n, k;\n    cin >> n >> k;\n    priority_queue<ll> pq;\n    pq.push(n);\n    ll minp = n;\n    ll maxp = n;\n    while (k--) {\n      ll now = pq.top();\n      pq.pop();\n      if (now & 1) {\n        pq.push((now - 1) \/ 2);\n        pq.push((now - 1) \/ 2);\n        minp = min(minp, (now - 1) \/ 2);\n        maxp = min(maxp, (now - 1) \/ 2);\n      } else {\n        pq.push((now - 1) \/ 2);\n        pq.push(now \/ 2);\n        minp = min(minp, (now - 1) \/ 2);\n        maxp = min(maxp, now \/ 2);\n      }\n    }\n    printf(\"Case #%d: %lld %lld\\n\", t, maxp, minp);\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); t++) {\n    string line;\n    int n;\n    cin >> line >> n;\n    int maxp = 0;\n    int idx = 0;\n    int sz = line.size();\n    while (idx <= sz - n) {\n      if (line[idx] == '-') {\n        maxp++;\n        for (int i = (idx); i < (idx + n); i++) {\n          if (line[i] == '-')\n            line[i] = '+';\n          else\n            line[i] = '-';\n        }\n      }\n      idx++;\n    }\n    int flag = 1;\n    while (idx < sz) {\n      if (line[idx] == '-') {\n        flag = 0;\n        break;\n      }\n      idx++;\n    }\n    if (flag) {\n      printf(\"Case #%d: %d\\n\", t, maxp);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    }\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint n, p;\nvi ins;\nvi need;\nvi pac1;\nvi pac2;\nint main() {\n  int test;\n  cin >> test;\n  for (int t = (1); t < (test + 1); t++) {\n    ins.clear();\n    pac1.clear();\n    pac2.clear();\n    need.clear();\n    cin >> n >> p;\n    \/\/ pac.assign(n,vi(p,0));\n    for (int i = (0); i < (n); i++) {\n      int tmp;\n      cin >> tmp;\n      need.push_back(tmp);\n    }\n    for (int i = (0); i < (p); i++) {\n      \/\/ REP(j,0,p){\n      \/\/ \tint tmp; cin >> tmp;\n      \/\/ \tpac[i][j] = tmp;\n      \/\/ }\n      int tmp;\n      cin >> tmp;\n      pac1.push_back(tmp);\n    }\n    if (n == 2) {\n      for (int i = (0); i < (p); i++) {\n        int tmp;\n        cin >> tmp;\n        pac2.push_back(tmp);\n      }\n    }\n    int cont = 0;\n    if (n == 1) {\n      for (int i = (0); i < (p); i++) {\n        for (int j = 1; j * need[0] * 9 \/ 10 <= pac1[i]; j++) {\n          if (pac1[i] >= ceil(j * need[0] * 9 \/ 10) &&\n              pac1[i] <= floor(j * need[0] * 11 \/ 10)) {\n            cont++;\n            break;\n          }\n        }\n      }\n    } else {\n      do {\n        int tmpcont = 0;\n        for (int i = (0); i < (p); i++) {\n          for (int j = 1; j * need[0] * 9 \/ 10 <= pac1[i] &&\n                          j * need[1] * 9 \/ 10 <= pac2[i];\n               j++) {\n            if (pac1[i] >= ceil(j * need[0] * 9 \/ 10) &&\n                pac1[i] <= floor(j * need[0] * 11 \/ 10) &&\n                pac2[i] >= ceil(j * need[1] * 9 \/ 10) &&\n                pac2[i] <= floor(j * need[1] * 11 \/ 10)) {\n              tmpcont++;\n              break;\n            }\n          }\n        }\n        cont = max(cont, tmpcont);\n      } while (next_permutation(pac2.begin(), pac2.end()));\n    }\n    printf(\"Case #%d: %d\\n\", t, cont);\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nchar all[30][30];\nint mark[30];\nint r, c;\nvoid pr() {\n  for (int i = (0); i < (r); i++) {\n    for (int j = (0); j < (c); j++) {\n      cout << all[i][j];\n    }\n    cout << endl;\n  }\n}\nvoid hor(int i, int j, char now) {\n  int j1 = j - 1, j2 = j + 1;\n  while (j1 >= 0) {\n    if (all[i][j1] == '?')\n      all[i][j1] = now;\n    else\n      break;\n    j1--;\n  }\n  while (j2 < c) {\n    if (all[i][j2] == '?')\n      all[i][j2] = now;\n    else\n      break;\n    j2++;\n  }\n}\nvoid ver(int i) {\n  int i1 = i - 1;\n  int i2 = i + 1;\n  while (i1 >= 0) {\n    if (mark[i1] == 0) {\n      for (int j = (0); j < (c); j++) {\n        all[i1][j] = all[i][j];\n      }\n    } else\n      break;\n    i1--;\n  }\n  while (i2 < r) {\n    if (mark[i2] == 0) {\n      for (int j = (0); j < (c); j++) {\n        all[i2][j] = all[i][j];\n      }\n    } else\n      break;\n    i2++;\n  }\n}\nint main() {\n  int test;\n  cin >> test;\n  for (int t = (1); t < (test + 1); t++) {\n    memset(mark, 0, sizeof(mark));\n    cin >> r >> c;\n    for (int i = (0); i < (r); i++) {\n      string line;\n      cin >> line;\n      for (int j = (0); j < (c); j++) {\n        all[i][j] = line[j];\n      }\n    }\n    for (int i = (0); i < (r); i++) {\n      for (int j = (0); j < (c); j++) {\n        if (all[i][j] != '?') {\n          hor(i, j, all[i][j]);\n          mark[i] = 1;\n        }\n      }\n    }\n    \/\/ pr();\n    for (int i = (0); i < (r); i++) {\n      if (mark[i] == 1) {\n        ver(i);\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n    pr();\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); t++) {\n    vpi all;\n    int d, n;\n    cin >> d >> n;\n    for (int i = (0); i < (n); i++) {\n      int k, s;\n      cin >> k >> s;\n      all.push_back(make_pair(k, s));\n    }\n    double tt = 0.0;\n    for (int i = (0); i < (n); i++) {\n      double ttt = ((double)d - all[i].first) \/ all[i].second;\n      tt = max(tt, ttt);\n    }\n    printf(\"Case #%d: %.7f\\n\", t, (double)d \/ tt);\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = (1); t < (T + 1); t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> G >> Y >> B >> V;\n    if (R >= G && R >= B && G + B >= R) {\n      string re = \"\";\n      int rb = R - G;\n      int rgb = B - (R - G);\n      int rg = G - rgb;\n      for (int i = (0); i < (rgb); i++)\n        re += \"RYB\";\n      for (int i = (0); i < (rg); i++)\n        re += \"RY\";\n      for (int i = (0); i < (rb); i++)\n        re += \"RB\";\n      printf(\"Case #%d: \", t);\n      cout << re << endl;\n    } else if (G >= R && G >= B && R + B >= G) {\n      string re = \"\";\n      int rb = G - R;\n      int rgb = B - rb;\n      int rg = R - rgb;\n      for (int i = (0); i < (rgb); i++)\n        re += \"YRB\";\n      for (int i = (0); i < (rg); i++)\n        re += \"YR\";\n      for (int i = (0); i < (rb); i++)\n        re += \"YB\";\n      printf(\"Case #%d: \", t);\n      cout << re << endl;\n    } else if (B >= G && B >= R && G + R >= B) {\n      string re = \"\";\n      int rb = B - R;\n      int rgb = G - rb;\n      int rg = R - rgb;\n      for (int i = (0); i < (rgb); i++)\n        re += \"BRY\";\n      for (int i = (0); i < (rg); i++)\n        re += \"BR\";\n      for (int i = (0); i < (rb); i++)\n        re += \"BY\";\n      printf(\"Case #%d: \", t);\n      cout << re << endl;\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    }\n  }\n  return 0;\n}\n"}
{"target":"tangziyi001","func":"\/*\n *\n *\tCreated by Ziyi Tang\n *\n *\/\n\n\/\/#include <bits\/stdc++.h>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pi;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\nconst int INF = 0x3f3f3f;\nconst ll INFL = (ll)1E18;\nconst int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\nvvpi all;\nvpi hor;\nmap<vi, double> mm;\npriority_queue<pair<double, vi>> pq; \/\/ min-time, <idx, horse#, rem-dis>\n\ndouble dij(int s, int t) {\n  double re = 1e18;\n  while (!pq.empty())\n    pq.pop();\n  mm.clear();\n  vi tmp;\n  tmp.push_back(s);\n  tmp.push_back(-1);\n  tmp.push_back(hor[s].first);\n  pq.push(make_pair(0.0, tmp));\n  mm[tmp] = 0.0;\n  while (!pq.empty()) {\n    pair<double, vi> now = pq.top();\n    pq.pop();\n    double nowtime = now.first;\n    if (nowtime > mm[now.second])\n      continue;\n    int idx = (now.second)[0];\n    if (idx == t)\n      re = min(re, nowtime);\n    int horse = (now.second)[1];\n    int rem = (now.second)[2];\n    int tsz = all[idx].size();\n    \/\/ cout << idx << \" \" << horse << \" \"  << rem << \" \" << nowtime << endl;\n    for (int i = (0); i < (tsz); i++) {\n      int nxtidx = all[idx][i].first;\n      int dis = all[idx][i].second;\n      \/\/ Still the current house\n      if (horse != -1 && rem >= dis) {\n        double nxttime = nowtime + (double)dis \/ hor[horse].second;\n        tmp.clear();\n        tmp.push_back(nxtidx);\n        tmp.push_back(horse);\n        tmp.push_back(rem - dis);\n        if (mm.find(tmp) == mm.end() || mm[tmp] > nxttime) {\n          mm[tmp] = nxttime;\n          pq.push(make_pair(nxttime, tmp));\n        }\n      }\n      double nxttime = nowtime + (double)dis \/ hor[idx].second;\n      tmp.clear();\n      tmp.push_back(nxtidx);\n      tmp.push_back(idx);\n      tmp.push_back(hor[idx].first - dis);\n      if (mm.find(tmp) == mm.end() || mm[tmp] > nxttime) {\n        mm[tmp] = nxttime;\n        pq.push(make_pair(nxttime, tmp));\n      }\n    }\n  }\n  return re;\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int test = (1); test < (T + 1); test++) {\n    int n, q;\n    cin >> n >> q;\n    all.clear();\n    hor.clear();\n    all.assign(n, vpi(0, pi(0, 0)));\n    for (int i = (0); i < (n); i++) {\n      int e, s;\n      cin >> e >> s;\n      hor.push_back(make_pair(e, s));\n    }\n    for (int i = (0); i < (n); i++) {\n      for (int j = (0); j < (n); j++) {\n        int tmp;\n        cin >> tmp;\n        if (tmp != -1) {\n          all[i].push_back(make_pair(j, tmp));\n        }\n      }\n    }\n    printf(\"Case #%d:\", test);\n    for (int i = (0); i < (q); i++) {\n      int s, t;\n      cin >> s >> t;\n      s--;\n      t--;\n      double re = dij(s, t);\n      printf(\" %.7f\", re);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid work() {\n  string s;\n  cin >> s;\n  int pos;\n  for (int c = 1; c <= 18; ++c) {\n    pos = -1;\n    for (int i = 0; i < (int)s.size() - 1; ++i) {\n      if (s[i] > s[i + 1]) {\n        s[i]--;\n        pos = i + 1;\n        break;\n      }\n    }\n    if (pos != -1) {\n      for (int i = pos; i < (int)s.size(); ++i) {\n        s[i] = '9';\n      }\n    }\n  }\n  for (int i = 0; i < (int)s.size(); ++i) {\n    if (s[i] != '0') {\n      pos = i;\n      break;\n    }\n  }\n  for (int i = pos; i < (int)s.size(); ++i) {\n    cout << s[i];\n  }\n  cout << endl;\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nstruct node {\n  long long u, v;\n  node(int _u = 0, int _v = 0) : u(_u), v(_v) {}\n  bool operator<(const node &r) const { return u < r.u; }\n};\n\nvoid work() {\n  long long n, k;\n  cin >> n >> k;\n  map<long long, long long> f;\n  f[n] = 1;\n  long long sum = 0;\n  long long l = (n - 1) \/ 2, r = n \/ 2;\n  while (sum < k) {\n    long long u = f.rbegin()->first, v = f.rbegin()->second;\n    f.erase(u);\n    sum += v;\n    l = (u - 1) \/ 2;\n    r = u \/ 2;\n    f[l] += v;\n    f[r] += v;\n  }\n  cout << r << ' ' << l << endl;\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <cstdio>\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid work() {\n  string s;\n  int k;\n  cin >> s >> k;\n  int len = (int)s.size();\n  int ans = 0;\n  for (int i = 0; i <= len - k; ++i) {\n    if (s[i] == '-') {\n      ans++;\n      for (int j = i; j < i + k; ++j) {\n        s[j] = (s[j] == '-' ? '+' : '-');\n      }\n    }\n  }\n  for (int i = len - k + 1; i < len; ++i) {\n    if (s[i] == '-') {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  }\n  cout << ans << endl;\n}\n\nint main() {\n  freopen(\"out.txt\", \"w\", stdout);\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\n\nint n, m;\n\nint a[N];\nint u[N][N], v[N][N];\nint ans;\nbool vst[N][N];\nint max_ans;\n\nint dfs(int p, int i, int cur, int l, int r) {\n  if (p == m + 1) {\n    ans = max(ans, cur);\n    if (ans == max_ans) {\n      return 1;\n    }\n    return 0;\n  }\n  if (i == n + 1) {\n    int res = dfs(p + 1, 1, cur + 1, -1, -1);\n    return res;\n  }\n  if (i == 1) {\n    int res = 0;\n    if (u[1][p] <= v[1][p]) {\n      res = dfs(p, i + 1, cur, u[1][p], v[1][p]);\n      if (res) {\n        return 1;\n      }\n    }\n    if (m - p + cur > ans) {\n      res = dfs(p + 1, 1, cur, -1, -1);\n    }\n    return res;\n  }\n  for (int j = 1; j <= m; ++j) {\n    if (!vst[i][j]) {\n      int uu = max(u[i][j], l);\n      int vv = min(v[i][j], r);\n      if (uu <= vv) {\n        vst[i][j] = true;\n        int res = dfs(p, i + 1, cur, uu, vv);\n        if (res == 1) {\n          return 1;\n        }\n        vst[i][j] = false;\n      }\n    }\n  }\n  return 0;\n}\n\nint calc(int k, int p) {\n  for (int i = 1; i <= 4; ++i) {\n    if (k >= 0.9 * p * i && k <= 1.1 * p * i) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvoid work() {\n  memset(vst, 0, sizeof vst);\n  ans = 0;\n  cin >> n >> m;\n  max_ans = m;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int w, i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) {\n      scanf(\"%d\", &w);\n      u[i][j] = (int)ceil(w \/ 1.1 \/ a[i]);\n      v[i][j] = (int)floor(w \/ 0.9 \/ a[i]);\n      if (u[i][j] < 5) {\n        u[i][j] = v[i][j] = calc(w, a[i]);\n        if (u[i][j] == -1) {\n          u[i][j] = 0;\n        }\n      }\n    }\n  }\n  dfs(1, 1, 0, -1, -1);\n  cout << ans << endl;\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 100;\n\nint n, m;\n\nvoid handle_line(string &s) {\n  char last = '?';\n  for (int i = 0; i < m; ++i) {\n    if (s[i] == '?') {\n      s[i] = last;\n    } else {\n      last = s[i];\n    }\n  }\n  for (int i = m - 1; i >= 0; --i) {\n    if (s[i] == '?') {\n      s[i] = last;\n    } else {\n      last = s[i];\n    }\n  }\n}\n\nstring s[N];\n\nvoid work() {\n  cin >> n >> m;\n  string qs;\n  for (int i = 1; i <= m; ++i) {\n    qs.push_back('?');\n  }\n  int st = -1;\n  for (int i = 1; i <= n; ++i) {\n    cin >> s[i];\n    if (s[i] != qs) {\n      st = i;\n    }\n  }\n  handle_line(s[st]);\n  for (int i = st - 1; i >= 1; --i) {\n    if (s[i] == qs) {\n      s[i] = s[i + 1];\n    } else {\n      handle_line(s[i]);\n    }\n  }\n  for (int i = st + 1; i <= n; ++i) {\n    if (s[i] == qs) {\n      s[i] = s[i - 1];\n    } else {\n      handle_line(s[i]);\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    cout << s[i] << endl;\n  }\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d:\\n\", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1100;\nint k[N], s[N];\n\nvoid work() {\n  int d, n;\n  cin >> d >> n;\n  double mt = 0;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d%d\", &k[i], &s[i]);\n    mt = max(mt, double(d - k[i]) \/ s[i]);\n  }\n  cout << fixed << setprecision(9) << d \/ mt << endl;\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1100;\n\nint n, cnt[6];\nint ans[N];\nchar cc[6] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\nvoid pre() { ans[0] = -10000; }\n\nbool nb(int u, int v) {\n  int res = u - v;\n  return (res == 1 || res == -1 || res == 5 || res == -5 || res == 0);\n}\n\nbool dfs(int p) {\n  if (p == n + 1) {\n    if (!nb(ans[1], ans[n])) {\n      return true;\n    } else {\n      return false;\n      for (int i = 1; i <= n; ++i) {\n        printf(\"%c\", cc[ans[i]]);\n      }\n      cout << endl;\n    }\n  }\n  vector<int> pos;\n  int maxc = -10000;\n  for (int i = 0; i < 6; ++i) {\n    if (cnt[i] > maxc && !nb(i, ans[p - 1])) {\n      pos.clear();\n      pos.push_back(i);\n      maxc = cnt[i];\n    } else if (cnt[i] == maxc) {\n      pos.push_back(i);\n    }\n  }\n  if (maxc == -10000) {\n    return false;\n  }\n  for (int i = 0; i < (int)pos.size(); ++i) {\n    int u = pos[i];\n    if (!nb(u, ans[p - 1])) {\n      cnt[u]--;\n      ans[p] = u;\n      bool res = dfs(p + 1);\n      if (res) {\n        return true;\n      }\n      cnt[u]++;\n    }\n  }\n  return false;\n}\n\nvoid work() {\n  cin >> n;\n  int maxc = 0;\n  for (int i = 0; i < 6; ++i) {\n    cin >> cnt[i];\n    if (cnt[i] > maxc) {\n      maxc = cnt[i];\n    }\n  }\n  if (maxc > n \/ 2) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  if (dfs(1)) {\n    for (int i = 1; i <= n; ++i) {\n      printf(\"%c\", cc[ans[i]]);\n    }\n    cout << endl;\n  } else {\n    cout << \"IMPOSSIBLE\" << endl;\n  }\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  pre();\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashi711","func":"\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 110;\n\nint e[N], s[N];\nint n;\nint dt[N];\nint sum[N];\n\nstruct node {\n  int v;\n  double w;\n  node(int _v = 0, double _w = 0) : v(_v), w(_w) {}\n};\n\nvector<node> adj[N];\nbool vst[N];\ndouble d[N];\n\nvoid work() {\n  int qq;\n  cin >> n >> qq;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d%d\", &e[i], &s[i]);\n  }\n  sum[1] = 0;\n  for (int u, i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      scanf(\"%d\", &u);\n      if (i + 1 == j) {\n        dt[i + 1] = u;\n        sum[i + 1] = sum[i] + dt[i + 1];\n      }\n    }\n  }\n  cin >> qq >> qq;\n  for (int i = 1; i <= n; ++i) {\n    adj[i].clear();\n  }\n  for (int i = 1; i < n; ++i) {\n    for (int j = i + 1; j <= n; ++j) {\n      if (sum[j] - sum[i] <= e[i]) {\n        adj[i].push_back(node(j, (double)(sum[j] - sum[i]) \/ s[i]));\n      } else {\n        break;\n      }\n    }\n  }\n  queue<int> q;\n  q.push(1);\n  vst[1] = true;\n  fill(d + 1, d + n + 1, 1e20);\n  d[1] = 0;\n  while (!q.empty()) {\n    int u = q.front();\n    q.pop();\n    vst[u] = false;\n    for (int i = 0; i < (int)adj[u].size(); ++i) {\n      int v = adj[u][i].v;\n      double w = adj[u][i].w;\n      if (d[v] > d[u] + w) {\n        d[v] = d[u] + w;\n        if (!vst[v]) {\n          q.push(v);\n          vst[v] = true;\n        }\n      }\n    }\n  }\n  cout << fixed << setprecision(9) << d[n] << endl;\n}\n\nint main() {\n  freopen(\"my.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    printf(\"Case #%d: \", i);\n    work();\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long T, N;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    cin >> N;\n    vector<int> V;\n    while (N != 0) {\n      V.push_back(N % 10);\n      N \/= 10;\n    }\n    for (unsigned int i = 0; i < V.size() - 1; ++i) {\n      if (V[i] < V[i + 1]) {\n        --V[i + 1];\n        for (unsigned int j = 0; j <= i; ++j)\n          V[j] = 9;\n      }\n    }\n    for (int i = V.size() - 1; i >= 0; --i)\n      N = 10 * N + V[i];\n    cout << \"Case #\" << t + 1 << \": \" << N << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nlong long foo(long long n, long long k) {\n  if (k == 0)\n    return n;\n  else {\n    return max(foo(n \/ 2, k \/ 2), foo((n - 1) \/ 2, (k - 1) \/ 2));\n  }\n}\n\nint main() {\n  long long T, n, k;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    cin >> n >> k;\n    long long r = foo(n, k - 1);\n    cout << \"Case #\" << t + 1 << \": \" << r \/ 2 << \" \" << (r - 1) \/ 2 << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long n, ct, k, m, r;\n  cin >> n;\n  for (long long i = 0; i < n; ++i) {\n    string s;\n    cin >> s >> k;\n    m = s.size();\n    vector<long long> V(m, 0);\n    ct = 0;\n    r = 0;\n    for (long long j = 0; j < m - k + 1; ++j) {\n      if (j >= k)\n        ct -= V[j - k];\n      if ((ct % 2 == 0 and s[j] == '-') or (ct % 2 == 1 and s[j] == '+')) {\n        V[j] = 1;\n        ++ct;\n        ++r;\n      }\n    }\n    for (long long j = m - k + 1; j < m; ++j) {\n      if (j >= k)\n        ct -= V[j - k];\n      if ((ct % 2 == 0 and s[j] == '-') or (ct % 2 == 1 and s[j] == '+')) {\n        r = -1;\n      }\n    }\n    if (r != -1)\n      cout << \"Case #\" << i + 1 << \": \" << r << endl;\n    else\n      cout << \"Case #\" << i + 1 << \": \"\n           << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\nstatic const double e = pow(2, -5);\nlong long T, N, P;\n\nlong long solve(map<vector<long long>, long long> &res, vector<double> &R,\n                vector<vector<double>> &Q, vector<long long> &X) {\n  if (res.count(X) == 0) {\n    for (long long i : X) {\n      if (i == 0)\n        return 0;\n    }\n    long long r = 0;\n    for (long long i = 0; i < N; ++i) {\n      --X[i];\n      r = max(r, solve(res, R, Q, X));\n      ++X[i];\n    }\n\n    long long val, m = -1, M = -1;\n    for (long long i = 0; i < N; ++i) {\n      if (m == -1 or m < floor(Q[i][X[i] - 1] \/ R[i] * 100 \/ 110))\n        m = floor(Q[i][X[i] - 1] \/ R[i] * 100 \/ 110);\n      if (M == -1 or M > ceil(Q[i][X[i] - 1] \/ R[i] * 100 \/ 90))\n        M = ceil(Q[i][X[i] - 1] \/ R[i] * 100 \/ 90);\n    }\n    bool can = false;\n    for (val = m; val <= M and !can; ++val) {\n      can = true;\n      for (long long i = 0; i < N; ++i) {\n        if (!(R[i] * val * 90 \/ 100 <= Q[i][X[i] - 1] and\n              Q[i][X[i] - 1] <= R[i] * val * 110 \/ 100)) {\n          can = false;\n          break;\n        }\n      }\n    }\n    if (can) {\n      for (long long i = 0; i < N; ++i)\n        --X[i];\n      r = max(r, solve(res, R, Q, X) + 1);\n      for (long long i = 0; i < N; ++i)\n        ++X[i];\n    }\n    res[X] = r;\n  }\n  return res[X];\n}\n\nint main() {\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    cin >> N >> P;\n    vector<double> R(N);\n    vector<vector<double>> Q(N, vector<double>(P));\n    for (long long i = 0; i < N; ++i)\n      cin >> R[i];\n    for (long long i = 0; i < N; ++i) {\n      for (long long j = 0; j < P; ++j)\n        cin >> Q[i][j];\n      sort(Q[i].begin(), Q[i].end());\n    }\n    map<vector<long long>, long long> res;\n    vector<long long> X(N, P);\n    solve(res, R, Q, X);\n    cout << \"Case #\" << t + 1 << \": \" << solve(res, R, Q, X) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long T, R, C, i, j;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    cin >> R >> C;\n    string foo;\n    for (i = 0; i < C; ++i)\n      foo += '?';\n    vector<string> V(R), res(R, foo);\n    vector<long long> X(R);\n    vector<vector<long long>> Y(R, vector<long long>(C));\n    for (i = 0; i < R; ++i)\n      cin >> V[i];\n    for (i = 0; V[i] == foo; ++i) {\n    }\n    for (j = 0; j < R; ++j) {\n      if (V[j] != foo)\n        i = j;\n      X[j] = i;\n    }\n    for (long long k = 0; k < R; ++k) {\n      for (i = 0; V[X[k]][i] == '?'; ++i) {\n      }\n      for (j = 0; j < C; ++j) {\n        if (V[X[k]][j] != '?')\n          i = j;\n        res[k][j] = V[X[k]][i];\n      }\n    }\n    cout << \"Case #\" << t + 1 << \":\" << endl;\n    for (auto &l : res)\n      cout << l << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    double d, k, s, M = 0;\n    long long n;\n    cin >> d >> n;\n    for (long long i = 0; i < n; ++i) {\n      cin >> k >> s;\n      if (M < (d - k) \/ s)\n        M = (d - k) \/ s;\n    }\n    cout << \"Case #\" << t + 1 << \": \" << fixed << setprecision(6) << d \/ M\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    long long n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    if (2 * max(max(r, y), b) > n)\n      cout << \"Case #\" << t + 1 << \": IMPOSSIBLE\" << endl;\n    else {\n      string s;\n      int p = -1;\n      if (r != 0) {\n        --r;\n        s += 'R';\n        p = 0;\n      } else if (b != 0) {\n        --b;\n        s += 'B';\n        p = 1;\n      }\n      for (long long i = 0; i < n - 1; ++i) {\n        if (r >= y and r >= b and p != 0) {\n          --r;\n          s += 'R';\n          p = 0;\n        } else if (b >= y and b >= r and p != 1) {\n          --b;\n          s += 'B';\n          p = 1;\n        } else if (y >= r and y >= b and p != 2) {\n          --y;\n          s += 'Y';\n          p = 2;\n        } else if ((r >= y or r >= b) and p != 0) {\n          --r;\n          s += 'R';\n          p = 0;\n        } else if ((b >= y or b >= r) and p != 1) {\n          --b;\n          s += 'B';\n          p = 1;\n        } else if ((y >= r or y >= b) and p != 2) {\n          --y;\n          s += 'Y';\n          p = 2;\n        } else\n          cerr << \"ERR\" << endl;\n      }\n      cout << \"Case #\" << t + 1 << \": \" << s << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Tashiqi","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\nstatic const long long D = 1000000007;\n\nint main() {\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; ++t) {\n    long long n, Q, foo, u, v;\n    cin >> n >> Q;\n    vector<double> E(n), S(n), R(n, -1), D(n - 1);\n    for (long long i = 0; i < n; ++i) {\n      cin >> E[i] >> S[i];\n    }\n    for (long long i = 0; i < n; ++i) {\n      for (long long j = 0; j < n; ++j) {\n        if (i + 1 == j)\n          cin >> D[i];\n        else\n          cin >> foo;\n      }\n    }\n    cin >> u >> v;\n    R[0] = 0;\n    for (long long i = 0; i < n; ++i) {\n      double d = 0;\n      for (long long j = i; j < n and d <= E[i]; ++j) {\n        if (R[j] == -1 or R[i] + d \/ S[i] < R[j])\n          R[j] = R[i] + d \/ S[i];\n        d += D[j];\n      }\n    }\n    cout << \"Case #\" << t + 1 << \": \" << fixed << setprecision(6) << R[n - 1]\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n\n    string n;\n    cin >> n;\n\n    \/\/ find start of the first decrease\n    int i = 0;\n    while (i < n.size() - 1) {\n      if (n[i + 1] < n[i])\n        break;\n      i++;\n    }\n\n    if (i == n.size() - 1) {\n      \/\/ N is already tidy, so output\n      cout << n << endl;\n    } else {\n      \/\/ move i back to true start, if applicable\n      while (i > 0 && n[i] == n[i - 1]) {\n        i--;\n      }\n\n      n[i]--;\n      i++;\n      for (; i < n.size(); i++) {\n        n[i] = '9';\n      }\n      cout << stoll(n) << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <iostream>\n#include <queue>\n#include <string>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n\n    ll n, k;\n    cin >> n >> k;\n\n    priority_queue<ll> intervals = priority_queue<ll>();\n    intervals.push(n);\n\n    \/\/ insert (k - 1) people\n    for (int i = 0; i < k - 1; i++) {\n      ll next = intervals.top();\n      intervals.pop();\n      intervals.push((next - 1) \/ 2);\n      intervals.push(next \/ 2);\n    }\n\n    cout << intervals.top() \/ 2 << \" \" << (intervals.top() - 1) \/ 2 << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<bool> vb;\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n    vb b = vb();\n    string s;\n    cin >> s;\n    int k;\n    cin >> k;\n\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == '-')\n        b.push_back(false);\n      else if (s[i] == '+')\n        b.push_back(true);\n    }\n\n    int count = 0;\n    for (int i = 0; i < b.size() - k + 1; i++) {\n      if (!b[i]) {\n        for (int j = i; j < i + k; j++) {\n          b[j] = !b[j];\n        }\n        count++;\n      }\n    }\n\n    \/\/ check the last (k - 1) to see if they are all flipped\n    bool complete = true;\n    for (int i = b.size() - (k - 1); i < b.size(); i++) {\n      complete = complete & b[i];\n    }\n\n    if (complete)\n      cout << count << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nvi r;\n\nbool is_valid(int i0) {\n  double lbn = 9.0 \/ 10.0 * i0 \/ r[0];\n  double ubn = 10.0 \/ 9.0 * i0 \/ r[0];\n\n  if (ceil(lbn - 1e-9) > floor(ubn + 1e-9))\n    return false;\n\n  return true;\n}\n\nbool is_valid(int i0, int i1) {\n  double lbn = 9.0 \/ 10.0 * i0 \/ r[0];\n  double ubn = 10.0 \/ 9.0 * i0 \/ r[0];\n\n  for (int n = ceil(lbn - 1e-9); n < (ubn + 1e-9); n++) {\n    \/\/ check if ingredient 2 is within tolerance\n    if (i1 > (9.0 \/ 10.0 * n * r[1] - 1e-9) &&\n        i1 < (10.0 \/ 9.0 * n * r[1] + 1e-9)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n\n    int n, p;\n    cin >> n >> p;\n    r = vi();\n    for (int i = 0; i < n; i++) {\n      int temp;\n      cin >> temp;\n      r.push_back(temp);\n    }\n\n    vvi q;\n    for (int i = 0; i < n; i++) {\n      q.push_back(vi());\n      for (int j = 0; j < p; j++) {\n        int temp;\n        cin >> temp;\n        q[i].push_back(temp);\n      }\n    }\n\n    if (n == 1) {\n      int count = 0;\n      for (int i = 0; i < p; i++) {\n        if (is_valid(q[0][i])) {\n          count++;\n        }\n      }\n      cout << count << endl;\n    } else if (n == 2) {\n      vi ordering = q[1];\n      sort(ordering.begin(), ordering.end());\n      int max_count = -1;\n      int count = 0;\n      do {\n        count = 0;\n        for (int i = 0; i < p; i++) {\n          if (is_valid(q[0][i], ordering[i])) {\n            count++;\n          }\n        }\n\n        if (count > max_count) {\n          max_count = count;\n        }\n      } while (next_permutation(ordering.begin(), ordering.end()));\n\n      cout << count << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\n\nint r, c;\nvvc cake;\n\nchar fillfromright(int i, int j) {\n  if (j == c)\n    return '?'; \/\/ reached end, nothing to fill\n\n  if (cake[i][j] != '?')\n    return cake[i][j]; \/\/ already filled\n\n  cake[i][j] = fillfromright(i, j + 1);\n  return cake[i][j];\n}\n\nchar fillfromleft(int i, int j) {\n  if (j < 0)\n    return '?';\n\n  if (cake[i][j] != '?')\n    return cake[i][j];\n\n  cake[i][j] = fillfromleft(i, j - 1);\n  return cake[i][j];\n}\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \":\";\n    cas++;\n    cout << endl;\n    cin >> r >> c;\n    cake = vvc(r, vc(c, ' '));\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        char next;\n        cin >> next;\n        cake[i][j] = next;\n      }\n    }\n\n    \/\/ fill rows\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        fillfromright(i, j);\n      }\n    }\n\n    for (int i = 0; i < r; i++) {\n      fillfromleft(i, c - 1);\n    }\n\n    for (int i = 0; i < r; i++) {\n      if (cake[i][0] == '?') {\n        \/\/ empty row\n        \/\/ output previous row if there was one\n        if (i > 0) {\n          for (int j = 0; j < c; j++) {\n            cout << cake[i - 1][j];\n            cake[i][j] = cake[i - 1][j];\n          }\n          cout << endl;\n        } else {\n          \/\/ first row, so scan down until we find a full one; guaranteed to\n          \/\/ exist\n          int inext = i;\n          while (inext < r && cake[inext][0] == '?')\n            inext++;\n          if (inext == r) {\n            cout << \"bad input\" << endl;\n          }\n          for (int j = 0; j < c; j++) {\n            cout << cake[inext][j];\n            cake[i][j] = cake[inext][j];\n          }\n          cout << endl;\n        }\n\n      } else {\n        for (int j = 0; j < c; j++) {\n          cout << cake[i][j];\n        }\n        cout << endl;\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <algorithm>\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n\n    int d, n;\n    cin >> d >> n;\n    double max = -1e300;\n    for (int i = 0; i < n; i++) {\n      int ki, si;\n      cin >> ki >> si;\n      double t = (double)(d - ki) \/ si;\n      if (t > max) {\n        max = t;\n      }\n    }\n\n    \/\/ slowest horse takes min time to reach the end\n    cout << fixed << setprecision(10) << (double)d \/ max << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <algorithm>\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \": \";\n    cas++;\n\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n\n    string stable = \"\";\n    bool impossible = false;\n    char state;\n    if (r > 0) {\n      state = 'r';\n      r--;\n      stable = \"R\";\n    } else if (y > 0) {\n      state = 'y';\n      y--;\n      stable = \"Y\";\n    } else if (b > 0) {\n      state = 'b';\n      b--;\n      stable = \"B\";\n    }\n\n    while ((r > 0 || y > 0 || b > 0) && !impossible) {\n      if (state == 'r') {\n        if (y == 0 && b == 0) {\n          impossible = true;\n        } else if (y > b) {\n          y--;\n          state = 'y';\n          stable += \"Y\";\n        } else {\n          b--;\n          state = 'b';\n          stable += \"B\";\n        }\n      } else if (state == 'y') {\n        if (r == 0 && b == 0) {\n          impossible = true;\n        } else if (b > r) {\n          b--;\n          state = 'b';\n          stable += \"B\";\n        } else {\n          r--;\n          state = 'r';\n          stable += \"R\";\n        }\n      } else if (state == 'b') {\n        if (y == 0 && r == 0) {\n          impossible = true;\n        } else if (r > y) {\n          r--;\n          state = 'r';\n          stable += \"R\";\n        } else {\n          y--;\n          state = 'y';\n          stable += \"Y\";\n        }\n      }\n    }\n\n    if (impossible) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      if (stable[0] != stable[stable.size() - 1]) {\n        cout << stable << endl;\n      } else {\n        \/\/ if ring condition not satisfied, attempt swapping last two\n        if (stable[stable.size() - 1] != stable[stable.size() - 3]) {\n          \/\/ three last unicorns are different colors, so swap\n          char temp = stable[stable.size() - 2];\n          stable[stable.size() - 2] = stable[stable.size() - 1];\n          stable[stable.size() - 1] = temp;\n          cout << stable << endl;\n        } else {\n          \/\/ swap would violate rules, so impossible\n          cout << \"IMPOSSIBLE\" << endl;\n        }\n      }\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"Tblock","func":"#include <algorithm>\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\n\nvi e;\nvi s;\nvvll d;\nvvll apsp;\nvvll reach; \/\/ reach[h] gives list of cities that horse h can reach\n\nvd memo; \/\/ memo[h] gives answer if we start in city h and pick the horse\n\ndouble solve(int h) {\n\n  \/\/ cout << \"solving \" << h << endl;\n  \/\/ for (int i = 0; i < memo.size(); i++) {\n  \/\/\tcout << memo[i] << \" \";\n  \/\/}\n  \/\/ cout << endl;\n\n  if (memo[h] != -1.0) {\n    return memo[h];\n  }\n\n  if (h == apsp.size() - 1) {\n    \/\/ base case\n    return memo[h] = 0.0;\n  }\n\n  double min_time = 1e300;\n  \/\/ ride the horse to all reachable cities\n  for (int i = 0; i < reach[h].size(); i++) {\n    \/\/ cout << h << \" - \" << i << endl;\n    double ttr = (double)apsp[h][reach[h][i]] \/ s[h];\n    double total_time = ttr + solve(reach[h][i]);\n    \/\/ cout << \"time from city \" << h << \", switching at \" << reach[h][i] << \"\n    \/\/ is \" << total_time << endl;\n    if (total_time < min_time) {\n      min_time = total_time;\n    }\n  }\n\n  \/\/ cout << \"determined minimum time for \" << h << \" is \" << min_time << endl;\n  return memo[h] = min_time;\n}\n\nint main() {\n\n  int t;\n  cin >> t;\n  int cas = 1;\n  while (t--) {\n    cout << \"Case #\" << cas << \":\";\n    cas++;\n\n    int n, queries;\n    cin >> n >> queries;\n    e.clear();\n    s.clear();\n    d = vvll(n, vll(n, 0));\n    apsp = vvll(n, vll(n, 0));\n\n    for (int i = 0; i < n; i++) {\n      int temp1;\n      int temp2;\n      cin >> temp1 >> temp2;\n      e.push_back(temp1);\n      s.push_back(temp2);\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        double temp;\n        cin >> temp;\n        if (temp < 0.0) {\n          d[i][j] = 1e15;\n          apsp[i][j] = 1e15;\n        } else {\n          d[i][j] = temp;\n          apsp[i][j] = temp;\n        }\n      }\n    }\n\n    \/\/ floyd warshall\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          apsp[i][j] = min(apsp[i][j], apsp[i][k] + apsp[k][j]);\n        }\n      }\n    }\n\n    \/\/ if (cas == 17) {\n    \/\/\tfor (int i = 0; i < n; i++) {\n    \/\/\t\tfor (int j = 0; j < n; j++) {\n    \/\/\t\t\tcout << d[i][j] << \" \";\n    \/\/\t\t}\n    \/\/\t\tcout << endl;\n    \/\/\t}\n    \/\/}\n\n    for (int q = 0; q < queries; q++) {\n      int u, v;\n      cin >> u >> v;\n      u--;\n      v--;\n\n      memo = vd(n, -1.0);\n      reach.clear();\n\n      \/\/ compute list of cities horse h can reach\n      for (int h = 0; h < n; h++) {\n        reach.push_back(vll());\n        for (int c = 0; c < n; c++) {\n          if (c != h && apsp[h][c] <= e[h]) {\n            reach[h].push_back(c);\n          }\n        }\n      }\n\n      \/\/ temp\n      \/\/ for (int h = 0; h < n; h++) {\n      \/\/\tcout << h << \" can reach: \";\n      \/\/\tfor (int c = 0; c < reach[h].size(); c++) {\n      \/\/\t\tcout << reach[h][c] << \" \";\n      \/\/\t}\n      \/\/\tcout << endl;\n      \/\/}\n\n      cout << \" \" << solve(u);\n    }\n\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nstring solve(long long N) {\n  string s;\n  s = to_string(N);\n  int n = s.length(), i = 0;\n  while (i < n - 1 && s[i] - '0' <= s[i + 1] - '0') {\n    i++;\n  }\n  if (i < n - 1) {\n    while (i > 0 && s[i] == s[i - 1]) {\n      i--;\n    }\n    s[i] = '0' + ((s[i] - '0') - 1);\n    i++;\n    while (i < n) {\n      s[i] = '9';\n      i++;\n    }\n  }\n  s.erase(0, min(s.find_first_not_of('0'), s.size() - 1));\n  return s;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long N;\n    cin >> N;\n    cout << \"Case #\" << i + 1 << \": \" << solve(N) << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <iostream>\n\/\/ #include <cmath>\n\/\/ #include <string>\n#include <queue>\n\nusing namespace std;\n\nvector<long long> solve(long long n, long long k) {\n  vector<long long> result;\n  priority_queue<long long> q;\n  q.push(n);\n  long long ma, mi;\n  while (k > 0) {\n    long long t = q.top();\n    q.pop();\n    ma = t \/ 2, mi = (t % 2 ? t \/ 2 : t \/ 2 - 1);\n    q.push(ma);\n    q.push(mi);\n    k--;\n  }\n  result.push_back(ma);\n  result.push_back(mi);\n  return result;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long n;\n    cin >> n;\n    long long k;\n    cin >> k;\n    vector<long long> result = solve(n, k);\n    \/\/ long long l = t\/2;\n    cout << \"Case #\" << i + 1 << \": \" << result[0] << \" \" << result[1] << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid swap(string &s, int k, int i) {\n  for (int j = i; j < i + k; j++) {\n    if (s[j] == '+')\n      s[j] = '-';\n    else\n      s[j] = '+';\n  }\n}\n\nstring solve(string s, int k) {\n  int count = 0;\n  int i = s.find_first_not_of('+');\n  while (i != string::npos && i <= s.length() - k) {\n    count++;\n    swap(s, k, i);\n    i = s.find_first_not_of('+');\n  }\n  if (i == string::npos) {\n    return to_string(count);\n  } else {\n    return \"IMPOSSIBLE\";\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    string s;\n    int k;\n    cin >> s;\n    cin >> k;\n    cout << \"Case #\" << i + 1 << \": \" << solve(s, k) << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nvoid backtrack(vector<bool> &used, vector<vector<int>> &Q, int p, int k,\n               int &result, vector<vector<vector<int>>> &range) {\n  result = max(result, k);\n  if (k >= p)\n    return;\n  if (range[0][k][0] <= range[0][k][1]) {\n    for (int m = 0; m < p; m++) {\n      if (used[m] == false && range[1][m][0] <= range[1][m][1] &&\n          max(range[0][k][0], range[1][m][0]) <=\n              min(range[0][k][1], range[1][m][1])) {\n        used[m] = true;\n        backtrack(used, Q, p, k + 1, result, range);\n        used[m] = false;\n      }\n    }\n  }\n}\n\nint solve(vector<vector<int>> &Q, vector<int> &R, int n, int p) {\n  vector<vector<vector<int>>> range(n, vector<vector<int>>(p, vector<int>(2)));\n  for (int i1 = 0; i1 < n; i1++) {\n    for (int i2 = 0; i2 < p; i2++) {\n      long long u = Q[i1][i2], a = R[i1];\n      double low = u \/ (1.1 * a);\n      \/\/ cout << low <<endl;\n      range[i1][i2][0] = ceil(low);\n      \/\/ cout << \"range \" << range[i1][i2][0] <<endl;\n      double high = u \/ (0.9 * a);\n      range[i1][i2][1] = floor(high);\n    }\n  }\n  int result = 0;\n  if (n == 1) {\n    for (int i = 0; i < p; i++) {\n      if (range[0][i][0] <= range[0][i][1])\n        result++;\n    }\n  } else if (n == 2) {\n    vector<bool> used(p, false);\n    backtrack(used, Q, p, 0, result, range);\n  }\n  \/\/ cout << ceil()<<endl;\n  return result;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long n;\n    cin >> n;\n    long long p;\n    cin >> p;\n    vector<int> R(n);\n    for (int j = 0; j < n; j++) {\n      cin >> R[j];\n    }\n    vector<vector<int>> Q(n, vector<int>(p));\n    for (int i1 = 0; i1 < n; i1++) {\n      for (int i2 = 0; i2 < p; i2++) {\n        cin >> Q[i1][i2];\n      }\n    }\n    cout << \"Case #\" << i + 1 << \": \" << solve(Q, R, n, p) << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(vector<vector<char>> &board, long long r, long long c) {\n  int count = 0;\n  for (int i1 = 0; i1 < r; i1++) {\n    for (int i2 = 0; i2 < c; i2++) {\n      if (board[i1][i2] == '?')\n        count++;\n    }\n  }\n  while (count > 0) {\n    for (int i1 = 0; i1 < r; i1++) {\n      for (int i2 = 0; i2 < c; i2++) {\n        \/\/ cout << board[i1][i2]<<endl;\n        if (board[i1][i2] != '?') {\n          int a = i1 - 1;\n          while (a >= 0 && board[a][i2] == '?') {\n            board[a][i2] = board[i1][i2];\n            count--;\n            a--;\n          }\n          a = i1 + 1;\n          while (a < r && board[a][i2] == '?') {\n\n            board[a][i2] = board[i1][i2];\n            count--;\n            a++;\n          }\n        }\n      }\n    }\n    count--;\n  }\n  for (int i1 = 0; i1 < r; i1++) {\n    for (int i2 = 0; i2 < c; i2++) {\n      if (board[i1][i2] == '?') {\n        if (i2 > 0) {\n          for (int k = 0; k < r; k++) {\n            board[k][i2] = board[k][i2 - 1];\n          }\n        } else {\n          int l = i2 + 1;\n          while (board[i1][l] == '?')\n            l++;\n          for (int m = l - 1; m >= i2; m--) {\n            for (int k = 0; k < r; k++) {\n              board[k][m] = board[k][l];\n            }\n          }\n        }\n        \/\/ for (int k = 0; k < r; k++) {\n        \/\/     board[k][i2] = (i2>0?board[k][i2-1] : board[k][i2+1]);\n        \/\/ }\n      }\n    }\n    \/\/ cout <<endl;\n  }\n  for (int i1 = 0; i1 < r; i1++) {\n    for (int i2 = 0; i2 < c; i2++) {\n      cout << board[i1][i2];\n    }\n    cout << endl;\n  }\n  \/\/ cout <<endl;\n  \/\/ }\n\n  \/\/ return \"\";\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long r;\n    cin >> r;\n    long long c;\n    cin >> c;\n    vector<vector<char>> board(r, vector<char>(c));\n    for (int i1 = 0; i1 < r; i1++) {\n      for (int i2 = 0; i2 < c; i2++) {\n        cin >> board[i1][i2];\n      }\n    }\n    cout << \"Case #\" << i + 1 << \": \" << endl;\n    solve(board, r, c);\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\ndouble solve(vector<vector<long long>> &v, long long d, long long n) {\n  double result = pow(10, 18) * 1.0;\n  for (int i = 0; i < n; i++) {\n    double temp = d * v[i][1] \/ (1.0 * (d - v[i][0]));\n    result = min(result, temp);\n  }\n  return result;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long d;\n    cin >> d;\n    long long n;\n    cin >> n;\n    vector<vector<long long>> v(n, vector<long long>(2));\n    for (int i1 = 0; i1 < n; i1++) {\n      for (int i2 = 0; i2 < 2; i2++) {\n        cin >> v[i1][i2];\n      }\n    }\n    cout << setprecision(16) << \"Case #\" << i + 1 << \": \" << solve(v, d, n)\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(long long n, long long r, long long o, long long y, long long g,\n           long long b, long long v) {\n  string s = \"\";\n  long long m = max(r, y);\n  m = max(m, b);\n  if (m > r + y + b - m) {\n    cout << \"IMPOSSIBLE\";\n  } else {\n\n    long long d = r + y + b - m - m;\n    char a, b, c;\n    long long w, z;\n    if (m == r) {\n      w = y;\n      z = b;\n      a = 'R';\n      b = 'Y';\n      c = 'B';\n    } else if (m == y) {\n      w = r;\n      z = b;\n      a = 'Y';\n      b = 'R';\n      c = 'B';\n    } else {\n      w = r;\n      z = y;\n      a = 'B';\n      b = 'R';\n      c = 'Y';\n    }\n    for (int i = 0; i < m; i++) {\n      if (i < w - d) {\n        s += a;\n        s += b;\n      } else if (i < w + z - 2 * d) {\n        s += a;\n        s += c;\n      } else {\n        s += a;\n        s += b;\n        s += c;\n      }\n    }\n    cout << s;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long n;\n    cin >> n;\n    long long r, o, y, g, b, v;\n    cin >> r >> o >> y >> g >> b >> v;\n    cout << \"Case #\" << i + 1 << \": \";\n    solve(n, r, o, y, g, b, v);\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"tdang33","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nvoid solve(vector<vector<long long>> &v, vector<vector<long long>> &g,\n           vector<vector<long long>> &d, long long n, long long q) {\n  double result = 0.0;\n  \/\/ pow(10,18)*1.0;\n  \/\/ doub\n  vector<long long> dist(n, 0);\n  for (int i = 1; i < n; i++) {\n    dist[i] = dist[i - 1] + g[i - 1][i];\n  }\n  vector<double> temp(n, 0.0);\n  for (int i = 1; i < n; i++) {\n    double cur = pow(10, 18) * 1.0;\n    for (int j = 0; j < i; j++) {\n      long long distance = dist[i] - dist[j];\n      long long canGo = v[j][0];\n      long long speed = v[j][1];\n      \/\/ cout << distance <<\"  \"<<canGo<<\" \"<<speed<<endl;\n      if (canGo >= distance) {\n        cur = min(cur, temp[j] + distance \/ (1.0 * speed));\n        \/\/ v[j][0] -= dist;\n      }\n      \/\/ cout <<\"end j\"<< endl;\n    }\n    \/\/ cout <<\"end i\"<<endl;\n    temp[i] = cur;\n    \/\/ cout << \"temp: \"<<temp<<endl;\n    \/\/ double temp = ;\n    \/\/ result += temp;\n    \/\/ result = min(result, temp);\n  }\n  \/\/ for (auto i: temp) {\n  \/\/     cout << \"current: \"<<i <<endl;\n  \/\/     result += i;\n  \/\/ }\n  \/\/ return result;\n  cout << setprecision(16) << temp[n - 1] << endl;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    long long n;\n    cin >> n;\n    long long q;\n    cin >> q;\n    vector<vector<long long>> v(n, vector<long long>(2));\n    for (int i1 = 0; i1 < n; i1++) {\n      for (int i2 = 0; i2 < 2; i2++) {\n        cin >> v[i1][i2];\n      }\n    }\n    vector<vector<long long>> g(n, vector<long long>(n));\n    for (int i1 = 0; i1 < n; i1++) {\n      for (int i2 = 0; i2 < n; i2++) {\n        cin >> g[i1][i2];\n      }\n    }\n    vector<vector<long long>> d(n, vector<long long>(n));\n    for (int i1 = 0; i1 < q; i1++) {\n      for (int i2 = 0; i2 < 2; i2++) {\n        cin >> d[i1][i2];\n      }\n    }\n\n    \/\/ cout << n <<\" \" <<q <<endl;\n    \/\/\n    \/\/ for (int i1 = 0; i1< n; i1++) {\n    \/\/     for (int i2 = 0; i2 < 2;i2++) {\n    \/\/         cout << v[i1][i2]<<\" \";\n    \/\/     }\n    \/\/     cout <<endl;\n    \/\/ }\n    \/\/ for (int i1 = 0; i1< n; i1++) {\n    \/\/     for (int i2 = 0; i2 < n;i2++) {\n    \/\/         cout << g[i1][i2]<<\" \";\n    \/\/     }\n    \/\/     cout<<endl;\n    \/\/ }\n    \/\/ for (int i1 = 0; i1< q; i1++) {\n    \/\/     for (int i2 = 0; i2 < 2;i2++) {\n    \/\/         cout<< d[i1][i2]<<\" \";\n    \/\/     }\n    \/\/     cout<<endl;\n    \/\/ }\n    cout << setprecision(16) << \"Case #\" << i + 1 << \": \";\n    solve(v, g, d, n, q);\n  }\n  return 0;\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <math.h>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint numdig(long long n) {\n  int res;\n  for (res = 0; n; n \/= 10)\n    res++;\n  return res;\n}\n\nlong long dfs(long long n, int b, long long curr, int last) {\n  if (!b)\n    return curr;\n  int z;\n  curr *= 10;\n  z = n \/ (long long)pow(10, b - 1);\n  if (z < last)\n    return 0;\n  if (z == last)\n    return dfs(n % (long long)pow(10, b - 1), b - 1, curr + z, z);\n  return max((curr + z) * (long long)pow(10, b - 1) - 1,\n             dfs(n % (long long)pow(10, b - 1), b - 1, curr + z, z));\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    int b;\n    long long n, ans;\n    scanf(\"%lld\", &n);\n    b = numdig(n);\n    ans = dfs(n, b, 0, 0);\n    printf(\"Case #%d: %lld\\n\", t, ans);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <math.h>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    long long b, h, k, n, num1, num2;\n    scanf(\"%lld %lld\", &n, &k);\n    b = n;\n    num1 = 1;\n    num2 = 0;\n    for (h = 1; h < k; h *= 2) {\n      k -= h;\n      if (b % 2) {\n        b = b \/ 2;\n        num1 = 2 * num1 + num2;\n      } else {\n        b = (b - 1) \/ 2;\n        num2 = num1 + 2 * num2;\n      }\n    }\n    printf(\"Case #%d: \", t);\n    if (k <= num2)\n      b++;\n    if (b % 2)\n      printf(\"%lld %lld\\n\", b \/ 2, b \/ 2);\n    else\n      printf(\"%lld %lld\\n\", b \/ 2, (b - 1) \/ 2);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint k;\nchar s[1010];\n\nvoid flip(int pos) {\n  int i;\n  for (i = 0; i < k; i++)\n    if (s[i + pos] == '+')\n      s[i + pos] = '-';\n    else\n      s[i + pos] = '+';\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    int i, l, times;\n    scanf(\"%s\", s);\n    scanf(\"%d\", &k);\n    l = strlen(s);\n    times = 0;\n    for (i = 0; i < l - k + 1; i++)\n      if (s[i] == '-') {\n        flip(i);\n        times++;\n      }\n    for (; i < l; i++)\n      if (s[i] == '-')\n        break;\n    printf(\"Case #%d: \", t);\n    if (i == l)\n      printf(\"%d\\n\", times);\n    else\n      printf(\"IMPOSSIBLE\\n\");\n  }\n}\n"}
{"target":"teddytao18","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint h[60];\nint l[60][60];\nint r[60][60];\nint q[60][60];\nint curr[60];\n\nstruct cmp {\n  bool operator()(int a, int b) { return r[a][curr[a]] > r[b][curr[b]]; }\n};\n\npriority_queue<int, vector<int>, cmp> pq;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    int i, j, n, p, y, ans, xl, xr;\n    scanf(\"%d %d\", &n, &p);\n    for (i = 0; i < n; i++)\n      scanf(\"%d\", &h[i]);\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++)\n        scanf(\"%d\", &q[i][j]);\n      sort(q[i], q[i] + p);\n    }\n    for (i = 0; i < n; i++)\n      for (j = 0; j < p; j++) {\n        l[i][j] = ceil((double)q[i][j] \/ h[i] \/ 1.1);\n        r[i][j] = (double)q[i][j] \/ h[i] \/ 0.9;\n      }\n    \/*\n    for (i=0;i<n;i++)\n    {\n        for (j=0;j<p;j++)\n            printf(\"[%d,%d] \",l[i][j],r[i][j]);\n        printf(\"\\n\");\n    }\n    *\/\n    memset(curr, 0, sizeof(curr));\n    for (i = 0; i < n; i++)\n      pq.push(i);\n    \/*\n       while (!pq.empty())\n       {\n       int tmp=pq.top();\n       printf(\"%d %d\\n\",tmp,r[tmp][curr[tmp]]);\n       pq.pop();\n       }\n     *\/\n    ans = 0;\n    while (1) {\n      xl = 0;\n      xr = 0x7f7f7f7f;\n      for (i = 0; i < n; i++) {\n        xl = max(xl, l[i][curr[i]]);\n        xr = min(xr, r[i][curr[i]]);\n      }\n      if (xl > xr) {\n        y = pq.top();\n        pq.pop();\n        curr[y]++;\n        if (curr[y] == p)\n          break;\n        pq.push(y);\n      } else {\n        ans++;\n        while (!pq.empty())\n          pq.pop();\n        for (i = 0; i < n; i++) {\n          curr[i]++;\n          if (curr[i] == p)\n            break;\n        }\n        if (i != n)\n          break;\n        for (i = 0; i < n; i++)\n          pq.push(i);\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <math.h>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nchar board[30][30];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    int c, i, j, r;\n    scanf(\"%d %d\", &r, &c);\n    for (i = 0; i < r; i++)\n      scanf(\"%s\", board[i]);\n    for (i = 0; i < r; i++)\n      for (j = 1; j < c; j++)\n        if (board[i][j] == '?')\n          board[i][j] = board[i][j - 1];\n    for (i = 0; i < r; i++)\n      for (j = c - 2; j >= 0; j--)\n        if (board[i][j] == '?')\n          board[i][j] = board[i][j + 1];\n    for (i = 1; i < r; i++)\n      if (board[i][0] == '?')\n        for (j = 0; j < c; j++)\n          board[i][j] = board[i - 1][j];\n    for (i = r - 2; i >= 0; i--)\n      if (board[i][0] == '?')\n        for (j = 0; j < c; j++)\n          board[i][j] = board[i + 1][j];\n\n    printf(\"Case #%d:\\n\", t);\n    for (i = 0; i < r; i++)\n      printf(\"%s\\n\", board[i]);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n#include <math.h>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    double d, k, s, time;\n    int i, j, n;\n    scanf(\"%lf %d\", &d, &n);\n    time = 0;\n    for (i = 0; i < n; i++) {\n      scanf(\"%lf %lf\", &k, &s);\n      time = max(time, (d - k) \/ s);\n    }\n    printf(\"Case #%d: %f\\n\", t, d \/ time);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\nchar s[1010];\nchar type[] = \"ROYGBV\";\nint a[10];\nint mp[1010];\n\nvoid init() { memset(s, 0, sizeof(s)); }\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    init();\n    int i, j, n, last, maxi, secmaxi;\n    scanf(\"%d\", &n);\n    for (i = 0; i < 6; i++)\n      scanf(\"%d\", &a[i]);\n    a[6] = 0;\n    last = 6;\n    printf(\"Case #%d: \", t);\n    for (i = 0; i < n; i++) {\n      \/*\n      if (i==n-2 && a[mp[0]])\n      {\n          s[i]=type[mp[0]];\n          if (s[i]==s[i-1])\n              break;\n          a[mp[0]]--;\n          continue;\n      }\n      *\/\n      maxi = 6;\n      for (j = 0; j < 6; j = j + 2)\n        if (j != last && a[j] >= a[maxi] && a[j]) {\n          secmaxi = maxi;\n          maxi = j;\n        }\n      if (maxi == 6)\n        break;\n      if (a[maxi] == a[secmaxi] && mp[0] != maxi)\n        maxi = secmaxi;\n      \/\/ printf(\"%d\\n\",maxi);\n      s[i] = type[maxi];\n      mp[i] = maxi;\n      if (i && s[i] == s[i - 1])\n        break;\n      a[maxi]--;\n      last = maxi;\n      \/\/ printf(\"%c\\n\",s[maxi]);\n    }\n    if (i != n || s[0] == s[n - 1])\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%s\\n\", s);\n  }\n}\n"}
{"target":"teddytao18","func":"#include <iostream>\n#include <map>\n#include <math.h>\n#include <set>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\nusing namespace std;\n\ndouble dist[110];\ndouble speed[110];\ndouble dp[110];\nint g[110][110];\nint src[110];\nint dest[110];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    double sum;\n    int i, j, n, q;\n    scanf(\"%d %d\", &n, &q);\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lf %lf\", &dist[i], &speed[i]);\n      dp[i] = 0x7f7f7f7f;\n    }\n    for (i = 1; i <= n; i++)\n      for (j = 1; j <= n; j++)\n        scanf(\"%d\", &g[i][j]);\n    for (i = 0; i < q; i++)\n      scanf(\"%d %d\", &src[i], &dest[i]);\n    dp[1] = 0;\n    for (i = 2; i <= n; i++) {\n      sum = 0;\n      for (j = i - 1; j > 0; j--) {\n        sum += g[j][j + 1];\n        if (sum > dist[j])\n          continue;\n        dp[i] = min(dp[i], dp[j] + sum \/ speed[j]);\n      }\n    }\n    printf(\"Case #%d: %f\\n\", t, dp[n]);\n  }\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  string str;\n  cin >> str;\n  int p = 0;\n  while (p < str.length() - 1) {\n    if (str[p] > str[p + 1]) {\n      break;\n    }\n    p++;\n  }\n  if (p == str.length() - 1) {\n    cout << \"Case #\" << cc << \": \" << str << endl;\n    return 1;\n  }\n  while (p > 0 && str[p - 1] == str[p]) {\n    p--;\n  }\n  str[p] = str[p] - 1;\n  for (int i = p + 1; i < str.length(); i++) {\n    str[i] = '9';\n  }\n  if (str[0] == '0') {\n    str.erase(str.begin());\n  }\n  cout << \"Case #\" << cc << \": \" << str << endl;\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve(i + 1);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  long long n, k, t = 0, onell = 1LL;\n  cin >> n >> k;\n  while (k > 0) {\n    n -= (onell << t);\n    if (k > (onell << t)) {\n      k -= (onell << t);\n      t++;\n    } else {\n      break;\n    }\n    \/\/        cout<<n<<\" \"<<k<<\" \"<<t<<endl;\n  }\n  long long solmax = 0, solmin = 0;\n  if (n > 0) {\n    long long tt = (onell << (t + 1));\n    long long ttt = n \/ tt;\n    long long tttt = n % tt;\n    if (tttt >= k) {\n      solmax = ttt + 1;\n    } else {\n      solmax = ttt;\n    }\n    tttt -= (tt \/ 2);\n    if (tttt >= k) {\n      solmin = ttt + 1;\n    } else {\n      solmin = ttt;\n    }\n  }\n  cout << \"Case #\" << cc << \": \" << solmax << \" \" << solmin << endl;\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve(i + 1);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  string str;\n  int k;\n  bool sol = true;\n  int count = 0;\n  cin >> str >> k;\n  for (int i = 0; i < str.length(); i++) {\n    if (str[i] == '-') {\n      if (i + k - 1 < str.length()) {\n        for (int j = i; j < i + k; j++) {\n          if (str[j] == '-') {\n            str[j] = '+';\n          } else {\n            str[j] = '-';\n          }\n        }\n        count++;\n      } else {\n        sol = false;\n      }\n    }\n    \/\/        cout<<str<<endl;\n  }\n  if (sol) {\n    cout << \"Case #\" << cc << \": \" << count << endl;\n  } else {\n    cout << \"Case #\" << cc << \": IMPOSSIBLE\" << endl;\n  }\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve(i + 1);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  int n, p, r[55], q[55][55];\n  cin >> n >> p;\n  for (int i = 0; i < n; i++) {\n    cin >> r[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      cin >> q[i][j];\n    }\n  }\n\n  int sol = 0;\n  if (n == 1) {\n    for (int i = 0; i < p; i++) {\n      int ce = (int)(floor(10.0 \/ 9.0 * q[0][i] \/ r[0]) + 1e-5);\n      int fl = (int)(ceil(10.0 \/ 11.0 * q[0][i] \/ r[0]) + 1e-5);\n      \/\/            cout<<fl<<\" \"<<ce<<endl;\n      if (fl <= ce) {\n        sol++;\n      }\n    }\n  } else if (n == 2) {\n    int arr[p];\n    for (int i = 0; i < p; i++) {\n      arr[i] = i;\n    }\n    do {\n      \/\/                for(int j=0;j<p;j++){\n      \/\/                    cout<<arr[j]<<\" \";\n      \/\/                }\n      \/\/                cout<<endl;\n      int tmp_sol = 0;\n      for (int i = 0; i < p; i++) {\n        int ce1 = (int)(floor(10.0 \/ 9.0 * q[0][i] \/ r[0]) + 1e-5);\n        int fl1 = (int)(ceil(10.0 \/ 11.0 * q[0][i] \/ r[0]) + 1e-5);\n        int ce2 = (int)(floor(10.0 \/ 9.0 * q[1][arr[i]] \/ r[1]) + 1e-5);\n        int fl2 = (int)(ceil(10.0 \/ 11.0 * q[1][arr[i]] \/ r[1]) + 1e-5);\n        \/\/                cout<<fl1<<\" \"<<ce1<<\" \"<<fl2<<\" \"<<ce2<<endl;\n        \/\/                if(fl1<=ce1&&fl2<=ce2&&(ce1>=fl2||ce2>=fl1)){\n        \/\/                    tmp_sol++;\n        \/\/                }\n        if (fl1 <= ce1 && fl2 <= ce2) {\n          if ((fl1 <= ce2 && ce1 >= fl2) || (fl2 <= ce1 && fl1 <= ce2)) {\n            tmp_sol++;\n          }\n        }\n      }\n      sol = max(sol, tmp_sol);\n    } while (next_permutation(arr, arr + p));\n  }\n  cout << \"Case #\" << cc << \": \" << sol << endl;\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve(i + 1);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n#include <set>\n\nusing namespace std;\n\nint solve(int cc) {\n  int r, c;\n  cin >> r >> c;\n  string str[30];\n  for (int i = 0; i < r; i++) {\n    cin >> str[i];\n  }\n  set<char> s;\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      if (str[i][j] != '?' && s.find(str[i][j]) == s.end()) {\n        \/\/                    cout<<str[i][j]<<endl;\n        int jl = j, jr = j, it = i, ib = i;\n        while (jl - 1 >= 0 && str[i][jl - 1] == '?') {\n          jl--;\n        }\n        while (jr + 1 < c && str[i][jr + 1] == '?') {\n          jr++;\n        }\n        while (true) {\n          if (it - 1 >= 0) {\n            bool check = true;\n            for (int k = jl; k <= jr; k++) {\n              if (str[it - 1][k] != '?') {\n                check = false;\n              }\n            }\n            if (check) {\n              it--;\n            } else {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n        while (true) {\n          if (ib + 1 < r) {\n            bool check = true;\n            for (int k = jl; k <= jr; k++) {\n              if (str[ib + 1][k] != '?') {\n                check = false;\n              }\n            }\n            if (check) {\n              ib++;\n            } else {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n        for (int k = it; k <= ib; k++) {\n          for (int l = jl; l <= jr; l++) {\n            str[k][l] = str[i][j];\n          }\n        }\n        s.insert(str[i][j]);\n      }\n    }\n  }\n  cout << \"Case #\" << cc << \":\" << endl;\n  for (int i = 0; i < r; i++) {\n    cout << str[i] << endl;\n  }\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve(i + 1);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  long long d, n, k, s;\n  long double mt = 0;\n  cin >> d >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> k >> s;\n    long double tt = (d - k);\n    tt \/= s;\n    if (i == 0 || mt < tt) {\n      mt = tt;\n    }\n  }\n  cout << \"Case #\" << cc << \": \" << fixed << d \/ mt << endl;\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  cout.precision(7);\n  for (int i = 1; i <= t; i++) {\n    solve(i);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <algorithm>\n#include <iostream>\n#include <map>\n\nusing namespace std;\n\nmap<char, int> mmm;\n\nstruct my_sort {\n  bool operator()(const pair<int, char> &left, const pair<int, char> &right) {\n    if (left.first > right.first) {\n      return true;\n    } else if (left.first < right.first) {\n      return false;\n    } else {\n      return mmm[left.second] < mmm[right.second];\n    }\n  }\n};\n\nint solve(int cc) {\n  mmm.clear();\n  int n, r, o, y, g, b, v;\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  pair<int, char> arr[3];\n  arr[0] = pair<int, char>(r, 'R');\n  arr[1] = pair<int, char>(y, 'Y');\n  arr[2] = pair<int, char>(b, 'B');\n  sort(arr, arr + 3, greater<pair<int, char>>());\n\n  \/\/    for(int i=0;i<3;i++){\n  \/\/        cout<<arr[i].first<<arr[i].second<<endl;\n  \/\/    }\n  for (int i = 0; i < 3; i++) {\n    mmm[arr[i].second] = i;\n  }\n\n  cout << \"Case #\" << cc << \": \";\n  string sol = \"\";\n  bool im = false;\n  char last = '-';\n  for (int i = 0; i < n && !im; i++) {\n    int mi = -1;\n    sort(arr, arr + 3, my_sort());\n    for (int j = 0; j < 3; j++) {\n      if (arr[j].second != last) {\n        mi = j;\n        break;\n      }\n    }\n    if (mi == -1 || arr[mi].first <= 0) {\n      im = true;\n      break;\n    }\n    sol += arr[mi].second;\n    last = arr[mi].second;\n    arr[mi].first--;\n  }\n  if (im || (sol[0] == sol[n - 1])) {\n    cout << \"IMPOSSIBLE\" << endl;\n  } else {\n    cout << sol << endl;\n  }\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    solve(i);\n  }\n  return 0;\n}\n"}
{"target":"Thanabhat","func":"#include <iostream>\n\nusing namespace std;\n\nint solve(int cc) {\n  long long n, q, e[105], s[105], d[105], temp;\n  cin >> n >> q;\n  for (int i = 0; i < n; i++) {\n    cin >> e[i] >> s[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (j == i + 1) {\n        cin >> d[i];\n      } else {\n        cin >> temp;\n      }\n    }\n  }\n  cin >> temp >> temp;\n\n  \/\/    for(int i=0;i<n;i++){\n  \/\/        cout<<e[i]<<\" \"<<s[i]<<\" \"<<d[i]<<endl;\n  \/\/    }\n\n  long double dp[105];\n  for (int i = 0; i < n; i++) {\n    dp[i] = 1e11;\n  }\n  dp[n - 1] = 0;\n  for (int i = n - 2; i >= 0; i--) {\n    long double sss = 0;\n    long long ee = e[i];\n    long double tt = 0;\n    for (int j = i; j < n - 1; j++) {\n      ee -= d[j];\n      if (ee < 0) {\n        break;\n      }\n      tt += (1.0 * d[j]) \/ s[i];\n      \/\/            cout<<\"->\"<<tt<<\" \"<<d[j]<<\" \"<<s[i]<<\" \"<<tt+dp[j+1]<<endl;\n      if (j == i || tt + dp[j + 1] < sss) {\n        sss = tt + dp[j + 1];\n        \/\/                cout<<sss;\n      }\n    }\n    dp[i] = sss;\n    \/\/        cout<<\"-->\"<<dp[i]<<endl;\n  }\n  cout << \"Case #\" << cc << \": \" << fixed << dp[0] << endl;\n  return 1;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  cout.precision(7);\n  for (int i = 1; i <= t; i++) {\n    solve(i);\n  }\n  return 0;\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\nlong long ans;\nlong long pows[20];\nvoid solve(long long n, int digLeft, int prevDig, long long cur) {\n  if (cur * pows[digLeft] > n)\n    return;\n  if (ans != 0)\n    return;\n  if (digLeft == 0) {\n    ans = cur;\n    return;\n  }\n  for (int i = 9; i >= prevDig; i--) {\n    solve(n, digLeft - 1, i, cur * 10 + i);\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  \/\/ freopen(\".out\",\"w\",stdout);\n  int t;\n  cin >> t;\n  pows[0] = 1;\n  for (int i = 0; i < 19; i++) {\n    pows[i + 1] = pows[i] * 10;\n  }\n  for (int i = 1; i <= t; i++) {\n    ans = 0;\n    long long n;\n    cin >> n;\n    int digs = log10(n) + 1;\n    solve(n, digs, 0, 0);\n    cout << \"Case #\" << i << \": \" << ans << endl;\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nll a, b;\nvoid solve(ll n, ll k) {\n  map<ll, ll> prev;\n  map<ll, ll> cur;\n\n  prev[n] = 1;\n  while (true) {\n    for (map<ll, ll>::reverse_iterator it = prev.rbegin(); it != prev.rend();\n         ++it) {\n      \/\/ split\n      \/\/ check if done\n\n      a = ((it->first) - 1) \/ 2;\n      b = (it->first) - 1 - a;\n      ll val = it->second;\n      k -= val;\n      if (k <= 0)\n        return;\n      if (a != 0)\n        cur[a] += val;\n      if (b != 0)\n        cur[b] += val;\n    }\n    prev.swap(cur);\n    cur.clear();\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    ll n, k;\n    cin >> n >> k;\n    solve(n, k);\n\n    cout << \"Case #\" << i << \": \" << max(a, b) << \" \" << min(a, b) << endl;\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\nint solve(string s, int k) {\n  int ans = 0;\n  for (int i = 0; i <= s.length() - k; i++) {\n    if (s[i] == '-') {\n      ans++;\n      for (int j = i; j < i + k; j++) {\n        if (s[j] == '-')\n          s[j] = '+';\n        else\n          s[j] = '-';\n      }\n    }\n  }\n\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '-')\n      ans = -1;\n  }\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  \/\/ freopen(\".out\",\"w\",stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = solve(s, k);\n    if (ans == -1)\n      cout << \"Case #\" << i << \": \"\n           << \"IMPOSSIBLE\" << endl;\n    else\n      cout << \"Case #\" << i << \": \" << ans << endl;\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nint servings[51];\nint packs[51][51];\npair<int, int> valid(int ser, int x) {\n  pair<int, int> res;\n  res.second = 0;\n  if ((float)x \/ (0.9 * ser) < (float)x \/ (1.1 * ser))\n    return res;\n  res.first = ceil(x \/ (1.1 * ser)) + 0.00001;\n  res.second = x \/ (0.9 * ser);\n  return res;\n}\nstruct entr {\n  int x;\n  int ingre;\n  int id;\n  int en;\n  bool start;\n};\nbool comp(entr a, entr b) {\n  if (a.x < b.x)\n    return true;\n  if (a.x == b.x && a.start)\n    return true;\n  return false;\n}\nbool comp2(entr a, entr b) { return a.en < b.en; }\nint solve(int n, int p) {\n  int ans = 0;\n  vector<entr> ranges;\n  int idCount = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      pair<int, int> cur = valid(servings[i], packs[i][j]);\n      if (cur.second == 0)\n        continue;\n      if (cur.second < cur.first)\n        continue;\n      entr temp;\n      temp.x = cur.first;\n      temp.ingre = i;\n      temp.id = idCount;\n      temp.start = true;\n      temp.en = cur.second;\n      ranges.push_back(temp);\n      temp.x = cur.second;\n      temp.start = false;\n      ranges.push_back(temp);\n      idCount++;\n    }\n  }\n  sort(ranges.begin(), ranges.end(), comp);\n  vector<entr> cInRange[51];\n  for (int i = 0; i < ranges.size(); i++) {\n    \/\/ cout<<ranges[i].x<<\" \"<<ranges[i].id<<\" \"<<ranges[i].ingre<<endl;\n    if (ranges[i].start)\n      cInRange[ranges[i].ingre].push_back(ranges[i]);\n    else {\n      for (int j = 0; j < cInRange[ranges[i].ingre].size(); j++) {\n        if (cInRange[ranges[i].ingre][j].id == ranges[i].id) {\n          cInRange[ranges[i].ingre].erase(cInRange[ranges[i].ingre].begin() +\n                                          j);\n          break;\n        }\n      }\n      continue;\n    }\n    int curMin = cInRange[0].size();\n    for (int j = 0; j < n; j++) {\n      curMin = min(curMin, (int)cInRange[j].size());\n    }\n    ans += curMin;\n    if (curMin == 0)\n      continue;\n\n    for (int j = 0; j < n; j++) {\n      sort(cInRange[j].begin(), cInRange[j].end(), comp2);\n      cInRange[j].erase(cInRange[j].begin());\n    }\n  }\n  \/*\n  for(map<int, int>::iterator it = nums[0].begin(); it!=nums[0].end(); ++it){\n      int cur = it->second;\n      int check= it->first;\n      for(int i=0; i< n; i++){\n          cur = min(cur, nums[i][check]);\n      }\n      ans+=cur;\n  }\n   *\/\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test2.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    int n, p;\n    cin >> n >> p;\n    for (int j = 0; j < n; j++)\n      cin >> servings[j];\n    for (int j = 0; j < n; j++) {\n      for (int b = 0; b < p; b++) {\n        cin >> packs[j][b];\n      }\n    }\n\n    int ans = solve(n, p);\n    cout << \"Case #\" << i << \": \" << ans << endl;\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nstruct rect {\n  int t, b, l, r;\n};\nchar mat[26][26];\nbool checkIfClear(int a, int b, int c, int d, char checker) {\n  for (int i = a; i <= b; i++) {\n    for (int j = c; j <= d; j++) {\n      if (mat[i][j] != '?' && mat[i][j] != checker)\n        return false;\n    }\n  }\n  return true;\n}\nvoid fillC(int a, int b, int c, int d, char filler) {\n  for (int i = a; i <= b; i++) {\n    for (int j = c; j <= d; j++) {\n      mat[i][j] = filler;\n    }\n  }\n}\nvoid solve(int r, int c) {\n\n  map<char, rect> rs;\n  for (int i = 0; i < r; i++) {\n    for (int b = 0; b < c; b++) {\n      if (mat[i][b] == '?')\n        continue;\n      char ind = mat[i][b];\n      rs[ind].t = i;\n      rs[ind].b = i;\n      rs[ind].l = b;\n      rs[ind].r = b;\n    }\n  }\n\n  for (int i = 0; i < r; i++) {\n    for (int b = 0; b < c; b++) {\n      if (mat[i][b] != '?')\n        continue;\n      for (map<char, rect>::iterator it = rs.begin(); it != rs.end(); ++it) {\n        rect check;\n        rect cur = it->second;\n        check.t = min(cur.t, i);\n        check.b = max(cur.b, i);\n        check.l = min(cur.l, b);\n        check.r = max(cur.r, b);\n        if (!checkIfClear(check.t, check.b, check.l, check.r, it->first))\n          continue;\n        rs[it->first] = check;\n        fillC(check.t, check.b, check.l, check.r, it->first);\n      }\n    }\n  }\n\n  for (int i = 0; i < r; i++) {\n    for (int b = 0; b < c; b++) {\n      cout << mat[i][b];\n    }\n    cout << endl;\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    int r, c;\n    cin >> r >> c;\n\n    for (int j = 0; j < r; j++) {\n      for (int b = 0; b < c; b++) {\n        cin >> mat[j][b];\n      }\n    }\n    cout << \"Case #\" << i << \": \" << endl;\n    solve(r, c);\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\npair<int, int> horses[1001];\nvoid solve(int d, int n) {\n  long double ans = 1e15;\n  for (int i = 0; i < n; i++) {\n    long double en = (long double)(d - horses[i].first) \/ horses[i].second;\n    long double cur = d \/ en;\n    ans = min(cur, ans);\n  }\n  cout << fixed << setprecision(8) << ans << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    int d, n;\n    cin >> d >> n;\n    for (int j = 0; j < n; j++)\n      cin >> horses[j].first >> horses[j].second;\n    cout << \"Case #\" << i << \": \";\n    solve(d, n);\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nint uni[6];\n\nint pickMax(int curColor) {\n  int ans = 0;\n  if (ans == curColor)\n    ans = 1;\n  for (int i = 0; i < 6; i++) {\n    if (i == curColor)\n      continue;\n    if (uni[ans] < uni[i])\n      ans = i;\n  }\n  return ans;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  string stuff = \"ROYGBV\";\n  for (int i = 0; i < 6; i++)\n    cin >> uni[i];\n  int ans[1000];\n  for (int i = 0; i < n; i++)\n    ans[i] = -1;\n  int init = pickMax(-1);\n  uni[init]--;\n  ans[0] = init;\n  \/\/ cout<<init<<endl;\n  int left = 1;\n  int right = n - 1;\n  bool onLeft = true;\n  while (true) {\n    int ind;\n    if (onLeft) {\n      ind = left;\n      left++;\n    } else {\n      ind = right;\n      right--;\n    }\n    if (ans[ind] != -1)\n      break;\n\n    int prev;\n    if (ind == n - 1)\n      prev = ans[0];\n    else if (!onLeft)\n      prev = ans[ind + 1];\n    else\n      prev = ans[ind - 1];\n    int val = pickMax(prev);\n\n    uni[val]--;\n    ans[ind] = val;\n    onLeft = !onLeft;\n  }\n\n  bool bad = false;\n  for (int i = 0; i < 6; i++) {\n    if (uni[i] < 0) {\n      bad = true;\n    }\n  }\n  \/\/ for(int i=0; i< n; i++) cout<<stuff[ans[i]];\n  for (int i = 1; i < n; i++) {\n    if (ans[i] == ans[i - 1])\n      bad = true;\n  }\n  if (ans[0] == ans[n - 1])\n    bad = true;\n  if (bad) {\n    cout << \"IMPOSSIBLE\" << endl;\n    return;\n  }\n  for (int i = 0; i < n; i++)\n    cout << stuff[ans[i]];\n  cout << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"thatprogrammer","func":"\/\/ Hi\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\n\nvoid solve() {\n  int n, q;\n  pair<int, int> cities[100];\n  vector<int> dists[101];\n  cin >> n >> q;\n  for (int i = 0; i < n; i++) {\n    cin >> cities[i].first >> cities[i].second;\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      int x;\n      cin >> x;\n      if (x == -1)\n        continue;\n      dists[i].push_back(x);\n    }\n  }\n  int s;\n  int d;\n  cin >> s >> d;\n  long double bestTimes[100];\n  for (int i = 0; i < n; i++)\n    bestTimes[i] = 1e13;\n  bestTimes[0] = 0;\n  for (int i = 0; i < n - 1; i++) {\n    int cur = 0;\n    int counter = i;\n    long double curTime = bestTimes[i];\n    while (cur + dists[counter][0] <= cities[i].first) {\n\n      curTime += (long double)dists[counter][0] \/ cities[i].second;\n      cur = cur + dists[counter][0];\n      bestTimes[counter + 1] = min(curTime, bestTimes[counter + 1]);\n\n      counter++;\n      if (counter >= n - 1)\n        break;\n    }\n    \/\/ for(int j=0; j< n; j++) cout<<bestTimes[j]<<\" \";\n    \/\/ cout<<endl;\n  }\n  cout << fixed << setprecision(8) << bestTimes[n - 1] << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  freopen(\"test.txt\", \"r\", stdin);\n  freopen(\"test1.txt\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    cout << \"Case #\" << i << \": \";\n    solve();\n  }\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 100002;\n\nll n;\nint a[maxn], c[maxn];\n\nbool tidy(int n) {\n  int b[20], dem, i, j;\n  dem = 0;\n  while (n > 0) {\n    dem++;\n    b[dem] = n % 10;\n    n \/= 10;\n  }\n  for (i = 1; i < dem; i++)\n    if (b[i] < b[i + 1])\n      return false;\n  return true;\n}\n\nvoid solve1(int test) {\n  int i, j, k;\n\n  for (i = n; i >= 1; i--)\n    if (tidy(i)) {\n      cout << i << \"\\n\";\n      break;\n    }\n}\n\nvoid solve2(int test) {\n  int i, j, k;\n  int b[22];\n  bool spec = false;\n\n  int dem = 0;\n  while (n > 0) {\n    b[++dem] = n % 10;\n    n \/= 10;\n  }\n  for (i = 1; i <= dem; i++) {\n    a[i] = b[dem - i + 1];\n    c[i] = 0;\n  }\n\n  for (i = 1; i <= dem; i++) {\n    if (a[i] >= c[i - 1])\n      c[i] = a[i];\n    else {\n      j = i - 1;\n      while (j > 0 && c[j] == 0) {\n        c[j] = 9;\n        j--;\n      }\n      c[j]--;\n      if (c[1] == 0) {\n        spec = true;\n        break;\n      }\n\n      while (j > 0 && c[j] < c[j - 1]) {\n        c[j - 1] = c[j];\n        j--;\n      }\n\n      for (k = j + 1; k <= dem; k++)\n        c[k] = 9;\n      break;\n    }\n  }\n\n  if (spec) {\n    for (i = 1; i < dem; i++)\n      cout << 9;\n    cout << \"\\n\";\n  } else {\n    for (i = 1; i <= dem; i++)\n      cout << c[i];\n    cout << \"\\n\";\n  }\n}\n\nvoid solve(int test) {\n  int i, j, k, u, v;\n\n  cout << \"Case #\" << test << \": \";\n  cin >> n;\n  if (n <= 000)\n    solve1(test);\n  else\n    solve2(test);\n}\n\nint main() {\n  int i, t;\n  freopen(\"cjb.in\", \"r\", stdin);\n  freopen(\"outputb.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 1000002;\n\nstruct pt3 {\n  int l, first, r;\n  int Ls, Rs;\n  pt3(){};\n  pt3(int a, int b, int c) {\n    l = a;\n    first = b;\n    r = c;\n    Ls = first - l - 1;\n    Rs = r - first - 1;\n  }\n\n  bool operator>(const pt3 &b) const {\n    return (min(Ls, Rs) > min(b.Ls, b.Rs)) ||\n           (min(Ls, Rs) == min(b.Ls, b.Rs) && max(Ls, Rs) > max(b.Ls, b.Rs));\n  }\n\n  bool operator<(const pt3 &b) const {\n    return (min(Ls, Rs) < min(b.Ls, b.Rs)) ||\n           (min(Ls, Rs) == min(b.Ls, b.Rs) && max(Ls, Rs) < max(b.Ls, b.Rs));\n  }\n};\n\nint n, K, res1, res2;\nint kt[maxn];\npriority_queue<pt3> q;\n\nvoid solve2(int test) {\n  int i, j, k;\n  pt3 p;\n\n  cin >> n >> K;\n\n  while (!q.empty())\n    q.pop();\n  q.push(pt3(1, (n + 3) \/ 2, n + 2));\n\n  for (i = 1; i <= K; i++) {\n    p = q.top();\n    q.pop();\n    if (kt[p.first] == test)\n      continue;\n\n    kt[p.first]++;\n    res1 = max(p.Ls, p.Rs);\n    res2 = min(p.Ls, p.Rs);\n    q.push(pt3(p.l, (p.l + p.first) \/ 2, p.first));\n    q.push(pt3(p.first, (p.first + p.r) \/ 2, p.r));\n  }\n\n  printf(\"Case #%d: %d %d\\n\", test, res1, res2);\n}\n\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  int i, t;\n  freopen(\"cjc.in\", \"r\", stdin);\n  freopen(\"outputc.out\", \"w\", stdout);\n\n  cin >> t;\n  for (i = 1; i <= t; i++)\n    solve2(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 1000002;\n\nint n, res, K;\nbool a[maxn], b[maxn];\nchar s[maxn];\n\nvoid solve(int test) {\n  int i, j, k, u, v;\n  bool kt = 0, found;\n\n  scanf(\"%s\", s + 1);\n  n = strlen(s + 1);\n  scanf(\"%d\\n\", &K);\n  for (i = 1; i <= n; i++) {\n    if (s[i] == '+')\n      b[i] = 1;\n    else\n      b[i] = 0;\n    a[i] = 0;\n  }\n\n  kt = 0;\n  found = true;\n  res = 0;\n  for (i = 1; i <= n; i++) {\n    kt ^= a[i];\n    b[i] ^= kt;\n    if (b[i] == 0) {\n      if (i <= n - K + 1) {\n        kt ^= 1;\n        res++;\n        a[i + K] ^= 1;\n      } else\n        found = false;\n    }\n  }\n\n  printf(\"Case #%d: \", test);\n  if (found)\n    printf(\"%d\\n\", res);\n  else\n    printf(\"IMPOSSIBLE\\n\");\n}\n\nint main() {\n  int i, t;\n  freopen(\"cja.in\", \"r\", stdin);\n  freopen(\"output.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\ntypedef pair<float, float> ptf;\nconst int base = 1000000007;\nconst int maxn = 102;\nconst float esp = 0.0001;\n\nint n, P, res;\nint R[maxn], Q[maxn][maxn], a[maxn], c[maxn];\nfloat low[maxn], high[maxn];\n\nbool intersect(ptf a, ptf b) {\n  return (a.first <= b.first && a.second >= b.first) ||\n         (a.first >= b.first && b.second >= a.first);\n}\n\nfloat roundup(float first) {\n  if (abs(first - int(first)) < 0.00001)\n    return first;\n  else\n    return int(first) + 1;\n}\n\nvoid solve1() {\n  int i, j;\n\n  res = 0;\n  for (i = 1; i <= P; i++) {\n    int cando = Q[1][i] \/ R[1];\n    float ing = cando * R[1];\n    if (Q[1][i] <= 1.1 * ing + 0.0001) {\n      res++;\n      continue;\n    }\n\n    cando = roundup(float(Q[1][i]) \/ R[1]); \/\/ int(Q[1][i]\/R[1])+1;\n    ing = cando * R[1];\n    if (Q[1][i] >= 0.9 * ing - 0.0001)\n      res++;\n  }\n}\n\nvoid solve2() {\n  int i, j, k;\n  ptf p1, p2;\n\n  res = 0;\n  for (i = 1; i <= P; i++)\n    c[i] = i;\n  do {\n    int tmp = 0;\n    for (i = 1; i <= P; i++)\n      a[i] = Q[2][c[i]];\n\n    for (i = 1; i <= P; i++) {\n      p1.first = roundup((Q[1][i] \/ 1.1) \/ R[1]);\n      while (p1.first * R[1] * 0.9 > Q[1][i] + esp)\n        p1.first -= 1;\n      p1.second = int((Q[1][i] \/ 0.9 + esp) \/ R[1]);\n      p2.first = roundup(a[i] \/ 1.1 \/ R[2]);\n      while (p2.first * R[2] * 0.9 > a[i] + esp)\n        p2.first -= 1;\n      p2.second = int((a[i] \/ 0.9 + esp) \/ R[2]);\n\n      \/\/  printf(\"%f %f %f %f\\n\",p1.x,p1.y,p2.x,p2.y);\n      if (intersect(p1, p2))\n        tmp++;\n    }\n\n    res = max(res, tmp);\n  } while (next_permutation(c + 1, c + P + 1));\n}\n\nvoid solve(int test) {\n  int i, j, k, v;\n  char h;\n\n  scanf(\"%d%d\", &n, &P);\n  for (i = 1; i <= n; i++)\n    scanf(\"%d\", &R[i]); \/\/ low[i] = 0.9*R[i]\/; high[i] = R[i]*1.1;}\n  for (i = 1; i <= n; i++)\n    for (j = 1; j <= P; j++)\n      scanf(\"%d\", &Q[i][j]);\n\n  if (n == 1)\n    solve1();\n  else\n    solve2();\n\n  printf(\"Case #%d: %d\\n\", test, res);\n}\n\nint main() {\n  int i, t;\n  freopen(\"b3.in\", \"r\", stdin);\n  freopen(\"B1.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 102;\n\nint n, m;\nchar a[maxn][maxn];\nint f[maxn][maxn][255];\nbool b[102][102];\n\nint sum(int first, int second, int u, int v, char k) {\n  return f[u][v][k] - f[u][second - 1][k] - f[first - 1][v][k] +\n         f[first - 1][second - 1][k];\n}\n\nvoid solve(int test) {\n  int i, j, k, v, L, R;\n  char h;\n\n  scanf(\"%d%d\\n\", &m, &n);\n  for (i = 1; i <= m; i++) {\n    for (j = 1; j <= n; j++) {\n      scanf(\"%c\", &a[i][j]);\n      b[i][j] = false;\n      if (a[i][j] != '?')\n        b[i][j] = true;\n    }\n    scanf(\"\\n\");\n  }\n\n  for (i = 0; i <= m; i++)\n    for (j = 0; j <= n; j++)\n      for (k = 'A'; k <= 'Z'; k++)\n        f[i][j][k] = 0;\n\n  for (i = 1; i <= m; i++)\n    for (j = 1; j <= n; j++)\n      if (b[i][j]) {\n        h = a[i][j];\n        for (k = j - 1; k >= 0; k--) {\n          if (a[i][k] != '?') {\n            L = k + 1;\n            break;\n          }\n          a[i][k] = h;\n        }\n        for (k = j + 1; k <= n + 1; k++) {\n          if (a[i][k] != '?') {\n            R = k - 1;\n            break;\n          }\n          a[i][k] = h;\n        }\n\n        for (k = i - 1; k >= 1; k--) {\n          bool expand = true;\n          for (v = L; v <= R; v++)\n            if (a[k][v] != '?' && a[k][v] != h) {\n              expand = false;\n              break;\n            }\n          if (expand)\n            for (v = L; v <= R; v++)\n              a[k][v] = h;\n          else\n            break;\n        }\n        for (k = i + 1; k <= m; k++) {\n          bool expand = true;\n          for (v = L; v <= R; v++)\n            if (a[k][v] != '?' && a[k][v] != h) {\n              expand = false;\n              break;\n            }\n          if (expand)\n            for (v = L; v <= R; v++)\n              a[k][v] = h;\n          else\n            break;\n        }\n      }\n\n  printf(\"Case #%d:\\n\", test);\n  for (i = 1; i <= m; i++) {\n    for (j = 1; j <= n; j++)\n      printf(\"%c\", a[i][j]);\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  int i, t;\n  freopen(\"A11.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 100002;\nconst double esp = 1e-9;\n\nint n, D;\ndouble res;\npt a[maxn];\n\nbool ok(double v) {\n  int i, j;\n  for (i = 1; i <= n; i++)\n    if (a[i].second < v - esp) {\n      double t = double(a[i].first) \/ (v - a[i].second);\n      double first = v * t;\n      if (first < double(D) - esp)\n        return false;\n    }\n  return true;\n}\n\nvoid solve(int test) {\n  int i, j, k, u, v;\n  double l, r, first;\n\n  scanf(\"%d%d\", &D, &n);\n  res = base;\n  for (i = 1; i <= n; i++) {\n    scanf(\"%d%d\", &a[i].first, &a[i].second);\n    res = min(res, double(a[i].second));\n  }\n\n  \/* l = 0; r = 1000000000;\n   while (abs(r-l) \/ res > esp) {\n       x = (l+r) \/ 2;\n       if (ok(x)) {res = x; l = x+esp;}\n       else r = x-esp;\n   }*\/\n  sort(a + 1, a + n + 1);\n  double slowest = esp;\n  for (i = n; i >= 1; i--) {\n    slowest = max(slowest, double(D - a[i].first) \/ a[i].second);\n  }\n  res = D \/ slowest;\n\n  printf(\"Case #%d: %.6lf\\n\", test, res);\n}\n\nint main() {\n  int i, t;\n  freopen(\"A.in\", \"r\", stdin);\n  freopen(\"A1.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst int base = 1000000007;\nconst int maxn = 100002;\n\nint n;\nchar res[maxn];\npt a[maxn];\n\nbool cmp(pt a, pt b) { return (a.first > b.first); }\n\nvoid solve(int test) {\n  int i, j;\n  int s[10];\n\n  scanf(\"%d\", &n);\n  for (i = 1; i <= 6; i++)\n    scanf(\"%d\", &s[i]);\n  a[1].first = s[1];\n  a[1].second = 'R';\n  a[2].first = s[3];\n  a[2].second = 'Y';\n  a[3].first = s[5];\n  a[3].second = 'B';\n  \/\/ if (n<=20) printf(\"%d %d 0 %d 0 %d 0 \\n\",n,a[1].x,a[2].x,a[3].x);\n\n  printf(\"Case #%d: \", test);\n  if (a[1].first > a[2].first + a[3].first) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  if (a[2].first > a[1].first + a[3].first) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  if (a[3].first > a[2].first + a[1].first) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n\n  sort(a + 1, a + 3 + 1, cmp);\n  res[1] = a[1].second;\n  a[1].first--;\n  for (i = 2; i <= n; i++) {\n    sort(a + 1, a + 3 + 1, cmp);\n    if (a[1].second != res[i - 1]) {\n      res[i] = a[1].second;\n      a[1].first--;\n    } else {\n      if (res[i - 2] == a[2].second) {\n        if (a[2].first > 0) {\n          a[2].first--;\n          res[i] = a[2].second;\n        } else {\n          a[3].first--;\n          res[i] = a[3].second;\n        }\n      } else if (res[i - 2] == a[3].second) {\n        if (a[3].first > 0) {\n          a[3].first--;\n          res[i] = a[3].second;\n        } else {\n          a[2].first--;\n          res[i] = a[2].second;\n        }\n      } else if (a[2].first > 0) {\n        a[2].first--;\n        res[i] = a[2].second;\n      } else if (a[3].first > 0) {\n        a[3].first--;\n        res[i] = a[3].second;\n      }\n    }\n  }\n  if (res[n] == res[1])\n    swap(res[n], res[n - 1]);\n  res[n + 1] = 0;\n\n  printf(\"%s\\n\", res + 1);\n}\n\nint main() {\n  int i, t;\n  freopen(\"B.in\", \"r\", stdin);\n  freopen(\"B1.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"TheEnglishMajor27","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pt;\nconst double base = ll(1000000007) * ll(1000000);\nconst int maxn = 1002;\n\nint n, Q;\nint D[maxn][maxn];\nll sum[maxn], E[maxn], S[maxn];\nint kt[maxn][maxn], timeht;\ndouble f[maxn][maxn], res;\n\nll get(int i, int j) { return sum[j] - sum[i]; }\n\ndouble dfs(int city, int last) {\n  if (kt[city][last] != timeht) {\n    kt[city][last] = timeht;\n    f[city][last] = base;\n  } else\n    return f[city][last];\n\n  if (city == n)\n    return f[city][last] = 0;\n\n  for (int i = city + 1; i <= n; i++) {\n    if (get(last, i) <= E[last])\n      f[city][last] =\n          min(f[city][last], double(get(city, i)) \/ S[last] + dfs(i, last));\n\n    if (last != city)\n      f[city][last] = min(f[city][last], dfs(city, city));\n  }\n\n  return f[city][last];\n}\n\nvoid solve(int test) {\n  int i, j, k, u, v, s, t;\n  sum[0] = sum[1] = 0;\n\n  scanf(\"%d%d\", &n, &Q);\n  for (i = 1; i <= n; i++)\n    scanf(\"%I64d%I64d\", &E[i], &S[i]);\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= n; j++)\n      scanf(\"%d\", &D[i][j]);\n    sum[i + 1] = sum[i] + D[i][i + 1];\n  }\n  scanf(\"%d%d\", &s, &t);\n\n  timeht++;\n  res = dfs(1, 1);\n\n  printf(\"Case #%d: %.6lf\\n\", test, res);\n}\n\nint main() {\n  int i, t;\n  freopen(\"C.in\", \"r\", stdin);\n  freopen(\"C1.out\", \"w\", stdout);\n\n  scanf(\"%d\", &t);\n  for (i = 1; i <= t; i++)\n    solve(i);\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int T;\n  char S[20];\n  int N[20];\n\n  scanf(\" %d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\" %s\", S);\n    int len = strlen(S);\n    for (int i = 0; i < len; i++) {\n      N[i] = S[i] - '0';\n    }\n\n    for (int i = len - 1; i > 0; i--) {\n      if (N[i - 1] > N[i]) {\n        N[i - 1]--;\n        for (int j = i; j < len; j++) {\n          N[j] = 9;\n        }\n      }\n    }\n\n    printf(\"Case #%d: \", cas);\n    int i = 0;\n    for (; i < len; i++) {\n      if (N[i] != 0)\n        break;\n    }\n    for (; i < len; i++) {\n      printf(\"%d\", N[i]);\n    }\n    puts(\"\");\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <stdio.h>\n\nint main() {\n\n  int T;\n  long long N;\n  long long K;\n\n  scanf(\" %d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\" %lld %lld\", &N, &K);\n\n    while (K >= 1) {\n      N--;\n      if (K == 1) {\n        printf(\"Case #%d: %lld %lld\\n\", cas, (N \/ 2) + ((N % 2) == 0 ? 0 : 1),\n               N \/ 2);\n        break;\n      }\n      K--;\n\n      if ((K % 2) == 0) {\n        K \/= 2;\n        N \/= 2;\n      } else {\n        K = K \/ 2 + 1;\n        N = (N \/ 2) + ((N % 2) == 0 ? 0 : 1);\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <stdio.h>\n#include <string.h>\n\nint main() {\n  int T;\n  char S[2000];\n  int K;\n\n  scanf(\" %d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\" %s %d\", S, &K);\n\n    int len = strlen(S);\n\n    int res = 0;\n    for (int i = 0; i < len; i++) {\n      if (S[i] == '-') {\n        if (i + K <= len) {\n          res++;\n          for (int j = i; j < i + K; j++) {\n            S[j] = (S[j] == '+') ? '-' : '+';\n          }\n        } else {\n          res = -1;\n        }\n      }\n    }\n\n    if (res < 0) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n    } else {\n      printf(\"Case #%d: %d\\n\", cas, res);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <stdio.h>\n\nusing namespace std;\n\nstruct XD {\n  long long value;\n  int mini;\n  int maxi;\n};\n\nint T;\nint N, P;\n\nlong long R[2000];\nXD Q[1005][1005];\n\nint serveMin(long long target, long long v) {\n  int left = 1, right = 1000005;\n  int mid;\n  int res = -1;\n\n  for (int i = 0; i <= 1000; i++) {\n    mid = (left + right) \/ 2;\n    if (mid * v * 9 <= target * 10 && target * 10 <= mid * v * 11) {\n      res = (res == -1) ? mid : min(mid, res);\n    }\n\n    if (target * 10 <= mid * v * 11) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  return res;\n}\n\nint visit[2000];\n\nvoid dfs(int v, int &ans) {\n  if (v == P) {\n    int cnt = 0;\n    for (int i = 0; i < P; i++) {\n      XD a = Q[0][i];\n      XD b = Q[1][visit[i]];\n      if (a.mini == -1 || b.mini == -1)\n        continue;\n      if (a.maxi > b.maxi) {\n        swap(a, b);\n      }\n      if (b.mini <= a.maxi)\n        cnt++;\n    }\n    ans = max(ans, cnt);\n  }\n  for (int i = 0; i < P; i++) {\n    if (visit[i] == -1) {\n      visit[i] = v;\n      dfs(v + 1, ans);\n      visit[i] = -1;\n    }\n  }\n}\n\nint solve() {\n  memset(visit, -1, sizeof(visit));\n  int cnt = 0;\n  if (N == 1) {\n    for (int i = 0; i < P; i++) {\n      if (Q[0][i].mini != -1) {\n        cnt++;\n      }\n    }\n  } else if (N == 2) {\n    dfs(0, cnt);\n  } else {\n    cnt = -1;\n  }\n  return cnt;\n}\n\nint serveMax(long long target, long long v) {\n  int left = 1, right = 1000005;\n  int mid;\n  int res = -1;\n\n  for (int i = 0; i <= 1000; i++) {\n    mid = (left + right) \/ 2;\n    if (mid * v * 9 <= target * 10 && target * 10 <= mid * v * 11) {\n      res = (res == -1) ? mid : max(mid, res);\n    }\n\n    if (mid * v * 9 <= target * 10) {\n      left = mid;\n    } else {\n      right = mid;\n    }\n  }\n\n  return res;\n}\n\nint main() {\n  scanf(\" %d\", &T);\n\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\" %d %d\", &N, &P);\n    for (int i = 0; i < N; i++) {\n      scanf(\" %lld\", &R[i]);\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        scanf(\" %lld\", &Q[i][j].value);\n        Q[i][j].mini = serveMin(Q[i][j].value, R[i]);\n        Q[i][j].maxi = serveMax(Q[i][j].value, R[i]);\n      }\n    }\n\n    int res = solve();\n    printf(\"Case #%d: %d\\n\", cas, res);\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <cmath>\n#include <cstring>\n#include <stdio.h>\n\nusing namespace std;\n\nint R, C;\nchar cake[50][50];\n\nvoid solve() {\n  for (int i = 0; i < R; i++) {\n    for (int j = 1; j < C; j++) {\n      if (cake[i][j] == '?') {\n        cake[i][j] = cake[i][j - 1];\n      }\n    }\n    for (int j = C - 2; j >= 0; j--) {\n      if (cake[i][j] == '?') {\n        cake[i][j] = cake[i][j + 1];\n      }\n    }\n  }\n\n  for (int j = 0; j < C; j++) {\n    for (int i = 1; i < R; i++) {\n      if (cake[i][j] == '?') {\n        cake[i][j] = cake[i - 1][j];\n      }\n    }\n    for (int i = R - 2; i >= 0; i--) {\n      if (cake[i][j] == '?') {\n        cake[i][j] = cake[i + 1][j];\n      }\n    }\n  }\n\n  for (int i = 0; i < R; i++) {\n    for (int j = 0; j < C; j++) {\n      printf(\"%c\", cake[i][j]);\n    }\n    puts(\"\");\n  }\n}\n\nint main() {\n  int T;\n\n  scanf(\" %d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\" %d %d\", &R, &C);\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        scanf(\" %c\", &cake[i][j]);\n      }\n    }\n\n    printf(\"Case #%d:\\n\", cas);\n    solve();\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint T, cas;\nlong long D;\nint N;\n\nint main() {\n  long long K, S;\n  double t;\n\n  scanf(\" %d\", &T);\n  for (cas = 1; cas <= T; cas++) {\n    scanf(\" %lld %d\", &D, &N);\n    t = 0.0;\n\n    for (int i = 0; i < N; i++) {\n      scanf(\" %lld %lld\", &K, &S);\n      double dis = D - K;\n      t = max(t, dis \/ S);\n    }\n\n    printf(\"Case #%d: %.8lf\\n\", cas, D \/ t);\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint T, cas;\nint N;\nint R, O, Y, G, B, V;\nchar first;\n\nvoid dfs(int r, int y, int b, char prefix) {\n  if (r == 0 && y == 0 && b == 0)\n    return;\n  if (prefix == 'R') {\n    if (y > b) {\n      printf(\"Y\");\n      dfs(r, y - 1, b, 'Y');\n    } else if (y < b) {\n      printf(\"B\");\n      dfs(r, y, b - 1, 'B');\n    } else {\n      if (first == 'Y') {\n        printf(\"Y\");\n        dfs(r, y - 1, b, 'Y');\n      } else {\n        printf(\"B\");\n        dfs(r, y, b - 1, 'B');\n      }\n    }\n  } else if (prefix == 'Y') {\n    if (r > b) {\n      printf(\"R\");\n      dfs(r - 1, y, b, 'R');\n    } else if (r < b) {\n      printf(\"B\");\n      dfs(r, y, b - 1, 'B');\n    } else {\n      if (first == 'R') {\n        printf(\"R\");\n        dfs(r - 1, y, b, 'R');\n      } else {\n        printf(\"B\");\n        dfs(r, y, b - 1, 'B');\n      }\n    }\n  } else if (prefix == 'B') {\n    if (r > y) {\n      printf(\"R\");\n      dfs(r - 1, y, b, 'R');\n    } else if (r < y) {\n      printf(\"Y\");\n      dfs(r, y - 1, b, 'Y');\n    } else {\n      if (first == 'R') {\n        printf(\"R\");\n        dfs(r - 1, y, b, 'R');\n      } else {\n        printf(\"Y\");\n        dfs(r, y - 1, b, 'Y');\n      }\n    }\n  } else {\n    if (r > y && r > b) {\n      first = 'R';\n      printf(\"R\");\n      dfs(r - 1, y, b, 'R');\n    } else if (y >= r && y > b) {\n      first = 'Y';\n      printf(\"Y\");\n      dfs(r, y - 1, b, 'Y');\n    } else {\n      first = 'B';\n      printf(\"B\");\n      dfs(r, y, b - 1, 'B');\n    }\n  }\n}\n\nvoid solve() {\n  if (R > Y + B) {\n    printf(\"IMPOSSIBLE\");\n    return;\n  }\n\n  if (Y > R + B) {\n    printf(\"IMPOSSIBLE\");\n    return;\n  }\n\n  if (B > R + Y) {\n    printf(\"IMPOSSIBLE\");\n    return;\n  }\n\n  dfs(R, Y, B, 'x');\n}\n\nint main() {\n  scanf(\" %d\", &T);\n  for (cas = 1; cas <= T; cas++) {\n    scanf(\" %d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n\n    printf(\"Case #%d: \", cas);\n    solve();\n    puts(\"\");\n  }\n\n  return 0;\n}\n"}
{"target":"tony810430","func":"#include <algorithm>\n#include <stdio.h>\nusing namespace std;\n\nint T, cas;\nint N, Q;\nlong long E[105];\nint S[105];\nlong long D[105][105];\nint U[105];\nint V[105];\ndouble dis[105][105];\n\nvoid solve() {\n  for (int k = 1; k <= N; k++) {\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        if (D[i][k] == -1)\n          continue;\n        if (D[k][j] == -1)\n          continue;\n        if (D[i][j] == -1 || D[i][j] > D[i][k] + D[k][j])\n          D[i][j] = D[i][k] + D[k][j];\n      }\n    }\n  }\n\n  for (int i = 1; i <= N; i++) {\n    for (int j = 1; j <= N; j++) {\n      if (D[i][j] <= E[i]) {\n        dis[i][j] = double(D[i][j]) \/ S[i];\n      } else {\n        dis[i][j] = -1.0;\n      }\n    }\n  }\n\n  for (int k = 1; k <= N; k++) {\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        if (dis[i][k] < 0.0)\n          continue;\n        if (dis[k][j] < 0.0)\n          continue;\n        if (dis[i][j] < 0.0 || dis[i][j] > dis[i][k] + dis[k][j])\n          dis[i][j] = dis[i][k] + dis[k][j];\n      }\n    }\n  }\n\n  for (int i = 0; i < Q; i++) {\n    printf(\" %.6lf\", dis[U[i]][V[i]]);\n  }\n}\n\nint main() {\n  scanf(\" %d\", &T);\n  for (cas = 1; cas <= T; cas++) {\n    scanf(\" %d %d\", &N, &Q);\n    for (int i = 1; i <= N; i++) {\n      scanf(\" %lld %d\", &E[i], &S[i]);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        scanf(\" %lld\", &D[i][j]);\n      }\n    }\n    for (int i = 0; i < Q; i++) {\n      scanf(\" %d %d\", &U[i], &V[i]);\n    }\n\n    printf(\"Case #%d:\", cas);\n    solve();\n    puts(\"\");\n  }\n\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <stdio.h>\n#include <string.h>\n\nint len, i, j, cnt;\nchar N[20];\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%s\", N);\n    len = strlen(N);\n    bool change = true;\n    while (change) {\n      change = false;\n      for (i = 1; i < len; i++) {\n        if (N[i - 1] > N[i]) {\n          change = true;\n          if (N[i - 1] == '1') {\n            len--;\n            for (j = 0; j < len; j++)\n              N[j] = '9';\n            N[j] = '\\0';\n          } else {\n            N[i - 1]--;\n            for (j = i; j < len; j++)\n              N[j] = '9';\n          }\n        }\n      }\n    }\n    printf(\"%s\\n\", N);\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <set>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\n\nint len, i, j, cnt;\nlong long N, K, Ls, Rs;\nmultiset<pair<long long, long long>> m;\nmultiset<pair<long long, long long>>::iterator it, itb;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%lld%lld\", &N, &K);\n    m.clear();\n    m.insert(make_pair(N, 0));\n    while (K--) {\n      long long bLs = -1, bRs = -1, bpos;\n      for (it = m.begin(); it != m.end(); ++it) {\n        Rs = it->first \/ 2;\n        Ls = it->first - Rs - 1;\n        if (min(Ls, Rs) > min(bLs, bRs))\n          bLs = Ls, bRs = Rs, bpos = it->second, itb = it;\n        else if (min(Ls, Rs) == min(bLs, bRs) && max(Ls, Rs) > max(bLs, bRs))\n          bLs = Ls, bRs = Rs, bpos = it->second, itb = it;\n        else if (min(Ls, Rs) == min(bLs, bRs) && max(Ls, Rs) == max(bLs, bRs) &&\n                 bpos > it->second)\n          bLs = Ls, bRs = Rs, bpos = it->second, itb = it;\n      }\n      m.erase(itb);\n      Ls = bLs;\n      Rs = bRs;\n      m.insert(make_pair(Ls, bpos));\n      m.insert(make_pair(Rs, bpos + Ls + 1));\n    }\n    printf(\"%lld %lld\\n\", max(Ls, Rs), min(Ls, Rs));\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <stdio.h>\n#include <string.h>\n\nchar s[1001];\nint K, len, i, j, cnt;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%s%d\", s, &K);\n    len = strlen(s);\n    cnt = 0;\n    for (i = 0; i <= len - K; i++) {\n      if (s[i] == '+')\n        continue;\n      cnt++;\n      for (j = 0; j < K; j++) {\n        if (s[i + j] == '-')\n          s[i + j] = '+';\n        else\n          s[i + j] = '-';\n      }\n    }\n    for (; i < len; i++) {\n      if (s[i] == '-')\n        cnt = -1;\n    }\n    if (cnt == -1)\n      printf(\"IMPOSSIBLE\\n\");\n    else\n      printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <math.h>\n#include <stdio.h>\n\nint N, P, R[50], Q[50][50], i, j, k, X, cnt;\nbool was[50][50];\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%d%d\", &N, &P);\n    for (i = 0; i < N; i++)\n      scanf(\"%d\", &R[i]);\n    for (i = 0; i < N; i++) {\n      for (j = 0; j < P; j++) {\n        scanf(\"%d\", &Q[i][j]);\n        was[i][j] = false;\n      }\n    }\n    \/\/ for (X = (int) ceil(10 * Q[0][i] \/ 11. \/ R[0]); 9 * X * R[0] <= 10 *\n    \/\/ Q[0][i]; X++) {\n\n    for (cnt = 0;; cnt++) {\n      int maxX = -1;\n      for (i = 0; i < N; i++) {\n        int minX = -1;\n        for (j = 0; j < P; j++) {\n          if (was[i][j])\n            continue;\n          X = (int)ceil(10 * Q[i][j] \/ 11. \/ R[i]);\n          if (9LL * X * R[i] <= 10 * Q[i][j]) {\n            if (minX == -1 || minX > X) {\n              minX = X;\n            }\n          }\n        }\n        if (maxX == -1 || maxX < minX)\n          maxX = minX;\n      }\n      if (maxX == -1)\n        break;\n      for (i = 0; i < N; i++) {\n        int minj = -1;\n        for (j = 0; j < P; j++) {\n          if (was[i][j])\n            continue;\n          if (9LL * maxX * R[i] <= 10 * Q[i][j]) {\n            if (minj == -1 || Q[i][j] < Q[i][minj]) {\n              minj = j;\n            }\n          }\n        }\n        if (minj == -1)\n          break;\n        was[i][minj] = true;\n      }\n      if (i < N)\n        break;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"\/\/ PLUS MANUAL FIXES\n#include <stdio.h>\n#include <string.h>\n\nchar a[25][26];\nbool was[255];\nint R, C, i, j, k, b, e, q;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d:\\n\", kejs);\n    scanf(\"%d%d\", &R, &C);\n    for (i = 0; i < R; i++)\n      scanf(\"%s\", a[i]);\n    for (i = 'A'; i <= 'Z'; i++)\n      was[i] = false;\n    if (kejs == 67)\n      for (i = 0; i < R; i++)\n        printf(\"%s\\n\", a[i]);\n\n    for (i = 0; i < R; i++) {\n      for (j = 0; j < C; j++) {\n        if (a[i][j] != '?' && !was[(int)a[i][j]]) {\n          was[(int)a[i][j]] = true;\n\n          for (k = i - 1; k >= 0; k--)\n            if (a[k][j] == '?')\n              a[k][j] = a[i][j];\n            else\n              break;\n          b = k + 1;\n          for (k = i + 1; k < R; k++)\n            if (a[k][j] == '?')\n              a[k][j] = a[i][j];\n            else\n              break;\n          e = k - 1;\n          for (k = j - 1; k >= 0; k--) {\n            for (q = b; q <= e; q++)\n              if (a[q][k] != '?')\n                break;\n            if (q > e) {\n              for (q = b; q <= e; q++)\n                a[q][k] = a[i][j];\n            } else\n              break;\n          }\n          for (k = j + 1; k < C; k++) {\n            for (q = b; q <= e; q++)\n              if (a[q][k] != '?')\n                break;\n            if (q > e) {\n              for (q = b; q <= e; q++)\n                a[q][k] = a[i][j];\n            } else\n              break;\n          }\n        }\n      }\n    }\n\n    for (i = 0; i < R; i++)\n      printf(\"%s\\n\", a[i]);\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"\/\/ PLUS MANUAL FIXES\n#include <stdio.h>\n#include <string.h>\n\nint D, N, K[1000], S[1000];\nint i;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%d%d\", &D, &N);\n    double tmax = 0;\n    for (i = 0; i < N; i++) {\n      scanf(\"%d%d\", &K[i], &S[i]);\n      double s = D - K[i];\n      double v = S[i];\n      double t = s \/ v;\n      if (t > tmax)\n        tmax = t;\n    }\n    printf(\"%.10lf\\n\", D \/ tmax);\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <algorithm>\n#include <stdio.h>\n#include <string.h>\n\nint N, R, O, Y, G, B, V, m1, m2, m3;\nint i;\nchar a[1001], c1, c2, c3;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d: \", kejs);\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &O, &Y, &G, &B, &V);\n    if (R >= Y && R >= B) {\n      c1 = 'R';\n      m1 = R;\n      if (Y >= B) {\n        c2 = 'Y';\n        m2 = Y;\n        c3 = 'B';\n        m3 = B;\n      } else {\n        c2 = 'B';\n        m2 = B;\n        c3 = 'Y';\n        m3 = Y;\n      }\n    } else if (Y >= R && Y >= B) {\n      c1 = 'Y';\n      m1 = Y;\n      if (R >= B) {\n        c2 = 'R';\n        m2 = R;\n        c3 = 'B';\n        m3 = B;\n      } else {\n        c2 = 'B';\n        m2 = B;\n        c3 = 'R';\n        m3 = R;\n      }\n    } else {\n      c1 = 'B';\n      m1 = B;\n      if (R >= Y) {\n        c2 = 'R';\n        m2 = R;\n        c3 = 'Y';\n        m3 = Y;\n      } else {\n        c2 = 'Y';\n        m2 = Y;\n        c3 = 'R';\n        m3 = R;\n      }\n    }\n    if (m3 == 0) {\n      if (m1 != m2)\n        printf(\"IMPOSSIBLE\\n\");\n      else {\n        for (i = 0; i < N; i++) {\n          a[i] = i % 2 ? c1 : c2;\n        }\n        a[N] = '\\0';\n        printf(\"%s\\n\", a);\n      }\n    } else {\n      a[N] = '\\0';\n      a[0] = c3;\n      m3--;\n      for (i = 1; i < N; i++) {\n        if (m1 > 0 && a[i - 1] != c1) {\n          a[i] = c1;\n          m1--;\n        } else if (m2 > 0 && a[i - 1] != c2) {\n          a[i] = c2;\n          m2--;\n        } else if (m3 > 0 && a[i - 1] != c3) {\n          a[i] = c3;\n          m3--;\n        } else\n          break;\n        if (m2 > m1) {\n          std::swap(m1, m2);\n          std::swap(c1, c2);\n        }\n        if (m3 > m2) {\n          std::swap(m3, m2);\n          std::swap(c3, c2);\n        }\n      }\n      if (i < N)\n        printf(\"IMPOSSIBLE\\n\");\n      else if (a[0] != a[N - 1])\n        printf(\"%s\\n\", a);\n      else {\n        std::swap(a[0], a[1]);\n        if (a[1] == a[2])\n          std::swap(a[1], a[2]);\n        printf(\"%s\\n\", a);\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"TrePe","func":"#include <queue>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\n\nint N, Q, E[100], S[100], D[100][100], U, V;\nint i, j, q;\nqueue<pair<pair<short, double>, pair<int, int>>>\n    que; \/\/ where am I, time elapsed, remaining endurance, speed\npair<pair<short, double>, pair<int, int>> p,\n    p2; \/\/ where am I, time elapsed, remaining endurance, speed\ndouble best;\n\nint main() {\n  int cases;\n  scanf(\"%d\", &cases);\n  for (int kejs = 1; kejs <= cases; kejs++) {\n    printf(\"Case #%d:\", kejs);\n    scanf(\"%d%d\", &N, &Q);\n    for (i = 0; i < N; i++) {\n      scanf(\"%d%d\", &E[i], &S[i]);\n    }\n    for (i = 0; i < N; i++) {\n      for (j = 0; j < N; j++) {\n        scanf(\"%d\", &D[i][j]);\n      }\n    }\n    for (q = 0; q < Q; q++) {\n      scanf(\"%d%d\", &U, &V);\n      U--;\n      V--;\n      best = -1;\n      p.first.first = U;\n      p.first.second = 0;\n      p.second.first = 0;\n      p.second.second = 0;\n      que.push(p);\n      while (!que.empty()) {\n        p = que.front();\n        que.pop();\n        \/\/ fprintf(stderr, \"%d %.10lf %d %d\\n\", p.first.first, p.first.second,\n        \/\/ p.second.first, p.second.second);\n        if (p.first.first == V) {\n          if (best == -1 || best > p.first.second)\n            best = p.first.second;\n          continue;\n        }\n        for (i = 0; i < N; i++) {\n          if (D[p.first.first][i] == -1)\n            continue;\n          if (D[p.first.first][i] <=\n              p.second.first) { \/\/ endurance of current horse suffices\n            p2.first.first = i;\n            p2.first.second = p.first.second +\n                              ((double)D[p.first.first][i]) \/ p.second.second;\n            p2.second.first = p.second.first - D[p.first.first][i];\n            p2.second.second = p.second.second;\n            que.push(p2);\n          }\n          if (D[p.first.first][i] <=\n              E[p.first.first]) { \/\/ endurance of horse in current town suffices\n            p2.first.first = i;\n            p2.first.second = p.first.second +\n                              ((double)D[p.first.first][i]) \/ S[p.first.first];\n            p2.second.first = E[p.first.first] - D[p.first.first][i];\n            p2.second.second = S[p.first.first];\n            que.push(p2);\n          }\n        }\n      }\n\n      printf(\" %.10lf\", best);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int T, t, a[30], m, i, j;\n  long long n;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> n;\n    m = 0;\n    while (n) {\n      a[++m] = n % 10;\n      n \/= 10;\n    }\n    for (i = 2; i <= m; i++)\n      if (a[i - 1] < a[i]) {\n        a[i]--;\n        for (j = 1; j < i; j++)\n          a[j] = 9;\n      }\n    printf(\"Case #%d: \", t);\n    if (!a[m])\n      m--;\n    for (; m; m--)\n      printf(\"%d\", a[m]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int T, t;\n  long long n, k, m, r, b;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> n >> k;\n    printf(\"Case #%d: \", t);\n    for (b = 1; b * 2 <= k; b *= 2)\n      ;\n    n -= b;\n    k -= b;\n    m = n \/ b;\n    r = n % b;\n    if (k > r)\n      m--;\n    r = m \/ 2;\n    m -= r;\n    cout << m << \" \" << r << endl;\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"\/\/ just flip\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int T, t;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    char s[1100];\n    int k, n, m = 0, a[1100], i, j;\n    scanf(\"%s%d\", s, &k);\n    n = strlen(s);\n    for (i = 0; i < n; i++) {\n      a[i] = (s[i] == '+' ? 1 : 0);\n    }\n    for (i = 0; i <= n - k; i++) {\n      if (!a[i]) {\n        m++;\n        for (j = 0; j < k; j++) {\n          a[i + j] = 1 - a[i + j];\n        }\n      }\n    }\n    for (i = 0; i < n; i++) {\n      if (!a[i]) {\n        break;\n      }\n    }\n    if (i < n)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    else\n      printf(\"Case #%d: %d\\n\", t, m);\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\ninline int calmax(int a, int b) { return floor(1.0 * b \/ 0.9 \/ a); }\n\ninline int calmin(int a, int b) { return ceil(1.0 * b \/ 1.1 \/ a); }\nint s[1200100][60];\n\nint main() {\n  int T, t, n, p, i, j, k, a[60], g[60][60], b[60][60][2], tot, l[60];\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> n >> p;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++) {\n        scanf(\"%d\", &g[i][j]);\n      }\n      sort(g[i], g[i] + p);\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++) {\n        b[i][j][0] = calmin(a[i], g[i][j]);\n        b[i][j][1] = calmax(a[i], g[i][j]);\n      }\n    }\n    memset(s, 0, sizeof(s));\n    tot = 0;\n    for (i = 0; i < n; i++) {\n      l[i] = p - 1;\n      for (j = 0; j < p; j++) {\n        for (k = b[i][j][0]; k <= b[i][j][1]; k++) {\n          s[k][i]++;\n        }\n      }\n    }\n    for (i = 1200000; i;) {\n      for (j = 0; j < n; j++) {\n        if (s[i][j] == 0) {\n          break;\n        }\n      }\n      if (j == n) {\n        tot++;\n        for (j = 0; j < n; j++) {\n          while (l[j] >= 0 && b[j][l[j]][0] > i) {\n            l[j]--;\n          }\n          for (k = b[j][l[j]][0]; k <= b[j][l[j]][1]; k++) {\n            s[k][j]--;\n          }\n          l[j]--;\n        }\n      } else {\n        i--;\n      }\n    }\n    printf(\"Case #%d: %d\\n\", t, tot);\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int m, n, T, t, i, j, d, k;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    char s[30][30];\n    cin >> m >> n;\n    for (i = 0; i < m; i++) {\n      scanf(\"%s\", s[i]);\n    }\n    for (i = 0; i < m; i++) {\n      \/\/ printf(\"%s\\n\",s[i]);\n    }\n    int a[26][2], b[26][2];\n    memset(a, 1, sizeof(a));\n    memset(b, 0, sizeof(b));\n    for (i = 0; i < m; i++) {\n      for (j = 0; j < n; j++) {\n        if (s[i][j] != '?') {\n          k = s[i][j] - 'A';\n          a[k][0] = min(a[k][0], i);\n          a[k][1] = min(a[k][1], j);\n          b[k][0] = max(b[k][0], i);\n          b[k][1] = max(b[k][1], j);\n        }\n      }\n    }\n    for (k = 0; k < 26; k++) {\n      for (i = a[k][0]; i <= b[k][0]; i++) {\n        for (j = a[k][1]; j <= b[k][1]; j++) {\n          s[i][j] = k + 'A';\n        }\n      }\n    }\n    for (k = 0; k < 26; k++) {\n      if (a[k][0] > m) {\n        continue;\n      }\n      for (d = 1; d < 999; d++) {\n        i = a[k][0] - 1;\n        if (i < 0) {\n          break;\n        }\n        for (j = a[k][1]; j <= b[k][1]; j++) {\n          if (s[i][j] != '?') {\n            break;\n          }\n        }\n        if (j <= b[k][1]) {\n          break;\n        }\n        for (j = a[k][1]; j <= b[k][1]; j++) {\n          s[i][j] = k + 'A';\n        }\n        a[k][0]--;\n      }\n      for (d = 1; d < 999; d++) {\n        i = a[k][1] - 1;\n        if (i < 0) {\n          break;\n        }\n        for (j = a[k][0]; j <= b[k][0]; j++) {\n          if (s[j][i] != '?') {\n            break;\n          }\n        }\n        if (j <= b[k][0]) {\n          break;\n        }\n        for (j = a[k][0]; j <= b[k][0]; j++) {\n          s[j][i] = k + 'A';\n        }\n        a[k][1]--;\n      }\n    }\n    for (k = 0; k < 26; k++) {\n      if (a[k][0] > m) {\n        continue;\n      }\n      for (d = 1; d < 999; d++) {\n        i = b[k][0] + 1;\n        if (i >= m) {\n          break;\n        }\n        for (j = a[k][1]; j <= b[k][1]; j++) {\n          if (s[i][j] != '?') {\n            break;\n          }\n        }\n        if (j <= b[k][1]) {\n          break;\n        }\n        for (j = a[k][1]; j <= b[k][1]; j++) {\n          s[i][j] = k + 'A';\n        }\n        b[k][0]++;\n      }\n      for (d = 1; d < 999; d++) {\n        i = b[k][1] + 1;\n        if (i >= n) {\n          break;\n        }\n        for (j = a[k][0]; j <= b[k][0]; j++) {\n          if (s[j][i] != '?') {\n            break;\n          }\n        }\n        if (j <= b[k][0]) {\n          break;\n        }\n        for (j = a[k][0]; j <= b[k][0]; j++) {\n          s[j][i] = k + 'A';\n        }\n        b[k][1]++;\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n    for (i = 0; i < m; i++) {\n      printf(\"%s\\n\", s[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int T, t, d, n, i, j, x, y;\n  double my, mx;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> d >> n;\n    my = 0;\n    mx = 1.0;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d%d\", &y, &x);\n      y = d - y;\n      if (my * x < mx * y) {\n        my = y;\n        mx = x;\n      }\n    }\n    printf(\"Case #%d: %.6f\\n\", t, 1.0 * d \/ my * mx);\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint main() {\n  int T, t, n, r, o, y, g, b, v, first, i, j, p;\n  double my, mx;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    printf(\"Case #%d: \", t);\n    if (r + y < b || r + b < y || b + y < r) {\n      printf(\"IMPOSSIBLE\");\n    } else {\n      first = 0;\n      for (i = 0; i < n; i++) {\n        if (first == 0) {\n          if (r >= y && r >= b) {\n            first = 1;\n          } else if (y >= r && y >= b) {\n            first = 2;\n          } else\n            first = 3;\n          j = first;\n        } else {\n          if (p == 1) {\n            if (y > b) {\n              j = 2;\n            } else if (y < b) {\n              j = 3;\n            } else if (first == 2) {\n              j = 2;\n            } else\n              j = 3;\n          } else if (p == 2) {\n            if (r > b) {\n              j = 1;\n            } else if (r < b) {\n              j = 3;\n            } else if (first == 1) {\n              j = 1;\n            } else\n              j = 3;\n          } else {\n            if (r > y) {\n              j = 1;\n            } else if (r < y) {\n              j = 2;\n            } else if (first == 1) {\n              j = 1;\n            } else\n              j = 2;\n          }\n        }\n        if (j == 1) {\n          r--;\n          printf(\"R\");\n        } else if (j == 2) {\n          y--;\n          printf(\"Y\");\n        } else {\n          b--;\n          printf(\"B\");\n        }\n        p = j;\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"TrueBamboo","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <queue>\n#include <stack>\n#include <vector>\nusing namespace std;\n\n#include <fstream>\nFILE *fin = freopen(\"a.in\", \"r\", stdin);\nFILE *fout = freopen(\"a.out\", \"w\", stdout);\n\nint T, t, n, Q, i, j, k, h[110][2], x, y;\nlong long g[110][110];\ndouble d[110], temp, m;\nbool v[110];\n\nint main() {\n  double my, mx;\n  cin >> T;\n  for (t = 1; t <= T; t++) {\n    cin >> n >> Q;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d%d\", &h[i][0], &h[i][1]);\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        scanf(\"%d\", &k);\n        g[i][j] = k;\n      }\n    }\n    for (k = 0; k < n; k++) {\n      for (i = 0; i < n; i++)\n        if (k != i) {\n          for (j = 0; j < n; j++)\n            if (i != j && k != j && g[i][k] >= 0 && g[k][j] >= 0) {\n              if (g[i][j] == -1 || g[i][j] > g[i][k] + g[k][j]) {\n                g[i][j] = g[i][k] + g[k][j];\n              }\n            }\n        }\n    }\n    printf(\"Case #%d:\", t);\n    for (; Q; Q--) {\n      scanf(\"%d%d\", &x, &y);\n      x--;\n      y--;\n      memset(v, 0, sizeof(v));\n      for (i = 0; i < n; i++) {\n        d[i] = -2;\n      }\n      d[x] = 0;\n      while (1) {\n        m = 99999999999999.0;\n        k = -1;\n        for (i = 0; i < n; i++) {\n          if (!v[i] && d[i] > -1 && d[i] < m) {\n            m = d[i];\n            k = i;\n          }\n        }\n        if (k == y)\n          break;\n        v[k] = 1;\n        for (i = 0; i < n; i++) {\n          if (!v[i] && g[k][i] > -1 && g[k][i] <= h[k][0]) {\n            temp = d[k] + 1.0 * g[k][i] \/ h[k][1];\n            if (d[i] < 0 || d[i] > temp) {\n              d[i] = temp;\n            }\n          }\n        }\n      }\n      printf(\" %.9f\", d[y]);\n    }\n\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nchar s[64];\nint n, l;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int c, t, i, f;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%s\", s);\n    l = strlen(s);\n    for (i = l - 1; i >= 1; i--) {\n      if (s[i] < s[i - 1]) {\n        while ((i >= 1) && (s[i - 1] == '0')) {\n          i--;\n        }\n        s[i - 1]--;\n        memset(s + i, '9', (l - i) * sizeof(char));\n      }\n    }\n    printf(\"Case #%d: %I64d\\n\", c + 1, atoll(s));\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <cstdio>\n#include <functional>\n#include <iostream>\n#include <queue>\nusing namespace std;\n\npriority_queue<int> Q, E;\nint n, k;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int c, t, i, x, y, z;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%d %d\", &n, &k);\n    Q = E;\n    Q.push(n);\n    for (i = 0; i < k; i++) {\n      x = Q.top();\n      Q.pop();\n      y = x \/ 2;\n      z = (x - 1) \/ 2;\n      Q.push(y);\n      Q.push(z);\n    }\n    printf(\"Case #%d: %d %d\\n\", c + 1, y, z);\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nchar s[1 << 10];\nint n, k;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int c, t, i, j, ans;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%s %d\", s, &k);\n    n = strlen(s);\n    ans = 0;\n    for (i = 0; i < n; i++) {\n      if (s[i] == '-') {\n        if (i + k > n) {\n          ans = -1;\n          break;\n        }\n        ans++;\n        for (j = i; j < i + k; j++) {\n          if (s[j] == '-') {\n            s[j] = '+';\n          } else {\n            s[j] = '-';\n          }\n        }\n      }\n    }\n    printf(\"Case #%d: \", c + 1);\n    if (ans != -1) {\n      printf(\"%d\\n\", ans);\n    } else {\n      printf(\"IMPOSSIBLE\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\npair<int, int> adj[50 + 1][50 + 1];\nint cnt[50 + 1], cur[50 + 1];\nint r[50 + 1], q[50 + 1];\nint n, p;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int c, t, i, j, flg, ans, maxl, maxi, minr, mini;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    memset(cnt, 0, sizeof(cnt));\n    scanf(\"%d %d\", &n, &p);\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &r[i]);\n    }\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < p; j++) {\n        scanf(\"%d\", &q[j]);\n      }\n      sort(q, q + p);\n      for (j = 0; j < p; j++) {\n        if (((q[j] * 9 + 9) \/ 10 + r[i] - 1) \/ r[i] <=\n            ((q[j] * 10) \/ 9) \/ r[i]) {\n          adj[i][cnt[i]++] = make_pair(((q[j] * 9 + 9) \/ 10 + r[i] - 1) \/ r[i],\n                                       ((q[j] * 10) \/ 9) \/ r[i]);\n        }\n      }\n    }\n    memset(cur, 0, sizeof(cur));\n    flg = 1;\n    ans = 0;\n    while (flg == 1) {\n      for (i = 0; i < n; i++) {\n        if (cur[i] >= cnt[i]) {\n          flg = 0;\n          break;\n        }\n      }\n      if (flg == 0) {\n        break;\n      }\n      maxl = -1;\n      maxi = -1;\n      minr = 1000000000;\n      mini = -1;\n      for (i = 0; i < n; i++) {\n        if (maxl < adj[i][cur[i]].first) {\n          maxl = adj[i][cur[i]].first;\n          maxi = i;\n        }\n        if (minr > adj[i][cur[i]].second) {\n          minr = adj[i][cur[i]].second;\n          mini = i;\n        }\n      }\n      if (maxl <= minr) {\n        ans++;\n        for (i = 0; i < n; i++) {\n          cur[i]++;\n        }\n      } else {\n        cur[mini]++;\n      }\n    }\n    printf(\"Case #%d: %d\\n\", c + 1, ans);\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nstruct Rectangle {\n  char ch;\n  int sx;\n  int sy;\n  int ex;\n  int ey;\n  Rectangle() {}\n  Rectangle(char a, int b, int c, int d, int e) {\n    ch = a;\n    sx = b;\n    sy = c;\n    ex = d;\n    ey = e;\n  }\n};\n\nRectangle r[26 + 1];\nchar s[25 + 1][25 + 1];\nint n, m, k;\n\nbool operator<(const Rectangle &a, const Rectangle &b) {\n  return a.sx < b.sx || (a.sx == b.sx && a.sy < b.sy);\n}\n\nbool intersect(const Rectangle &a, const Rectangle &b) {\n  return !(a.ex < b.sx || a.sx > b.ex || a.ey < b.sy || a.sy > b.ey) &&\n         !(a.sx > b.sx && a.ex < b.ex && a.sy > b.sy && a.ey < b.ey);\n}\n\nbool intersect(const Rectangle &a, int p) {\n  int i;\n  for (i = k; i < 26; i++) {\n    if ((i != p) && (intersect(a, r[i]) == true)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int c, t, i, j, x, y;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    memset(r, -1, sizeof(r));\n    scanf(\"%d %d\", &n, &m);\n    for (i = 0; i < n; i++) {\n      scanf(\"%s\", s[i]);\n      for (j = 0; j < m; j++) {\n        if (isupper(s[i][j])) {\n          k = (int)(s[i][j] - 'A');\n          if ((r[k].sx == -1) && (r[k].ex == -1) && (r[k].sy == -1) &&\n              (r[k].ey == -1)) {\n            r[k].ch = s[i][j];\n            r[k].sx = i;\n            r[k].sy = j;\n            r[k].ex = i;\n            r[k].ey = j;\n          } else {\n            r[k].sx = min(r[k].sx, i);\n            r[k].sy = min(r[k].sy, j);\n            r[k].ex = max(r[k].ex, i);\n            r[k].ey = max(r[k].ey, j);\n          }\n        }\n      }\n    }\n    sort(r, r + 26);\n    for (k = 0; k < 26; k++) {\n      if ((r[k].sx != -1) && (r[k].sy != -1) && (r[k].ex != -1) &&\n          (r[k].ey != -1)) {\n        break;\n      }\n    }\n    for (i = k; i < 26; i++) {\n      while (\n          (r[i].sx - 1 >= 0) &&\n          (intersect(Rectangle(r[i].ch, r[i].sx - 1, r[i].sy, r[i].ex, r[i].ey),\n                     i) == false)) {\n        r[i].sx--;\n      }\n      while (\n          (r[i].sy - 1 >= 0) &&\n          (intersect(Rectangle(r[i].ch, r[i].sx, r[i].sy - 1, r[i].ex, r[i].ey),\n                     i) == false)) {\n        r[i].sy--;\n      }\n      while ((r[i].ex + 1 < n) &&\n             (intersect(Rectangle(r[i].ch, r[i].sx + 1, r[i].sy, r[i].ex + 1,\n                                  r[i].ey),\n                        i) == false)) {\n        r[i].ex++;\n      }\n      while (\n          (r[i].ey + 1 < m) &&\n          (intersect(Rectangle(r[i].ch, r[i].sx, r[i].sy, r[i].ex, r[i].ey + 1),\n                     i) == false)) {\n        r[i].ey++;\n      }\n    }\n    for (i = k; i < 26; i++) {\n      for (x = r[i].sx; x <= r[i].ex; x++) {\n        for (y = r[i].sy; y <= r[i].ey; y++) {\n          s[x][y] = r[i].ch;\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", c + 1);\n    for (i = 0; i < n; i++) {\n      printf(\"%s\\n\", s[i]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int c, t, i, d, n, k, s;\n  double m;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%d %d\", &d, &n);\n    m = 0.0;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d %d\", &k, &s);\n      m = max(m, 1.0 * (d - k) \/ s);\n    }\n    printf(\"Case #%d: %.6f\\n\", c + 1, d \/ m);\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <algorithm>\n#include <cstdio>\n#include <iostream>\n\nusing namespace std;\n\nchar ans[1000 + 1];\nint ord[1000 + 1];\nint n, m, r, o, y, g, b, v;\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int c, t, i;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%d %d %d %d %d %d %d\", &n, &r, &o, &y, &g, &b, &v);\n    printf(\"Case #%d: \", c + 1);\n    if ((r * 2 > n) || (y * 2 > n) || (b * 2 > n)) {\n      printf(\"IMPOSSIBLE\\n\");\n      continue;\n    }\n    m = 0;\n    for (i = 0; i < n; i = i + 2) {\n      ord[m++] = i;\n    }\n    for (i = 1; i < n; i = i + 2) {\n      ord[m++] = i;\n    }\n    m = 0;\n    if ((r >= y) && (y >= b)) {\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n    } else if ((r >= b) && (b >= y)) {\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n    } else if ((y >= b) && (b >= r)) {\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n    } else if ((y >= r) && (r >= b)) {\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n    } else if ((b >= r) && (r >= y)) {\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n    } else {\n      while (--b >= 0) {\n        ans[ord[m++]] = 'B';\n      }\n      while (--y >= 0) {\n        ans[ord[m++]] = 'Y';\n      }\n      while (--r >= 0) {\n        ans[ord[m++]] = 'R';\n      }\n    }\n    ans[m] = '\\0';\n    printf(\"%s\\n\", ans);\n  }\n  return 0;\n}\n"}
{"target":"try","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\nlong long gra[100 + 1][100 + 1];\nint lim[100 + 1], spd[100 + 1], vis[100 + 1];\ndouble dis[100 + 1];\nint n, q;\n\ndouble dijkstra(int s, int e) {\n  int i, j, u;\n  double newd;\n  memset(vis, 0, sizeof(vis));\n  fill(dis + 1, dis + n + 1, 1000000000000000000LL);\n  dis[s] = 0.0;\n  for (i = 1; i <= n; i++) {\n    newd = 1000000000000000000LL;\n    u = -1;\n    for (j = 1; j <= n; j++) {\n      if ((vis[j] == 0) && (newd > dis[j])) {\n        newd = dis[j];\n        u = j;\n      }\n    }\n    if (u == -1) {\n      break;\n    }\n    vis[u] = 1;\n    for (j = 1; j <= n; j++) {\n      if ((lim[u] >= gra[u][j]) &&\n          (dis[j] > dis[u] + 1.0 * gra[u][j] \/ spd[u])) {\n        dis[j] = dis[u] + 1.0 * gra[u][j] \/ spd[u];\n      }\n    }\n  }\n  return dis[e];\n}\n\nint main() {\n  freopen(\"C-small-attempt1.in\", \"r\", stdin);\n  freopen(\"C-small-attempt1.out\", \"w\", stdout);\n  int c, t, i, j, k, u, v;\n  scanf(\"%d\", &t);\n  for (c = 0; c < t; c++) {\n    scanf(\"%d %d\", &n, &q);\n    for (i = 1; i <= n; i++) {\n      scanf(\"%d %d\", &lim[i], &spd[i]);\n    }\n    for (i = 1; i <= n; i++) {\n      for (j = 1; j <= n; j++) {\n        scanf(\"%lld\", &gra[i][j]);\n        if (gra[i][j] == -1) {\n          gra[i][j] = 1000000000000000000LL;\n        }\n      }\n    }\n    for (k = 1; k <= n; k++) {\n      for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n          gra[i][j] = min(gra[i][j], gra[i][k] + gra[k][j]);\n        }\n      }\n    }\n    printf(\"Case #%d:\", c + 1);\n    for (i = 0; i < q; i++) {\n      scanf(\"%d %d\", &u, &v);\n      printf(\" %.9f\", dijkstra(u, v));\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100010;\n\nint a[20];\nvector<long long> b;\n\nvoid genX(int d, int n) {\n  if (d > n) {\n    long long value = 0;\n    for (int i = 1; i <= n; ++i)\n      value = value * 10 + a[i];\n    b.push_back(value);\n    return;\n  }\n  for (int c = (d > 1) ? (a[d - 1]) : 1; c <= 9; ++c) {\n    a[d] = c;\n    genX(d + 1, n);\n  }\n}\nlong long solve(long long value) {\n  int ll = 0, rr = (int)(b).size() - 1;\n  while (ll < rr) {\n    int mm = (ll + rr + 1) >> 1;\n    if (b[mm] > value)\n      rr = mm - 1;\n    else\n      ll = mm;\n  }\n  return b[ll];\n}\nlong long n;\n\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  a[0] = 0;\n  for (int i = 1; i <= 18; ++i) {\n    genX(1, i);\n  }\n\n  int nTest;\n  cin >> nTest;\n  for (int test = 1; test <= nTest; ++test) {\n    cin >> n;\n    cout << \"Case #\" << test << \": \" << solve(n) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100010;\n\nmap<long long, int> dp;\nqueue<long long> qq;\nlong long n, k;\nvoid bfs(long long n, long long k, int id) {\n  dp.clear();\n  while (!qq.empty())\n    qq.pop();\n  qq.push(n);\n  dp[n] = 1;\n  while (!qq.empty()) {\n    int t = qq.front();\n    qq.pop();\n    long long value = dp[t];\n    k -= value;\n    int t1 = t \/ 2;\n    int t2 = t - 1 - t1;\n    if (k <= 0) {\n      cout << \"Case #\" << id << \": \" << t1 << \" \" << t2 << endl;\n      return;\n    }\n\n    if (t1 > 0) {\n      if (dp.find(t1) == dp.end()) {\n        qq.push(t1);\n      }\n      dp[t1] += dp[t];\n    }\n\n    if (t2 > 0) {\n      if (dp.find(t2) == dp.end()) {\n        qq.push(t2);\n      }\n      dp[t2] += dp[t];\n    }\n  }\n  for (__typeof(dp.begin()) it = dp.begin(); it != dp.end(); ++it)\n    cout << it->first << \" \" << it->second << endl;\n}\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int nTest;\n  cin >> nTest;\n  for (int test = 1; test <= nTest; ++test) {\n    cin >> n >> k;\n    bfs(n, k, test);\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1010;\n\nint n, k;\nstring s;\n\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int nTest;\n  cin >> nTest;\n  for (int test = 1; test <= nTest; ++test) {\n    cin >> s >> k;\n    n = (int)(s).size();\n    int ans = 0;\n    for (int i = 0; i <= n - k; ++i)\n      if (s[i] == '-') {\n        ans++;\n        for (int j = i; j <= i + k - 1; ++j)\n          if (s[j] == '-')\n            s[j] = '+';\n          else\n            s[j] = '-';\n      }\n    bool happy = true;\n    for (int i = 0; i < n; ++i)\n      if (s[i] == '-') {\n        happy = false;\n        break;\n      }\n    cout << \"Case #\" << test << \": \";\n    if (happy)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100010;\nconst int INF = (int)1e9;\n\nclass Dinic {\npublic:\n  struct Edge {\n    int from, to, cap, flow;\n    Edge(int _from = -1, int _to = -1, int _cap = 0, int _flow = 0)\n        : from(_from), to(_to), cap(_cap), flow(_flow) {}\n  };\n  int n;\n  vector<vector<int>> g;\n  vector<vector<int>::iterator> work;\n  vector<Edge> edges;\n  vector<int> level;\n\n  void init(int _n) {\n    n = _n;\n    g.assign(_n, vector<int>());\n    work.assign(_n, vector<int>::iterator());\n    edges.clear();\n    level.resize(_n);\n  }\n  void addEdge(int u, int v, int cap, bool twoWay) {\n    g[u].push_back((int)edges.size());\n    edges.push_back(Edge(u, v, cap, 0));\n    g[v].push_back((int)edges.size());\n    edges.push_back(Edge(v, u, (twoWay == true) ? cap : 0, 0));\n  }\n\n  void resetFlows() {\n    for (int i = 0; i < (int)edges.size(); ++i)\n      edges[i].flow = 0;\n  }\n\n  bool bfs(int s, int t) {\n    level = vector<int>(n, -1);\n    queue<int> q;\n    q.push(s);\n    level[s] = 0;\n    while (!q.empty()) {\n      int u = q.front();\n      q.pop();\n      for (__typeof(g[u].begin()) it = g[u].begin(); it != g[u].end(); ++it) {\n        int e = *it;\n        int v = edges[e].to;\n        if (level[v] == -1 && edges[e].flow < edges[e].cap) {\n          level[v] = level[u] + 1;\n          q.push(v);\n        }\n      }\n    }\n    return (level[t] != -1);\n  }\n\n  int dfs(int s, int t, int f) {\n    if (s == t)\n      return f;\n    for (vector<int>::iterator &e = work[s]; e != g[s].end(); ++e) {\n      int v = edges[*e].to;\n      if (level[v] == level[s] + 1 && edges[*e].flow < edges[*e].cap) {\n        int d = dfs(v, t, min(f, edges[*e].cap - edges[*e].flow));\n        if (d > 0) {\n          edges[*e].flow += d;\n          edges[*e ^ 1].flow -= d;\n          return d;\n        }\n      }\n    }\n    return 0;\n  }\n\n  int maxFlow(int s, int t) {\n    int ret = 0;\n    while (bfs(s, t)) {\n      for (int i = 0; i < n; ++i)\n        work[i] = g[i].begin();\n      for (int d; (d = dfs(s, t, numeric_limits<int>::max())) != 0; ret += d)\n        ;\n    }\n    return ret;\n  }\n\n} netWork;\n\nint n, p;\nint a[N];\nint b[55][55];\n\nint numMax(double a, double b) {\n  double c = a * 9.0 \/ 10.0;\n  int ret = (int)(b \/ c);\n  double d = a * 11 \/ 10;\n  for (; ret >= 0; ret--) {\n    if (1.0 * ret * c <= b && b <= 1.0 * ret * d)\n      return ret;\n    if (1.0 * ret * d < b)\n      return 0;\n  }\n}\n\nint numMin(double a, double b) {\n  double c = a * 9.0 \/ 10.0;\n  double d = a * 11 \/ 10;\n  int ret = (int)(b \/ d);\n\n  for (; ret < INF; ret++) {\n    if (1.0 * ret * c <= b && b <= 1.0 * ret * d)\n      return ret;\n    if (1.0 * ret * c > b)\n      return 0;\n  }\n}\n\nint main() {\n  \/\/ freopen(\"B.inp\", \"r\", stdin);\n  \/\/ freopen(\"B.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int nTest;\n  cin >> nTest;\n  for (int test = 1; test <= nTest; ++test) {\n    cout << \"Case #\" << test << \": \";\n    cin >> n >> p;\n    for (int i = 1; i <= n; ++i)\n      cin >> a[i];\n    for (int i = (1), _b = (n); i <= _b; ++i) {\n      for (int j = (1), _b = (p); j <= _b; ++j)\n        cin >> b[i][j];\n    }\n\n    int s = 0, t = n * p + 1;\n    netWork.init(t + 1);\n    for (int i = 1; i <= p; ++i) {\n      int a1 = numMin(a[1], b[1][i]);\n      if (a1 > 0)\n        netWork.addEdge(s, i, 1, false);\n      if (n == 2) {\n        for (int j = 1; j <= p; ++j) {\n          int aa = numMin(a[1], b[1][i]);\n          int bb = numMax(a[1], b[1][i]);\n          int cc = numMin(a[2], b[2][j]);\n          int dd = numMax(a[2], b[2][j]);\n          aa = max(aa, cc);\n          bb = min(bb, dd);\n          if (aa <= bb && ((aa == 0 && bb > 0) || aa > 0))\n            netWork.addEdge(i, j + p, 1, false);\n        }\n        int a2 = numMin(a[2], b[2][i]);\n        if (a2 > 0)\n          netWork.addEdge(i + p, t, 1, false);\n      } else {\n        if (a1 > 0)\n          netWork.addEdge(i, t, 1, false);\n      }\n    }\n\n    int ans = netWork.maxFlow(s, t);\n    cout << ans << endl;\n  }\n\n  \/\/ cout << numMin(300, 809);\/\/ << \" \" << numMax(300, 809) << endl;\n\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 30;\n\nstring s[N];\nint rr, cc;\nint a[N], b[N];\nint c[N], d[N];\nint m = 0;\nchar patterns[N];\n\nvoid fillBoad(int x, int y, int u, int v, int t) {\n  for (int i = (x), _b = (u); i <= _b; ++i) {\n    for (int j = (y), _b = (v); j <= _b; ++j) {\n      s[i][j] = 'A' + t;\n    }\n  }\n}\nbool invalid(int a, int b, int c, int d, int x, int y) {\n  \/\/ x, y, nam trong\n  return (a <= x && x <= c && b <= y && y <= d);\n}\n\nbool check(int u, int v, int t) {\n  int aa = a[t];\n  int bb = b[t];\n  int cc = c[t];\n  int dd = d[t];\n  aa = min(aa, u);\n  bb = min(bb, v);\n  cc = max(cc, u);\n  dd = max(dd, v);\n  for (int i = 0; i < m; ++i) {\n    int ch = patterns[i];\n    if (ch == t)\n      continue;\n    if (invalid(a[ch], b[ch], c[ch], d[ch], aa, bb))\n      return false;\n    if (invalid(a[ch], b[ch], c[ch], d[ch], cc, dd))\n      return false;\n    if (invalid(aa, bb, cc, dd, a[ch], b[ch]))\n      return false;\n    if (invalid(aa, bb, cc, dd, c[ch], d[ch]))\n      return false;\n  }\n  return true;\n}\n\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int nTest;\n  cin >> nTest;\n  for (int test = 1; test <= nTest; ++test) {\n    cout << \"Case #\" << test << \":\" << endl;\n    cin >> rr >> cc;\n    m = 0;\n    memset(a, 0x3f, sizeof a);\n    memset(b, 0x3f, sizeof b);\n    memset(c, 0xff, sizeof c);\n    memset(d, 0xff, sizeof d);\n    for (int i = 0; i < rr; ++i) {\n      cin >> s[i];\n      for (int j = 0; j < cc; ++j)\n        if (s[i][j] != '?') {\n          int u = s[i][j] - 'A';\n          patterns[m++] = u;\n          a[u] = min(a[u], i);\n          b[u] = min(b[u], j);\n          c[u] = max(c[u], i);\n          d[u] = max(d[u], j);\n        }\n    }\n    for (int i = 0; i < m; ++i) {\n      int u = patterns[i];\n      fillBoad(a[u], b[u], c[u], d[u], u);\n    }\n    for (int i = 0; i < rr; ++i) {\n      for (int j = 0; j < cc; ++j)\n        if (s[i][j] == '?') {\n          for (int k = 0; k < m; ++k) {\n            int u = patterns[k];\n            if (check(i, j, u)) {\n              a[u] = min(a[u], i);\n              b[u] = min(b[u], j);\n              c[u] = max(c[u], i);\n              d[u] = max(d[u], j);\n              break;\n            }\n          }\n        }\n    }\n    for (int i = 0; i < m; ++i) {\n      int u = patterns[i];\n      fillBoad(a[u], b[u], c[u], d[u], u);\n    }\n    for (int i = 0; i < rr; ++i) {\n      cout << s[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1010;\n\nint D, n;\npair<int, int> horses[N];\n\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; ++test) {\n    cin >> D >> n;\n    for (int i = 0; i < n; ++i) {\n      cin >> horses[i].first >> horses[i].second;\n    }\n    sort(horses, horses + n);\n    double t = 0.0;\n    double d = (double)D;\n    for (int i = n - 1; i >= 0; --i) {\n      double ki = horses[i].first;\n      double vi = horses[i].second;\n      if (ki + vi * t < d) {\n        t = (d - ki) \/ vi;\n      }\n    }\n    double ans = d \/ t;\n    cout << \"Case #\" << test << \": \" << setprecision(17) << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1010;\n\nint a[6];\nint ans[N];\nstring s = \"ROYGBV\";\nint n;\nint select(int prev) {\n  int num = 0, pos = -1;\n  for (int i = 0; i < 6; ++i)\n    if (i != prev && a[i] > 0) {\n      if (num < a[i]) {\n        num = a[i];\n        pos = i;\n      }\n    }\n  return pos;\n}\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int tests;\n  cin >> tests;\n  for (int test = 1; test <= tests; ++test) {\n    cin >> n;\n    for (int i = 0; i < 6; ++i)\n      cin >> a[i];\n    string ret = \"\";\n    for (int i = 0; i < n; ++i) {\n      if (i == 0) {\n        ans[0] = select(-1);\n      } else {\n        ans[i] = select(ans[i - 1]);\n      }\n      if (ans[i] == -1) {\n        ret = \"IMPOSSIBLE\";\n      } else\n        a[ans[i]]--;\n    }\n    if (ans[n - 1] == ans[0])\n      ret = \"IMPOSSIBLE\";\n    if (ret != \"IMPOSSIBLE\") {\n      for (int i = 0; i < n; ++i)\n        ret.push_back(s[ans[i]]);\n    }\n    cout << \"Case #\" << test << \": \" << ret << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuanNM","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nconst long long INF = 0x3f3f3f3f3f3f3f3f;\nconst int N = 110;\n\nint n, q;\nlong long dist[N][N];\nint e[N], ss[N];\nstruct pnt {\n  double a;\n  int b;\n  pnt(double _a = 0.0, int _b = 0) {\n    a = _a;\n    b = _b;\n  }\n  bool operator<(const pnt &op) const {\n    if (a != op.a)\n      return a > op.a;\n    return b < op.b;\n  }\n};\n\npriority_queue<pnt> qq;\nvector<int> g[N];\ndouble dd[N];\n\ndouble solve(int s, int t) {\n  while (!qq.empty())\n    qq.pop();\n  for (int i = 0; i < n; ++i)\n    dd[i] = INF;\n  dd[s] = 0.0;\n  qq.push(pnt(dd[s], s));\n  while (!qq.empty()) {\n    double du = qq.top().a;\n    int u = qq.top().b;\n    qq.pop();\n    if (du > dd[u])\n      continue;\n    for (int i = 0; i < (int)(g[u]).size(); ++i) {\n      int v = g[u][i];\n      double cost = (double)dist[u][v] \/ ss[u];\n\n      if (e[u] >= dist[u][v] && dd[v] > dd[u] + cost) {\n        dd[v] = dd[u] + cost;\n        qq.push(pnt(dd[v], v));\n      }\n    }\n  }\n  return dd[t];\n}\n\nint main() {\n  \/\/ freopen(\"A.inp\", \"r\", stdin);\n  \/\/ freopen(\"A.out\", \"w\", stdout);\n  int tests;\n  scanf(\"%d\", &tests);\n  for (int test = 1; test <= tests; ++test) {\n    scanf(\"%d %d\", &n, &q);\n    for (int i = 0; i < n; ++i)\n      scanf(\"%d %d\", e + i, ss + i);\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        scanf(\"%I64d\", &dist[i][j]);\n        if (dist[i][j] == -1)\n          dist[i][j] = INF;\n      }\n    }\n    for (int k = (0), _b = (n); k < _b; ++k) {\n      for (int i = (0), _b = (n); i < _b; ++i) {\n        for (int j = (0), _b = (n); j < _b; ++j)\n          if (dist[i][j] > dist[i][k] + dist[k][j]) {\n            dist[i][j] = dist[i][k] + dist[k][j];\n          }\n      }\n    }\n    for (int i = (0), _b = (n); i < _b; ++i) {\n      g[i].clear();\n      for (int j = (0), _b = (n); j < _b; ++j)\n        if (dist[i][j] < INF) {\n          g[i].push_back(j);\n        }\n    }\n    printf(\"Case #%d:\", test);\n    for (int i = 0; i < q; ++i) {\n      int s, t;\n      cin >> s >> t;\n      s--;\n      t--;\n      double ans = solve(s, t);\n      printf(\" %.07lf\", ans);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <iostream>\nusing namespace std;\n\nstring calc(string n) {\n  string ans;\n  int i;\n  for (i = 0; i < n.length() - 1; i++) {\n    if (n[i] > n[i + 1])\n      break;\n  }\n  if (i == n.length() - 1)\n    return n;\n  ans = to_string(stoll(n.substr(0, i + 1)) - 1);\n  for (int j = 0; j < n.length() - i - 1; i++)\n    ans += \"9\";\n  return ans;\n}\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    string n;\n    cin >> n;\n    string ans = calc(n);\n    while (ans != n) {\n      n = ans;\n      ans = calc(n);\n    }\n    cout << \"Case #\" << ca << \": \" << stoll(ans) << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <iostream>\n#include <queue>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    int n, k;\n    cin >> n >> k;\n    priority_queue<int> q;\n    q.push(n);\n    int y, z;\n    for (int i = 0; i < k; i++) {\n      int x = q.top();\n      q.pop();\n      if (x % 2 == 1) {\n        y = x \/ 2;\n        z = x \/ 2;\n      } else {\n        y = x \/ 2;\n        z = x \/ 2 - 1;\n      }\n      q.push(y);\n      q.push(z);\n    }\n    cout << \"Case #\" << ca << \": \" << y << \" \" << z << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <iostream>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int ca = 1; ca <= T; ca++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int count = 0;\n    for (int pt = 0; pt < s.length(); pt++) {\n      if (s[pt] == '-') {\n        if (pt + k > s.length()) {\n          count = -1;\n          break;\n        } else {\n          count++;\n          for (int i = pt; i < pt + k; i++) {\n            if (s[i] == '-')\n              s[i] = '+';\n            else\n              s[i] = '-';\n          }\n        }\n      }\n    }\n    if (count == -1)\n      cout << \"Case #\" << ca << \": IMPOSSIBLE\" << endl;\n    else\n      cout << \"Case #\" << ca << \": \" << count << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int casen;\n  cin >> casen;\n  for (int casex = 1; casex <= casen; casex++) {\n    int n, p;\n    int r[100];\n    vector<int> q[100];\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        int qq;\n        cin >> qq;\n        q[i].push_back(qq);\n      }\n    }\n    int ans = 0;\n    if (n == 1) {\n      for (int i = 0; i < p; i++) {\n        double serve = 1.0 * q[0][i] \/ r[0];\n        for (int s = 0.9 * serve - 10; s <= 1.12 * serve + 10; s++) {\n          if (q[0][i] >= 0.9 * s * r[0] && q[0][i] <= 1.1 * s * r[0]) {\n            ans++;\n            break;\n          }\n        }\n      }\n    } else if (n == 2) {\n      vector<int> a;\n      vector<int> b;\n      for (int i = 0; i < p; i++) {\n        a.push_back(q[0][i]);\n        b.push_back(q[1][i]);\n      }\n      sort(a.begin(), a.end());\n      sort(b.begin(), b.end());\n      do {\n        int lans = 0;\n        for (int i = 0; i < p; i++) {\n          double serve = 1.0 * a[i] \/ r[0];\n          for (int s = 0.9 * serve - 10; s <= 1.12 * serve + 10; s++) {\n            if (a[i] >= 0.9 * s * r[0] && a[i] <= 1.1 * s * r[0] &&\n                b[i] >= 0.9 * s * r[1] && b[i] <= 1.1 * s * r[1]) {\n              lans++;\n              break;\n            }\n          }\n        }\n        if (lans > ans)\n          ans = lans;\n      } while (next_permutation(b.begin(), b.end()));\n    }\n    cout << \"Case #\" << casex << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int casen;\n  cin >> casen;\n  for (int casex = 1; casex <= casen; casex++) {\n    char cake[50][50];\n    bool emptyline[50];\n    int firstlinefill = -1;\n    int firstcol[50];\n    int r, c;\n    cin >> r >> c;\n    char letter;\n    for (int i = 0; i < r; i++) {\n      emptyline[i] = true;\n      for (int j = 0; j < c; j++) {\n        cin >> letter;\n        cake[i][j] = letter;\n        if (letter != '?') {\n          if (firstlinefill == -1)\n            firstlinefill = i;\n          if (emptyline[i])\n            firstcol[i] = j;\n          emptyline[i] = false;\n        }\n      }\n    }\n    for (int i = firstlinefill; i < r; i++) {\n      if (emptyline[i]) {\n        for (int j = 0; j < c; j++) {\n          cake[i][j] = cake[i - 1][j];\n        }\n      } else {\n        for (int j = 0; j < firstcol[i]; j++)\n          cake[i][j] = cake[i][firstcol[i]];\n        char lastlet = cake[i][firstcol[i]];\n        for (int j = firstcol[i]; j < c; j++) {\n          if (cake[i][j] == '?')\n            cake[i][j] = lastlet;\n          else\n            lastlet = cake[i][j];\n        }\n      }\n    }\n    for (int i = firstlinefill - 1; i >= 0; i--) {\n      for (int j = 0; j < c; j++)\n        cake[i][j] = cake[i + 1][j];\n    }\n    cout << \"Case #\" << casex << \":\" << endl;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++)\n        cout << cake[i][j];\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int casen;\n  cin >> casen;\n  for (int casex = 1; casex <= casen; casex++) {\n    int d, n;\n    cin >> d >> n;\n    double kk, ss;\n    double maxt = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> kk >> ss;\n      double t = (d - kk) \/ ss;\n      maxt = max(maxt, t);\n    }\n    cout << \"Case #\" << casex << \": \";\n    printf(\"%.6f\\n\", d \/ maxt);\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int casen;\n  cin >> casen;\n  for (int casex = 1; casex <= casen; casex++) {\n    cout << \"Case #\" << casex << \": \";\n    int n;\n    int r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    pair<int, char> u[3];\n    u[0] = make_pair(r, 'R');\n    u[1] = make_pair(y, 'Y');\n    u[2] = make_pair(b, 'B');\n    sort(u, u + 3);\n    if (u[2].first > n \/ 2)\n      cout << \"IMPOSSIBLE\" << endl;\n    else {\n      char pos[n];\n      memset(pos, 0, sizeof(pos));\n      int pt = 0;\n      for (int i = 0; i < u[2].first; i++) {\n        pos[pt] = u[2].second;\n        pt += 2;\n      }\n      pt = n - 1;\n      for (int i = 0; i < u[1].first; i++) {\n        if (pos[pt] == u[2].second)\n          pt--;\n        pos[pt] = u[1].second;\n        pt -= 2;\n      }\n      pt = 0;\n      for (int i = 0; i < u[0].first; i++) {\n        while (pos[pt])\n          pt++;\n        pos[pt] = u[0].second;\n      }\n      bool sat = true;\n      for (int i = 0; i < n - 1; i++) {\n        if (pos[i] == pos[i + 1])\n          sat = false;\n      }\n      if (!sat)\n        cout << \"IMPOSSIBLE\" << endl;\n      else {\n        for (int i = 0; i < n; i++)\n          cout << pos[i];\n        cout << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"TuneDere","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int casen;\n  cin >> casen;\n  for (int casex = 1; casex <= casen; casex++) {\n    cout << \"Case #\" << casex << \": \";\n    int n, q;\n    cin >> n >> q;\n    int e[120];\n    int s[120];\n    for (int i = 0; i < n; i++)\n      cin >> e[i] >> s[i];\n    int d[120];\n    int dd;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> dd;\n        if (dd != -1)\n          d[i + 1] = dd;\n      }\n    }\n    int u, v;\n    cin >> u >> v;\n    double opt[120];\n    opt[0] = 0;\n    for (int i = 1; i < n; i++)\n      opt[i] = 1e300;\n    for (int i = 0; i < n - 1; i++) {\n      double curt = opt[i];\n      int next = i + 1;\n      int ee = e[i] - d[next];\n      int ss = s[i];\n      while (ee >= 0) {\n        curt += 1.0 * d[next] \/ ss;\n        \/\/\t\t\t\tt[i][next] = curt;\n        opt[next] = min(opt[next], curt);\n        ee -= d[next];\n        next++;\n        if (next >= n)\n          break;\n      }\n    }\n    printf(\"%.6f\\n\", opt[n - 1]);\n  }\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemB\n\/\/\n\/\/  Created by Tung Nguyen on 4\/8\/17.\n\/\/\n\/\/\n\n#include <fstream>\n#include <string>\n\nusing namespace std;\n\nint int_char(char ch) { return ch - '0'; }\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"B-small-attempt2.in.txt\");\n  ofstream fout(\"B-small-attempt2.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    string N;\n    fin >> N;\n\n    char n1 = N[0];\n    for (int i = 1; i < N.length(); i++) {\n      char n2 = N[i];\n      if (n2 < n1) {\n        for (int j = i - 1; j >= 0; j--) {\n          if (j == 0 || N[j - 1] < N[j]) {\n            N[j]--;\n            for (int k = j + 1; k < N.length(); k++) {\n              N[k] = '9';\n            }\n            break;\n          }\n        }\n        break;\n      }\n      n1 = n2;\n    }\n    if (N[0] == '0') {\n      N.erase(0, 1);\n    }\n    fout << \"Case #\" << Case << \": \" << N << endl;\n  }\n\n  fout.close();\n  fin.close();\n\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemC\n\/\/\n\/\/  Created by Tung Nguyen on 4\/8\/17.\n\/\/\n\/\/\n\n#include <fstream>\n\nusing namespace std;\n\nlong long N, K;\nlong long maxLR, minLR;\n\nlong long n_c[1000];\nlong long n[1000];\n\nint i, c;\n\nvoid append(long long ni, long long ci) {\n  bool match = false;\n  for (int j = i + 1; j < c; j++) {\n    if (n[j] == ni) {\n      n_c[j] += ci;\n      match = true;\n      break;\n    }\n  }\n  if (!match) {\n    n[c] = ni;\n    n_c[c] = ci;\n    c++;\n  }\n}\n\nvoid solve() {\n  i = 0;\n  c = 1;\n  n_c[0] = 1;\n  n[0] = N;\n  long long k = 0;\n  while (i < c) {\n    long long ni = n[i];\n    k += n_c[i];\n    if (k >= K) {\n      maxLR = ni \/ 2;\n      minLR = ni \/ 2;\n      if (ni % 2 == 0) {\n        minLR--;\n      }\n      break;\n    } else {\n      long long ni1 = ni \/ 2;\n      long long ni2 = ni \/ 2;\n      if (ni % 2 == 0) {\n        ni2--;\n      }\n      append(ni1, n_c[i]);\n      append(ni2, n_c[i]);\n    }\n    i++;\n  }\n}\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"C-small-1-attempt0.in.txt\");\n  ofstream fout(\"C-small-1-attempt0.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> N >> K;\n    solve();\n    fout << \"Case #\" << Case << \": \" << maxLR << \" \" << minLR << endl;\n  }\n\n  fout.close();\n  fin.close();\n\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemA\n\/\/\n\/\/  Created by Tung Nguyen on 4\/8\/17.\n\/\/\n\/\/\n\n#include <fstream>\n#include <string>\nusing namespace std;\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"A-small-attempt0.in.txt\");\n  int T, K;\n  fin >> T;\n\n  ofstream fout(\"A-small-attempt0.out.txt\");\n\n  for (int i = 0; i < T; i++) {\n    string S;\n    fin >> S;\n    fin >> K;\n\n    int count = 0;\n    for (int j = 0; j <= S.length() - K; j++) {\n      if (S[j] == '-') {\n        count++;\n        for (int k = j; k < j + K; k++) {\n          if (S[k] == '-') {\n            S[k] = '+';\n          } else {\n            S[k] = '-';\n          }\n        }\n      }\n    }\n\n    bool possible = true;\n    for (int j = 0; j < S.length(); j++) {\n      if (S[j] == '-') {\n        possible = false;\n        break;\n      }\n    }\n    fout << \"Case #\" << i + 1 << \": \";\n    if (possible) {\n      fout << count << endl;\n    } else {\n      fout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n  fout.close();\n  fin.close();\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemB\n\/\/\n\/\/  Created by Tung Nguyen on 4\/15\/17.\n\/\/\n\/\/\n\n#include <cmath>\n#include <fstream>\n\nusing namespace std;\n\nint N, P;\nint R[50];\nint Q[50][50];\nint nmin[50][50];\nint nmax[50][50];\n\nint result;\n\nvoid find(int n, int p, int *nmax, int *nmin) {\n  int q = Q[n][p];\n  double rmax = q \/ 0.9;\n  double rmin = q \/ 1.1;\n\n  *nmin = ceil(rmin \/ R[n]);\n  *nmax = floor(rmax \/ R[n]);\n  if (*nmax == 0 || (*nmin > *nmax)) {\n    *nmax = -1;\n  }\n}\n\nvoid solve1() {\n  int count = 0;\n  for (int p = 0; p < P; p++) {\n    if (nmax[0][p] > 0) {\n      count++;\n    }\n  }\n  result = count;\n}\n\nint Pair[50];\nbool Paired[50];\nint Pair_p;\n\nvoid solve2() {\n  if (Pair_p == P) {\n    int count = 0;\n    for (int p = 0; p < P; p++) {\n      if (nmax[0][p] > 0 && nmax[1][Pair[p]] > 0 &&\n          max(nmin[0][p], nmin[1][Pair[p]]) <=\n              min(nmax[0][p], nmax[1][Pair[p]])) {\n        count++;\n      }\n    }\n    result = max(result, count);\n    return;\n  }\n  for (int i = 0; i < P; i++) {\n    if (!Paired[i]) {\n      Paired[i] = true;\n      Pair[Pair_p] = i;\n      Pair_p++;\n\n      solve2();\n\n      Paired[i] = false;\n      Pair_p--;\n    }\n  }\n}\n\nvoid solve() {\n  for (int n = 0; n < N; n++) {\n    for (int p = 0; p < P; p++) {\n      find(n, p, &nmax[n][p], &nmin[n][p]);\n    }\n  }\n  if (N == 1) {\n    solve1();\n  } else {\n    for (int i = 0; i < P; i++) {\n      Paired[i] = false;\n      Pair[i] = 0;\n    }\n    Pair_p = 0;\n    result = 0;\n    solve2();\n  }\n}\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"B-small-attempt0.in.txt\");\n  ofstream fout(\"B-small-attempt0.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> N >> P;\n    for (int i = 0; i < N; i++) {\n      fin >> R[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        fin >> Q[i][j];\n      }\n    }\n\n    solve();\n\n    fout << \"Case #\" << Case << \": \" << result << endl;\n  }\n\n  fin.close();\n  fout.close();\n\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemA\n\/\/\n\/\/  Created by Tung Nguyen on 4\/15\/17.\n\/\/\n\/\/\n\n#include <fstream>\n\nusing namespace std;\n\nchar cake[25][25];\nint R, C;\n\nvoid fill(int r) {\n  for (int c = 0; c < C; c++) {\n    if (cake[r][c] != '?') {\n      char fillch = cake[r][c];\n      for (int c1 = 0; c1 < c; c1++) {\n        cake[r][c1] = fillch;\n      }\n      for (int c2 = c + 1; c2 < C; c2++) {\n        if (cake[r][c2] == '?') {\n          cake[r][c2] = fillch;\n        } else {\n          fillch = cake[r][c2];\n        }\n      }\n      break;\n    }\n  }\n}\n\nbool is_row_empty(int r) {\n  for (int c = 0; c < C; c++) {\n    if (cake[r][c] != '?') {\n      return false;\n    }\n  }\n  return true;\n}\n\nvoid solve() {\n  for (int r = 0; r < R; r++) {\n    if (!is_row_empty(r)) {\n      fill(r);\n      for (int r1 = r + 1; r1 < R; r1++) {\n        if (!is_row_empty(r1)) {\n          fill(r1);\n        } else {\n          for (int c = 0; c < C; c++) {\n            cake[r1][c] = cake[r1 - 1][c];\n          }\n        }\n      }\n      for (int r2 = r - 1; r2 >= 0; r2--) {\n        for (int c = 0; c < C; c++) {\n          cake[r2][c] = cake[r2 + 1][c];\n        }\n      }\n      break;\n    }\n  }\n}\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"A-small-attempt0.in.txt\");\n  ofstream fout(\"A-small-attempt0.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> R >> C;\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        fin >> cake[i][j];\n      }\n    }\n\n    solve();\n\n    fout << \"Case #\" << Case << \": \" << endl;\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        fout << cake[i][j];\n      }\n      fout << endl;\n    }\n  }\n\n  fin.close();\n  fout.close();\n\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemA\n\/\/\n\/\/  Created by Tung Nguyen on 4\/22\/17.\n\/\/\n\/\/\n\n#include <cmath>\n#include <fstream>\n\nusing namespace std;\n\nlong long D;\nint N;\n\nlong long K[1000];\nlong long S[1000];\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"A-small-attempt1.in.txt\");\n  ofstream fout(\"A-small-attempt1.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> D >> N;\n\n    double minTime = 0;\n\n    for (int i = 0; i < N; i++) {\n      fin >> K[i] >> S[i];\n      double time = (D - K[i]) * 1.0 \/ S[i];\n      minTime = time > minTime ? time : minTime;\n    }\n    char buff[100];\n    snprintf(buff, sizeof(buff), \"%.6f\", D \/ minTime);\n\n    fout << \"Case #\" << Case << \": \" << buff << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemB\n\/\/\n\/\/  Created by Tung Nguyen on 4\/22\/17.\n\/\/\n\/\/\n\n#include <cmath>\n#include <fstream>\n\nusing namespace std;\n\nchar chars[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\nint nums[6];\nint N;\n\nbool possible;\nchar result[1001];\n\nbool can_match(int i, int j) {\n  if (abs(i - j) <= 1 || abs(i - j) == 5) {\n    return false;\n  }\n  return true;\n}\n\nint get_max(int idx, int i0) {\n  int r = -1;\n  int r_m = 0;\n  for (int i = 0; i < 6; i++) {\n    if ((idx == -1 || can_match(idx, i)) && nums[i] > 0) {\n      int i_m = 0;\n      for (int j = 0; j < 6; j++) {\n        if (!can_match(i, j)) {\n          i_m += nums[j];\n        }\n      }\n\n      if (r_m < i_m) {\n        r = i;\n        r_m = i_m;\n      } else if (r_m == i_m && i0 != -1) {\n        if (!can_match(i0, i)) {\n          r = i;\n        }\n      }\n    }\n  }\n  return r;\n}\n\nvoid solve() {\n  int idx = -1;\n  int first = -1;\n  int last = -1;\n  possible = true;\n  for (int i = 0; i < N; i++) {\n    idx = get_max(idx, first);\n    if (idx == -1) {\n      possible = false;\n      break;\n    }\n    if (i == 0) {\n      first = idx;\n    }\n    if (i == N - 1) {\n      last = idx;\n    }\n    result[i] = chars[idx];\n    nums[idx]--;\n  }\n  result[N] = 0;\n  if (possible) {\n    if (!can_match(first, last)) {\n      possible = false;\n    }\n  }\n}\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"B-small-attempt0.in.txt\");\n  ofstream fout(\"B-small-attempt0.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> N >> nums[0] >> nums[1] >> nums[2] >> nums[3] >> nums[4] >> nums[5];\n    solve();\n    fout << \"Case #\" << Case << \": \";\n    if (possible) {\n      fout << result;\n    } else {\n      fout << \"IMPOSSIBLE\";\n    }\n    fout << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"TungNP","func":"\/\/\n\/\/  main.cpp\n\/\/  ProblemC\n\/\/\n\/\/  Created by Tung Nguyen on 4\/22\/17.\n\/\/\n\/\/\n\n#include <fstream>\n\nusing namespace std;\n\nint N, Q;\nlong long E[100], S[100];\nlong long D[100][100];\nint U[100], V[100];\n\ndouble result[100];\n\ndouble bestsofar[100];\n\nvoid solve() {\n  for (int i = 0; i < 100; i++) {\n    bestsofar[i] = -1;\n  }\n\n  bestsofar[0] = 0;\n  for (int i = 0; i < N; i++) {\n    long long e = E[i], s = S[i];\n    double time = bestsofar[i];\n    for (int j = i + 1; j < N; j++) {\n      long long distance = D[j - 1][j];\n      if (distance > e) {\n        break;\n      }\n      time += distance * 1.0 \/ s;\n      if (bestsofar[j] == -1 || time < bestsofar[j]) {\n        bestsofar[j] = time;\n      }\n      e -= distance;\n    }\n  }\n  result[0] = bestsofar[N - 1];\n}\n\nint main(int argc, const char *argv[]) {\n  ifstream fin(\"C-small-attempt0.in.txt\");\n  ofstream fout(\"C-small-attempt0.out.txt\");\n\n  int T;\n  fin >> T;\n  for (int Case = 1; Case <= T; Case++) {\n    fin >> N >> Q;\n    for (int i = 0; i < N; i++) {\n      fin >> E[i] >> S[i];\n    }\n\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        fin >> D[i][j];\n      }\n    }\n\n    for (int i = 0; i < Q; i++) {\n      fin >> U[i] >> V[i];\n    }\n\n    solve();\n\n    fout << \"Case #\" << Case << \":\";\n    for (int i = 0; i < Q; i++) {\n      char buff[100];\n      snprintf(buff, sizeof(buff), \"%.8f\", result[i]);\n      fout << \" \" << buff;\n    }\n    fout << endl;\n  }\n\n  fin.close();\n  fout.close();\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int cases;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n    long long x;\n    cin >> x;\n\n    auto s = to_string(x);\n\n    int invalid_index = -1;\n    for (int i = 0; i < (int)s.size() - 1; ++i) {\n      if (s[i] > s[i + 1]) {\n        invalid_index = i;\n        break;\n      }\n    }\n\n    if (invalid_index == -1) {\n      cout << s << endl;\n      continue;\n    }\n\n    while (invalid_index >= 1 && s[invalid_index - 1] == s[invalid_index]) {\n      --invalid_index;\n    }\n\n    --s[invalid_index];\n    for (int i = invalid_index + 1; i < (int)s.size(); ++i) {\n      s[i] = '9';\n    }\n\n    if (invalid_index == 0 && s[0] == '0') {\n      s = s.substr(1);\n    }\n\n    cout << s << endl;\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nstruct stall {\n  stall() = default;\n\n  stall(int left_n, int right_n)\n      : left_neighbor(left_n), right_neighbor(right_n),\n        free(right_n - left_n - 1) {\n    assert(right_n > left_n);\n  }\n\n  int left_neighbor, right_neighbor;\n  int free;\n\n  bool operator()(const stall &a, const stall &b) const {\n    if (a.free < b.free)\n      return true;\n    if (a.free > b.free)\n      return false;\n    return a.left_neighbor > b.left_neighbor;\n  }\n};\n\nint main() {\n  int cases;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n    int N, K;\n    cin >> N >> K;\n\n    priority_queue<stall, vector<stall>, stall> pq;\n    pq.push(stall(0, N + 1));\n\n    for (int i = 0; i < K - 1; ++i) {\n      stall s = pq.top();\n      pq.pop();\n\n      int middle = (s.right_neighbor + s.left_neighbor) \/ 2;\n      pq.push(stall(s.left_neighbor, middle));\n      pq.push(stall(middle, s.right_neighbor));\n    }\n\n    stall s = pq.top();\n    int middle = (s.right_neighbor + s.left_neighbor) \/ 2;\n    int ls = middle - s.left_neighbor - 1;\n    int rs = s.right_neighbor - middle - 1;\n    assert(ls >= 0 && rs >= 0);\n    cout << max(ls, rs) << ' ' << min(ls, rs) << endl;\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  int cases;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n\n    string s;\n    int K;\n    cin >> s >> K;\n    bool possible = true;\n    int cnt = 0;\n\n    for (int i = 0; i < (int)s.size(); ++i) {\n      if (s[i] == '-') {\n        ++cnt;\n        if (i + K > (int)s.size()) {\n          possible = false;\n          break;\n        }\n        for (int j = 0; j < K; ++j) {\n          s[i + j] = (s[i + j] == '-' ? '+' : '-');\n        }\n      }\n    }\n    if (!possible) {\n      cout << \"IMPOSSIBLE\\n\";\n    } else {\n      cout << cnt << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef pair<int, int> PI;\n\nPI factor[50][50];\nint N; \/\/ ingredients\nint P; \/\/ packages per ingredient\n\nbool search(int k, int min_f, int max_f) {\n  assert(min_f <= max_f);\n\n  if (k == N) {\n    return true;\n  }\n\n  for (int i = 0; i < P; ++i) {\n    if (factor[k][i].second == 0)\n      continue;\n    if (min_f > factor[k][i].second || max_f < factor[k][i].first)\n      continue;\n    if (search(k + 1, max(min_f, factor[k][i].first),\n               min(max_f, factor[k][i].second))) {\n      factor[k][i].second = 0;\n      return true;\n    }\n  }\n  return false;\n}\n\nint main() {\n  int cases;\n  int target[50];\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n    cin >> N >> P;\n    assert(1 <= N && N <= 50 && 1 <= P && P <= 50);\n    for (int i = 0; i < N; ++i) {\n      cin >> target[i];\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j) {\n        int a;\n        cin >> a;\n\n        int u = 1;\n        int v = 100000000;\n        while (u <= v) {\n          int w = (u + v) \/ 2;\n          if (10 * a >= 9LL * w * target[i]) {\n            u = w + 1;\n          } else {\n            v = w - 1;\n          }\n        }\n        int max_f = v;\n\n        u = 1;\n        v = 100000000;\n        while (u <= v) {\n          int w = (u + v) \/ 2;\n          if (10 * a <= 11LL * w * target[i]) {\n            v = w - 1;\n          } else {\n            u = w + 1;\n          }\n        }\n        int min_f = u;\n\n        \/\/ assert( min_f <= max_f );\n        if (max_f < min_f)\n          max_f = 0;\n        factor[i][j] = PI(min_f, max_f);\n      }\n      sort(factor[i], factor[i] + P);\n    }\n    int res = 0;\n    for (int i = 0; i < P; ++i) {\n      if (search(0, 0, 100000000)) {\n        ++res;\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\nstring a[25];\n\nvoid set_min(char c, int value, unordered_map<char, int> &m) {\n  auto iter = m.find(c);\n  if (iter == m.end()) {\n    m[c] = value;\n  } else {\n    iter->second = min(iter->second, value);\n  }\n}\n\nvoid set_max(char c, int value, unordered_map<char, int> &m) {\n  auto iter = m.find(c);\n  if (iter == m.end()) {\n    m[c] = value;\n  } else {\n    iter->second = max(iter->second, value);\n  }\n}\n\nint main() {\n  int cases;\n  unordered_map<char, int> min_row, min_col, max_row, max_col;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \":\\n\";\n    int R, C;\n    cin >> R >> C;\n    assert(1 <= R && R <= 25);\n\n    min_row.clear();\n    min_col.clear();\n    max_row.clear();\n    max_col.clear();\n\n    set<char> letters;\n\n    for (int r = 0; r < R; ++r) {\n      cin >> a[r];\n      for (int c = 0; c < C; ++c) {\n        letters.insert(a[r][c]);\n        set_min(a[r][c], r, min_row);\n        set_min(a[r][c], c, min_col);\n        set_max(a[r][c], r, max_row);\n        set_max(a[r][c], c, max_col);\n      }\n    }\n\n    for (char x : letters) {\n      for (int r = min_row[x]; r <= max_row[x]; ++r) {\n        for (int c = min_col[x]; c <= max_col[x]; ++c) {\n          a[r][c] = x;\n        }\n      }\n    }\n\n    \/*\n    \/\/ output\n    for( int r = 0; r < R; ++r ) {\n            cout << a[r] << endl;\n    }\n    *\/\n\n    for (int r = 0; r < R; ++r) {\n      for (int c = 0; c < C; ++c) {\n        if (a[r][c] == '?') {\n          bool found = false;\n          for (char x : letters) {\n            int min_r = min(min_row[x], r);\n            int max_r = max(max_row[x], r);\n            int min_c = min(min_col[x], c);\n            int max_c = max(max_col[x], c);\n            for (int r2 = min_r; r2 <= max_r; ++r2) {\n              for (int c2 = min_c; c2 <= max_c; ++c2) {\n                if (a[r2][c2] != '?' && a[r2][c2] != x) {\n                  goto notok;\n                }\n              }\n            }\n            found = true;\n            min_row[x] = min_r;\n            max_row[x] = max_r;\n            min_col[x] = min_c;\n            max_col[x] = max_c;\n            for (int r2 = min_r; r2 <= max_r; ++r2) {\n              for (int c2 = min_c; c2 <= max_c; ++c2) {\n                a[r2][c2] = x;\n              }\n            }\n          notok:;\n          }\n          assert(found);\n        }\n      }\n    }\n    \/\/ output\n    for (int r = 0; r < R; ++r) {\n      cout << a[r] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main() {\n  int cases;\n  int speed[1000];\n  int pos[1000];\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n    int D, N;\n    cin >> D >> N;\n    assert(1 <= N && N <= 1000);\n    for (int i = 0; i < N; ++i) {\n      cin >> pos[i] >> speed[i];\n    }\n    double t = (double)(D - pos[0]) \/ speed[0];\n    for (int i = 1; i < N; ++i) {\n      t = max(t, (double)(D - pos[i]) \/ speed[i]);\n    }\n    double v = D \/ t;\n    printf(\"%.20f\\n\", v);\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main() {\n  int cases;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \": \";\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    pair<int, char> cnt[3] = {{R, 'R'}, {Y, 'Y'}, {B, 'B'}};\n    sort(cnt, cnt + 3, greater<pair<int, char>>());\n\n    string res;\n\n    int last = -1;\n    bool ok = true;\n    for (int i = 0; i < N; ++i) {\n      int cur = -1;\n      for (int j = 0; j < 3; ++j) {\n        if (j != last && cnt[j].first > 0) {\n          if (cur == -1 || cnt[j].first > cnt[cur].first) {\n            cur = j;\n          }\n        }\n      }\n      if (cur == -1) {\n        ok = false;\n        break;\n      }\n      --cnt[cur].first;\n      res += cnt[cur].second;\n      last = cur;\n    }\n    if (!ok || res[N - 1] == res[0])\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << res << endl;\n  }\n  return 0;\n}\n"}
{"target":"u8765","func":"#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <unordered_map>\n#include <vector>\n\nusing namespace std;\n\ntypedef pair<int, int> PI;\ntypedef long long LL;\n\nint h_dist[100];\nint h_speed[100];\nLL dist[100][100];\ndouble travel_time[100][100];\n\nint main() {\n  int cases;\n\n  cin >> cases;\n  for (int caseid = 1; caseid <= cases; ++caseid) {\n    cout << \"Case #\" << caseid << \":\";\n    int N, Q;\n    cin >> N >> Q;\n    assert(1 <= N && N <= 100);\n    for (int i = 0; i < N; ++i) {\n      cin >> h_dist[i] >> h_speed[i];\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        cin >> dist[i][j];\n      }\n    }\n\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        if (dist[j][i] == -1)\n          continue;\n        for (int k = 0; k < N; ++k) {\n          if (dist[i][k] == -1)\n            continue;\n          LL tmp = dist[j][i] + dist[i][k];\n          if (dist[j][k] == -1 || dist[j][k] > tmp) {\n            dist[j][k] = tmp;\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        \/\/ travel_time[i][j]: time to travel from i to j with horse of city i\n        if (dist[i][j] == -1 || dist[i][j] > h_dist[i]) {\n          travel_time[i][j] = -1;\n          continue;\n        }\n        travel_time[i][j] = (double)dist[i][j] \/ h_speed[i];\n      }\n    }\n\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        if (travel_time[j][i] == -1)\n          continue;\n        for (int k = 0; k < N; ++k) {\n          if (travel_time[i][k] == -1)\n            continue;\n          double tmp = travel_time[j][i] + travel_time[i][k];\n          if (travel_time[j][k] == -1 || travel_time[j][k] > tmp) {\n            travel_time[j][k] = tmp;\n          }\n        }\n      }\n    }\n\n    for (int q = 0; q < Q; ++q) {\n      int from, to;\n      cin >> from >> to;\n      printf(\" %.20f\", travel_time[from - 1][to - 1]);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n1\n2457295734\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nstring s;\nstring ans;\nlong long a[25];\nlong long n;\n\nvoid back(long long pos, long long base, bool nine) {\n  if (pos == n + 1) {\n    while (ans[0] == '0')\n      ans.erase(ans.begin());\n    throw 1;\n  }\n  if (nine) {\n    ans += \"9\";\n    back(pos + 1, 0, 1);\n  }\n  for (long long i = a[pos]; i >= base; i--) {\n    if (i == a[pos]) {\n      ans += i + '0';\n      back(pos + 1, i, 0);\n      ans.pop_back();\n    } else {\n      ans += i + '0';\n      back(pos + 1, i, 1);\n      ans.pop_back();\n    }\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  freopen(\"1test.inp\", \"r\", stdin);\n  freopen(\"1test.out\", \"w\", stdout);\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ct++;\n    ans.clear();\n    cin >> s;\n    n = s.size();\n    for (long long i = 0; i < s.size(); i++)\n      a[i + 1] = s[i] - '0';\n    try {\n      back(1, 0, 0);\n    } catch (...) {\n      cout << \"Case #\" << ct << \": \";\n      cout << ans << '\\n';\n    }\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n5\n4 2\n5 2\n6 2\n1000 1000\n1000 1\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nlong long n, k;\nbool a[1005];\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long CT = 0;\n  while (T--) {\n    CT++;\n    cin >> n >> k;\n    memset(a, 0, sizeof(a));\n    a[0] = a[n + 1] = true;\n    while (k--) {\n      pair<long long, long long> mdis = make_pair(-1, -1);\n      long long mpos = 0;\n      for (long long i = 1; i <= n; i++) {\n        if (a[i] == 1)\n          continue;\n        pair<long long, long long> dis = make_pair(0, 0);\n        for (long long j = i - 1; j >= 0; j--) {\n          if (a[j] == 1) {\n            dis.first = i - j;\n            break;\n          }\n        }\n        for (long long j = i + 1; j <= n + 1; j++) {\n          if (a[j] == 1) {\n            dis.second = j - i;\n            break;\n          }\n        }\n        dis.first--;\n        dis.second--;\n        if (min(mdis.first, mdis.second) < min(dis.first, dis.second)) {\n          mdis = dis;\n          mpos = i;\n        } else if (min(mdis.first, mdis.second) == min(dis.first, dis.second)) {\n          if (max(mdis.first, mdis.second) < max(dis.first, dis.second)) {\n            mdis = dis;\n            mpos = i;\n          }\n        }\n      }\n      if (k == 0) {\n        cout << \"Case #\" << CT << \": \" << max(mdis.first, mdis.second) << ' '\n             << min(mdis.first, mdis.second) << '\\n';\n      }\n      a[mpos] = true;\n    }\n    \/\/ for (int i = 1; i <= n; i++) cout << a[i] << sp;\n    \/\/ cout << endl;\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n3\n---+-++- 3\n+++++ 4\n-+-+- 4\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nstring s;\nlong long k;\nbool a[1005];\nlong long ans = 0;\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ans = 0;\n    ct++;\n    cin >> s >> k;\n    for (long long i = 0; i < s.size(); i++) {\n      if (s[i] == '+')\n        a[i + 1] = true;\n      else\n        a[i + 1] = false;\n    }\n    bool poss = true;\n    for (long long i = 1; i <= s.size(); i++) {\n      if (a[i] == false) {\n        if (i + k - 1 > s.size()) {\n          poss = false;\n          break;\n        }\n        for (long long j = i; j <= i + k - 1; j++)\n          a[j] = 1 - a[j];\n        ans++;\n      }\n      \/\/ for (int i = 1; i <= s.size(); i++) cout << a[i] << sp;\n      \/\/ cout << endl;\n    }\n    if (!poss) {\n      cout << \"Case #\" << ct << \": \"\n           << \"IMPOSSIBLE\" << '\\n';\n    } else\n      cout << \"Case #\" << ct << \": \" << ans << '\\n';\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n6\n2 1\n500 300\n900\n660\n2 1\n500 300\n1500\n809\n2 2\n50 100\n450 449\n1100 1101\n2 1\n500 300\n300\n500\n1 8\n10\n11 13 17 11 16 14 12 18\n3 3\n70 80 90\n1260 1500 700\n800 1440 1600\n1700 1620 900\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\nlong long n, p;\nvector<vector<long long>> a(55);\nlong long need[55];\n\nlong long find_base(long long x, long long y) {\n  long long l = 1, r = 1e9;\n  while (l != r) {\n    long long mid = (l + r) \/ 2;\n    if (y * 100 <= x * mid * 110) {\n      r = mid;\n    } else\n      l = mid + 1;\n  }\n  if (y * 100 > x * l * 110)\n    return -1;\n  return l;\n}\n\nbool valid(long long x, long long y, long long num) {\n  if (x * num * 90 <= y * 100 && y * 100 <= x * num * 110)\n    return true;\n  return false;\n}\n\nbool check(long long num) {\n  for (long long i = 2; i <= n; i++) {\n    bool ok = false;\n    while (!a[i].empty()) {\n      if (a[i].back() * 100 < num * need[i] * 90)\n        a[i].pop_back();\n      else if (valid(need[i], a[i].back(), num)) {\n        ok = true;\n        a[i].pop_back();\n        break;\n      } else {\n        return false;\n      }\n    }\n    if (!ok)\n      return false;\n  }\n  return true;\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ct++;\n    cin >> n >> p;\n    a.assign(55, vector<long long>());\n    for (long long i = 1; i <= n; i++)\n      cin >> need[i];\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= p; j++) {\n        long long t;\n        cin >> t;\n        a[i].push_back(t);\n      }\n      sort(a[i].begin(), a[i].end(), greater<long long>());\n    }\n    long long ans = 0;\n    for (long long i = (long long)a[1].size() - 1; i >= 0; i--) {\n      long long base = find_base(need[1], a[1][i]);\n      if (base == -1) {\n        a[1].pop_back();\n        continue;\n      }\n      for (long long j = base;; j++) {\n        if (a[1][i] * 100 < need[1] * j * 90)\n          break;\n        if (check(j)) {\n          ans++;\n          break;\n        }\n      }\n    }\n    cout << \"Case #\" << ct << \": \" << ans << '\\n';\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n3\n3 3\nG??\n?C?\n??J\n3 4\nCODE\n????\n?JAM\n2 2\nCA\nKE\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\nchar c[35][35];\nlong long n, m;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ct++;\n    cin >> n >> m;\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= m; j++)\n        cin >> c[i][j];\n    }\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= m; j++) {\n        if (c[i][j] != '?') {\n          for (long long k = i + 1; k <= n; k++) {\n            if (c[k][j] != '?')\n              break;\n            c[k][j] = c[i][j];\n          }\n        }\n      }\n    }\n    for (long long i = n; i >= 1; i--) {\n      for (long long j = 1; j <= m; j++) {\n        if (c[i][j] != '?') {\n          for (long long k = i - 1; k >= 1; k--) {\n            if (c[k][j] != '?')\n              break;\n            c[k][j] = c[i][j];\n          }\n        }\n      }\n    }\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= m; j++) {\n        if (c[i][j] != '?') {\n          for (long long k = j + 1; k <= m; k++) {\n            if (c[i][k] != '?')\n              break;\n            c[i][k] = c[i][j];\n          }\n        }\n      }\n    }\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = m; j >= 1; j--) {\n        if (c[i][j] != '?') {\n          for (long long k = j - 1; k >= 1; k--) {\n            if (c[i][k] != '?')\n              break;\n            c[i][k] = c[i][j];\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << ct << \":\" << '\\n';\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= m; j++)\n        cout << c[i][j];\n      cout << '\\n';\n    }\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n3\n2525 1\n2400 5\n300 2\n120 60\n60 90\n100 2\n80 100\n70 10\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\nlong long S, n;\nvector<pair<long long, long long>> a;\n\nbool check(double speed) {\n  for (long long i = 0; i < a.size(); i++) {\n    double left = S - a[i].first;\n    if (double(S) \/ speed < left \/ (double)(a[i].second))\n      return false;\n  }\n  return true;\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ct++;\n    a.clear();\n    cin >> S >> n;\n    for (long long i = 1; i <= n; i++) {\n      long long x, y;\n      cin >> x >> y;\n      a.push_back(make_pair(x, y));\n    }\n    double l = 0, r = 3e18;\n    for (long long j = 1; j <= 200; j++) {\n      double mid = (l + r) \/ 2.0;\n      if (check(mid))\n        l = mid;\n      else\n        r = mid;\n    }\n    cout << \"Case #\" << ct << \": \";\n    cout << setprecision(10) << fixed << l << '\\n';\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n1\n4 6 0 3 0 4 0\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\nlong long a[10];\nlong long n;\ndeque<long long> order;\nbool ok = true;\nvoid solveez(long long u, long long v, bool side = 0, bool locked = 0) {\n  if (locked) {\n    if (a[u] != a[v]) {\n      ok = false;\n      return;\n    }\n  } else {\n    if (abs(a[u] - a[v]) > 1) {\n      ok = false;\n      return;\n    }\n  }\n  if (side == 1) {\n    while (a[u] > 0 && a[v] > 0) {\n      order.push_front(u);\n      order.push_front(v);\n      a[u]--;\n      a[v]--;\n    }\n    if (a[u])\n      order.push_front(u);\n    else if (a[v])\n      order.push_front(v);\n  } else {\n    while (a[u] > 0 && a[v] > 0) {\n      order.push_back(u);\n      order.push_back(v);\n      a[u]--;\n      a[v]--;\n    }\n    if (a[u])\n      order.push_back(u);\n    else if (a[v])\n      order.push_back(v);\n  }\n}\n\nvoid recreate(long long x, long long y, long long z, long long need) {\n  order.clear();\n  while (need--) {\n    order.push_back(x);\n    order.push_back(y);\n    order.push_back(z);\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  \/\/ #ifdef UncleGrandpa\n  \/\/ \tfreopen(\"1test.inp\", \"r\", stdin);\n  \/\/ \tfreopen(\"1test.out\", \"w\", stdout);\n  \/\/ #endif\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    order.clear();\n    ok = true;\n    ct++;\n    cin >> n;\n    for (long long i = 1; i <= 6; i++)\n      cin >> a[i];\n    long long done = min(a[1], min(a[3], a[5]));\n    a[1] -= done;\n    a[3] -= done;\n    a[5] -= done;\n    recreate(1, 3, 5, done);\n    \/\/ cout << a[1] << sp << a[3] << sp << a[5] << endl;\n    if (order.empty()) {\n      if (a[1] == 0)\n        solveez(3, 5, 0, 1);\n      else if (a[3] == 0)\n        solveez(5, 1, 0, 1);\n      else\n        solveez(1, 3, 0, 1);\n    } else {\n      if (a[1] + a[3] + a[5] == 0) {\n\n      } else if (a[1] + a[3] == 0) {\n        if (a[5] > 1)\n          ok = false;\n        else {\n          recreate(1, 5, 3, done);\n          order.push_back(5);\n        }\n      } else if (a[1] + a[5] == 0) {\n        if (a[3] > 1)\n          ok = false;\n        else\n          order.push_back(3);\n      } else if (a[3] + a[5] == 0) {\n        if (a[1] > 1)\n          ok = false;\n        else {\n          recreate(3, 1, 5, done);\n          order.push_back(1);\n        }\n      } else if (a[1] == 0) {\n        if (abs(a[5] - a[3]) > 1) {\n          ok = false;\n        } else if (a[5] >= a[3]) {\n          recreate(1, 5, 3, done);\n          solveez(5, 3);\n        } else if (a[3] > a[5]) {\n          solveez(3, 5);\n        }\n      } else if (a[3] == 0) {\n        if (abs(a[5] - a[1]) > 1) {\n          ok = false;\n        } else if (a[5] >= a[1]) {\n          recreate(3, 5, 1, done);\n          solveez(5, 1);\n        } else if (a[1] > a[5]) {\n          recreate(3, 1, 5, done);\n          solveez(1, 5);\n        }\n      } else if (a[5] == 0) {\n        if (abs(a[3] - a[1]) > 1) {\n          ok = false;\n        } else if (a[3] >= a[1]) {\n          recreate(5, 3, 1, done);\n          solveez(3, 1);\n        } else if (a[1] > a[3]) {\n          recreate(5, 1, 3, done);\n          solveez(1, 3);\n        }\n      }\n    }\n    cout << \"Case #\" << ct << \": \";\n    if (!ok)\n      cout << \"IMPOSSIBLE\" << '\\n';\n    else {\n      for (long long i = 0; i < order.size() - 1; i++) {\n        assert(order[i] != order[i + 1]);\n      }\n      assert(order.back() != order.front());\n      for (auto it : order) {\n        if (it == 1)\n          cout << 'R';\n        else if (it == 3)\n          cout << 'Y';\n        else if (it == 5)\n          cout << 'B';\n      }\n      cout << '\\n';\n    }\n  }\n}\n"}
{"target":"UncleGrandpa","func":"\/*input\n2\n3 1\n2 3\n2 4\n4 4\n-1 1 -1\n-1 -1 1\n-1 -1 -1\n1 3\n4 1\n13 10\n1 1000\n10 8\n5 5\n-1 1 -1 -1\n-1 -1 1 -1\n-1 -1 -1 10\n-1 -1 -1 -1\n1 4\n*\/\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\nusing namespace std;\n\nconst long long INF = 1e18;\nlong long n, q;\npair<long long, long long> a[105];\nvector<vector<pair<long long, long long>>> e(105);\nlong long d2[105][105];\ndouble dis[105];\n\nvoid solve(long long l, long long r) {\n  priority_queue<pair<double, long long>, vector<pair<double, long long>>,\n                 greater<pair<double, long long>>>\n      pq;\n  fill(dis, dis + 105, 1e15);\n  dis[l] = 0.0;\n  pq.push(make_pair(0, l));\n  while (!pq.empty()) {\n    long long u = pq.top().second;\n    pq.pop();\n    for (long long i = 1; i <= n; i++) {\n      if (i == u || d2[u][i] == INF)\n        continue;\n      if (d2[u][i] <= a[u].first &&\n          dis[i] > dis[u] + (d2[u][i] * 1.0) \/ (a[u].second * 1.0)) {\n        dis[i] = dis[u] + (d2[u][i] * 1.0) \/ (a[u].second * 1.0);\n        pq.push(make_pair(dis[i], i));\n      }\n    }\n  }\n  cout << setprecision(10) << fixed << dis[r] << '\\n';\n}\n\nvoid dijkstra(long long wh, long long sta) {\n  priority_queue<pair<long long, long long>, vector<pair<long long, long long>>,\n                 greater<pair<long long, long long>>>\n      pq;\n  for (long long i = 0; i <= n; i++)\n    d2[wh][i] = INF;\n  d2[wh][sta] = 0;\n  pq.push(make_pair(0, sta));\n  while (!pq.empty()) {\n    long long u = pq.top().second;\n    pq.pop();\n    for (long long j = 0; j < e[u].size(); j++) {\n      long long v = e[u][j].first;\n      long long w = e[u][j].second;\n      if (d2[wh][v] > d2[wh][u] + w) {\n        d2[wh][v] = d2[wh][u] + w;\n        pq.push(make_pair(d2[wh][v], v));\n      }\n    }\n  }\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n\n  long long T;\n  cin >> T;\n  long long ct = 0;\n  while (T--) {\n    ct++;\n    e.assign(105, vector<pair<long long, long long>>());\n    cin >> n >> q;\n    for (long long i = 1; i <= n; i++) {\n      cin >> a[i].first >> a[i].second;\n    }\n    for (long long i = 1; i <= n; i++) {\n      for (long long j = 1; j <= n; j++) {\n        long long t;\n        cin >> t;\n        if (t != -1)\n          e[i].push_back(make_pair(j, t));\n      }\n    }\n    for (long long i = 1; i <= n; i++) {\n      dijkstra(i, i);\n    }\n    while (q--) {\n      long long u, v;\n      cin >> u >> v;\n      cout << \"Case #\" << ct << \": \";\n      solve(u, v);\n    }\n  }\n}\n"}
{"target":"valor11","func":"\/\/ Written by Li Bo\n#include <bits\/stdc++.h>\nusing namespace std;\nint a[20];\nchar s[20];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    int n;\n    scanf(\"%s\", s);\n    n = strlen(s);\n\n    for (int i = 0; i < n; i++)\n      a[i] = s[i] - '0';\n\n    for (int i = n - 1; i; i--) {\n      if (a[i] < a[i - 1]) {\n        a[i - 1]--;\n        for (int j = i; j < n; j++)\n          a[j] = 9;\n      }\n    }\n\n    int i = 0;\n    while (a[i] == 0 && i < n - 1)\n      i++;\n\n    printf(\"Case #%d: \", cas);\n    for (; i < n; i++)\n      printf(\"%d\", a[i]);\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"\/\/ Written by Li Bo\n#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll n, k;\nll a, b, c;\n\ninline void div(ll a, ll &b, ll &c) {\n  a--;\n  b = a >> 1;\n  c = a - b;\n  if (b < c)\n    swap(b, c);\n}\n\nmap<ll, ll, greater<ll>> res;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    a = b = c = 0;\n    cin >> n >> k;\n\n    res.clear();\n\n    res[n] = 1;\n\n    ll ans;\n    while (true) {\n      auto x = res.begin();\n      ll num = x->first, cc = x->second;\n      if (cc >= k) {\n        ans = num;\n        break;\n      }\n      k -= cc;\n      ll a, b;\n      div(num, a, b);\n      res.erase(x);\n      res[a] += cc;\n      res[b] += cc;\n    }\n\n    printf(\"Case #%d: \", cas);\n    ll a, b;\n    div(ans, a, b);\n    cout << a << \" \" << b;\n\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"\/\/ Written by Li Bo\n#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 1200;\nbitset<N> l, p;\nint n, k;\nchar s[N];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  int cas = 0;\n  while (T--) {\n    scanf(\"%s %d\", s, &k);\n    n = strlen(s);\n    p.reset();\n    l.reset();\n\n    for (int i = 0; i < n; i++)\n      l[i] = s[i] == '-';\n\n    for (int i = 0; i < k; i++)\n      p[i] = 1;\n\n    int time = 0;\n    for (int i = 0; i + k <= n; i++) {\n      if (l.test(i)) {\n        l ^= p;\n        time++;\n      }\n      p <<= 1;\n    }\n\n    if (l.count())\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ++cas);\n    else\n      printf(\"Case #%d: %d\\n\", ++cas, time);\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"#include <bits\/stdc++.h>\nusing namespace std;\nconst int N = 100;\nint a[N];\nint b[N][N], l[N][N], r[N][N], map_[N][N];\nint rr[N];\nbool v[N];\nint n, p;\n\nint has_cross(int l1, int r1, int l2, int r2) {\n  if (l1 == -1 || l2 == -1)\n    return 0;\n  if (l1 > r2 || l2 > r1)\n    return 0;\n  return 1;\n}\n\nint find(int x) {\n  for (int i = 0; i < p; i++) {\n    if (map_[i][x] && !v[i]) {\n      v[i] = true;\n      if (rr[i] == -1 || find(rr[i])) {\n        rr[i] = x;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\nint solve2() {\n  for (int i = 0; i < p; i++)\n    for (int j = 0; j < p; j++) {\n      map_[i][j] = has_cross(l[0][i], r[0][i], l[1][j], r[1][j]);\n      \/\/ cout << i << \" \" << j << \" \" << map_[i][j] << endl;\n    }\n\n  int ans = 0;\n  memset(rr, -1, sizeof(rr));\n  for (int i = 0; i < p; i++) {\n    memset(v, 0, sizeof(v));\n    if (find(i)) {\n      ans++;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    int ans = 0;\n\n    scanf(\"%d%d\", &n, &p);\n\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        scanf(\"%d\", &b[i][j]);\n      }\n      sort(b[i], b[i] + p);\n      for (int j = 0; j < p; j++) {\n        l[i][j] = (b[i][j] * 10 - 1) \/ (a[i] * 11) + 1;\n        \/\/ l[i][j] = (b[i][j] * 9 - 1) \/ (a[i] * 10) + 1;\n        r[i][j] = (b[i][j] * 10) \/ (a[i] * 9);\n        \/\/ r[i][j] = (b[i][j] * 11) \/ (a[i] * 10);\n        \/\/ cout << l[i][j] << \" \" << r[i][j] << endl;\n        if (l[i][j] > r[i][j]) {\n          l[i][j] = r[i][j] = -1;\n        }\n      }\n    }\n\n    if (n == 1) {\n      for (int i = 0; i < p; i++) {\n        if (l[0][i] != -1)\n          ans++;\n      }\n    }\n\n    if (n == 2) {\n      ans = solve2();\n    }\n    printf(\"Case #%d: %d\\n\", cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"#include <bits\/stdc++.h>\nconst int N = 26;\nchar s[N][N];\nint n, m;\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\"%d%d\", &n, &m);\n    bool flg = false;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", s[i]);\n      char sss = '?';\n      for (int j = 0; j < m; j++)\n        if (s[i][j] != '?') {\n          sss = s[i][j];\n          break;\n        }\n      if (sss == '?') {\n        continue;\n      }\n      for (int j = 0; j < m; j++) {\n        if (s[i][j] == '?')\n          s[i][j] = sss;\n        sss = s[i][j];\n      }\n    }\n\n    for (int j = 0; j < m; j++) {\n      char sss = '?';\n      for (int i = 0; i < n; i++)\n        if (s[i][j] != '?') {\n          sss = s[i][j];\n          break;\n        }\n      if (sss == '?') {\n        flg = true;\n        continue;\n      }\n      for (int i = 0; i < n; i++) {\n        if (s[i][j] == '?')\n          s[i][j] = sss;\n        sss = s[i][j];\n      }\n    }\n\n    if (flg) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n          if (s[i][j] == '?')\n            s[i][j] = 'A';\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", cas);\n    for (int i = 0; i < n; i++)\n      puts(s[i]);\n  }\n}\n"}
{"target":"valor11","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nconst int N = 1111;\nstruct horse {\n  double k, s;\n} h[N];\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    double d, n;\n    double mt = -1;\n    scanf(\"%lf%lf\", &d, &n);\n    double k, s;\n    while (n--) {\n      scanf(\"%lf%lf\", &k, &s);\n      mt = max((d - k) \/ s, mt);\n    }\n    printf(\"Case #%d: %.6f\\n\", cas, d \/ mt);\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int R, RY, Y, YB, B, BR, N;\n    scanf(\"%d%d%d%d%d%d%d\", &N, &R, &RY, &Y, &YB, &B, &BR);\n\n    static int cas = 1;\n    printf(\"Case #%d: \", cas++);\n\n    if (R > Y + B || Y > R + B || B > R + Y) {\n      if (N == 1)\n        puts(R ? \"R\" : Y ? \"Y\" : \"B\");\n      else\n        puts(\"IMPOSSIBLE\");\n    } else {\n      vector<pair<int, char>> tt = {make_pair(R, 'R'), make_pair(Y, 'Y'),\n                                    make_pair(B, 'B')};\n      sort(tt.begin(), tt.end(), [](pair<int, char> x, pair<int, char> y) {\n        return x.first > y.first;\n      });\n\n      while (tt[0].first) {\n        putchar(tt[0].second);\n        tt[0].first--;\n\n        if (tt[2].first >= tt[1].first)\n          swap(tt[1], tt[2]);\n        putchar(tt[1].second);\n        tt[1].first--;\n      }\n\n      swap(tt[1], tt[2]);\n      while (tt[1].first) {\n        putchar(tt[1].second);\n        tt[1].first--;\n        if (tt[2].first) {\n          putchar(tt[2].second);\n          tt[2].first--;\n        }\n      }\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"valor11","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nconst int N = 123;\ndouble a[N][N];\ndouble e[N], s[N];\ndouble f[N][N];\nbool v[N];\nint n, q;\n\nvoid spfa(int st) {\n  queue<int> q;\n  memset(v, 0, sizeof(v));\n  q.push(st);\n\n  v[st] = 1;\n\n  auto max_dis = e[st];\n\n  while (!q.empty()) {\n    int x = q.front();\n    q.pop();\n\n    for (int i = 0; i < n; i++) {\n      if (a[x][i] != -1) {\n        auto dis = f[st][x] + a[x][i];\n        if (dis <= max_dis && (dis < f[st][i])) {\n          f[st][i] = dis;\n          if (!v[i]) {\n            v[i] = 1;\n            q.push(i);\n          }\n        }\n      }\n    }\n\n    v[x] = 0;\n  }\n\n  for (int i = 0; i < n; i++)\n    if (f[st][i] < 1e12)\n      f[st][i] \/= s[st];\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%lf%lf\", e + i, s + i);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        scanf(\"%lf\", &a[i][j]);\n        f[i][j] = 1e20;\n      }\n      f[i][i] = 0;\n    }\n\n    for (int i = 0; i < n; i++)\n      spfa(i);\n\n    \/\/*\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++)\n        printf(\"%.6f \", f[i][j]);\n      puts(\"\");\n    }\n    \/\/*\/\n    \/\/ floyed\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++)\n        if (i != k) {\n          for (int j = 0; j < n; j++)\n            if (i != j && j != k) {\n              if (f[i][k] + f[k][j] < f[i][j]) {\n                f[i][j] = f[i][k] + f[k][j];\n              }\n            }\n        }\n    }\n\n    int x, y;\n    printf(\"Case #%d:\", cas);\n    while (q--) {\n      scanf(\"%d%d\", &x, &y);\n      x--;\n      y--;\n      printf(\" %.7f\", f[x][y]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\ntypedef long long ll;\nll f[21][12][2], t[21], pow[21];\nint tot, ans[21];\nll dp(int step, int last, int flag) {\n  if (f[step][last][flag] != -1)\n    return f[step][last][flag];\n  if (step == 0)\n    return f[step][last][flag] = 1;\n  ll ret = 0;\n  if (flag) {\n    for (int i = last; i <= 9; ++i) {\n      ll tmp = dp(step - 1, i, flag);\n      if (tmp)\n        ans[step] = i;\n      ret += dp(step - 1, i, flag);\n    }\n  } else {\n    for (int i = last; i <= t[step]; ++i) {\n      ll tmp = dp(step - 1, i, i < t[step] ? 1 : 0);\n      if (tmp)\n        ans[step] = i;\n      ret += dp(step - 1, i, i < t[step] ? 1 : 0);\n    }\n  }\n  \/\/ printf(\"f[%d][%d][%d] = %lld\\n\", step, last, flag, ret);\n  return f[step][last][flag] = ret;\n}\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  pow[1] = 1;\n  for (int i = 2; i <= 19; ++i)\n    pow[i] = pow[i - 1] * 10;\n\n  for (int cas = 1; cas <= T; ++cas) {\n    ll n, tmp = 0;\n    cin >> n;\n    tot = 0;\n    for (ll tmp = n; tmp; tmp \/= 10) {\n      t[++tot] = tmp % 10;\n    }\n    memset(f, -1, sizeof(f));\n    ll value = dp(tot, 0, 0);\n    printf(\"Case #%d: \", cas);\n    for (int i = 1; i <= tot; ++i)\n      tmp += ans[i] * pow[i];\n    cout << tmp << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\ntypedef long long ll;\nconst pair<ll, ll> getValue(pair<ll, ll> &x) {\n  if (x.first <= 0 || x.second <= 0)\n    return make_pair(0, 0);\n  if (x.first & 1)\n    return make_pair(x.first >> 1, x.first >> 1);\n  else\n    return make_pair((x.first >> 1) - 1, x.first >> 1);\n}\nconst bool cmp(pair<ll, ll> &v1, pair<ll, ll> &v2) {\n  if (min(v1.first, v1.second) != min(v2.first, v2.second))\n    return min(v1.first, v1.second) > min(v2.first, v2.second);\n  if (max(v1.first, v1.second) != max(v2.first, v2.second))\n    return max(v1.first, v1.second) > max(v2.first, v2.second);\n  return 1;\n}\nvoid split(pair<ll, ll> &fa, pair<ll, ll> &ch1, pair<ll, ll> &ch2) {\n  if (!fa.second || !fa.first) {\n    ch1 = ch2 = make_pair(0, 0);\n    return;\n  }\n  if (fa.first & 1)\n    ch1 = ch2 = make_pair(fa.first >> 1, fa.second);\n  else {\n    ch1 = make_pair((fa.first >> 1) - 1, fa.second);\n    ch2 = make_pair(fa.first >> 1, fa.second);\n  }\n}\nvoid print(pair<ll, ll> x) { printf(\"print (%lld %lld)\\n\", x.first, x.second); }\nvoid mergeTwo(pair<ll, ll> &x, pair<ll, ll> &y) {\n  if (x.first == y.first) {\n    x.second += y.second;\n    y.second = 0;\n  }\n}\nvoid merge(pair<ll, ll> &x1, pair<ll, ll> &x2, pair<ll, ll> &y1,\n           pair<ll, ll> &y2, pair<ll, ll> &y3, pair<ll, ll> &y4) {\n\n  mergeTwo(y1, y2);\n  mergeTwo(y1, y3);\n  mergeTwo(y1, y4);\n  mergeTwo(y2, y3);\n  mergeTwo(y2, y4);\n  mergeTwo(y3, y4);\n  \/*print(y1);\n  print(y2);\n  print(y3);\n  print(y4);*\/\n  if (!y1.first || !y1.second) {\n    if (y3.first && y3.second)\n      swap(y1, y3);\n    if (y4.first && y4.second)\n      swap(y1, y4);\n  }\n  if (!y2.first || !y2.second) {\n    if (y3.first && y3.second)\n      swap(y2, y3);\n    if (y4.first && y4.second)\n      swap(y2, y4);\n  }\n  x1 = y1;\n  x2 = y2;\n}\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out2.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    ll n, m;\n    pair<ll, ll> ans, now1, now2, next1, next2, next3 = make_pair(-1, -1),\n                                                next4 = make_pair(-1, -1);\n    cin >> n >> m;\n    now1 = make_pair(n, 1);\n    now2 = make_pair(0, 0);\n    ans = getValue(now1);\n    ll cnt = 1;\n    while (m) {\n      pair<ll, ll> v1 = getValue(now1), v2 = getValue(now2);\n      \/\/ printf(\"m = %lld\\n\", m);\n      \/\/\tprintf(\"now = %lld %lld %lld %lld\\n\", now1.first, now1.second,\n      \/\/ now2.first, now2.second); \tprintf(\"v = %lld %lld %lld %lld \\n\",\n      \/\/ v1.first, v1.second , v2.first, v2.second);\n      bool flag = cmp(v1, v2);\n      \/\/ printf(\"flag = %d\\n\", flag);\n      \/\/ system(\"pause\");\n      if (flag) {\n        if (m > now1.second)\n          m -= now1.second;\n        else {\n          ans = v1;\n          break;\n        }\n        split(now1, next1, next2);\n        if (m > now2.second)\n          m -= now2.second;\n        else {\n          ans = v2;\n          break;\n        }\n        split(now2, next3, next4);\n      } else {\n        if (m > now2.second)\n          m -= now2.second;\n        else {\n          ans = v2;\n          break;\n        }\n        split(now2, next3, next4);\n        if (m > now1.second)\n          m -= now1.second;\n        else {\n          ans = v1;\n          break;\n        }\n        split(now1, next1, next2);\n      }\n      if (now1.first & 1) {\n        next1.first = now1.first >> 1;\n        next1.second = 2 * now1.second + now2.second;\n        next2.first = next1.first + 1;\n        next2.second = now2.second;\n      } else {\n        next1.first = (now1.first >> 1) - 1;\n        next1.second = now1.second;\n        next2.first = next1.first + 1;\n        next2.second = now1.second + 2 * now2.second;\n      }\n      now1 = next1;\n      now2 = next2;\n      \/\/ merge(now1, now2, next1, next2, next3, next4);\n    }\n    printf(\"Case #%d: \", cas);\n    cout << max(ans.first, ans.second) << \" \" << min(ans.first, ans.second)\n         << '\\n';\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nchar s[1010];\nint m, n;\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    scanf(\"%s\", s + 1);\n    scanf(\"%d\", &m);\n    n = strlen(s + 1);\n    int ans = 0;\n    for (int i = 1; i <= n - m + 1; ++i) {\n      if (s[i] == '-') {\n        ++ans;\n        for (int j = 1; j <= m; ++j)\n          if (s[i + j - 1] == '+')\n            s[i + j - 1] = '-';\n          else\n            s[i + j - 1] = '+';\n      }\n    }\n    bool flag = 1;\n    for (int i = 1; i <= n; ++i)\n      if (s[i] == '-')\n        flag = 0;\n    if (flag)\n      printf(\"Case #%d: %d\\n\", cas, ans);\n    else\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n  }\n}\n"}
{"target":"vector310","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n\nusing namespace std;\nint n, m, flag, tot;\nint t[101], s[101][101], cnt[51];\nstruct data {\n  int a, l, r;\n  data() {}\n  data(int a, int l, int r) : a(a), l(l), r(r) {}\n  bool operator<(const data &x) const { return r > x.r; }\n} g[1010];\nbool cmp(const data &x, const data &y) { return x.l < y.l; }\npriority_queue<data> que[101];\nint main() {\n  \/\/ freopen(\"input.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  int T, ans;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    cin >> n >> m;\n    tot = ans = 0;\n    for (int i = 1; i <= n; ++i)\n      while (!que[i].empty())\n        que[i].pop();\n    for (int i = 1; i <= n; ++i)\n      scanf(\"%d\", &t[i]);\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= m; ++j)\n        scanf(\"%d\", &s[i][j]);\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= m; ++j)\n        if (s[i][j]) {\n          int r = floor((double)s[i][j] \/ (0.9 * t[i]));\n          int l = ceil((double)s[i][j] \/ (1.1 * t[i]));\n          if (l == 0)\n            l = 1;\n          if (l <= r)\n            g[++tot] = data(i, l, r);\n          \/\/ printf(\"s = %d l = %d r = %d\\n\", s[i][j], l, r);\n        }\n    sort(g + 1, g + tot + 1, cmp);\n    for (int i = 1; i <= tot; ++i) {\n      \/\/ printf(\"g[%d] = (%d %d %d)\\n\", g[i].a, g[i].l, g[i].r);\n      for (int j = 1; j <= n; ++j)\n        while (!que[j].empty() && que[j].top().r < g[i].l)\n          que[j].pop();\n      que[g[i].a].push(g[i]);\n      int minvalue = 1 << 29;\n      for (int j = 1; j <= n; ++j)\n        if (que[j].size() < minvalue)\n          minvalue = que[j].size();\n      ans += minvalue;\n      for (int j = 1; j <= n; ++j)\n        for (int k = 1; k <= minvalue; ++k)\n          que[j].pop();\n    }\n    printf(\"Case #%d: %d\\n\", cas, ans);\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nchar s[30][30];\nint n, m;\nvoid work(int x) {\n  for (int j = 1; j <= m; ++j) {\n    if (s[x][j] != '?') {\n      for (int k = j - 1; k >= 1 && s[x][k] == '?'; --k)\n        s[x][k] = s[x][j];\n      for (int k = j + 1; k <= m && s[x][k] == '?'; ++k)\n        s[x][k] = s[x][j];\n    }\n  }\n}\nint main() {\n  \/\/ freopen(\"input.txt\", \"r\", stdin);\n  \/\/ freopen(\"out.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    cin >> n >> m;\n    for (int i = 1; i <= n; ++i)\n      scanf(\"%s\", s[i] + 1);\n    int first = 0;\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j)\n        if (s[i][j] != '?')\n          first = i;\n      if (first)\n        break;\n    }\n    work(first);\n    for (int i = first - 1; i >= 1; --i)\n      for (int j = 1; j <= m; ++j)\n        s[i][j] = s[i + 1][j];\n    for (int i = first + 1; i <= n; ++i) {\n      bool flag = 0;\n      for (int j = 1; j <= m; ++j)\n        if (s[i][j] != '?')\n          flag = 1;\n      if (flag)\n        work(i);\n      else\n        for (int j = 1; j <= m; ++j)\n          s[i][j] = s[i - 1][j];\n    }\n    printf(\"Case #%d:\\n\", cas);\n    for (int i = 1; i <= n; ++i) {\n      for (int j = 1; j <= m; ++j)\n        printf(\"%c\", s[i][j]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nconst int maxn = 1010;\nint k[maxn], s[maxn];\ndouble runtime[maxn];\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    int d, n;\n    double v = -1.0;\n    cin >> d >> n;\n    for (int i = 1; i <= n; ++i)\n      scanf(\"%d%d\", &k[i], &s[i]);\n    for (int i = 1; i <= n; ++i) {\n      runtime[i] = (double)(d - k[i]) \/ s[i];\n      for (int j = 1; j <= n; ++j)\n        if (s[i] > s[j] && k[i] <= k[j]) {\n          int delta = k[j] - k[i];\n          double t = (double)delta \/ (s[i] - s[j]);\n          if (t < runtime[i])\n            runtime[i] = t;\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n      if (v < 0 || v > (k[i] + runtime[i] * s[i]) \/ runtime[i]) {\n        v = (k[i] + runtime[i] * s[i]) \/ runtime[i];\n      }\n    printf(\"Case #%d: %.8f\\n\", cas, v);\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\nstruct data {\n  int t, v;\n  char c;\n  data() {}\n  data(int t, int v, char c) : t(t), v(v), c(c) {}\n};\nconst int maxn = 1010;\nint n, R, O, Y, G, B, V;\nvoid print(data &d) {\n  printf(\"%c\", d.c);\n  while (d.v > 0) {\n    if (d.c == 'B')\n      printf(\"O\");\n    if (d.c == 'R')\n      printf(\"G\");\n    if (d.c == 'Y')\n      printf(\"V\");\n    printf(\"%c\", d.c);\n    --d.v;\n  }\n}\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    cin >> n >> R >> O >> Y >> G >> B >> V;\n    B -= O;\n    R -= G;\n    Y -= V;\n    if (B < 0 || R < 0 || Y < 0) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n      continue;\n    }\n    data d1 = data(B, O, 'B');\n    data d2 = data(R, G, 'R');\n    data d3 = data(Y, V, 'Y');\n    if (d3.t > d2.t)\n      swap(d3, d2);\n    if (d2.t > d1.t)\n      swap(d2, d1);\n    if (d3.t > d2.t)\n      swap(d3, d2);\n    if (d1.t > d2.t + d3.t) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", cas);\n      continue;\n    }\n    printf(\"Case #%d: \", cas);\n    int res = (d2.t + d3.t) - d1.t;\n    \/\/ printf(\"d1.t = %d d2.t = %d d3.t =%d\\n\", d1.t, d2.t, d3.t);\n    for (int i = 1; i <= d1.t; ++i) {\n      print(d1);\n      if (d2.t > 0) {\n        print(d2);\n        --d2.t;\n      } else {\n        print(d3);\n      }\n      if (res > 0) {\n        print(d3);\n        --res;\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"vector310","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n\nusing namespace std;\ntypedef long long ll;\nconst int maxn = 110;\nstruct state {\n  int s, t, k;\n  state() {}\n  state(int s, int t, int k) : s(s), t(t), k(k) {}\n};\nint n, m;\nll d[maxn][maxn];\ndouble f[maxn][maxn][maxn];\nll maxd[maxn], v[maxn];\nbool inq[maxn][maxn][maxn];\nvoid floyd() {\n  for (int k = 1; k <= n; ++k)\n    for (int i = 1; i <= n; ++i)\n      if (d[i][k] != -1)\n        for (int j = 1; j <= n; ++j)\n          if (d[k][j] != -1)\n            if (d[i][j] == -1 || d[i][j] > d[i][k] + d[k][j])\n              d[i][j] = d[i][k] + d[k][j];\n}\nvoid dp(int x) {\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= n; ++j)\n      f[x][i][j] = -1.0;\n  static queue<state> q;\n  while (!q.empty())\n    q.pop();\n  q.push(state(x, x, x));\n  f[x][x][x] = 0;\n  while (!q.empty()) {\n    state now = q.front();\n    q.pop();\n    inq[now.s][now.t][now.k] = 0;\n    \/\/ printf(\"f(%d %d %d) = %f\\n\", now.s, now.t, now.k,\n    \/\/ f[now.s][now.t][now.k]);\n    if (now.t != now.k) {\n      if (f[now.s][now.t][now.t] < 0 ||\n          f[now.s][now.t][now.t] > f[now.s][now.t][now.k]) {\n        f[now.s][now.t][now.t] = f[now.s][now.t][now.k];\n        if (!inq[now.s][now.t][now.t]) {\n          inq[now.s][now.t][now.t] = 1;\n          q.push(state(now.s, now.t, now.t));\n        }\n      }\n    }\n    for (int i = 1; i <= n; ++i)\n      if (d[now.t][i] >= 0) {\n        if (maxd[now.k] >= d[now.k][now.t] + d[now.t][i]) {\n          if (f[now.s][i][now.k] < 0 ||\n              f[now.s][i][now.k] >\n                  f[now.s][now.t][now.k] + (double)d[now.t][i] \/ v[now.k]) {\n            f[now.s][i][now.k] =\n                f[now.s][now.t][now.k] + (double)d[now.t][i] \/ v[now.k];\n            if (!inq[now.s][i][now.k]) {\n              inq[now.s][i][now.k] = 1;\n              q.push(state(now.s, i, now.k));\n            }\n          }\n        }\n      }\n  }\n}\nint main() {\n  \/\/ freopen(\"in.txt\",\"r\",stdin);\n  \/\/ freopen(\"out2.txt\",\"w\",stdout);\n  int T;\n  cin >> T;\n  for (int cas = 1; cas <= T; ++cas) {\n    cin >> n >> m;\n    for (int i = 1; i <= n; ++i)\n      cin >> maxd[i] >> v[i]; \/\/ scanf(\"%d%d\", &maxd[i], &v[i]);\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j)\n        cin >> d[i][j];\n    \/\/ scanf(\"%d\", &d[i][j]);\n    for (int i = 1; i <= n; ++i)\n      d[i][i] = 0;\n    floyd();\n    for (int i = 1; i <= n; ++i)\n      dp(i);\n    printf(\"Case #%d:\", cas);\n    for (int i = 1; i <= m; ++i) {\n      int s, t;\n      scanf(\"%d%d\", &s, &t);\n      double ans = -1;\n      for (int i = 1; i <= n; ++i)\n        if (f[s][t][i] >= 0) {\n          if (ans < 0 || ans > f[s][t][i])\n            ans = f[s][t][i];\n        }\n      printf(\" %.8f\", ans);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\/*\n1\n3 1\n2 3\n2 4\n4 4\n-1 1 -1\n-1 -1 1\n-1 -1 -1\n1 3\n4 1\n13 10\n1 1000\n10 8\n5 5\n-1 1 -1 -1\n-1 -1 1 -1\n-1 -1 -1 10\n-1 -1 -1 -1\n1 4\n4 3\n30 60\n10 1000\n12 5\n20 1\n-1 10 -1 31\n10 -1 10 -1\n-1 -1 -1 10\n15 6 -1 -1\n2 4\n3 1\n3 2\n*\/\n"}
{"target":"verngutz","func":"#include <iostream>\n\nusing namespace std;\n\nint T;\nlong long N;\nint n;\nlong long digits[19];\nlong long ten[19];\n\nlong long opt(int i, int last, bool strict) {\n  if (i == 0) {\n    return 0;\n  } else if (strict) {\n    long long ans = -4999999999999999999LL;\n    for (int x = last; x < digits[i]; x++) {\n      ans = max(ans, x * ten[i - 1] + opt(i - 1, x, false));\n    }\n    if (digits[i] >= last) {\n      ans = max(ans, digits[i] * ten[i - 1] + opt(i - 1, digits[i], true));\n    }\n    return ans;\n  } else {\n    return 9 * ten[i - 1] + opt(i - 1, 9, false);\n  }\n}\nint main() {\n  ten[0] = 1;\n  for (int i = 1; i < 19; i++) {\n    ten[i] = ten[i - 1] * 10;\n  }\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> N;\n    for (n = 1; N > 0; n++) {\n      digits[n] = N % 10;\n      N \/= 10;\n    }\n    n--;\n    cout << \"Case #\" << t << \": \" << opt(n, 0, true) << endl;\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <cassert>\n#include <iostream>\n#include <map>\n#include <utility>\nusing namespace std;\n\nint T;\nlong long K, N;\ntypedef map<pair<long long, long long>, long long> tree;\ntree spaces;\nmap<pair<long long, long long>, tree> memo;\nmap<pair<long long, long long>, long long> bsearch(long long x, long long y) {\n  if (!memo.count({x, y})) {\n    tree structure;\n    assert((x - y == 0) || (x - y == 1));\n    structure[{x, y}]++;\n    if (!(x == 0 && y == 0)) {\n      if (x == 1 && y == 0) {\n        structure[{0, 0}]++;\n      } else if (x % 2 == 1) {\n        if (x == y) {\n          auto left = bsearch(x \/ 2, y \/ 2);\n          auto right = bsearch(x \/ 2, y \/ 2);\n          for (auto x : left) {\n            structure[x.first] += x.second;\n          }\n          for (auto x : right) {\n            structure[x.first] += x.second;\n          }\n        } else {\n          auto left = bsearch(x \/ 2, y \/ 2);\n          auto right = bsearch(x \/ 2, y \/ 2 - 1);\n          for (auto x : left) {\n            structure[x.first] += x.second;\n          }\n          for (auto x : right) {\n            structure[x.first] += x.second;\n          }\n        }\n      } else {\n        if (x == y) {\n          auto left = bsearch(x \/ 2, y \/ 2 - 1);\n          auto right = bsearch(x \/ 2, y \/ 2 - 1);\n          for (auto x : left) {\n            structure[x.first] += x.second;\n          }\n          for (auto x : right) {\n            structure[x.first] += x.second;\n          }\n        } else {\n          auto left = bsearch(x \/ 2, y \/ 2);\n          auto right = bsearch(x \/ 2 - 1, y \/ 2);\n          for (auto x : left) {\n            structure[x.first] += x.second;\n          }\n          for (auto x : right) {\n            structure[x.first] += x.second;\n          }\n        }\n      }\n    }\n    memo[{x, y}] = structure;\n  }\n  return memo[{x, y}];\n}\n\nint main() {\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> N >> K;\n    spaces.clear();\n    if (N % 2 == 1) {\n      spaces = bsearch(N \/ 2, N \/ 2);\n    } else {\n      spaces = bsearch(N \/ 2, N \/ 2 - 1);\n    }\n    cout << \"Case #\" << t << \": \";\n    long long total = 0;\n    for (auto x = spaces.rbegin(); x != spaces.rend(); x++) {\n      total += x->second;\n      if (total >= K) {\n        cout << x->first.first << \" \" << x->first.second << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint T, K;\nstring S;\n\nvoid flip(int start, int length) {\n  for (int j = 0; j < length; j++) {\n    S[start + j] = (S[start + j] == '-' ? '+' : '-');\n  }\n}\n\nint main() {\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> S >> K;\n    int flips = 0;\n    for (int i = 0; i <= S.length() - K; i++) {\n      if (S[i] == '-') {\n        flip(i, K);\n        flips++;\n      }\n    }\n    bool possible = true;\n    for (int i = S.length() - K + 1; i < S.length() && possible; i++) {\n      if (S[i] == '-') {\n        possible = false;\n      }\n    }\n    if (possible) {\n      cout << \"Case #\" << t << \": \" << flips << endl;\n    } else {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\" << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint T;\nint N, P;\nint a[50];\npair<int, int> b[50][50];\nvector<int> counters;\n\nbool can_move() {\n  for (int i = 0; i < counters.size(); i++) {\n    if (counters[i] == P) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> N >> P;\n    for (int i = 0; i < N; i++) {\n      cin >> a[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        int bb;\n        cin >> bb;\n        int max_servings = int(bb * 100.0 \/ 90 \/ a[i]) + 10;\n        int min_servings = max(1, int(bb * 100.0 \/ 110 \/ a[i]) - 10);\n        int r_max_servings = -1;\n        int r_min_servings = max_servings;\n        for (int s = min_servings; s <= max_servings; s++) {\n          if (a[i] * s * 90 <= bb * 100 && bb * 100 <= a[i] * s * 110) {\n            r_max_servings = max(r_max_servings, s);\n            r_min_servings = min(r_min_servings, s);\n          }\n        }\n        b[i][j] = {r_min_servings, r_max_servings};\n      }\n    }\n    for (int i = 0; i < N; i++) {\n      sort(b[i], b[i] + P);\n    }\n    \/*\n    for(int i = 0; i < N; i++) {\n        for(int j = 0; j < P; j++) {\n            if(b[i][j].second > 0) {\n                cout << b[i][j].first << \"-\" << b[i][j].second << \" \";\n            }\n        }\n        cout << endl;\n    }\n    *\/\n    counters.clear();\n    for (int i = 0; i < N; i++) {\n      counters.push_back(0);\n    }\n    int ans = 0;\n    while (can_move()) {\n      bool valid = true;\n      for (int i = 0; i < N; i++) {\n        if (b[i][counters[i]].second == -1) {\n          counters[i]++;\n          valid = false;\n        }\n      }\n      if (valid) {\n        int greatest_lower_bound = b[0][counters[0]].first;\n        int least_upper_bound = b[0][counters[0]].second;\n        for (int i = 1; i < N; i++) {\n          greatest_lower_bound =\n              max(greatest_lower_bound, b[i][counters[i]].first);\n          least_upper_bound = min(least_upper_bound, b[i][counters[i]].second);\n        }\n        \/\/ cout << greatest_lower_bound << \" \" << least_upper_bound << endl;\n        bool allgood = true;\n        for (int i = 0; i < N; i++) {\n          if (!(greatest_lower_bound <= b[i][counters[i]].second &&\n                b[i][counters[i]].first <= least_upper_bound)) {\n            allgood = false;\n          }\n        }\n        if (allgood) {\n          ans++;\n          for (int i = 0; i < counters.size(); i++) {\n            counters[i]++;\n          }\n        } else {\n          int mini = b[0][counters[0]].first;\n          int min_index = 0;\n          for (int i = 1; i < N; i++) {\n            if (b[i][counters[i]].first < mini) {\n              mini = b[i][counters[i]].first;\n              min_index = i;\n            }\n          }\n          counters[min_index]++;\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <bits\/stdc++.h>\nusing namespace std;\nstring g[25];\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cout << \"Case #\" << t << \":\" << endl;\n    int R, C;\n    cin >> R >> C;\n    for (int i = 0; i < R; i++) {\n      cin >> g[i];\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (g[i][j] != '?') {\n          for (int k = j - 1; k >= 0; k--) {\n            if (g[i][k] == '?') {\n              g[i][k] = g[i][j];\n            } else {\n              break;\n            }\n          }\n          for (int k = j + 1; k < C; k++) {\n            if (g[i][k] == '?') {\n              g[i][k] = g[i][j];\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (g[i][j] == '?') {\n          if (i == 0) {\n            for (int ii = i + 1; ii < R; ii++) {\n              if (g[ii][j] != '?') {\n                g[i][j] = g[ii][j];\n                break;\n              }\n            }\n          } else {\n            for (int ii = i - 1; ii >= 0; ii--) {\n              if (g[ii][j] != '?') {\n                g[i][j] = g[ii][j];\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < R; i++) {\n      cout << g[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    double D;\n    int N;\n    cin >> D >> N;\n    double K1, S1;\n    cin >> K1 >> S1;\n    double T1 = (D - K1) \/ S1;\n    double minspeed = K1 \/ T1 + S1;\n    for (int i = 2; i <= N; i++) {\n      double k, s;\n      cin >> k >> s;\n      double t = (D - k) \/ s;\n      minspeed = min(minspeed, k \/ t + s);\n    }\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(6) << minspeed\n         << endl;\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <bits\/stdc++.h>\nusing namespace std;\nbool compat(char c1, char c2) {\n  switch (c1) {\n  case 'R':\n    return c2 != 'R' && c2 != 'O' && c2 != 'V';\n  case 'Y':\n    return c2 != 'O' && c2 != 'Y' && c2 != 'G';\n  case 'B':\n    return c2 != 'G' && c2 != 'B' && c2 != 'V';\n  }\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    string ans;\n    bool possible = true;\n    if (R > 0) {\n      ans += \"R\";\n      R--;\n    } else if (O > 0) {\n      ans += \"O\";\n      O--;\n    } else if (Y > 0) {\n      ans += \"Y\";\n      Y--;\n    } else if (G > 0) {\n      ans += \"G\";\n      G--;\n    } else if (B > 0) {\n      ans += \"B\";\n      B--;\n    } else if (V > 0) {\n      ans += \"V\";\n      V--;\n    }\n    while (ans.length() < N) {\n      char candidate = ' ';\n      int maxi = 0;\n      \/\/ cout << R << \" \" << Y << \" \" << B << endl;\n      if (R > 0 && ans[ans.length() - 1] != 'R' &&\n          ans[ans.length() - 1] != 'O' && ans[ans.length() - 1] != 'V') {\n        if (R > maxi) {\n          maxi = R;\n          candidate = 'R';\n        }\n      }\n      if (O > 0 && ans[ans.length() - 1] != 'R' &&\n          ans[ans.length() - 1] != 'O' && ans[ans.length() - 1] != 'Y' &&\n          ans[ans.length() - 1] != 'G' && ans[ans.length() - 1] != 'V') {\n        if (O > maxi) {\n          maxi = O;\n          candidate = 'O';\n        }\n      }\n      if (Y > 0 && ans[ans.length() - 1] != 'O' &&\n          ans[ans.length() - 1] != 'Y' && ans[ans.length() - 1] != 'G') {\n        if (Y > maxi) {\n          maxi = Y;\n          candidate = 'Y';\n        }\n      }\n      if (G > 0 && ans[ans.length() - 1] != 'O' &&\n          ans[ans.length() - 1] != 'Y' && ans[ans.length() - 1] != 'G' &&\n          ans[ans.length() - 1] != 'B' && ans[ans.length() - 1] != 'V') {\n        if (G > maxi) {\n          maxi = G;\n          candidate = 'G';\n        }\n      }\n      if (B > 0 && ans[ans.length() - 1] != 'G' &&\n          ans[ans.length() - 1] != 'B' && ans[ans.length() - 1] != 'V') {\n        if (B > maxi) {\n          maxi = B;\n          candidate = 'B';\n        }\n      }\n      if (V > 0 && ans[ans.length() - 1] != 'O' &&\n          ans[ans.length() - 1] != 'G' && ans[ans.length() - 1] != 'B' &&\n          ans[ans.length() - 1] != 'V' && ans[ans.length() - 1] != 'R') {\n        if (V > maxi) {\n          maxi = V;\n          candidate = 'V';\n        }\n      }\n      if (candidate == ' ') {\n        \/\/ cout << ans << endl;\n        possible = false;\n        break;\n      } else {\n        ans += candidate;\n        switch (candidate) {\n        case 'R':\n          R--;\n          break;\n        case 'O':\n          O--;\n          break;\n        case 'Y':\n          Y--;\n          break;\n        case 'G':\n          G--;\n          break;\n        case 'B':\n          B--;\n          break;\n        case 'V':\n          V--;\n          break;\n        }\n      }\n    }\n    if (possible && compat(ans[0], ans[ans.length() - 1])) {\n      cout << \"Case #\" << t << \": \" << ans << endl;\n    } else {\n      cout << \"Case #\" << t << \": IMPOSSIBLE\" << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"verngutz","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nlong long D[101][101];\nlong long E[101];\ndouble S[101];\nbool can_reach[101][101];\n\nint u, v;\nbool in_memo[101][101];\ndouble memo[101][101];\ndouble opt(int horse, int city) {\n  if (!in_memo[horse][city]) {\n    double ans;\n    if (city == v) {\n      ans = 0;\n    } else {\n      ans = 1e16;\n      if (can_reach[horse][city + 1]) {\n        ans = min(ans, D[city][city + 1] \/ S[horse] + opt(horse, city + 1));\n      }\n      if (can_reach[city][city + 1]) {\n        ans = min(ans, D[city][city + 1] \/ S[city] + opt(city, city + 1));\n      }\n    }\n    in_memo[horse][city] = true;\n    memo[horse][city] = ans;\n  }\n  return memo[horse][city];\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int N, Q;\n    cin >> N >> Q;\n    for (int i = 1; i <= N; i++) {\n      cin >> E[i] >> S[i];\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        cin >> D[i][j];\n      }\n    }\n    memset(can_reach, false, sizeof can_reach);\n    for (int i = 1; i <= N; i++) {\n      for (int j = i; j <= N; E[i] -= D[j][j + 1], j++) {\n        if (E[i] >= 0) {\n          can_reach[i][j] = true;\n        }\n        if (j == N)\n          break;\n      }\n    }\n    \/*\n    for(int i = 1; i <= N; i++) {\n        for(int j = 1; j <= N; j++) {\n            cout << can_reach[i][j] << \" \";\n        }\n        cout << endl;\n    }*\/\n    memset(in_memo, false, sizeof in_memo);\n    cout << \"Case #\" << t << \":\";\n    for (int q = 1; q <= Q; q++) {\n      cin >> u >> v;\n      cout << \" \" << fixed << setprecision(6) << D[1][2] \/ S[1] + opt(1, 2);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  string N;\n  int64 mem[20][10][2];\n  int64 pow10[21];\n  int64 rec(int p, int last, int eq) {\n    int64 &res = mem[p][last][eq];\n    if (res == -1) {\n      res = -2;\n      if (p == N.size()) {\n        \/\/ welp\n        res = 0;\n      } else {\n        for (int d = last; d <= 9; d++) {\n          if (!eq || (d <= N[p] - '0')) {\n            int neq = (eq && ((N[p] - '0') == d));\n            int nlast = d;\n            int64 x = rec(p + 1, nlast, neq);\n            if (x != -2) {\n              x = d * pow10[N.size() - p - 1] + x;\n              res = std::max(res, x);\n            }\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  int64 solve() {\n    memset(mem, -1, sizeof(mem));\n    pow10[0] = 1;\n    for (int i = 1; i < N.size(); i++) {\n      pow10[i] = pow10[i - 1] * 10;\n    }\n    return rec(0, 0, 1);\n  }\n\n  void init() {}\n\n  void read() { cin >> N; }\n\n  void write(int cn) { cout << \"Case #\" << cn << \": \" << solve() << endl; }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  pair<int64, int64> solve(int64 N, int64 K) {\n    map<int64, int64> count;\n    count[N] = 1;\n    set<int64, greater<int64>> Q;\n    Q.insert(N);\n    while (!Q.empty()) {\n      auto it = Q.begin();\n      int64 x = *it;\n      int64 c = count[x];\n      \/\/ cout << K << \" : \" << x << \" : \" << c << endl;\n      Q.erase(x);\n\n      int64 a = (x - 1) \/ 2;\n      int64 b = x - 1 - a;\n      if (K <= c) {\n        return {b, a};\n      }\n      \/\/ cout << \"a=\"<<a<<\" , b=\"<<b<<endl;\n      K -= c;\n      count[a] += c;\n      count[b] += c;\n      Q.insert(a);\n      Q.insert(b);\n    }\n    cout << \"K = \" << K << endl;\n    assert(false);\n    return {-1, -1};\n  }\n  void init() {}\n  int64 N, K;\n  void read() { cin >> N >> K; }\n\n  void write(int cn) {\n    cout << \"Case #\" << cn << \": \";\n    auto x = solve(N, K);\n    cout << x.first << \" \" << x.second << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  string S;\n  int K;\n\n  int solve() {\n    int cost = 0;\n    for (int i = 0; i + K <= S.size(); i++) {\n      if (S[i] != '+') {\n        cost++;\n        \/\/ flip\n        for (int j = i; j < i + K; j++) {\n          S[j] = ((S[j] == '+') ? '-' : '+');\n        }\n      }\n    }\n    for (int i = S.size() - K; i < S.size(); i++) {\n      if (S[i] != '+') {\n        return -1;\n      }\n    }\n    return cost;\n  }\n\n  void init() {}\n  void read() { cin >> S >> K; }\n\n  void write(int cn) {\n    cout << \"Case #\" << cn << \": \";\n    int s = solve();\n    if (s == -1) {\n      cout << \"IMPOSSIBLE\";\n    } else {\n      cout << s;\n    }\n    cout << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  int N, P;\n  int R[51];\n  int Q[51][51];\n\n  tuple<int, int> get_min_max_servings(int r, int q) {\n    \/\/ r units required for a serving\n    \/\/ q in a package.\n    int min_s = 2000000000, max_s = -1;\n    for (int s = 1; s <= 10000000; s++) {\n      \/\/ 10000000000000\n      int64 rr = r * (int64)s;\n      \/\/ is:   ( 0.9 rr <= q <= 1.1 rr) ?\n      \/\/ (0.9 rr <= q)\n      \/\/ (9 * rr <= q * 10)\n\n      \/\/ (q <= 1.1 rr)\n      \/\/ (10q <= 11)\n      if (9 * rr <= 10 * q && 10 * q <= 11 * rr) {\n        min_s = std::min(min_s, s);\n        max_s = std::max(max_s, s);\n      }\n    }\n    return make_tuple(min_s, max_s);\n  }\n\n  int min_s[51][51];\n  int max_s[51][51];\n\n  int solve1() {\n    int c = 0;\n    for (int i = 0; i < P; i++) {\n      if (min_s[0][i] <= max_s[0][i]) {\n        c++;\n      }\n    }\n    return c;\n  }\n\n  bool intersect(int a, int b, int c, int d) {\n\n    \/\/ do intervals [a,b] and [c,d] intersect?\n    if (a <= c && c <= b) {\n      return true;\n    }\n    if (c <= b && b <= d) {\n      return true;\n    }\n    \/\/ sixth mistake : forgetting these other cases:\n    if (a <= d && d <= b) {\n      return true;\n    }\n    if (c <= a && a <= d) {\n      return true;\n    }\n\n    return false;\n  }\n\n  int solve2() {\n    int dp[1 << P];\n    dp[0] = 0;\n    for (int mask = 1; mask < (1 << P); mask++) {\n      int i = P - __builtin_popcount(mask);\n      \/\/ match package #i of first product with something available\n      dp[mask] = 0;\n      for (int j = 0; j < P; j++) {\n        if (mask & (1 << j)) {\n          dp[mask] = std::max(dp[mask], dp[mask ^ (1 << j)]);\n        }\n      }\n\n      for (int j = 0; j < P; j++) {\n        if (mask & (1 << j)) {\n          \/\/ third mistake, forgot to move this inside the else .-.\n          if (intersect(min_s[0][i], max_s[0][i], min_s[1][j], max_s[1][j])) {\n            dp[mask] = std::max(dp[mask], 1 + dp[mask ^ (1 << j)]);\n          }\n        }\n      }\n      \/\/ cout << \"dp[\"<<mask<<\"] = \"<<dp[mask]<<endl;\n    }\n    return dp[(1 << P) - 1];\n  }\n\n  int solve() {\n    assert(N <= 2);\n    for (int i = 0; i < N; i++) {\n      \/\/ cout << i << \":\"<<endl;\n      for (int j = 0; j < P; j++) {\n        tie(min_s[i][j], max_s[i][j]) = get_min_max_servings(R[i], Q[i][j]);\n        \/\/ cout << \" \" << min_s[i][j] << \" \" << max_s[i][j]<< endl;\n      }\n    }\n\n    if (N == 1) {\n      \/\/ \"simple\"...\n      return solve1();\n    } else {\n      return solve2();\n    }\n  }\n  void init() {}\n  void read() {\n    cin >> N >> P;\n    for (int i = 0; i < N; i++) {\n      cin >> R[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> Q[i][j];\n      }\n    }\n  }\n\n  void write(int cn) {\n    int x = solve();\n    cout << \"Case #\" << cn << \": \" << x << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  template <class A, class B> void fill_thing(A &collection, B default_value) {\n    B p = default_value;\n    for (int i = 0; i < collection.size(); i++) {\n      if (collection[i] != default_value) {\n        p = collection[i];\n      } else {\n        collection[i] = p;\n      }\n    }\n    p = default_value;\n    for (int i = collection.size() - 1; i >= 0; i--) {\n      if (collection[i] != default_value) {\n        p = collection[i];\n      } else {\n        collection[i] = p;\n      }\n    }\n  }\n\n  vector<string> solve(vector<string> board) {\n    int n = board.size(), m = board[0].size();\n    for (string &row : board) {\n      if (count(row.begin(), row.end(), '?') < m) {\n        fill_thing(row, '?');\n      }\n    }\n    fill_thing(board, string(m, '?'));\n    return board;\n  }\n  void init() {}\n  vector<string> board;\n  void read() {\n    int R, C;\n    cin >> R >> C;\n    board = vector<string>(R, string(C, '?'));\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        cin >> board[i][j];\n      }\n    }\n  }\n\n  void write(int cn) {\n    cout << \"Case #\" << cn << \":\" << endl;\n    auto v = solve(board);\n    for (string &s : v) {\n      cout << s << endl;\n    }\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  int D, N;\n  vector<int> K, S;\n\n  double intersectPoint(double x0, double m0, double x1, double m1) {\n    if (m0 == m1) {\n      \/\/ they'll never cross\n      return 1e100;\n    }\n    \/\/ x = x0 + y*m0\n    \/\/ x = x1 + y*m1\n    \/\/ 0 = (x0 - x1) + (m0 - m1)*y\n    \/\/ y = (x1 - x0) \/ (m0 - m1)\n    double y = (x1 - x0) \/ (m0 - m1);\n    return x0 + y * m0;\n  }\n  bool validSpeed(double v) {\n    for (int i = 0; i < N; i++) {\n      double w = intersectPoint(0, v, K[i], S[i]);\n      if (0.0 <= w && w < D) {\n        \/\/ cout << \"speed \"<<v<<\" is invalid for horse \"<<i<<endl;\n        \/\/ cout<< \"w = \"<<w<<endl;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  double solve() {\n    double lo = 0.0;  \/\/ P(lo) is true\n    double hi = 1e30; \/\/ P(hi) is false\n    for (int i = 0; i < 100000; i++) {\n      double ha = (lo + hi) \/ 2;\n      if (validSpeed(ha)) {\n        lo = ha;\n      } else {\n        hi = ha;\n      }\n    }\n    return lo;\n  }\n  void init() {}\n  void read() {\n    cin >> D >> N;\n    K.resize(N);\n    S.resize(N);\n    for (int i = 0; i < N; i++) {\n      cin >> K[i] >> S[i];\n    }\n  }\n\n  void write(int cn) {\n    double x = solve();\n    cout << \"Case #\" << cn << \": \";\n    cout.precision(10);\n    cout.setf(ios::fixed, ios::fixed);\n    cout << x << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nconst int MAX = 1001;\nstruct solver {\n  int N;\n  int R, O, Y, G, B, V;\n  char mem[3][MAX][MAX][MAX]; \/\/ we got the RAMs\n  char s;\n\n  bool rec(int last, int A, int B, int C) {\n    if ((A < 0) || (B < 0) || (C < 0)) {\n      return 0;\n    }\n    char &res = mem[last][A][B][C];\n    if (res == -1) {\n      res = 0;\n      int p = N - (A + B + C);\n      if (p == N) {\n        \/\/ picked all of them\n        res = 1;\n      } else {\n        for (int i = 0; i < 3; i++) {\n          if ((i != last) && ((p != N - 1) || (i != s))) {\n            if (rec(i, A - (i == 0), B - (i == 1), C - (i == 2))) {\n              res = 1;\n            }\n          }\n        }\n      }\n    }\n    return res;\n  }\n  string solve() {\n    assert(O == 0);\n    assert(G == 0);\n    assert(V == 0);\n    if (R != 0) {\n      R--;\n      s = 0;\n    } else if (Y != 0) {\n      Y--;\n      s = 2;\n    } else if (B != 0) {\n      B--;\n      s = 1;\n    }\n    memset(mem, -1, sizeof(mem));\n    if (rec(s, R, B, Y)) {\n      \/\/ build it\n      string res(N, '?');\n      const string chars = \"RBY\";\n      res[0] = chars[s];\n      int last = s;\n      int A = R, C = Y;\n      for (int p = 1; p < N; p++) {\n        for (int i = 0; i < 3; i++) {\n          if ((i != last) && ((p != N - 1) || (i != s))) {\n            \/\/ try it\n            if (rec(i, A - (i == 0), B - (i == 1), C - (i == 2))) {\n              \/\/ a valid one\n              res[p] = chars[i];\n              last = i;\n              A -= (i == 0);\n              B -= (i == 1);\n              C -= (i == 2);\n              break;\n            }\n          }\n        }\n        assert(res[p] != '?');\n      }\n      return res;\n    } else {\n      return \"IMPOSSIBLE\";\n    }\n  }\n  void init() {}\n  void read() { cin >> N >> R >> O >> Y >> G >> B >> V; }\n\n  void write(int cn) {\n    string s = solve();\n    cout << \"Case #\" << cn << \": \" << s << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"vexorian","func":"\n\n#include <bits\/stdc++.h>\n#include <sys\/stat.h>\n#include <unistd.h>\n\/\/ http:\/\/gmplib.org\/ (uncomment if solution uses big nums)\n\/\/ most likely you'll get an error about mpz_class not being declared...\n\/\/#include \"gmpxx.h\"\n\n\/\/ I figure that when other people want to test my solutions they shouldn't\n\/\/ get the whole multi-threaded mess that requires and deletes folders and\n\/\/ files...\n\ntypedef long long int64;\n\nusing namespace std;\n\n\/\/=========================================================\n\/\/ program:\n\/\/\nstruct solver {\n  int N, Q;\n  vector<int> E, S;\n  int D[101][101];\n  int U[101];\n  int V[101];\n\n  double solve() {\n    assert(U[0] == 1);\n    assert(V[0] == N);\n    assert(Q == 1);\n\n    \/\/ from city 0 to N-1 ...\n    double dp[100][100];\n    for (int i = 0; i < N; i++) {\n      dp[N - 1][i] = 0.0;\n    }\n    for (int j = N - 2; j >= 0; j--) {\n      for (int h = 0; h <= j; h++) {\n        int64 traveled = 0;\n        for (int i = h; i < j; i++) {\n          traveled += D[i][i + 1];\n        }\n        dp[j][h] = dp[j + 1][j] + D[j][j + 1] \/ (double)S[j]; \/\/ switch horse\n        \/\/ keep the horse\n        if (traveled + D[j][j + 1] <= E[h]) {\n          dp[j][h] =\n              std::min(dp[j][h], D[j][j + 1] \/ (double)S[h] + dp[j + 1][h]);\n        }\n      }\n    }\n    return dp[0][0];\n  }\n  void init() {}\n  void read() {\n    cin >> N >> Q;\n    E.resize(N);\n    S.resize(N);\n    for (int i = 0; i < N; i++) {\n      cin >> E[i] >> S[i];\n    }\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> D[i][j];\n      }\n    }\n    for (int i = 0; i < Q; i++) {\n      cin >> U[i] >> V[i];\n    }\n  }\n\n  void write(int cn) {\n    double r = solve();\n    cout << \"Case #\" << cn << \": \";\n    cout.precision(10);\n    cout.setf(ios::fixed, ios::fixed);\n    cout << r << endl;\n  }\n};\n\n\/\/=========================================================\n\/\/ I\/O:\n\/\/\nint main(int argc, const char *argv[]) {\n  int TestCases, mode;\n\n  \/\/ Simple and straight forward.\n  cin >> TestCases;\n  solver *theSolver = new solver;\n  theSolver->init();\n  for (int i = 1; i <= TestCases; i++) {\n    theSolver->read();\n    theSolver->write(i);\n  }\n  delete theSolver;\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <string>\n\nusing namespace std;\nint len;\nint a[30];\nchar str[30];\nbool check(int pos) {\n  for (int i = 1; i <= pos; i++)\n    if (a[i] < a[i - 1])\n      return false;\n  return true;\n}\nvoid dfs(int pos) {\n  if (pos >= len)\n    return;\n  if (pos == 0)\n    return;\n  while (a[pos] < a[pos - 1]) {\n    if (a[pos - 1] == 0)\n      dfs(pos - 1);\n    else\n      a[pos - 1]--;\n    if (!check(pos - 1))\n      dfs(pos - 1);\n    for (int i = pos; i < len; i++)\n      a[i] = 9;\n  }\n  dfs(pos + 1);\n}\nint main() {\n\n  int T_T;\n  scanf(\"%d\", &T_T);\n  for (int T = 1; T <= T_T; T++) {\n    scanf(\"%s\", str);\n    len = strlen(str);\n    for (int i = 0; i < len; i++)\n      a[i] = str[i] - '0';\n    dfs(1);\n    printf(\"Case #%d: \", T);\n    bool f = true;\n    for (int i = 0; i < len; i++) {\n      if (f && a[i] == 0)\n        continue;\n      f = false;\n      putchar(a[i] + '0');\n    }\n    putchar(10);\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <string>\n\nusing namespace std;\nlong long n, k, tmp;\nint a[30];\n\nlong long b[2], cnt[2];\nlong long p, q, cp, cq;\nint now;\nint main() {\n\n  int T_T;\n  scanf(\"%d\", &T_T);\n  for (int T = 1; T <= T_T; T++) {\n    scanf(\"%lld%lld\", &n, &k);\n    int top = 1;\n    while (n >= (1 << top))\n      top++;\n    int len = 0;\n    tmp = k;\n    while (tmp)\n      a[++len] = (tmp & 1) ? 1 : 0, tmp >>= 1;\n    if (len >= top) {\n      printf(\"Case #%d: 0 0\\n\", T);\n      continue;\n    }\n    b[0] = n;\n    cnt[0] = 1;\n    now = 1;\n\n    \/\/        cout<<now<<\"--\"<<b[0]<<\" \"<<cnt[0]<<\"     \"<<b[1]<<\"\n    \/\/        \"<<cnt[1]<<endl;\n    for (int i = len - 1; i >= 1; i--) {\n      p = b[0];\n      cp = cnt[0];\n      q = b[1];\n      cq = cnt[1];\n      int pre = now;\n\n      if (p % 2) {\n        now = 1;\n        b[0] = (p - 1) >> 1;\n        cnt[0] = cp << 1;\n        b[1] = -1;\n        cnt[1] = 0;\n      } else {\n        now = 2;\n        b[0] = p >> 1;\n        cnt[0] = cp;\n        b[1] = b[0] - 1;\n        cnt[1] = cp;\n      }\n\n      if (pre == 2 && q != 0) {\n        if (q % 2) {\n          cnt[now - 1] += cq << 1;\n        } else {\n          now = 2;\n          cnt[0] += cq;\n          b[1] = b[0] - 1;\n          cnt[1] = cq;\n        }\n      }\n      \/\/            cout<<now<<\"--\"<<b[0]<<\" \"<<cnt[0]<<\"     \"<<b[1]<<\"\n      \/\/            \"<<cnt[1]<<endl;\n    }\n    k -= (1 << len - 1) - 1;\n    \/\/        cout<<k<<endl;\n\n    tmp = (cnt[0] < k) ? b[1] : b[0];\n    \/\/        cout<<tmp<<endl;\n    if (tmp % 2) {\n      p = (tmp - 1) >> 1;\n      q = (tmp - 1) >> 1;\n    } else {\n      p = tmp >> 1;\n      q = (tmp - 1) >> 1;\n    }\n    printf(\"Case #%d: %lld %lld\\n\", T, p, q);\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst int maxn = 1010;\nint n, K, len;\nchar str[maxn];\nint dir[maxn], f[maxn];\nint calc() {\n  memset(f, 0, sizeof(f));\n  int res = 0, sum = 0;\n  for (int i = 0; i + K <= len; i++) {\n    \/\/        cout<<i<<\" \"<<((dir[i]+sum)&1)<<\" \"<<f[i]<<\" \"<<sum<<endl;\n    if ((dir[i] + sum) & 1)\n      res++, f[i] = 1, sum++;\n    \/\/        cout<<f[i]<<\" \"<<sum<<endl;\n    if (i - K + 1 >= 0)\n      sum -= f[i - K + 1];\n  }\n  for (int i = len - K + 1; i < len; i++) {\n    \/\/        cout<<i<<\" \"<<((dir[i]+sum)&1)<<\" \"<<f[i]<<\" \"<<sum<<endl;\n    if ((dir[i] + sum) & 1)\n      return -1;\n    \/\/        cout<<f[i]<<\" \"<<sum<<endl;\n    if (i - K + 1 >= 0)\n      sum -= f[i - K + 1];\n  }\n  return res;\n}\n\nint main() {\n  \/\/    freopen(\"A-small-attempt3.in\",\"r\",stdin);\n  \/\/    freopen(\"A-small-attempt3.out\",\"w\",stdout);\n  int T_T;\n  scanf(\"%d\", &T_T);\n  for (int T = 1; T <= T_T; T++) {\n    scanf(\"%s\", str);\n    len = strlen(str);\n    for (int i = 0; i < len; i++)\n      dir[i] = (str[i] == '-') ? 1 : 0;\n    \/\/        for (int i=0;i<len;i++) cout<<dir[i];cout<<endl;\n    scanf(\"%d\", &K);\n    int ans = calc();\n    if (ans == -1)\n      printf(\"Case #%d: IMPOSSIBLE\\n\", T);\n    else\n      printf(\"Case #%d: %d\\n\", T, ans);\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst int maxn = 410;\nconst int maxm = 20010;\nconst int INF = 0x3f3f3f3f;\ntemplate <typename T> inline void read(T &x) {\n  x = 0;\n  bool f = false;\n  char ch = getchar();\n  while (ch < '0' || '9' < ch) {\n    if (ch == '-')\n      f = !f;\n    ch = getchar();\n  }\n  while ('0' <= ch && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  if (f)\n    x = -x;\n}\nconst int N = 60;\nstruct node {\n  int x, y;\n  node() {}\n  node(int _x, int _y) {\n    x = _x;\n    y = _y;\n  }\n  bool operator<(const node &t) const {\n    return (x == t.x) ? (y < t.y) : (x < t.x);\n  }\n  void output() { cout << \"(\" << x << \",\" << y << \")\\t\"; }\n} pack[N][N];\nint n, p, a[N], value[N][N], ans;\nint pos[N];\nvoid input() {\n  read(n);\n  read(p);\n  for (int i = 1; i <= n; i++)\n    read(a[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= p; j++)\n      read(value[i][j]);\n}\nvoid pre() {\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= p; j++) {\n      int tmpx = floor(1.0 * value[i][j] \/ 0.9 \/ a[i]);\n      int tmpy = ceil(1.0 * value[i][j] \/ 1.1 \/ a[i]);\n      \/\/            cout<<value[i][j]<<\" \"<<a[i]<<\"   \"<<tmpx<<\" \"<<tmpy<<endl;\n      if (tmpy <= tmpx)\n        pack[i][j] = node(tmpy, tmpx);\n      else\n        pack[i][j] = node(-1, -1);\n    }\n    sort(pack[i] + 1, pack[i] + 1 + p);\n  }\n  \/\/    for (int i=1;i<=n;i++)\n  \/\/    {\n  \/\/        for (int j=1;j<=p;j++) pack[i][j].output();\n  \/\/        cout<<endl;\n  \/\/    }\n}\nvoid work() {\n  for (int i = 1; i <= n; i++)\n    pos[i] = 1;\n  int nowk = 1;\n  bool flag = true;\n  while (flag) {\n    for (int i = 1; i <= n; i++) {\n      int q = pos[i];\n      while (q <= p && pack[i][q].y < nowk)\n        q++;\n      pos[i] = q;\n      if (q > p) {\n        flag = false;\n        break;\n      }\n    }\n    if (!flag)\n      break;\n    bool f = true;\n    for (int i = 1; i <= n; i++) {\n      if (pack[i][pos[i]].x <= nowk && pack[i][pos[i]].y >= nowk)\n        continue;\n      else\n        f = false;\n      break;\n    }\n    if (f) {\n      ans++;\n      for (int i = 1; i <= n; i++)\n        pos[i]++;\n    } else\n      nowk++;\n  }\n}\nint main() {\n\n  int T_T;\n  scanf(\"%d\", &T_T);\n  for (int T = 1; T <= T_T; T++) {\n    input();\n    pre();\n    ans = 0;\n    work();\n    printf(\"Case #%d: %d\\n\", T, ans);\n  }\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <string>\n\nusing namespace std;\nconst int N = 30;\nint n, m;\nchar str[N][N];\nbool flag;\nvoid FILL(int ki, int kj, int li, int lj, char ch) {\n  for (int k = ki; k <= kj; k++)\n    for (int l = li; l <= lj; l++)\n      str[k][l] = ch;\n}\nint main() {\n\n  int T_T;\n  scanf(\"%d\", &T_T);\n  for (int T = 1; T <= T_T; T++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", str[i]);\n    int last = 0, i, j, lj;\n    for (i = 0; i < n; i++) {\n      flag = false;\n      lj = 0;\n      for (j = 0; j < m; j++) {\n        if (str[i][j] != '?') {\n          flag = true;\n          FILL(last, i, lj, j, str[i][j]);\n          lj = j + 1;\n        }\n      }\n      if (flag && lj < m) {\n        FILL(last, i, lj, m - 1, str[i][lj - 1]);\n      }\n      if (flag)\n        last = i + 1;\n    }\n    if (last < n) {\n      for (int k = last; k < n; k++)\n        for (int l = 0; l < m; l++)\n          str[k][l] = str[last - 1][l];\n    }\n    printf(\"Case #%d:\\n\", T);\n    for (int i = 0; i < n; i++)\n      printf(\"%s\\n\", str[i]);\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int N = 1200;\nint T_T;\nint d, n;\nint k[N], s[N];\ntemplate <typename T> inline void read(T &x) {\n  x = 0;\n  bool f = false;\n  char ch = getchar();\n  while (ch < '0' || '9' < ch) {\n    if (ch == '-')\n      f = !f;\n    ch = getchar();\n  }\n  while ('0' <= ch && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  if (f)\n    x = -x;\n}\nint main() {\n\n  read(T_T);\n  for (int T = 1; T <= T_T; T++) {\n    read(d);\n    read(n);\n    for (int i = 1; i <= n; i++)\n      read(k[i]), read(s[i]);\n    double ans = 0.0;\n    for (int i = 1; i <= n; i++)\n      ans = max(ans, 1.0 * (d - k[i]) \/ s[i]);\n    printf(\"Case #%d: %.6lf\\n\", T, (double)d \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst char ch[10] = {'*', 'R', 'B', 'Y', 'G', 'O', 'V'};\ntemplate <typename T> inline void read(T &x) {\n  x = 0;\n  bool f = false;\n  char ch = getchar();\n  while (ch < '0' || '9' < ch) {\n    if (ch == '-')\n      f = !f;\n    ch = getchar();\n  }\n  while ('0' <= ch && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  if (f)\n    x = -x;\n}\nint n, m, t, a[10], ans[2000], r, o, y, g, b, v;\nint main() {\n\n  int T_T;\n  read(T_T);\n  for (int T = 1; T <= T_T; T++) {\n    read(n);\n    read(r);\n    read(o);\n    read(y);\n    read(g);\n    read(b);\n    read(v);\n    a[1] = r;\n    a[2] = b;\n    a[3] = y;\n    m = 0;\n    bool flag = true;\n    if (a[1] > 0) {\n      ans[++m] = 'R';\n      a[1]--;\n      t = 1;\n    } else if (a[2] > 0) {\n      ans[++m] = 'B';\n      a[2]--;\n      t = 2;\n    } else {\n      ans[++m] = 'Y';\n      a[3]--;\n      t = 3;\n    }\n    while (a[1] > 0 || a[2] > 0 || a[3] > 0) {\n      int x = t + 1, y = t - 1;\n      if (x > 3)\n        x = 1;\n      if (y == 0)\n        y = 3;\n      if (a[x] == 0 && a[y] == 0) {\n        flag = false;\n        break;\n      }\n      if (a[x] > a[y] || a[x] == a[y] && ch[x] == ch[1])\n        ans[++m] = ch[x], a[x]--, t = x;\n      else\n        ans[++m] = ch[y], a[y]--, t = y;\n    }\n    if (ans[1] == ans[m])\n      flag = false;\n    printf(\"Case #%d: \", T);\n    if (!flag)\n      printf(\"IMPOSSIBLE\\n\");\n    else {\n      for (int i = 1; i <= m; i++)\n        printf(\"%c\", ans[i]);\n      putchar('\\n');\n    }\n  }\n  return 0;\n}\n"}
{"target":"VGel","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\nconst double DINF = (double)1e50;\nconst long long LINF = (long long)1e18;\nconst int N = 110;\ntemplate <typename T> inline void read(T &x) {\n  x = 0;\n  bool f = false;\n  char ch = getchar();\n  while (ch < '0' || '9' < ch) {\n    if (ch == '-')\n      f = !f;\n    ch = getchar();\n  }\n  while ('0' <= ch && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  if (f)\n    x = -x;\n}\ninline void MIN(long long &x, long long y) {\n  if (y < x)\n    x = y;\n}\nint n, q, x, E[N], S[N];\nlong long G[N][N];\ndouble ans[N][N], dis[N];\nbool inq[N];\nqueue<int> Q;\nvoid spfa(int st, double *c) {\n  while (!Q.empty())\n    Q.pop();\n  for (int i = 1; i <= n; i++)\n    c[i] = DINF;\n\n  c[st] = 0.0;\n  inq[st] = true;\n  Q.push(st);\n  while (!Q.empty()) {\n    int u = Q.front();\n    Q.pop();\n    inq[u] = false;\n    for (int i = 1; i <= n; i++) {\n      if (G[u][i] > E[u])\n        continue;\n      double ti = (double)G[u][i] \/ S[u];\n      if (c[i] > ti + c[u]) {\n        c[i] = ti + c[u];\n        if (!inq[i])\n          inq[i] = 1, Q.push(i);\n      }\n    }\n  }\n}\nint main() {\n\n  int T_T;\n  read(T_T);\n  for (int T = 1; T <= T_T; T++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      read(E[i]), read(S[i]);\n\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        read(x);\n        if (x == -1)\n          G[i][j] = LINF;\n        else\n          G[i][j] = x;\n      }\n\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          MIN(G[i][j], G[i][k] + G[k][j]);\n\n    for (int i = 1; i <= n; i++)\n      spfa(i, ans[i]);\n\n    printf(\"Case #%d:\", T);\n    while (q--) {\n      int st, ed;\n      read(st), read(ed);\n      printf(\" %.10lf\", ans[st][ed]);\n    }\n    putchar('\\n');\n  }\n  return 0;\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nbool is_valid(const string &s) {\n  for (size_t i = 1; i < s.size(); ++i)\n    if (s[i] < s[i - 1])\n      return false;\n  return true;\n}\n\nstring solve(string s) {\n  if (is_valid(s))\n    return s;\n  ll n = s.size();\n  for (ll i = n - 1; i > 0; --i) {\n    if (s[i] < s[i - 1]) {\n      s[i - 1] -= 1;\n      for (ll j = i; j < n; ++j)\n        s[j] = '9';\n    }\n  }\n  for (ll i = 0; i < n; ++i)\n    if (s[i] != '0') {\n      s = s.substr(i);\n      break;\n    }\n  assert(is_valid(s));\n  return s;\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  string n;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cin >> n;\n    cout << \"Case #\" << t + 1 << \": \" << solve(n) << '\\n';\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\npair<ll, ll> solve_naive(ll n, ll k) {\n  vector<char> u(n + 2);\n  u[0] = u[n + 1] = 1;\n  ll last_ls = -1, last_rs = -1;\n  for (ll i = 0; i < k; ++i) {\n    ll index = -1, dist = -1, dist_max = -1;\n    for (ll i = 1; i <= n; ++i) {\n      if (u[i])\n        continue;\n      ll ls = i, rs = i;\n      while (!u[ls])\n        --ls;\n      while (!u[rs])\n        ++rs;\n      ll d_min = min(i - ls, rs - i);\n      ll d_max = max(i - ls, rs - i);\n      if (index == -1 || dist < d_min || (dist == d_min && dist_max < d_max)) {\n        dist = d_min;\n        dist_max = d_max;\n        index = i;\n        last_ls = i - ls - 1;\n        last_rs = rs - i - 1;\n      }\n    }\n    u[index] = 1;\n  }\n  return make_pair(max(last_ls, last_rs), min(last_ls, last_rs));\n}\n\nll power(ll n) {\n  for (ll i = 1;; i *= 2)\n    if (i > n)\n      return i;\n  return 0;\n}\n\npair<ll, ll> solve(ll n, ll k) {\n  ll first = 0, second = 0;\n  ll pwr = power(k);\n  ll m = k - pwr \/ 2;\n  first = (n - m) \/ pwr;\n  second = (n - k) \/ pwr;\n  return make_pair(first, second);\n}\n\nvoid solution() {\n  \/*\n  const int N = 500;\n  cout << \"   k:  | \";\n  for (int k = 1; k <= N; ++k)\n      cout << setw(4) << k << \"    |\";\n  cout << endl;\n  cout << \"-------+-\";\n  for (int k = 1; k <= N; ++k)\n      cout << \"----\" << \"----+\";\n  cout << endl;\n  for (int n = 1; n <= N; ++n)\n  {\n      cout << \"n: \" << setw(3) << n << \" | \";\n      for (int k = 1; k <= n; ++k)\n      {\n          pair<int,int> ans = solve_naive(n, k);\n          pair<int,int> ans2 = solve(n, k);\n          if (ans2 != ans)\n          {\n              cerr << \"FAIL\" << n << \" \" << k << endl;\n          }\n          cout << setw(4) << ans.first << setw(4) << ans.second << \"|\";\n      }\n      cout << endl;\n  }\n  return;\n  *\/\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    ll n, k;\n    cin >> n >> k;\n    pair<ll, ll> ans = solve(n, k);\n    cout << \"Case #\" << t + 1 << \": \" << ans.first << \" \" << ans.second << '\\n';\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    string s;\n    ll n, k;\n    cin >> s >> k;\n    cerr << t + 1 << endl;\n    cout << \"Case #\" << t + 1 << \": \";\n    n = s.size();\n    ll ans = 0;\n    for (ll i = 0; i < n - k + 1; ++i)\n      if (s[i] != '+') {\n        ++ans;\n        for (ll j = 0; j < k; ++j)\n          if (s[i + j] == '+')\n            s[i + j] = '-';\n          else\n            s[i + j] = '+';\n      }\n    bool ok = true;\n    for (ll i = 0; i < n; ++i)\n      if (s[i] != '+')\n        ok = false;\n    if (ok)\n      cout << ans;\n    else\n      cout << \"IMPOSSIBLE\";\n    cout << endl;\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nll n, m, a[64], b[64][64], b_min[64][64], b_max[64][64], p[64];\n\npair<ll, ll> f(ll x, ll y) {\n  pair<ll, ll> r(x \/ y, x \/ y);\n\n  while (r.first > 0 && (r.first - 1) * y * 110 >= x * 100)\n    --r.first;\n  while (r.first * y * 110 < x * 100)\n    ++r.first;\n\n  while ((r.second + 1) * y * 90 <= x * 100)\n    ++r.second;\n  while (r.second * y * 90 > x * 100)\n    --r.second;\n  return r;\n}\n\nll solve() {\n  for (ll i = 0; i < n; ++i)\n    sort(b[i], b[i] + m);\n  for (ll i = 0; i < n; ++i)\n    for (ll j = 0; j < m; ++j) {\n      auto r = f(b[i][j], a[i]);\n      b_min[i][j] = r.first;\n      b_max[i][j] = r.second;\n    }\n  ll ans = 0;\n  for (ll i = 0; i < n; ++i)\n    p[i] = 0;\n  \/*\n  cerr << \"n: \" << n << \" m: \" << m << endl;\n  for (int i = 0; i < n; ++i)\n      cerr << \" \" << a[i];\n  cerr << endl;\n  cerr << \"b: \" << endl;\n  for (int i = 0; i < n; ++i, cerr << endl)\n      for (int j = 0; j < m; ++j)\n          cerr << b[i][j] << \" \";\n  cerr << endl;\n  for (int i = 0; i < n; ++i, cerr << endl)\n      for (int j = 0; j < m; ++j)\n          cerr << b_min[i][j] << \"\/\" << b_max[i][j] << \" \";\n  cerr << endl;\n  *\/\n  for (;;) {\n    bool fnd = false;\n    for (ll i = 0; i < n; ++i)\n      if (p[i] >= m)\n        fnd = true;\n    if (fnd)\n      break;\n    ll a_min = b_min[0][p[0]], a_max = b_max[0][p[0]];\n    for (ll i = 0; i < n; ++i) {\n      a_min = max(a_min, b_min[i][p[i]]);\n      a_max = min(a_max, b_max[i][p[i]]);\n    }\n    if (a_min <= a_max) {\n      ++ans;\n      for (ll i = 0; i < n; ++i)\n        ++p[i];\n    } else {\n      for (ll i = 0; i < n; ++i)\n        if (b_max[i][p[i]] < a_min)\n          ++p[i];\n    }\n  }\n  return ans;\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cin >> n >> m;\n    for (ll i = 0; i < n; ++i)\n      cin >> a[i];\n    for (ll i = 0; i < n; ++i)\n      for (ll j = 0; j < m; ++j)\n        cin >> b[i][j];\n    cout << \"Case #\" << t + 1 << \": \" << solve() << \"\\n\";\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nll n, m;\nchar a[32][32], b[32][32];\nstruct node {\n  ll x0, y0, x1, y1;\n  node() : x0(32), y0(32), x1(-1), y1(-1) {}\n  void apply(char ch) {\n    for (ll x = x0; x <= x1; ++x)\n      for (ll y = y0; y <= y1; ++y)\n        b[x][y] = ch;\n  }\n} c[256];\n\nvoid solve() {\n  for (ll i = 0; i < 256; ++i)\n    c[i] = node();\n  for (ll i = 0; i < n; ++i)\n    for (ll j = 0; j < m; ++j) {\n      b[i][j] = '?';\n      ll t = a[i][j];\n      c[t].x0 = min(c[t].x0, i);\n      c[t].y0 = min(c[t].y0, j);\n      c[t].x1 = max(c[t].x1, i);\n      c[t].y1 = max(c[t].y1, j);\n    }\n  for (ll i = 0; i < 256; ++i) {\n    if (c[i].x1 == -1)\n      continue;\n    c[i].apply(i);\n  }\n  for (ll i = 0; i < 256; ++i) {\n    if (c[i].x1 == -1)\n      continue;\n    for (;;) {\n      \/*\n      for (int x = 0; x < n; ++x, cerr << endl)\n          for (int y = 0; y < m; ++y)\n              cerr << b[x][y];\n      cerr << endl;\n      *\/\n      bool fnd = false;\n      if (c[i].y0 > 0) {\n        bool all = true;\n        for (ll x = c[i].x0; x <= c[i].x1; ++x)\n          if (b[x][c[i].y0 - 1] != '?')\n            all = false;\n        if (all) {\n          --c[i].y0;\n          c[i].apply(i);\n          fnd = true;\n        }\n      }\n      if (c[i].x0 > 0) {\n        bool all = true;\n        for (ll y = c[i].y0; y <= c[i].y1; ++y)\n          if (b[c[i].x0 - 1][y] != '?')\n            all = false;\n        if (all) {\n          --c[i].x0;\n          c[i].apply(i);\n          fnd = true;\n        }\n      }\n      if (c[i].y1 < m - 1) {\n        bool all = true;\n        for (ll x = c[i].x0; x <= c[i].x1; ++x)\n          if (b[x][c[i].y1 + 1] != '?')\n            all = false;\n        if (all) {\n          ++c[i].y1;\n          c[i].apply(i);\n          fnd = true;\n        }\n      }\n      if (c[i].x1 < n - 1) {\n        bool all = true;\n        for (ll y = c[i].y0; y <= c[i].y1; ++y)\n          if (b[c[i].x1 + 1][y] != '?')\n            all = false;\n        if (all) {\n          ++c[i].x1;\n          c[i].apply(i);\n          fnd = true;\n        }\n      }\n      if (!fnd)\n        break;\n    }\n  }\n  for (ll i = 0; i < n; ++i) {\n    for (ll j = 0; j < m; ++j)\n      cout << (char)b[i][j];\n    cout << '\\n';\n  }\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cout << \"Case #\" << t + 1 << \":\\n\";\n    cin >> n >> m;\n    for (ll i = 0; i < n; ++i)\n      for (ll j = 0; j < m; ++j)\n        cin >> a[i][j];\n    solve();\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nll n, d;\nstruct horse {\n  ll x, s;\n} h[1024];\n\nbool operator<(const horse &a, const horse &b) {\n  if (a.x != b.x)\n    return a.x < b.x;\n  return a.s > b.s;\n}\n\nvoid solve() {\n  sort(h, h + n);\n  double t_max = 0.0;\n  for (ll i = 0; i < n; ++i) {\n    double t = double(d - h[i].x) \/ double(h[i].s);\n    t_max = max(t_max, t);\n  }\n  cout << fixed << double(d) \/ t_max;\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  cout.precision(9);\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cout << \"Case #\" << t + 1 << \": \";\n    cin >> d >> n;\n    for (ll i = 0; i < n; ++i)\n      cin >> h[i].x >> h[i].s;\n    solve();\n    cout << '\\n';\n  }\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nll n;\npair<ll, ll> c[6], t[6];\nstring alpha = \"ROYGBV\";\n\nbool is_good(const string &s) {\n  for (ll i = 1; i < (ll)s.size(); ++i)\n    if (s[i] == s[i - 1])\n      return false;\n  if (s[0] == s.back())\n    return false;\n  return true;\n}\n\nll all_imp = 0;\n\nvoid solve() {\n  sort(c, c + 6);\n  reverse(c, c + 6);\n  if (c[1].first == 0) {\n    ++all_imp;\n    cout << \"IMPOSSIBLE\";\n  } else if (c[2].first == 0) {\n    if (n % 2 == 0) {\n      if (c[0].first == c[1].first) {\n        for (ll i = 0; i < n; ++i)\n          cout << alpha[c[i % 2].second];\n      } else {\n        ++all_imp;\n        cout << \"IMPOSSIBLE\";\n      }\n    } else {\n      ++all_imp;\n      cout << \"IMPOSSIBLE\";\n    }\n  } else if (c[3].first == 0) {\n    if (c[0].first > c[1].first + c[2].first) {\n      ++all_imp;\n      cout << \"IMPOSSIBLE\";\n      return;\n    }\n    string s;\n    s += alpha[c[0].second];\n    --c[0].first;\n    for (ll i = 1; i < n; ++i) {\n      sort(c, c + 6);\n      reverse(c, c + 6);\n      for (ll j = 0; j < 3; ++j)\n        if (alpha[c[j].second] != s[i - 1] && c[j].first > 0) {\n          s += alpha[c[j].second];\n          --c[j].first;\n          break;\n        }\n    }\n    if (is_good(s))\n      cout << s;\n    else {\n      do {\n        if (is_good(s)) {\n          cout << s;\n          return;\n        }\n      } while (next_permutation(s.begin() + max(0ll, n - 10), s.end()));\n      cout << \"IMPOSSIBLE\";\n      ++all_imp;\n    }\n  } else {\n    cout << \"!fail!\";\n  }\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cout << \"Case #\" << t + 1 << \": \";\n    cin >> n;\n    for (ll i = 0; i < 6; ++i) {\n      cin >> c[i].first;\n      c[i].second = i;\n    }\n    solve();\n    cout << '\\n';\n  }\n  cerr << \"a: \" << all_imp << endl;\n}\n"}
{"target":"vladislavbelov","func":"\/*\n * Author: Vladislav Belov\n *\/\n#include <algorithm>\n#include <cassert>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid solution();\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  solution();\n\n  return EXIT_SUCCESS;\n}\n\ntypedef long long ll;\n\nll n, q, e[128], s[128], g[128][128];\nll from[128], to[128];\n\ndouble dp[128];\n\nvoid solve() {\n  for (ll i = 0; i < n; ++i)\n    dp[i] = 1e18;\n  dp[0] = 0;\n  for (ll i = 0; i < n; ++i) {\n    double d = 0;\n    for (ll j = i + 1; j < n; ++j) {\n      d += g[j - 1][j];\n      if (fabs(d - e[i]) < 1e-9 || d < e[i]) {\n        dp[j] = min(dp[j], dp[i] + d \/ s[i]);\n      } else {\n        break;\n      }\n    }\n  }\n  cout << setprecision(9) << fixed << dp[n - 1];\n}\n\nvoid solution() {\n  ll T;\n  cin >> T;\n  for (ll t = 0; t < T; ++t) {\n    cerr << t + 1 << endl;\n    cout << \"Case #\" << t + 1 << \": \";\n    cin >> n >> q;\n    for (ll i = 0; i < n; ++i)\n      cin >> e[i] >> s[i];\n    for (ll i = 0; i < n; ++i)\n      for (ll j = 0; j < n; ++j)\n        cin >> g[i][j];\n    for (ll i = 0; i < q; ++i) {\n      cin >> from[i] >> to[i];\n      --from[i];\n      --to[i];\n    }\n    solve();\n    cout << '\\n';\n  }\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nint main() {\n  freopen(\"done3.in\", \"r\", stdin);\n  freopen(\"done3.out\", \"w\", stdout);\n  lld t, k, ans;\n  string x;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> x, k = lld((x).size());\n    for (lld i = k - 2; i >= 0; i--)\n      if (x[i] > x[i + 1]) {\n        x[i]--;\n        for (lld j = i + 1; j < k; j++)\n          x[j] = '9';\n      }\n    ans = stoll(x);\n    cout << \"Case #\" << tt << \": \" << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nlld a[100005], prv[100005], nxt[100005];\nint main() {\n  freopen(\"done5.in\", \"r\", stdin);\n  freopen(\"done5.out\", \"w\", stdout);\n  lld t, n, k, ind, maxm;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> n >> k;\n    priority_queue<lld> pq;\n    pq.push(n);\n    while (k-- > 1) {\n      lld curr = pq.top();\n      pq.pop(), pq.push(curr \/ 2), pq.push(curr - 1 - (curr \/ 2));\n    }\n    lld curr = pq.top(), a1 = (curr \/ 2), a2 = (curr - 1 - (curr \/ 2));\n    cout << \"Case #\" << tt << \": \" << max(a1, a2) << \" \" << min(a1, a2) << endl;\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nint main() {\n  freopen(\"done1.in\", \"r\", stdin);\n  freopen(\"done1.out\", \"w\", stdout);\n  lld t, k, siz, cnt = 0;\n  string x;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> x >> k, siz = lld((x).size()), cnt = 0;\n    for (lld i = 0; i < siz - k + 1; i++)\n      if (x[i] == '-') {\n        x[i] = '+', cnt++;\n        for (lld j = i + 1; j < i + k; j++)\n          x[j] = ((x[j] == '-') ? '+' : '-');\n      }\n    for (lld i = 0; i < siz; i++)\n      if (x[i] == '-') {\n        cnt = -1;\n        break;\n      }\n    cout << \"Case #\" << tt << \": \";\n    if (cnt == -1)\n      cout << \"IMPOSSIBLE\\n\";\n    else\n      cout << cnt << endl;\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nconst int MAXN = (1 << 16);\nlld r[55], q[55][55], dp[MAXN];\nlld check(lld x, lld y) {\n  ldb a1 = floor((ldb)(10 * x) \/ (9 * r[0]));\n  ldb a2 = floor((ldb)(10 * y) \/ (9 * r[1]));\n  ldb a3 = ceil((ldb)(10 * x) \/ (11 * r[0]));\n  ldb a4 = ceil((ldb)(10 * y) \/ (11 * r[1]));\n  ldb m1 = min(a1, a2), m2 = max(a3, a4);\n\n  \/\/ cout<<x<<\" \"<<y<<\" \"<<r[0]<<\" \"<<r[1]<<\" \"<<a1<<\" \"<<a2<<\" \"<<a3<<\"\n  \/\/ \"<<a4<<endl;\n  return (m2 <= m1);\n}\nint main() {\n  freopen(\"234.in\", \"r\", stdin);\n  freopen(\"234.out\", \"w\", stdout);\n  lld t, n, p;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> n >> p;\n    for (lld i = 0; i < n; i++)\n      cin >> r[i];\n    for (lld i = 0; i < n; i++)\n      for (lld j = 0; j < p; j++)\n        cin >> q[i][j];\n    for (lld i = 0; i < MAXN; i++)\n      dp[i] = 0;\n    cout << \"Case #\" << tt << \": \";\n    if (n == 1) {\n      lld cnt = 0;\n      for (lld i = 0; i < p; i++) {\n        ldb a1 = floor((ldb)(10 * q[0][i]) \/ (9 * r[0]));\n        ldb a2 = ceil((ldb)(10 * q[0][i]) \/ (11 * r[0]));\n        cnt += (lld)(a2 <= a1);\n      }\n      cout << cnt << endl;\n    } else if (n == 2) {\n      lld mask = (1 << (2 * p));\n      for (lld i = 0; i < mask; i++) {\n        for (lld j = 0; j < p; j++)\n          for (lld k = p; k < 2 * p; k++) {\n            if (i & (1 << j))\n              if (i & (1 << k)) {\n                dp[i] = max(dp[i], check(q[0][j], q[1][k - p]) +\n                                       dp[i ^ (1 << j) ^ (1 << k)]);\n              }\n          }\n      }\n      cout << dp[mask - 1] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nlld r, c;\nchar a[30][30];\nvoid go(lld x, lld y) {\n  char c = a[x][y];\n  lld l = 1, r = 1;\n  while (1) {\n    if (a[x][y - l] != '?')\n      break;\n    a[x][y - l] = c;\n    l++;\n  }\n  while (1) {\n    if (a[x][y + r] != '?')\n      break;\n    a[x][y + r] = c;\n    r++;\n  }\n}\nint main() {\n  freopen(\"123.in\", \"r\", stdin);\n  freopen(\"1234.out\", \"w\", stdout);\n  lld t;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    for (lld i = 0; i < 30; i++)\n      for (lld j = 0; j < 30; j++)\n        a[i][j] = '-';\n    cin >> r >> c;\n    for (lld i = 1; i < r + 1; i++)\n      for (lld j = 1; j < c + 1; j++)\n        cin >> a[i][j];\n    for (lld i = 1; i < r + 1; i++)\n      for (lld j = 1; j < c + 1; j++)\n        if (a[i][j] >= 'A' and a[i][j] <= 'Z')\n          go(i, j);\n    int ind = -1, flag = 0;\n    for (lld i = 1; i < r + 1; i++) {\n      for (lld j = 1; j < c + 1; j++)\n        if (a[i][j] != '?') {\n          ind = i;\n          flag = 1;\n          break;\n        }\n      if (flag == 1)\n        break;\n    }\n    for (lld i = 1; i < ind; i++) {\n      flag = 0;\n      for (lld j = 1; j < c + 1; j++)\n        if (a[i][j] != '?') {\n          flag = 1;\n          break;\n        }\n      if (flag == 0)\n        for (lld j = 1; j < c + 1; j++)\n          a[i][j] = a[ind][j];\n    }\n    for (lld i = ind; i < r + 1; i++) {\n      flag = 0;\n      for (lld j = 1; j < c + 1; j++)\n        if (a[i][j] != '?') {\n          flag = 1;\n          break;\n        }\n      if (flag == 0)\n        for (lld j = 1; j < c + 1; j++)\n          a[i][j] = a[i - 1][j];\n    }\n    cout << \"Case #\" << tt << \":\\n\";\n    for (lld i = 1; i < r + 1; i++) {\n      for (lld j = 1; j < c + 1; j++)\n        cout << a[i][j];\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nlld k[100005], second[100005];\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n  lld t, n, d;\n  ldb ans;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> d >> n, ans = 1000111000111000111LL;\n    for (lld i = 1; i < n + 1; i++)\n      cin >> k[i] >> second[i],\n          ans = min(ans, ((ldb)(d * second[i]) \/ (d - k[i])));\n    cout << \"Case #\" << tt << \": \" << fixed << setprecision(7) << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\npair<lld, char> a[3];\nint main() {\n  freopen(\"5.in\", \"r\", stdin);\n  freopen(\"6.out\", \"w\", stdout);\n  lld t, n, r, o, y, g, b, v;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    lld curr = 0, sz = 0, flag = 0;\n    string ans = \"\";\n    a[0] = {r, 'R'};\n    a[1] = {y, 'Y'};\n    a[2] = {b, 'B'};\n    sort(a, a + 3), reverse(a, a + 3);\n    while (1) {\n      \/\/ cout<<ans<<\" \"<<curr<<\" \"<<sz<<\" \"<<ans[sz]<<endl;\n      if (a[curr].first) {\n        if (!sz or ans[sz - 1] != a[curr].second)\n          ans += a[curr].second, sz++, a[curr].first--, curr = (curr + 1) % 3;\n        else {\n          flag = 1;\n          break;\n        }\n      } else\n        curr = (curr + 1) % 3;\n      if (a[0].first == 0 and a[1].first == 0 and a[2].first == 0)\n        break;\n    }\n    cout << \"Case #\" << tt << \": \";\n    if (flag == 0)\n      cout << ans << endl;\n    else\n      cout << \"IMPOSSIBLE\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vntshh","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nusing namespace std;\ntypedef long double ldb;\ntypedef long long lld;\nlld powm(lld base, lld exp, lld mod = 1000000007) {\n  lld ans = 1;\n  while (exp) {\n    if (exp & 1)\n      ans = (ans * base) % mod;\n    exp >>= 1, base = (base * base) % mod;\n  }\n  return ans;\n}\ntypedef vector<lld> vlld;\ntypedef pair<lld, lld> plld;\ntypedef map<lld, lld> mlld;\ntypedef set<lld> slld;\n\nvector<plld> adj[105];\nvector<pair<lld, ldb>> a[105];\nlld second[105], e[105], mat[105][105], u, v;\nvoid add(lld x) {\n  queue<plld> q;\n  for (auto i : adj[x])\n    q.push(i);\n  while (!q.empty()) {\n    plld curr = q.front();\n    q.pop();\n    if (curr.second <= e[x]) {\n      ldb tmp = ((ldb)curr.second \/ second[x]);\n      a[x].push_back({curr.first, tmp});\n      for (auto i : adj[curr.first])\n        q.push({i.first, i.second + curr.second});\n    }\n  }\n}\nldb dis[105];\nbool vis[105] = {0};\nclass prioritize {\npublic:\n  bool operator()(pair<lld, ldb> &p1, pair<lld, ldb> &p2) {\n    return p1.second > p2.second;\n  }\n};\nvoid dk(lld source) {\n  priority_queue<pair<lld, ldb>, vector<pair<lld, ldb>>, prioritize> pq;\n  pq.push(make_pair(source, dis[source] = 0));\n  while (!pq.empty()) {\n    pair<lld, ldb> curr = pq.top();\n    pq.pop();\n    if (vis[curr.first])\n      continue;\n    vis[curr.first] = true;\n    for (lld i = 0; i < a[curr.first].size(); i++)\n      if (!vis[a[curr.first][i].first] and\n          a[curr.first][i].second + curr.second < dis[a[curr.first][i].first])\n        pq.push(make_pair(a[curr.first][i].first,\n                          (dis[a[curr.first][i].first] =\n                               a[curr.first][i].second + curr.second)));\n  }\n}\nint main() {\n\n  freopen(\"19.in\", \"r\", stdin);\n  freopen(\"19.out\", \"w\", stdout);\n  lld t, n, q;\n  cin >> t;\n  for (lld tt = 1; tt < t + 1; tt++) {\n    for (lld i = 0; i < 105; i++)\n      adj[i].clear(), a[i].clear();\n    cin >> n >> q;\n    for (lld i = 1; i < n + 1; i++)\n      cin >> e[i] >> second[i];\n    for (lld i = 1; i < n + 1; i++)\n      for (lld j = 1; j < n + 1; j++) {\n        cin >> mat[i][j];\n        if (mat[i][j] != -1)\n          adj[i].push_back({j, mat[i][j]});\n      }\n    for (lld i = 1; i < n + 1; i++)\n      add(i);\n    cout << \"Case #\" << tt << \": \";\n    while (q--) {\n      cin >> u >> v;\n      for (lld i = 1; i < n + 1; i++)\n        vis[i] = 0, dis[i] = 1000111000111000111LL;\n      dk(u);\n      cout << fixed << setprecision(6) << dis[v] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 1e4;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nstring str;\nslong ans;\n\nbool isNonDecreasingNumber(slong x) {\n  vector<int> arr;\n\n  while (x) {\n    arr.push_back(x % 10);\n    x \/= 10;\n  }\n\n  for (int i = 0; i + 1 < arr.size(); i++) {\n    if (arr[i] < arr[i + 1]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvoid tryAll(int index, slong val, bool isSmall) {\n  if (index == str.size()) {\n    ans = max(ans, val);\n  } else {\n    if (isSmall) {\n      tryAll(index + 1, val * 10 + 9, true); \/\/ just try 9 till end\n    } else {\n      int lastdigit = val % 10;\n      int curr = str[index] - '0';\n\n      if (curr >= lastdigit) {\n        tryAll(index + 1, val * 10 + curr, false);\n        if (curr - 1 >= lastdigit) {\n          \/\/ reduced val\n          tryAll(index + 1, val * 10 + (curr - 1), true);\n        }\n      }\n    }\n  }\n}\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> str;\n\n    ans = 0;\n    tryAll(0, 0, false);\n\n    assert(isNonDecreasingNumber(ans));\n\n    cout << \"Case #\" << t << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 1e4;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nslong n, k;\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> n >> k;\n\n    multiset<slong, greater<slong>> data;\n\n    data.insert(n);\n\n    slong a, b;\n\n    while (k--) {\n      auto it = data.begin();\n      slong length = *it;\n\n      data.erase(it);\n\n      if (length % 2) {\n        a = length \/ 2;\n        b = length \/ 2;\n        data.insert(length \/ 2);\n        data.insert(length \/ 2);\n      } else {\n        a = length \/ 2;\n        b = length \/ 2 - 1;\n        data.insert(length \/ 2 - 1);\n        data.insert(length \/ 2);\n      }\n    }\n\n    cout << \"Case #\" << t << \": \" << a << \" \" << b << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 1e4;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nstring str;\nint K;\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> str >> K;\n\n    int flips = 0;\n\n    for (i = 0; i + K - 1 < str.size(); i++) {\n      if (str[i] == '-') {\n        \/\/ flip this\n        for (j = i; j <= i + K - 1; j++) {\n          str[j] = ((str[j] == '+') ? '-' : '+');\n        }\n        flips++;\n      }\n    }\n\n    for (i = 0; i < str.size(); i++) {\n      if (str[i] == '-') {\n        flips = -1;\n      }\n    }\n\n    if (flips == -1) {\n      cout << \"Case #\" << t << \": \"\n           << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << \"Case #\" << t << \": \" << flips << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 50;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nint N, P;\nint req[MAXN + 5];\nint amount[MAXN + 5][MAXN + 5];\n\nint memo[10][(1 << 10)];\n\nconst int TRY = 10000;\n\nint findTwo(int index, int mask) {\n  if (index == P) {\n    return 0;\n  } else {\n    if (memo[index][mask] != -1) {\n      return memo[index][mask];\n    }\n\n    int best = 0;\n\n    \/\/ unmatched\n    best = max(best, findTwo(index + 1, mask));\n\n    \/\/ match this\n    int canmake = amount[0][index] \/ req[0];\n\n    {\n      for (int step = 0; step <= TRY && ((canmake - step) >= 1); step++) {\n        int nowmake = canmake - step;\n\n        {\n          slong reqvolume = 1ll * nowmake * req[0];\n          slong currentvolume = amount[0][index];\n\n          if ((10 * currentvolume >= 9 * reqvolume) &&\n              (10 * currentvolume <= 11 * reqvolume)) {\n            \/\/ match with other\n            for (int j = 0; j < P; j++) {\n              if ((mask & (1 << j)) == 0) {\n                slong y = 1ll * nowmake * req[1];\n                slong x = amount[1][j];\n\n                if ((10 * x >= 9 * y) && (10 * x <= 11 * y)) {\n                  best = max(best, 1 + findTwo(index + 1, mask | (1 << j)));\n                }\n              }\n            }\n          }\n        }\n      }\n\n      for (int step = 0; step <= TRY; step++) {\n        int nowmake = canmake + step;\n\n        {\n          slong reqvolume = 1ll * nowmake * req[0];\n          slong currentvolume = amount[0][index];\n\n          if ((10 * currentvolume >= 9 * reqvolume) &&\n              (10 * currentvolume <= 11 * reqvolume)) {\n            \/\/ match with other\n            for (int j = 0; j < P; j++) {\n              if ((mask & (1 << j)) == 0) {\n                slong y = 1ll * nowmake * req[1];\n                slong x = amount[1][j];\n\n                if ((10 * x >= 9 * y) && (10 * x <= 11 * y)) {\n                  best = max(best, 1 + findTwo(index + 1, mask | (1 << j)));\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    memo[index][mask] = best;\n\n    return best;\n  }\n}\n\nint ansForOne() {\n  int i, j;\n  int ans = 0;\n\n  for (j = 0; j < P; j++) {\n    int canmake = amount[0][j] \/ req[0];\n\n    bool possi = false;\n\n    for (int step = 0; step <= TRY && ((canmake - step) >= 1); step++) {\n      int nowmake = canmake - step;\n\n      {\n        slong reqvolume = 1ll * nowmake * req[0];\n        slong currentvolume = amount[0][j];\n\n        if ((10 * currentvolume >= 9 * reqvolume) &&\n            (10 * currentvolume <= 11 * reqvolume)) {\n          possi = true;\n        }\n      }\n    }\n\n    for (int step = 0; step <= TRY; step++) {\n      int nowmake = canmake + step;\n\n      {\n        slong reqvolume = 1ll * nowmake * req[0];\n        slong currentvolume = amount[0][j];\n\n        if ((10 * currentvolume >= 9 * reqvolume) &&\n            (10 * currentvolume <= 11 * reqvolume)) {\n          possi = true;\n        }\n      }\n    }\n\n    if (possi) {\n      ans++;\n    }\n  }\n\n  return ans;\n}\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> N >> P;\n\n    for (i = 0; i < N; i++) {\n      cin >> req[i];\n    }\n\n    for (i = 0; i < N; i++) {\n      for (j = 0; j < P; j++) {\n        cin >> amount[i][j];\n      }\n    }\n\n    memset(memo, -1, sizeof(memo));\n\n    if (N == 1) {\n      cout << \"Case #\" << t << \": \" << ansForOne() << endl;\n    } else if (N == 2) {\n      cout << \"Case #\" << t << \": \" << findTwo(0, 0) << endl;\n    } else {\n      cout << \"Case #\" << t << \": \" << -1 << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 100;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nint R, C;\nstring str[MAXN + 5];\n\nbool marked[MAXN + 5][MAXN + 5];\n\nvoid markRow(int row, int left, int right, char val) {\n  for (int k = left; k <= right; k++) {\n    marked[row][k] = true;\n    str[row][k] = val;\n  }\n}\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> R >> C;\n\n    for (i = 0; i < R; i++) {\n      cin >> str[i];\n    }\n\n    memset(marked, false, sizeof(marked));\n\n    for (i = 0; i < R; i++) {\n      for (j = 0; j < C;) {\n        if (str[i][j] != '?' && !marked[i][j]) {\n          \/\/ start from here\n          int leftEnd = j;\n\n          while (leftEnd - 1 >= 0 && str[i][leftEnd - 1] == '?') {\n            leftEnd--;\n          }\n\n          int rightEnd = j;\n\n          while (rightEnd + 1 < C && str[i][rightEnd + 1] == '?') {\n            rightEnd++;\n          }\n\n          markRow(i, leftEnd, rightEnd, str[i][j]);\n\n          \/\/ try next rows for possibilites\n\n          for (int k = i + 1; k < R; k++) {\n            bool possi = true;\n            for (int l = leftEnd; l <= rightEnd; l++) {\n              if (str[k][l] != '?') {\n                possi = false;\n                break;\n              }\n            }\n\n            if (possi) {\n              markRow(k, leftEnd, rightEnd, str[i][j]);\n            } else {\n              break;\n            }\n          }\n\n          \/\/ try prev rows for possibilites\n\n          for (int k = i - 1; k >= 0; k--) {\n            bool possi = true;\n            for (int l = leftEnd; l <= rightEnd; l++) {\n              if (str[k][l] != '?') {\n                possi = false;\n                break;\n              }\n            }\n\n            if (possi) {\n              markRow(k, leftEnd, rightEnd, str[i][j]);\n            } else {\n              break;\n            }\n          }\n\n          j = rightEnd + 1;\n        } else {\n          j++;\n        }\n      }\n    }\n\n    cout << \"Case #\" << t << \": \" << endl;\n\n    for (i = 0; i < R; i++) {\n      cout << str[i] << \"\\n\";\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 1000;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nint d, n;\nint k[MAXN + 5], s[MAXN + 5];\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> d >> n;\n\n    double maxtime = 0;\n\n    for (i = 1; i <= n; i++) {\n      cin >> k[i] >> s[i];\n      int leftdis = d - k[i];\n      double time = leftdis * 1.0 \/ s[i];\n      maxtime = max(maxtime, time);\n    }\n\n    double s = d \/ maxtime;\n\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(10) << s << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 100;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nconst double DOUBLE_INFINITY = 1e16;\n\nint N, R, O, Y, G, B, V;\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    vector<pair<int, char>> data;\n\n    data.push_back(make_pair(R, 'R'));\n    data.push_back(make_pair(Y, 'Y'));\n    data.push_back(make_pair(B, 'B'));\n\n    sort((data).begin(), (data).end(), greater<pair<int, char>>());\n\n    cout << \"Case #\" << t << \": \";\n\n    if (data[0].first == 1) {\n      for (i = 0; i < 3; i++) {\n        if (data[i].first) {\n          cout << data[i].second;\n        }\n      }\n    } else {\n      if (data[0].first <= (data[1].first + data[2].first)) {\n        vector<pair<int, char>> back = data;\n\n        int extra = (data[1].first + data[2].first) - data[0].first;\n\n        int a, b, c;\n        a = b = c = 0;\n\n        for (i = 0; i < extra; i++) {\n          a++;\n          b++;\n          c++;\n          cout << data[0].second << data[1].second << data[2].second;\n        }\n\n        data[1].first -= extra;\n        data[2].first -= extra;\n\n        for (i = 0; i < data[1].first; i++) {\n          a++;\n          b++;\n          cout << data[0].second << data[1].second;\n        }\n\n        for (i = 0; i < data[2].first; i++) {\n          a++;\n          c++;\n          cout << data[0].second << data[2].second;\n        }\n\n        assert(a == back[0].first);\n        assert(b == back[1].first);\n        assert(c == back[2].first);\n      } else {\n        cout << \"IMPOSSIBLE\";\n      }\n    }\n\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"vsp4","func":"#include <bits\/stdc++.h>\n#include <ext\/pb_ds\/assoc_container.hpp>\n#include <ext\/pb_ds\/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long int slong;\ntypedef pair<int, int> pii;\ntypedef pair<slong, slong> pll;\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    pbds;\ntypedef set<int>::iterator sit;\ntypedef map<int, int>::iterator mit;\ntypedef vector<int>::iterator vit;\n\nconst int MOD = 1000000007;\nconst int MAXN = 100;\nconst int SQRTN = 550;\nconst int LOGN = 60;\nconst int INT_INFINITY = 1001001001;\nconst int LIMIT = 1e6;\n\nconst slong LONG_INFINITY = 1001001001001001001ll;\nconst slong LONG_LIMIT = 200100100100101ll;\n\nconst double DOUBLE_INFINITY = 1e16;\n\nint n, q;\nint arr[MAXN + 5][MAXN + 5];\nint e[MAXN + 5];\nint s[MAXN + 5];\n\ndouble dp[MAXN + 5];\n\nint main() {\n\n  cout.tie(0);\n  cin.tie(0);\n\n  int t, T, i, j;\n\n  cin >> T;\n\n  for (t = 1; t <= T; t++) {\n    cin >> n >> q;\n\n    for (i = 1; i <= n; i++) {\n      cin >> e[i] >> s[i];\n    }\n\n    for (i = 1; i <= n; i++) {\n      for (j = 1; j <= n; j++) {\n        cin >> arr[i][j];\n      }\n    }\n\n    cout << \"Case #\" << t << \":\";\n\n    while (q--) {\n      int u, v;\n      cin >> u >> v;\n\n      for (i = 1; i <= n; i++) {\n        dp[i] = DOUBLE_INFINITY;\n      }\n\n      dp[v] = 0;\n\n      for (i = n; i >= 1; i--) {\n        slong currdis = 0;\n        for (j = i + 1; j <= n; j++) {\n          \/\/ try from i->j\n          currdis += arr[j - 1][j];\n          assert(arr[j - 1][j] != -1);\n\n          {\n            if (e[i] >= currdis) {\n              double curr = currdis * 1.0 \/ s[i];\n              dp[i] = min(dp[i], curr + dp[j]);\n            }\n          }\n        }\n      }\n\n      double ans = dp[u];\n      cout << \" \" << fixed << setprecision(10) << ans;\n    }\n\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\null num[20][10];\n\nvoid precompute() {\n  for (int i = 1; i <= 9; i++)\n    num[1][i] = i;\n  for (int i = 2; i <= 19; i++) {\n    for (int j = 1; j <= 9; j++) {\n      num[i][j] = num[i - 1][j] * 10 + j;\n    }\n  }\n}\n\nint digitCnt(ll n) {\n  if (n == 0)\n    return 1;\n  int ans = 0;\n  while (n > 0) {\n    ans++;\n    n \/= 10;\n  }\n  return ans;\n}\n\null solve(ull n) {\n  if (n <= 9)\n    return n;\n  int cnt = digitCnt(n);\n  ull ans = 0;\n  if (n < num[cnt][1])\n    return num[cnt - 1][9];\n  ull p = 1;\n  for (int i = 0; i < cnt - 1; i++)\n    p *= 10;\n  for (int i = 9; i >= 1; i--) {\n    if (num[cnt][i] <= n) {\n      ll x = num[cnt][i] \/ p;\n      ll nn = n - x * p;\n      if (nn > p)\n        nn = num[cnt - 1][9];\n      ll y = solve(nn);\n      return x * p + y;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  precompute();\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    ull n;\n    cin >> n;\n    cout << \"Case #\" << t << \": \" << solve(n) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\null hob(ull n) {\n  if (!n)\n    return 0;\n  ull ret = 1;\n  while (n >>= 1)\n    ret <<= 1;\n  return ret;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    ull n, k;\n    cin >> n >> k;\n    ull h = hob(k);\n    ull lo = k & (~h);\n    h <<= 1;\n    ull left = (n - lo) \/ h, right = (n - (lo + h \/ 2)) \/ h;\n    cout << \"Case #\" << t << \": \" << left << \" \" << right << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nbool solve(string s, int k, int &ans) {\n  ans = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '-') {\n      if (i + k - 1 >= s.length())\n        return false;\n      for (int j = 0; j < k; j++) {\n        if (s[i + j] == '-')\n          s[i + j] = '+';\n        else\n          s[i + j] = '-';\n      }\n      ans++;\n    }\n  }\n  return true;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    string s;\n    int k, ans;\n    cin >> s >> k;\n    cout << \"Case #\" << t << \": \";\n    if (solve(s, k, ans))\n      cout << ans << \"\\n\";\n    else\n      cout << \"IMPOSSIBLE\"\n           << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nint w[50 + 2][50][50 + 2][50];\nint rW[50 + 2][50][50 + 2][50];\npii parent[50 + 2][50];\nint n, p;\nint r[50];\nint q[50 + 2][50];\npii interval[50 + 2][50];\nbool visited[50 + 2][50];\n\nbool intersect(pii i1, pii i2) {\n  if (i1.second < i2.first || i1.first > i2.second)\n    return false;\n  return true;\n}\n\nbool bfs(pii s, pii t) {\n  for (int i = (0); i < (n + 2); i++) {\n    for (int j = (0); j < (p); j++) {\n      visited[i][j] = false;\n    }\n  }\n  queue<pii> q;\n  q.push(s);\n  visited[s.first][s.second] = true;\n  parent[s.first][s.second] = {-1, -1};\n  while (!q.empty()) {\n    pii u = q.front();\n    q.pop();\n    for (int i = (0); i < (n + 2); i++) {\n      for (int j = (0); j < (p); j++) {\n        if (!visited[i][j] && rW[u.first][u.second][i][j] > 0) {\n          q.push({i, j});\n          parent[i][j] = u;\n          visited[i][j] = true;\n        }\n      }\n    }\n  }\n  return (visited[t.first][t.second] == true);\n}\n\nint ford(pii s, pii t) {\n  pii u, v;\n  for (int i = (0); i < (n + 2); i++) {\n    for (int j = (0); j < (p); j++) {\n      for (int ii = (0); ii < (n + 2); ii++) {\n        for (int jj = (0); jj < (p); jj++) {\n          rW[i][j][ii][jj] = w[i][j][ii][jj];\n        }\n      }\n    }\n  }\n\n  int max_flow = 0;\n  while (bfs(s, t)) {\n    int path_flow = INT_MAX;\n    for (v = t; v != s; v = parent[v.first][v.second]) {\n      u = parent[v.first][v.second];\n      path_flow = ((path_flow) < (rW[u.first][u.second][v.first][v.second])\n                       ? (path_flow)\n                       : (rW[u.first][u.second][v.first][v.second]));\n    }\n\n    for (v = t; v != s; v = parent[v.first][v.second]) {\n      u = parent[v.first][v.second];\n      rW[u.first][u.second][v.first][v.second] -= path_flow;\n      rW[v.first][v.second][u.first][u.second] += path_flow;\n    }\n\n    max_flow += path_flow;\n  }\n\n  return max_flow;\n}\n\nvoid reset() {\n  for (int i = (0); i < (n + 2); i++) {\n    for (int j = (0); j < (p); j++) {\n      for (int ii = (0); ii < (n + 2); ii++) {\n        for (int jj = (0); jj < (p); jj++) {\n          w[i][j][ii][jj] = 0;\n          rW[i][j][ii][jj] = 0;\n        }\n      }\n    }\n  }\n\n  for (int i = (0); i < (n + 2); i++) {\n    for (int j = (0); j < (p); j++) {\n      parent[i][j] = {-1, -1};\n    }\n  }\n}\n\nbool isValid(pii interval) { return interval.first <= interval.second; }\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    cin >> n >> p;\n    reset();\n    for (int i = (1); i < (n + 1); i++) {\n      cin >> r[i];\n    }\n    for (int i = (1); i < (n + 1); i++) {\n      for (int j = (0); j < (p); j++) {\n        cin >> q[i][j];\n        interval[i][j] = {(int)ceil(q[i][j] \/ (1.1 * r[i])),\n                          (int)floor(q[i][j] \/ (0.9 * r[i]))};\n      }\n    }\n    for (int j = (0); j < (p); j++) {\n      if (isValid(interval[1][j]))\n        w[0][0][1][j] = 1;\n      if (isValid(interval[n][j]))\n        w[n][j][n + 1][0] = 1;\n    }\n    for (int i = (0); i < (n); i++) {\n      for (int j = (0); j < (p); j++) {\n        for (int k = (0); k < (p); k++) {\n          if (intersect(interval[i][j], interval[i + 1][k]) &&\n              isValid(interval[i][j]) && isValid(interval[i + 1][k])) {\n            w[i][j][i + 1][k] = 1;\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << ford({0, 0}, {n + 1, 0}) << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nstring grid[25];\nint rowCnt[25], colCnt[25];\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    int r, c;\n    cin >> r >> c;\n    for (int i = (0); i < (r); i++) {\n      cin >> grid[i];\n    }\n    for (int i = (0); i < (r); i++) {\n      for (int j = (0); j < (c); j++) {\n        if (grid[i][j] != '?') {\n          rowCnt[i]++;\n          colCnt[j]++;\n        }\n      }\n    }\n\n    for (int i = (0); i < (r); i++) {\n      char curr = '?';\n      for (int j = (0); j < (c); j++) {\n        if (grid[i][j] != '?') {\n          curr = grid[i][j];\n          for (int jj = (j - 1); jj >= (0); jj--) {\n            if (grid[i][jj] != '?')\n              break;\n            grid[i][jj] = curr;\n          }\n        }\n        if (curr != '?')\n          grid[i][j] = curr;\n      }\n    }\n\n    for (int i = (1); i < (r); i++) {\n      if (grid[i][0] == '?') {\n        grid[i] = grid[i - 1];\n      }\n    }\n    for (int i = (r - 2); i >= (0); i--) {\n      if (grid[i][0] == '?')\n        grid[i] = grid[i + 1];\n    }\n\n    cout << \"Case #\" << t << \":\"\n         << \"\\n\";\n    for (int i = (0); i < (r); i++)\n      cout << grid[i] << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    int d, n;\n    cin >> d >> n;\n    ld time = -1;\n    for (int i = (0); i < (n); i++) {\n      int k, s;\n      cin >> k >> s;\n      time = ((time) > ((ld)(d - k) \/ s) ? (time) : ((ld)(d - k) \/ s));\n    }\n    ld ans = d \/ time;\n    cout << \"Case #\" << t << \": \" << fixed << setprecision(12) << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nint prev(int i, int n) {\n  i--;\n  if (i < 0)\n    i += n;\n  return i;\n}\n\nint next(int i, int n) { return (i + 1) % n; }\n\nint add(int i, int v, int n) { return (i + v) % n; }\n\nstring no = \"IMPOSSIBLE\";\n\nstring solve(int n \/*, int r, int o, int y, int g, int b, int v*\/,\n             vector<pair<int, char>> chrs) {\n  sort(chrs.begin(), chrs.end(),\n       [](pair<int, char> a, pair<int, char> b) -> bool {\n         return a.first > b.first;\n       });\n  if (n == 1) {\n    return chrs[0].second + \"\";\n  }\n  if (chrs[0].first > n \/ 2)\n    return no;\n  string s = \"\";\n  for (int i = (0); i < (n); i++)\n    s += \" \";\n  int idx = 0;\n  int cnt = 0;\n  for (int i = (0); i < (chrs.size()); i++) {\n    for (int j = (0); j < (chrs[i].first); j++) {\n      s[idx] = chrs[i].second;\n      cnt++;\n      if (j == chrs[i].first - 1)\n        idx = add(idx, 1, n);\n      else\n        idx = add(idx, 2, n);\n      if (cnt == n)\n        break;\n      while (s[idx] != ' ')\n        idx = next(idx, n);\n    }\n  }\n  return s;\n  \/*if (r > n \/ 2 || o > n \/ 2 || y > n \/ 2 || g > n \/ 2 || b > n \/ 2 || v > n \/\n  2) return no; string s = \"\"; FOR(i, 0, n) s += \" \"; int idx = 0, cnt = 0;\n  FOR(i, 0, o)\n  {\n          s[idx] = 'O';\n          if (s[prev(idx, n)] == 'B')\n          {\n                  r++;\n                  cnt--;\n          }\n          if (s[next(idx, n)] == 'B')\n          {\n                  r++;\n                  cnt--;\n          }\n          s[prev(idx, n)] = 'B';\n          s[next(idx, n)] = 'B';\n          cnt += 3;\n          b -= 2;\n          if (b < 0)\n                  return no;\n          if (cnt == n)\n                  break;\n          idx = add(idx, 2, n);\n          while (!(s[idx] == ' ' && (s[prev(idx, n)] == ' ' || s[prev(idx, n)]\n  == 'B') && (s[next(idx, n)] == ' ' || s[prev(idx, n)] == 'B'))) idx =\n  next(idx, n);\n  }\n  FOR(i, 0, g)\n  {\n          s[idx] = 'G';\n          if (s[prev(idx, n)] == 'R')\n          {\n                  r++;\n                  cnt--;\n          }\n          if (s[next(idx, n)] == 'R')\n          {\n                  r++;\n                  cnt--;\n          }\n          s[prev(idx, n)] = 'R';\n          s[next(idx, n)] = 'R';\n          cnt += 3;\n          r -= 2;\n          if (r < 0)\n                  return no;\n          if (cnt == n)\n                  break;\n          idx = add(idx, 2, n);\n          while (!(s[idx] == ' ' && (s[prev(idx, n)] == ' ' || s[prev(idx, n)]\n  == 'R') && (s[next(idx, n)] == ' ' || s[prev(idx, n)] == 'R'))) idx =\n  next(idx, n);\n  }\n  FOR(i, 0, v)\n  {\n          s[idx] = 'V';\n          if (s[prev(idx, n)] == 'Y')\n          {\n                  y++;\n                  cnt--;\n          }\n          if (s[next(idx, n)] == 'Y')\n          {\n                  y++;\n                  cnt--;\n          }\n          s[prev(idx, n)] = 'Y';\n          s[next(idx, n)] = 'Y';\n          cnt += 3;\n          y -= 2;\n          if (y < 0)\n                  return no;\n          if (cnt == n)\n                  break;\n          idx = add(idx, 2, n);\n          while (!(s[idx] == ' ' && (s[prev(idx, n)] == ' ' || s[prev(idx,n)] ==\n  'Y') && (s[next(idx, n)] == ' ' || s[next(idx, n)] == 'Y'))) idx = next(idx,\n  n);\n  }\n  FOR(i, 0, r)\n  {\n          s[idx] = 'R';\n          cnt++;\n          if (cnt == n)\n                  break;\n          if (i == r - 1)\n                  idx = next(idx, n);\n          else\n                  idx = add(idx, 2, n);\n          while (s[idx] != ' ')\n                  idx = next(idx, n);\n  }\n  FOR(i, 0, y)\n  {\n          s[idx] = 'Y';\n          cnt++;\n          if (cnt == n)\n                  break;\n          if (i == y - 1)\n                  idx = next(idx, n);\n          else\n                  idx = add(idx, 2, n);\n          while (s[idx] != ' ')\n                  idx = next(idx, n);\n  }\n  FOR(i, 0, b)\n  {\n          s[idx] = 'B';\n          cnt++;\n          if (cnt == n)\n                  break;\n          if (i == b - 1)\n                  idx = next(idx, n);\n          else\n                  idx = add(idx, 2, n);\n          while (s[idx] != ' ')\n                  idx = next(idx, n);\n  }\n  return s;*\/\n}\n\nbool check(string s) {\n  for (int i = (0); i < (s.length()); i++) {\n    if (s[i] == s[(i + 1) % s.length()])\n      return false;\n  }\n  return true;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    vector<pair<int, char>> vv;\n    vv.push_back({r, 'R'});\n    vv.push_back({o, 'O'});\n    vv.push_back({y, 'Y'});\n    vv.push_back({g, 'G'});\n    vv.push_back({b, 'B'});\n    vv.push_back({v, 'V'});\n    string ans = solve(n, vv);\n    \/\/ string ans = solve(n, r, o, y, g, b, v);\n    \/*if (!check(ans))\n    {\n            cout << \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\";\n    }*\/\n    cout << \"Case #\" << t << \": \" << ans << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vstrimaitis","func":"\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <climits>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef std::pair<int, int> pii;\ntemplate <typename T>\nusing min_heap = std::priority_queue<T, std::vector<T>, std::greater<T>>;\ntemplate <typename T>\nusing max_heap = std::priority_queue<T, std::vector<T>, std::less<T>>;\nusing namespace std;\n\nll w[100][100];\nll e[100], s[100];\nint n, q;\nld best[100][100];\n\nld solve(int u, int v) {\n  for (int i = (0); i < (n); i++)\n    for (int j = (0); j < (n); j++)\n      best[i][j] = (1LL << 31) - 1;\n  best[n - 1][n - 1] = 0;\n  for (int i = (n - 2); i >= (0); i--) {\n    best[i][i] = 0;\n    ll totalDist = 0;\n    int prev = i;\n    for (int j = (i + 1); j < (n); j++) {\n      if (w[prev][j] < 0)\n        continue;\n      totalDist += w[prev][j];\n      if (totalDist > e[i]) {\n        for (int k = (j); k < (n); k++) {\n          best[i][k] = best[i][prev] + best[prev][k];\n        }\n        break;\n      }\n      best[i][j] =\n          ((totalDist \/ (ld)s[i]) < (best[i][prev] + w[prev][j] \/ (ld)s[prev])\n               ? (totalDist \/ (ld)s[i])\n               : (best[i][prev] + w[prev][j] \/ (ld)s[prev]));\n      prev = j;\n    }\n  }\n  return best[0][n - 1];\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int NUMBER_OF_TESTS;\n  cin >> NUMBER_OF_TESTS;\n  for (int t = 1; t <= NUMBER_OF_TESTS; t++) {\n    cin >> n >> q;\n    for (int i = (0); i < (n); i++) {\n      cin >> e[i] >> s[i];\n    }\n    for (int i = (0); i < (n); i++) {\n      for (int j = (0); j < (n); j++) {\n        int a;\n        cin >> a;\n        w[i][j] = a;\n      }\n    }\n    cout << \"Case #\" << t << \": \";\n    for (int i = (0); i < (q); i++) {\n      int u, v;\n      cin >> u >> v;\n      cout << fixed << setprecision(12) << solve(u, v) << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 qualification round\n\/\/ Problem B\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nstring num;\n\nvoid solve() {\n  cin >> num;\n  int it = -1;\n  for (int i = (0), _i = (num.size() - 1); i < _i; ++i) {\n    if (int(num[i]) > int(num[i + 1])) {\n      it = i;\n      while (it > 0 && num[it] == num[it - 1])\n        it--;\n      break;\n    }\n  }\n  if (it != -1) {\n    num[it]--;\n    for (int i = (it + 1), _i = (num.size()); i < _i; ++i)\n      num[i] = '9';\n    if (num[it] == '0')\n      num.erase(0, 1);\n  }\n  cout << num << endl;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 qualification round\n\/\/ Problem C\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nLL N, K;\nmap<LL, int> mapa;\n\nvoid addNum(LL x, int y) {\n  map<LL, int>::iterator it = mapa.find(x);\n  if (it == mapa.end()) {\n    mapa[x] = y;\n  } else {\n    mapa[x] = it->second + y;\n  }\n}\n\nvoid solve() {\n  cin >> N >> K;\n  map<LL, int>::iterator it;\n  mapa.clear();\n  mapa[N] = 1;\n  while (true) {\n    it = mapa.end();\n    it--;\n    if (K <= it->second)\n      break;\n    LL div1 = it->first \/ 2LL;\n    LL div2 = it->first - div1;\n    addNum(div1, it->second);\n    addNum(div2 - 1LL, it->second);\n    K -= it->second;\n    mapa.erase(it);\n  }\n  LL res1 = it->first \/ 2LL;\n  LL res2 = it->first - res1 - 1LL;\n  if (res2 < res1)\n    swap(res1, res2);\n  cout << res2 << \" \" << res1 << endl;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 qualification round\n\/\/ Problem A\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nstring str;\nint k;\n\nvoid solve() {\n  cin >> str >> k;\n  int n = str.size();\n  int res = 0;\n  for (int i = 0; i <= n - k; i++) {\n    if (str[i] != '+') {\n      for (int j = (0), _j = (k); j < _j; ++j)\n        str[i + j] = (str[i + j] == '+') ? '-' : '+';\n      res++;\n    }\n  }\n  bool flag = true;\n  for (int i = (0), _i = (n); i < _i; ++i) {\n    if (str[i] != '+')\n      flag = false;\n  }\n  if (flag)\n    printf(\"%d\\n\", res);\n  else\n    printf(\"IMPOSSIBLE\\n\");\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 round 1 A\n\/\/ Problem B\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nvector<vector<pair<int, int>>> vInc;\n\nvoid getMinMax(int inc, const vector<int> &w, int vi) {\n  LL mini = ceil(double(inc) * 0.9);\n  LL maxi = double(inc) * 1.1;\n  vInc[vi].resize(w.size());\n  for (int i = (0), _i = (w.size()); i < _i; ++i)\n    vInc[vi][i] = make_pair(-1, -1);\n  for (int i = (1), _i = (1000001); i < _i; ++i) {\n    LL A = LL(mini) * LL(i);\n    LL B = LL(maxi) * LL(i);\n    if (A > 1200000LL)\n      break;\n    for (int j = (0), _j = (w.size()); j < _j; ++j) {\n      if (A <= w[j] && LL(w[j]) <= B) {\n        if (vInc[vi][j].first == -1)\n          vInc[vi][j].first = i;\n        vInc[vi][j].second = i;\n      }\n    }\n  }\n}\n\nvoid solve() {\n  int N, P;\n  cin >> N >> P;\n  vector<int> ing(N);\n  vInc.resize(N);\n  vector<vector<int>> v(N, vector<int>(P));\n  for (int i = (0), _i = (N); i < _i; ++i)\n    cin >> ing[i];\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    for (int j = (0), _j = (P); j < _j; ++j)\n      cin >> v[i][j];\n    sort(v[i].begin(), v[i].end());\n    getMinMax(ing[i], v[i], i);\n  }\n  int res = 0;\n  sort(vInc[0].begin(), vInc[0].end());\n  do {\n    int c = 0;\n    for (int i = (0), _i = (P); i < _i; ++i) {\n      if (vInc[0][i].first == -1)\n        continue;\n      if (vInc[1][i].first == -1)\n        continue;\n      if (vInc[0][i].first <= vInc[1][i].first &&\n          vInc[1][i].first <= vInc[0][i].second) {\n        c++;\n      } else if (vInc[1][i].first <= vInc[0][i].first &&\n                 vInc[0][i].first <= vInc[1][i].second) {\n        c++;\n      }\n    }\n    res = max(res, c);\n  } while (next_permutation(vInc[0].begin(), vInc[0].end()));\n  cout << res << endl;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 round 1 A\n\/\/ Problem A\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nint N, M;\nvector<string> vs;\n\nvoid solve() {\n  cin >> N >> M;\n  vs.resize(N);\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    cin >> vs[i];\n    char ch = '.';\n    for (int j = (0), _j = (M); j < _j; ++j) {\n      if (vs[i][j] != '?') {\n        if (ch == '.') {\n          for (int k = (0), _k = (j); k < _k; ++k)\n            vs[i][k] = vs[i][j];\n        }\n        ch = vs[i][j];\n      } else {\n        if (ch != '.')\n          vs[i][j] = ch;\n      }\n    }\n  }\n  if (vs[0][0] == '?') {\n    for (int k = (0), _k = (N); k < _k; ++k) {\n      if (vs[k][0] != '?') {\n        for (int i = k - 1; i >= 0; i--) {\n          for (int j = (0), _j = (M); j < _j; ++j) {\n            vs[i][j] = vs[i + 1][j];\n          }\n        }\n        break;\n      }\n    }\n  }\n  for (int i = (1), _i = (N); i < _i; ++i) {\n    if (vs[i][0] == '?') {\n      for (int j = (0), _j = (M); j < _j; ++j) {\n        vs[i][j] = vs[i - 1][j];\n      }\n    }\n  }\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    cout << vs[i] << endl;\n  }\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d:\\n\", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 round 1 B\n\/\/ Problem A\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\ndouble D, N;\nvector<pair<int, int>> hs;\n\ndouble getTime(double K, double V) { return (D - K) \/ V; }\n\nvoid solve() {\n  cin >> D >> N;\n  hs.resize(N);\n  for (int i = (0), _i = (N); i < _i; ++i)\n    cin >> hs[i].first >> hs[i].second;\n  sort(hs.rbegin(), hs.rend());\n  double maxiK = hs[0].first;\n  double maxiV = hs[0].second;\n  double maxiT = getTime(hs[0].first, hs[0].second);\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    double t = getTime(hs[i].first, hs[i].second);\n    if (t > maxiT) {\n      maxiT = t;\n      maxiK = hs[i].first;\n      maxiV = hs[i].second;\n    } else {\n      maxiK = hs[i].first;\n      maxiV = (D - maxiK) \/ maxiT;\n    }\n  }\n  maxiV = D \/ maxiT;\n  printf(\"%.8lf\\n\", maxiV);\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 round 1 B\n\/\/ Problem B\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nint N;\nint R, O, Y, G, B, V;\n\nvoid solve() {\n  cin >> N >> R >> O >> Y >> G >> B >> V;\n  vector<pair<int, char>> v;\n  v.push_back(make_pair(R, 'R'));\n  v.push_back(make_pair(Y, 'Y'));\n  v.push_back(make_pair(B, 'B'));\n  sort(v.begin(), v.end());\n  string solu(N, 'X');\n  if (v[2].first <= v[0].first + v[1].first) {\n    int it = 0;\n    for (int i = (0), _i = (3); i < _i; ++i) {\n      for (int j = (0), _j = (v[i].first); j < _j; ++j) {\n        solu[it] = v[i].second;\n        it += 2;\n        if (it >= N)\n          it = 1;\n      }\n    }\n  } else {\n    solu = \"IMPOSSIBLE\";\n  }\n  cout << solu << endl;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"vudduu","func":"\/\/ vudduu - codejam 2017 round 1 B\n\/\/ Problem C\n#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <functional>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long LL;\n\nint N, Q;\nvector<pair<double, double>> horses; \/\/ distance, speed\nvector<vector<double>> G;\nvector<vector<double>> Gtime;\n\ndouble getBestTime(int u, int v) {\n  Gtime.resize(N);\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    Gtime[i].resize(N);\n    for (int j = (0), _j = (N); j < _j; ++j)\n      Gtime[i][j] = 200000000000000.0;\n  }\n  priority_queue<pair<pair<double, int>, pair<int, double>>>\n      q; \/\/ time, horse, position, distance\n  q.push(make_pair(make_pair(0, 0), make_pair(0, horses[0].first)));\n  vector<bool> vis(N, false);\n  while (q.size()) {\n    double time = -q.top().first.first;\n    int ho = q.top().first.second;\n    int node = q.top().second.first;\n    double rd = q.top().second.second;\n    q.pop();\n    if (rd < 0)\n      continue;\n    if (time >= Gtime[0][node])\n      continue;\n    if (!vis[node] && node != 0) {\n      vis[node] = true;\n      q.push(make_pair(make_pair(-time, node),\n                       make_pair(node, horses[node].first)));\n    }\n    if (node == ho) {\n      Gtime[0][node] = time;\n    }\n    for (int j = (0), _j = (N); j < _j; ++j) {\n      if (G[node][j] != -1) {\n        double newTime = time + (G[node][j] \/ horses[ho].second);\n        q.push(\n            make_pair(make_pair(-newTime, ho), make_pair(j, rd - G[node][j])));\n      }\n    }\n  }\n  return Gtime[0][N - 1];\n}\n\nvoid solve() {\n  int u, v;\n  cin >> N >> Q;\n  horses.resize(N);\n  for (int i = (0), _i = (N); i < _i; ++i)\n    cin >> horses[i].first >> horses[i].second;\n  G.resize(N);\n  for (int i = (0), _i = (N); i < _i; ++i) {\n    G[i].resize(N);\n    for (int j = (0), _j = (N); j < _j; ++j) {\n      cin >> G[i][j];\n    }\n  }\n  for (int i = (0), _i = (Q); i < _i; ++i) {\n    cin >> u >> v;\n    if (i)\n      printf(\" \");\n    printf(\"%.9lf\", getBestTime(u - 1, v - 1));\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    printf(\"Case #%d: \", cas);\n    solve();\n  }\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int maxk = 19;\n\nint ans[maxk];\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    ll n;\n    cin >> n;\n    vi d;\n    while (n) {\n      d.push_back(n % 10);\n      n \/= 10;\n    }\n    int m = d.size();\n    ans[0] = d[0];\n    for (int i = 1; i < m; i++) {\n      int cur = d[i];\n      if (cur <= ans[i - 1])\n        ans[i] = cur;\n      else {\n        ans[i] = cur - 1;\n        for (int j = 0; j < i; j++)\n          ans[j] = 9;\n      }\n    }\n    if (ans[m - 1])\n      cout << ans[m - 1];\n    for (int i = m - 2; i >= 0; i--)\n      cout << ans[i];\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    ll n, k;\n    cin >> n >> k;\n    vector<vector<pair<ll, ll>>> lvl;\n    lvl.push_back(vector<pair<ll, ll>>(1, make_pair(n, 1ll)));\n    for (int i = 0; i < ((int)(lvl).size()); i++) {\n      ll nexta = -1, cnta = 0, nextb = -1, cntb = 0;\n      for (int j = 0; j < ((int)(lvl[i]).size()); j++) {\n        ll cur = lvl[i][j].first, cnt = lvl[i][j].second;\n        if (cur == 1)\n          continue;\n        ll a = (cur - 1) \/ 2;\n        ll b = (cur - 1) - a;\n        ll ca = a ? cnt : 0;\n        ll cb = cnt;\n        if (a > 0) {\n          if (nexta == -1 || nexta == a) {\n            nexta = a;\n            cnta += ca;\n          } else {\n            nextb = a;\n            cntb += ca;\n          }\n        }\n        if (b > 0) {\n          if (nexta == -1 || nexta == b) {\n            nexta = b;\n            cnta += cb;\n          } else {\n            nextb = b;\n            cntb += cb;\n          }\n        }\n      }\n      if (nexta != -1)\n        lvl.push_back(vector<pair<ll, ll>>(1, make_pair(nexta, cnta)));\n      if (nextb != -1)\n        lvl[((int)(lvl).size()) - 1].push_back(make_pair(nextb, cntb));\n    }\n    ll ans1 = -1, ans2 = -1;\n    for (int i = 0; i < ((int)(lvl).size()); i++) {\n      if (ans1 != -1)\n        break;\n      for (int j = ((int)(lvl[i]).size()) - 1; j >= 0; j--) {\n        ll cur = lvl[i][j].first, sum = lvl[i][j].second;\n        if (k <= sum) {\n          ans1 = (cur - 1) \/ 2;\n          ans2 = (cur - 1) - ans1;\n          break;\n        } else {\n          k -= sum;\n        }\n      }\n    }\n    cout << ans2 << ' ' << ans1 << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = 0; i < ((int)(s).size()); i++) {\n      if (s[i] == '-') {\n        if (i + k > ((int)(s).size())) {\n          ans = -1;\n          break;\n        } else {\n          for (int j = 0; j < k; j++)\n            s[i + j] = (s[i + j] == '+' ? '-' : '+');\n          ans++;\n        }\n      }\n    }\n    if (ans == -1) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << ans << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int maxn = 50;\nconst int maxv = 1e6;\n\nint q[maxn][maxn], r[maxn];\nvector<pii> open[maxv + 1], close[maxv + 2];\n\npii find_range(int have, int need) {\n  have *= 10;\n  int r = min(have \/ (9 * need), maxv);\n  int l = max((have \/ (11 * need)) + (have % (11 * need) != 0), 1);\n  return make_pair(l, r);\n}\n\nbool good(pii p) { return p.first <= p.second; }\n\nvoid del_range(vi &v, int id) {\n  vi res;\n  for (int i = 0; i < ((int)(v).size()); i++)\n    if (v[i] != id)\n      res.push_back(v[i]);\n  v = res;\n}\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    for (int i = 0; i <= maxv; i++) {\n      open[i].clear();\n      close[i].clear();\n    }\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n        pii range = find_range(q[i][j], r[i]);\n        if (good(range)) {\n          open[range.first].push_back(make_pair(i, j));\n          close[range.second + 1].push_back(make_pair(i, j));\n        }\n      }\n    vector<vi> cur(n, vi());\n    int ans = 0;\n    for (int i = 1; i <= maxv; i++) {\n      for (int j = 0; j < ((int)(close[i]).size()); j++)\n        del_range(cur[close[i][j].first], close[i][j].second);\n      for (int j = 0; j < ((int)(open[i]).size()); j++)\n        cur[open[i][j].first].push_back(open[i][j].second);\n      while (true) {\n        bool ok = 1;\n        for (int j = 0; j < n; j++)\n          if (((int)(cur[j]).size()) == 0) {\n            ok = 0;\n            break;\n          }\n        if (!ok)\n          break;\n        ans++;\n        for (int j = 0; j < n; j++)\n          del_range(cur[j], cur[j][0]);\n      }\n    }\n    cout << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int maxn = 25;\n\nchar a[maxn][maxn], b[maxn][maxn];\nbool good[maxn];\n\nint findj(int i, int j, int c) {\n  for (int k = j; k >= 0; k--)\n    if (a[i][k] != '?')\n      return k;\n  for (int k = j; k < c; k++)\n    if (a[i][k] != '?')\n      return k;\n}\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d:\\n\", qq);\n    int r, c;\n    cin >> r >> c;\n    for (int i = 0; i < r; i++) {\n      good[i] = 0;\n      for (int j = 0; j < c; j++) {\n        cin >> a[i][j];\n        if (a[i][j] != '?')\n          good[i] = 1;\n      }\n    }\n    for (int i = 0; i < r; i++)\n      if (!good[i]) {\n        for (int j = i; j >= 0; j--)\n          if (good[j]) {\n            for (int k = 0; k < c; k++)\n              a[i][k] = a[j][k];\n            break;\n          }\n        for (int j = i; j < r; j++)\n          if (good[j]) {\n            for (int k = 0; k < c; k++)\n              a[i][k] = a[j][k];\n            break;\n          }\n      }\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < c; j++)\n        b[i][j] = a[i][findj(i, j, c)];\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++)\n        cout << b[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int N = 1e3;\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    ld d;\n    int n;\n    cin >> d >> n;\n    vector<pair<ld, ld>> h(n);\n    for (int i = 0; i < n; i++)\n      cin >> h[i].first >> h[i].second;\n    sort((h).begin(), (h).end());\n    for (int i = n - 2; i >= 0; i--) {\n      ld p1 = h[i].first, v1 = h[i].second;\n      ld p2 = h[i + 1].first, v2 = h[i + 1].second;\n      if (v1 < v2)\n        continue;\n      ld t = (p2 - p1) \/ (v1 - v2);\n      ld x = t * v1;\n      if (p1 + x > d)\n        continue;\n      double v = (d - p1) \/ (t + (d - (p1 + x)) \/ v2);\n      h[i].second = v;\n    }\n    ld ans = h[0].second * d \/ (d - h[0].first);\n    printf(\"%.10lf\\n\", (double)ans);\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    vector<pair<int, char>> c;\n    c.push_back(make_pair(r, 'R'));\n    c.push_back(make_pair(y, 'Y'));\n    c.push_back(make_pair(b, 'B'));\n    sort((c).begin(), (c).end());\n    if (c[2].first > c[0].first + c[1].first) {\n      cout << \"IMPOSSIBLE\" << endl;\n      continue;\n    }\n    vi cur;\n    for (int i = 0; i < c[0].first; i++) {\n      cur.push_back(1);\n      cur.push_back(0);\n    }\n    for (int i = 0; i < c[1].first - c[0].first; i++)\n      cur.push_back(1);\n    vi upd;\n    for (int i = ((int)(cur).size()) - 1; i >= 0; i--) {\n      if (c[2].first > 0) {\n        upd.push_back(2);\n        c[2].first--;\n      }\n      upd.push_back(cur[i]);\n    }\n    for (int i = 0; i < ((int)(upd).size()); i++)\n      cout << c[upd[i]].second;\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"watlac","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int N = 100;\n\nint e[N], s[N], d[N][N];\nld dp[N];\n\nint main() {\n\n  int tt;\n  cin >> tt;\n  for (int qq = 1; qq <= tt; qq++) {\n    printf(\"Case #%d: \", qq);\n    int n, q;\n    cin >> n >> q;\n    for (int i = 0; i < n; i++)\n      cin >> e[i] >> s[i];\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        cin >> d[i][j];\n    int u, v;\n    cin >> u >> v;\n    dp[n - 1] = 0;\n    for (int i = n - 2; i >= 0; i--) {\n      dp[i] = -1;\n      ll sum = 0;\n      for (int j = i + 1; j < n; j++) {\n        sum += d[j - 1][j];\n        if (sum <= e[i] && dp[j] >= -0.5) {\n          ld add = sum * 1.0 \/ s[i];\n          if (dp[i] == -1.0 || dp[j] + add < dp[i])\n            dp[i] = dp[j] + add;\n        }\n      }\n    }\n    printf(\"%.10f\\n\", (double)dp[0]);\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    long long s;\n    vector<int> v;\n    cin >> s;\n\n    while (s > 0) {\n      v.push_back(s % 10);\n      s = s \/ 10;\n    }\n    int ind = v.size() - 1;\n    while (ind > 0 && (v[ind] <= v[ind - 1]))\n      ind--;\n    if (ind != 0) {\n      v[ind]--;\n      while (ind + 1 < v.size() && v[ind + 1] == v[ind] + 1) {\n        v[ind]++;\n        v[++ind]--;\n      }\n      while (ind > 0)\n        v[--ind] = 9;\n    }\n\n    for (int i = v.size() - 1; i >= 0; --i)\n      s = s * 10 + v[i];\n\n    cout << \"Case #\" << t << \": \" << s << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\nusing namespace std;\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    long long n, k, y, z;\n    map<long long, long long> m;\n    queue<long long> q;\n    cin >> n >> k;\n\n    q.push(n);\n    m[n] = 1;\n\n    while (k > 0) {\n      long long c = q.front();\n      q.pop();\n      y = c \/ 2;\n      z = (c - 1) \/ 2;\n      k -= m[c];\n      if (m.find(y) == m.end())\n        q.push(y);\n      m[y] += m[c];\n      if (m.find(z) == m.end())\n        q.push(z);\n      m[z] += m[c];\n    }\n\n    cout << \"Case #\" << t << \": \" << y << \" \" << z << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    string s;\n    int k, res = 0;\n    cin >> s >> k;\n    for (int i = 0; i + k <= s.size(); ++i) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; ++j)\n          s[i + j] = (s[i + j] == '-') ? '+' : '-';\n        res++;\n      }\n    }\n    for (int i = 0; i < s.size(); ++i)\n      if (s[i] == '-')\n        res = -1;\n\n    cout << \"Case #\" << t << \": \";\n    if (res == -1)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <string>\n#include <vector>\nusing namespace std;\n\nlong long q[55][55];\nlong long r[55];\nint n, p;\n\nstruct package {\n  long long large, small;\n  int id;\n};\n\nbool myCompare(package p1, package p2) {\n  if (p1.large == p2.large)\n    return p1.small > p2.small;\n  return p1.large > p2.large;\n}\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    int res = 0;\n    vector<package> vp;\n    queue<long long> qp[55];\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i)\n      cin >> r[i];\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < p; ++j) {\n        cin >> q[i][j];\n        package pp;\n        pp.id = i;\n        pp.large = floor(q[i][j] \/ (0.9 * r[i]));\n        pp.small = ceil(q[i][j] \/ (1.1 * r[i]));\n        if (pp.large >= pp.small)\n          vp.push_back(pp);\n      }\n\n    sort(vp.begin(), vp.end(), myCompare);\n    for (int i = 0; i < vp.size(); ++i) {\n      for (int j = 0; j < n; ++j) {\n        while ((qp[j].size() > 0) && (vp[i].large < qp[j].front()))\n          qp[j].pop();\n      }\n\n      qp[vp[i].id].push(vp[i].small);\n\n      bool hasOne = true;\n      for (int j = 0; j < n; ++j)\n        if (qp[j].size() == 0)\n          hasOne = false;\n      if (hasOne) {\n        res++;\n        for (int j = 0; j < n; ++j)\n          qp[j].pop();\n      }\n    }\n\n    cout << \"Case #\" << t << \": \" << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nchar ch[30][30];\nint r, c;\n\nvoid fill(char cc, int x, int y, int dx, int dy) {\n  while ((x + dx >= 0) && (x + dx < r) && (y + dy >= 0) && (y + dy < c) &&\n         (ch[x + dx][y + dy] == '?')) {\n    x += dx;\n    y += dy;\n    ch[x][y] = cc;\n  }\n}\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    cin >> r >> c;\n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j)\n        cin >> ch[i][j];\n\n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j)\n        if (ch[i][j] != '?') {\n          fill(ch[i][j], i, j, -1, 0);\n          fill(ch[i][j], i, j, 1, 0);\n        }\n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j)\n        if (ch[i][j] != '?') {\n          fill(ch[i][j], i, j, 0, 1);\n          fill(ch[i][j], i, j, 0, -1);\n        }\n\n    cout << \"Case #\" << t << \": \" << endl;\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j)\n        cout << ch[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    int d, n;\n    cin >> d >> n;\n\n    long long bk, bs, k, s;\n    cin >> k >> s;\n    k = d - k;\n    bk = k;\n    bs = s;\n    for (int i = 1; i < n; ++i) {\n      cin >> k >> s;\n      k = d - k;\n      if (s * bk < bs * k) {\n        bs = s;\n        bk = k;\n      }\n    }\n    bs *= d;\n    long long q = bs \/ bk, r = bs % bk;\n\n    cout << \"Case #\" << t << \": \" << q << \".\";\n    for (int i = 0; i < 6; ++i) {\n      r = r * 10;\n      cout << r \/ k;\n      r = r % k;\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    string s = \"\";\n\n    if ((r > n \/ 2) || (y > n \/ 2) || (b > n \/ 2))\n      s = \"IMPOSSIBLE\";\n    else {\n      vector<pair<int, string>> v;\n      v.push_back({r, \"R\"});\n      v.push_back({y, \"Y\"});\n      v.push_back({b, \"B\"});\n      sort(v.begin(), v.end());\n      reverse(v.begin(), v.end());\n      while (v[0].first > 0) {\n        s += v[0].second;\n        v[0].first--;\n        if (v[1].first > v[2].first) {\n          s += v[1].second;\n          v[1].first--;\n        } else {\n          s += v[2].second;\n          v[2].first--;\n        }\n      }\n      while ((v[1].first > 0) || (v[2].first > 0)) {\n        if (v[1].first > v[2].first) {\n          s += v[1].second;\n          v[1].first--;\n        } else {\n          s += v[2].second;\n          v[2].first--;\n        }\n      }\n    }\n    cout << \"Case #\" << t << \": \" << s << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"WCG","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint n, q, u, v;\nlong long e[102];\ndouble s[102];\nlong long d[102][102];\ndouble bt[102];\nbool vi[102];\n\nint main() {\n  int tt;\n\n  cin >> tt;\n\n  for (int t = 1; t <= tt; ++t) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; ++i)\n      cin >> e[i] >> s[i];\n    for (int i = 1; i <= n; ++i)\n      for (int j = 1; j <= n; ++j)\n        cin >> d[i][j];\n\n    for (int k = 1; k <= n; ++k)\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n          if ((d[i][k] != -1) && (d[k][j] != -1) &&\n              ((d[i][j] == -1) || (d[i][j] > d[i][k] + d[k][j])))\n            d[i][j] = d[i][k] + d[k][j];\n\n    cout << \"Case #\" << t << \":\";\n\n    for (int i = 0; i < q; ++i) {\n      cin >> u >> v;\n      for (int j = 1; j <= n; ++j) {\n        bt[j] = -1;\n        vi[j] = false;\n      }\n      bt[u] = 0;\n      while (!vi[v]) {\n        int cur = -1;\n        for (int j = 1; j <= n; ++j)\n          if (!vi[j] && (bt[j] != -1) && ((cur == -1) || (bt[cur] > bt[j])))\n            cur = j;\n        vi[cur] = true;\n        for (int j = 1; j <= n; ++j)\n          if ((d[cur][j] != -1) && (d[cur][j] <= e[cur]) &&\n              ((bt[j] == -1) || ((bt[j] - bt[cur]) * s[cur] > d[cur][j])))\n            bt[j] = bt[cur] + d[cur][j] \/ s[cur];\n      }\n      printf(\" %.6lf\", bt[v]);\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    string s;\n    cin >> s;\n\n    bool changed = true;\n    while (changed) {\n      changed = false;\n      for (int i = 0; i < s.size() - 1; i++) {\n        if (s[i] > s[i + 1]) {\n          s[i]--;\n          transform(s.begin() + i + 1, s.end(), s.begin() + i + 1,\n                    [](char c) { return '9'; });\n          changed = true;\n          break;\n        }\n      }\n      while (s.size() > 1 && s.front() == '0')\n        s = s.substr(1);\n    }\n\n    cout << \"Case #\" << t + 1 << \": \" << s << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    int N, K;\n    cin >> N >> K;\n\n    priority_queue<int> queue;\n    queue.push(N);\n    int min_val = -1, max_val = -1;\n    while (K > 0) {\n      int max_length = queue.top();\n      queue.pop();\n\n      int left = (max_length - 1) \/ 2;\n      int right = max_length \/ 2;\n\n      min_val = left;\n      max_val = right;\n\n      queue.push(left);\n      queue.push(right);\n\n      K--;\n    }\n\n    cout << \"Case #\" << t + 1 << \": \" << max_val << \" \" << min_val << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    string s;\n    cin >> s;\n    int K;\n    cin >> K;\n\n    int nbFlips = 0;\n    for (int p = 0; p < s.size() - K + 1; p++) {\n      if (s[p] == '-') {\n        transform(s.begin() + p, s.begin() + p + K, s.begin() + p,\n                  [](char c) { return (c == '+' ? '-' : '+'); });\n        nbFlips++;\n      }\n    }\n\n    if (any_of(s.begin(), s.end(), [](char c) { return (c == '-'); }))\n      nbFlips = -1;\n\n    cout << \"Case #\" << t + 1 << \": \";\n    if (nbFlips >= 0)\n      cout << nbFlips << endl;\n    else\n      cout << \"IMPOSSIBLE\" << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <cassert>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nvector<vector<pair<int, int>>>\ncomputeNbServingsPossible(int N, int P, const vector<float> &R,\n                          const vector<vector<float>> &Q) {\n  vector<vector<pair<int, int>>> res(N, vector<pair<int, int>>(P));\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < P; j++) {\n      int nbMin = int(ceil(Q[i][j] \/ (1.1f * R[i])));\n      int nbMax = int(trunc(Q[i][j] \/ (0.9f * R[i])));\n      res[i][j] = make_pair(nbMin, nbMax);\n    }\n  }\n  return res;\n}\n\nint solve_wrong(int N, int P,\n                vector<vector<pair<int, int>>> nbServingsPossible) {\n  for (int i = 0; i < N; i++)\n    sort(nbServingsPossible.begin(), nbServingsPossible.end());\n\n  int nbKits = 0;\n  for (int j = 0; j < P; j++) {\n    for (int nbServs = nbServingsPossible[0][j].first;\n         nbServs <= nbServingsPossible[0][j].second; nbServs++) {\n      bool allIngredientsFound = true;\n      vector<int> used(N, -1);\n      used[0] = j;\n      for (int i = 1; i < N; i++) {\n        bool ingredientOk = false;\n        for (int j2 = 0; j2 < P; j2++) {\n          if (nbServs >= nbServingsPossible[i][j2].first &&\n              nbServs <= nbServingsPossible[i][j2].second) {\n            ingredientOk = true;\n            used[i] = j2;\n            break;\n          }\n        }\n        if (!ingredientOk) {\n          allIngredientsFound = false;\n          break;\n        }\n      }\n      if (allIngredientsFound) {\n        nbKits++;\n        for (int i = 0; i < N; i++)\n          nbServingsPossible[i][used[i]] = make_pair(-10, -10);\n        break;\n      }\n    }\n  }\n  return nbKits;\n}\nint solve(int N, int P, vector<vector<pair<int, int>>> nbServingsPossible) {\n  for (int i = 0; i < N; i++)\n    sort(nbServingsPossible.begin(), nbServingsPossible.end());\n\n  int nbKits = 0;\n  while (true) {\n    bool stop = false;\n    for (int i = 0; i < N; i++)\n      if (nbServingsPossible[i].size() == 0) {\n        stop = true;\n        break;\n      }\n    if (stop)\n      break;\n\n    int consideredIngredient = 0;\n    int consideredPack = 0;\n    pair<int, int> minInterval = nbServingsPossible[0][0];\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < nbServingsPossible[i].size(); j++) {\n        if (nbServingsPossible[i][j] < minInterval) {\n          consideredIngredient = i;\n          consideredPack = j;\n          minInterval = nbServingsPossible[i][j];\n        }\n      }\n    }\n\n    bool increasedNbKits = false;\n    for (int nbServs =\n             nbServingsPossible[consideredIngredient][consideredPack].first;\n         nbServs <=\n         nbServingsPossible[consideredIngredient][consideredPack].second;\n         nbServs++) {\n      bool allIngredientsFound = true;\n      vector<int> used(N, -1);\n      used[consideredIngredient] = consideredPack;\n      for (int i = 0; i < N; i++) {\n        if (i == consideredIngredient)\n          continue;\n\n        bool ingredientOk = false;\n        for (int j2 = 0; j2 < nbServingsPossible[i].size(); j2++) {\n          if (nbServs >= nbServingsPossible[i][j2].first &&\n              nbServs <= nbServingsPossible[i][j2].second) {\n            ingredientOk = true;\n            used[i] = j2;\n            break;\n          }\n        }\n        if (!ingredientOk) {\n          allIngredientsFound = false;\n          break;\n        }\n      }\n      if (allIngredientsFound) {\n        nbKits++;\n        for (int i = 0; i < N; i++)\n          nbServingsPossible[i].erase(nbServingsPossible[i].begin() + used[i]);\n        increasedNbKits = true;\n        break;\n      }\n    }\n    if (!increasedNbKits) {\n      nbServingsPossible[consideredIngredient].erase(\n          nbServingsPossible[consideredIngredient].begin() + consideredPack);\n    }\n  }\n  return nbKits;\n}\nint solveBf(int N, int P, vector<vector<pair<int, int>>> nbServingsPossible) {\n  if (N == 1) {\n    int nbKits = 0;\n    for (int j = 0; j < P; j++) {\n      if (nbServingsPossible[0][j].first <= nbServingsPossible[0][j].second)\n        nbKits++;\n    }\n    return nbKits;\n  }\n\n  assert(N == 2);\n\n  int nbKits = 0;\n  for (int j1 = 0; j1 < P; j1++) {\n    for (int j2 = 0; j2 < P; j2++) {\n      if (nbServingsPossible[0][j1].first <= nbServingsPossible[1][j2].second &&\n          nbServingsPossible[1][j2].first <= nbServingsPossible[0][j1].second) {\n        auto copy = nbServingsPossible;\n        copy[0].erase(copy[0].begin() + j1);\n        copy[1].erase(copy[1].begin() + j2);\n        int res = 1 + solveBf(N, P - 1, copy);\n        if (res > nbKits)\n          nbKits = res;\n      }\n    }\n  }\n  return nbKits;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    int N, P;\n    cin >> N >> P;\n\n    vector<float> R(N);\n    for (int i = 0; i < N; i++)\n      cin >> R[i];\n\n    vector<vector<float>> Q(N, vector<float>(P));\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        cin >> Q[i][j];\n      }\n    }\n\n    vector<vector<pair<int, int>>> nbServingsPossible =\n        computeNbServingsPossible(N, P, R, Q);\n\n    int nbKits = solve(N, P, nbServingsPossible);\n    cout << \"Case #\" << t + 1 << \": \" << nbKits << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nvector<string> solve(int R, int C, vector<string> grid) {\n  for (int i = 0; i < R; i++) {\n    for (int j = 0; j < C; j++) {\n      if (grid[i][j] != '?') {\n        char fillChar = grid[i][j];\n        for (int j2 = j; j2 >= 0; j2--) {\n          if (grid[i][j2] != '?' && grid[i][j2] != fillChar)\n            break;\n          grid[i][j2] = fillChar;\n        }\n        for (int j2 = j; j2 < C; j2++) {\n          if (grid[i][j2] != '?' && grid[i][j2] != fillChar)\n            break;\n          grid[i][j2] = fillChar;\n        }\n      }\n    }\n  }\n  for (int i = 0; i < R; i++) {\n    if (grid[i][0] == '?') {\n      if (i > 0)\n        grid[i] = grid[i - 1];\n    }\n  }\n  for (int i = R - 1; i >= 0; i--) {\n    if (grid[i][0] == '?') {\n      if (i < R - 1)\n        grid[i] = grid[i + 1];\n    }\n  }\n  return grid;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    int R, C;\n    cin >> R >> C;\n\n    vector<string> initialGrid(R);\n    for (int i = 0; i < R; i++)\n      cin >> initialGrid[i];\n\n    vector<string> finalGrid = solve(R, C, initialGrid);\n\n    cout << \"Case #\" << t + 1 << ':' << endl;\n    for (const string &r : finalGrid)\n      cout << r << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cout << setprecision(12);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    double D;\n    int N;\n    cin >> D >> N;\n\n    double maxTime = 0.0f;\n    for (int i = 0; i < N; i++) {\n      double K, S;\n      cin >> K >> S;\n      double time = (D - K) \/ S;\n      if (time > maxTime) {\n        maxTime = time;\n      }\n    }\n\n    double mySpeed = D \/ maxTime;\n    cout << \"Case #\" << t + 1 << \": \" << mySpeed << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\nbool is_good(const string &s) {\n  for (int i = 0; i < s.size() - 1; i++) {\n    if (s[i] == s[i + 1])\n      return false;\n  }\n  return true;\n}\nstring solve(int R, int O, int Y, int G, int B, int V) {\n  array<int, 3> vals = {R, Y, B};\n  string res;\n  while (true) {\n    auto valsMax = max_element(vals.begin(), vals.end());\n    if (*valsMax == 0)\n      break;\n\n    int maxIdx = distance(vals.begin(), valsMax);\n    char maxChar = \"RYB\"[maxIdx];\n\n    if (!res.empty() && maxChar == res.back()) {\n      auto valsCopy = vals;\n      valsCopy[maxIdx] = 0;\n\n      valsMax = max_element(valsCopy.begin(), valsCopy.end());\n      maxIdx = distance(valsCopy.begin(), valsMax);\n      maxChar = \"RYB\"[maxIdx];\n    }\n\n    res += maxChar;\n    vals[maxIdx]--;\n  }\n  if (res.front() == res.back()) {\n    for (int i = res.size() - 1; i > 0; i--) {\n      swap(res[i], res[i - 1]);\n      if (is_good(res))\n        return res;\n    }\n    return \"IMPOSSIBLE\";\n  } else\n    return res;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n\n    string res = solve(R, O, Y, G, B, V);\n    cout << \"Case #\" << t + 1 << \": \" << res << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Wellan","func":"#include <algorithm>\n#include <array>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <cstdlib>\n#include <deque>\n#include <forward_list>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <regex>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <valarray>\n#include <vector>\n\nusing namespace std;\n\ndouble compute(int N, const vector<double> &E, const vector<double> &S,\n               const vector<vector<double>> &D, int U, int V, double curE = 0.0,\n               double curS = 0.0) {\n  double res = 0.0;\n  for (int i = U; i < V; i++) {\n    double dist = D[i][i + 1];\n    if (curE < dist || (curS == S[i] && curE < E[i])) {\n      \/\/ Force change\n      curE = E[i];\n      curS = S[i];\n\n      curE -= dist;\n      res += dist \/ curS;\n    } else {\n      \/\/ Try change\n      double t1 =\n          dist \/ S[i] + compute(N, E, S, D, i + 1, V, E[i] - dist, S[i]);\n      double t2 =\n          dist \/ curS + compute(N, E, S, D, i + 1, V, curE - dist, curS);\n      return res + min(t1, t2);\n    }\n  }\n  return res;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cout << setprecision(12);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    int N, Q;\n    cin >> N >> Q;\n\n    vector<double> E(N);\n    vector<double> S(N);\n    for (int i = 0; i < N; i++) {\n      cin >> E[i] >> S[i];\n    }\n\n    vector<vector<double>> D(N, vector<double>(N));\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        cin >> D[i][j];\n      }\n    }\n\n    cout << \"Case #\" << t + 1 << \":\";\n    for (int q = 0; q < Q; q++) {\n      int U, V;\n      cin >> U >> V;\n      U--;\n      V--;\n\n      double res = compute(N, E, S, D, U, V);\n\n      cout << \" \" << res;\n    }\n    cout << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    string n;\n    cin >> n;\n    int len = n.size();\n\n    for (int i = len - 2; i >= 0; --i) {\n      if (n[i] > n[i + 1]) {\n        --n[i];\n        for (int j = i + 1; j < len; ++j) {\n          n[j] = '9';\n        }\n      }\n    }\n\n    int st = 0;\n    while (n[st] == '0')\n      ++st;\n    n = n.substr(st);\n\n    cout << n << endl;\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\npriority_queue<pair<int, int>> q;\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    int n, k;\n    cin >> n >> k;\n\n    q.push(make_pair(n, 0));\n    int min_lr = 0, max_lr = 0;\n    for (int i = 0; i < k; ++i) {\n      auto v = q.top();\n      auto tv = make_pair(v.first, -v.second);\n      q.pop();\n      int pos = tv.second + tv.first \/ 2;\n      int to_l = pos - tv.second;\n      int to_r = tv.second + tv.first - pos - 1;\n      if (to_l)\n        q.push(make_pair(to_l, -tv.second));\n      if (to_r)\n        q.push(make_pair(to_r, -(pos + 1)));\n      if (i == k - 1) {\n        max_lr = max(to_l, to_r);\n        min_lr = min(to_l, to_r);\n      }\n    }\n    cout << max_lr << \" \" << min_lr << endl;\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = 0; i <= s.size() - k; ++i) {\n      if (s[i] == '-') {\n        for (int j = 0; j < k; ++j) {\n          s[i + j] = s[i + j] == '-' ? '+' : '-';\n        }\n        ++ans;\n      }\n    }\n    bool fl = true;\n    for (auto ch : s) {\n      fl &= ch == '+';\n    }\n    if (fl) {\n      cout << ans << endl;\n    } else {\n      cout << \"IMPOSSIBLE\" << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\/\/ typedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int mx[4] = {1, 0, -1, 0};\nconst int my[4] = {0, 1, 0, -1};\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 15;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\nstruct pll {\n  ll l, r;\n  int i;\n};\n\nauto comp_l = [](const pll a, const pll b) {\n  return a.l > b.l || a.l == b.l && (a.r > b.r || a.r == b.r && a.i > b.i);\n};\n\nauto comp_r = [](const pll a, const pll b) {\n  return a.r < b.r || a.r == b.r && (a.l < b.l || a.l == b.l && a.i < b.i);\n};\n\nint n, p;\nll R[N];\nll A[N][N];\npll B[N][N];\nint ptr[N];\nmultiset<pll, decltype(comp_l)> by_l(comp_l);\nmultiset<pll, decltype(comp_r)> by_r(comp_r);\n\npll get_bounds(ll Q, int tp) {\n  ll r = 10 * Q \/ (9 * R[tp]);\n  ll l = 10 * Q;\n  ll denom = 11 * R[tp];\n  l = (l + denom - 1) \/ denom;\n  return pll{l, r, tp};\n}\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    cin >> n >> p;\n    for (int i = 0; i < n; ++i) {\n      cin >> R[i];\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < p; ++j) {\n        cin >> A[i][j];\n      }\n      sort(A[i], A[i] + p);\n      for (int j = 0; j < p; ++j) {\n        B[i][j] = get_bounds(A[i][j], i);\n      }\n    }\n    by_l.clear();\n    by_r.clear();\n    for (int i = 0; i < n; ++i) {\n      by_l.insert(B[i][0]);\n      by_r.insert(B[i][0]);\n      ptr[i] = 0;\n    }\n    ll ans = 0;\n    for (;;) {\n      auto x = *by_l.begin();\n      auto y = *by_r.begin();\n      if (y.r < x.l) {\n        by_r.erase(by_r.find(y));\n        by_l.erase(by_l.find(y));\n        ++ptr[y.i];\n        if (ptr[y.i] != p) {\n          by_l.insert(B[y.i][ptr[y.i]]);\n          by_r.insert(B[y.i][ptr[y.i]]);\n        }\n      } else {\n        ++ans;\n        by_l.clear();\n        by_r.clear();\n        for (int i = 0; i < n; ++i) {\n          ++ptr[i];\n          if (ptr[i] != p) {\n            by_l.insert(B[i][ptr[i]]);\n            by_r.insert(B[i][ptr[i]]);\n          }\n        }\n      }\n      if (by_l.size() != n) {\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst int mx[4] = {1, 0, -1, 0};\nconst int my[4] = {0, 1, 0, -1};\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\nstring A[30];\nint r, c;\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \":\\n\";\n    cin >> r >> c;\n    for (int i = 0; i < r; ++i) {\n      cin >> A[i];\n    }\n    for (int j = 0; j < c; ++j) {\n      for (int i = 0; i < r; ++i) {\n        if (A[i][j] != '?') {\n          for (int ii = i - 1; ii >= 0 && A[ii][j] == '?'; --ii) {\n            A[ii][j] = A[i][j];\n          }\n          bool is_any = false;\n          for (int ii = i + 1; ii < r; ++ii) {\n            is_any |= A[ii][j] != '?';\n          }\n          if (!is_any) {\n            for (int ii = i + 1; ii < r; ++ii) {\n              A[ii][j] = A[i][j];\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; ++i) {\n      char q = '?';\n      for (int j = 0; j < c; ++j) {\n        if (A[i][j] == '?' && q != '?') {\n          A[i][j] = q;\n        }\n        q = A[i][j];\n      }\n      q = '?';\n      for (int j = c - 1; j >= 0; --j) {\n        if (A[i][j] == '?' && q != '?') {\n          A[i][j] = q;\n        }\n        q = A[i][j];\n      }\n    }\n    for (int i = 0; i < r; ++i) {\n      cout << A[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    int d, n;\n    cin >> d >> n;\n    double slowest_t = 0;\n    for (int i = 0; i < n; ++i) {\n      int k, s;\n      cin >> k >> s;\n      slowest_t = max(slowest_t, double(d - k) \/ s);\n    }\n    cout << fixed << setprecision(10) << (d \/ slowest_t) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 500005;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\n\/\/ Red\t\t\t\t\t->\tYellow, Blue, Green\n\/\/ Yellow\t\t\t\t->\tRed, Blue, Violet\n\/\/ Blue\t\t\t\t\t->\tRed, Yellow, Orange\n\/\/ Orange(red + yellow)\t->\tBlue\n\/\/ Green(yellow + blue)\t->\tRed\n\/\/ Violet(red + blue)\t->\tYellow\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    int n, R, O, Y, G, B, V;\n    cin >> n >> R >> O >> Y >> G >> B >> V;\n    string ans = \"\";\n\n    \/\/ Try to alternate two colours\n    if (R == G && R + G == n || O == B && O + B == n || V == Y && V + Y == n) {\n      string two = R ? \"RG\" : (O ? \"OB\" : \"VY\");\n      int cnt = max(R, max(Y, B));\n      for (; cnt--;)\n        ans += two;\n    }\n    \/\/ for x two-colours at least x+1 of opposite one-colour\n    else if ((B > O || O == 0) && (R > G || G == 0) && (Y > V || V == 0)) {\n      R -= G;\n      B -= O;\n      Y -= V;\n      if (R <= B + Y && B <= R + Y && Y <= R + B) {\n        pair<int, char> cols[] = {make_pair(R, 'R'), make_pair(B, 'B'),\n                                  make_pair(Y, 'Y')};\n        sort(cols, cols + 3);\n        int fst_spare = cols[0].first - (cols[2].first - cols[1].first);\n        for (int i = 0; i < cols[2].first; ++i) {\n          ans += cols[2].second;\n          if (cols[1].first) {\n            --cols[1].first;\n            ans += cols[1].second;\n            if (fst_spare) {\n              --fst_spare;\n              ans += cols[0].second;\n            }\n          } else {\n            ans += cols[0].second;\n          }\n        }\n      }\n      string x = ans;\n      ans = \"\";\n      for (char q : x) {\n        for (int i = 0; i < (q == 'R' ? G : (q == 'B' ? O : V)); ++i) {\n          ans += (q == 'R' ? \"RG\" : (q == 'B' ? \"BO\" : \"YV\"));\n        }\n        (q == 'R' ? G : (q == 'B' ? O : V)) = 0;\n        ans += q;\n      }\n    }\n\n    if (ans.size() != n && ans != \"\") {\n      cout << \"PROBLEM \\n\";\n    }\n    for (int i = 0; i < ans.size(); ++i) {\n      if (ans[i] == ans[(i + 1) % ans.size()]) {\n        cout << \"PROBLEM\\n\";\n      }\n      (ans[i] == 'R' ? R : (ans[i] == 'B' ? B : Y)) -= 1;\n    }\n    if ((R != 0 || B != 0 || Y != 0) && ans != \"\") {\n      cout << \"PROBLEM\\n\";\n    }\n\n    cout << (ans == \"\" ? \"IMPOSSIBLE\" : ans) << endl;\n  }\n  return 0;\n}\n"}
{"target":"Witalia","func":"\n#include <algorithm>\n#include <cstdlib>\n#include <iostream>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <stdio.h>\n#include <string>\n#include <vector>\n\n#include <complex>\n#include <fstream>\n#include <iomanip>\n#include <limits.h>\n#include <list>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <time.h>\n\n#include <atomic>\n#include <cassert>\n#include <chrono>\n#include <condition_variable>\n#include <mutex>\n#include <random>\n#include <regex>\n#include <thread>\n#include <unordered_map>\n#include <unordered_set>\n#include <valarray>\nusing namespace std::chrono;\n\nusing namespace std;\n\ntypedef double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\n\/\/ const int mx[4] = { 1, 0, -1, 0 };\n\/\/ const int my[4] = { 0, 1, 0, -1 };\n\nconst int Inf = 1000000000;\nconst int Mi = 1000000007;\nconst int N = 105;\nconst int M = 100005;\n\/\/ const int K = 20;\nconst ld eps = 10e-7;\nconst ld PI = 2 * acos(0.0);\nconst ll InfLL = ll(Inf) * ll(Inf);\n\nunsigned rand16() { return rand() % (1 << 16); }\nunsigned rand32() { return (rand16() << 16) + rand16(); }\null rand64() { return (((ull)rand32()) << 32) + rand32(); }\nint rand(int L, int R) {\n  if (L > R)\n    return R;\n  return rand32() % (R - L + 1) + L;\n}\nld random(ld L, ld R) {\n  return rand(ceil((L - eps) * 100), floor((R + eps) * 100)) \/ 100.0;\n}\n\nll Abs(ll a) { return a < 0 ? -a : a; }\nll sqr(ll a) { return a * a; }\nll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }\n\nstring toStr(int n) {\n  char s[100];\n  sprintf(s, \"%d\", n);\n  return string(s);\n}\n\nll S[N], E[N], A[N][N];\nll A_nxt[N];\nld ans[N];\n\n\/\/#define ONLINE_JUDGE\nint main() {\n  std::ios_base::sync_with_stdio(0);\n\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    cout << \"Case #\" << (t + 1) << \": \";\n\n    int n, q;\n    cin >> n >> q;\n    for (int i = 0; i < n; ++i) {\n      cin >> E[i] >> S[i];\n    }\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        cin >> A[i][j];\n      }\n      A_nxt[i] = A[i][i + 1];\n    }\n    ans[n - 1] = 0;\n    for (int i = n - 2; i >= 0; --i) {\n      ans[i] = 1e18;\n      ll dst_nxt = 0;\n      for (int j = i + 1; j < n; ++j) {\n        dst_nxt += A_nxt[j - 1];\n        if (E[i] >= dst_nxt) {\n          ans[i] = min(ans[i], double(dst_nxt) \/ S[i] + ans[j]);\n        } else {\n          break;\n        }\n      }\n    }\n    for (int i = 0; i < q; ++i) {\n      int a, b;\n      cin >> a >> b;\n      cout << fixed << setprecision(10) << ans[0] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int I = 1; I <= t; I++) {\n    string num;\n    cin >> num;\n    num += '9' + 1;\n    int p = 0;\n    for (int i = 1; i < num.length(); i++)\n      if (num[i] > num[i - 1])\n        p = i;\n      else if (num[i] < num[i - 1])\n        break;\n    num[p]--;\n    for (int i = p + 1; i < num.length(); i++)\n      num[i] = '9';\n    num.resize(num.length() - 1);\n    int i;\n    for (i = 0; i < num.length(); i++)\n      if (num[i] != '0')\n        break;\n    cout << \"Case #\" << I << \": \";\n    cout << (num.c_str()) + i << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <iostream>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <utility>\nusing namespace std;\ntypedef pair<long long, long long> pLL;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-1-attempt0.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n\n  for (int I = 1; I <= t; I++) {\n    long long n, k;\n    cin >> n >> k;\n    priority_queue<long long> q;\n    map<long long, long long> m;\n    map<long long, bool> b;\n    m[n] = 1;\n    q.push(n);\n    b[n] = true;\n    long long cnt = k;\n    pLL ans;\n    while (1) {\n      long long curr = q.top();\n      q.pop();\n      long long currNum = m[curr];\n      \/\/ cout<<curr<<\" \"<<m[curr]<<\" \"<<cnt<<endl;\n      if (currNum >= cnt) \/\/\u627e\u5230\u7b54\u6848\n      {\n        ans = pLL(curr \/ 2, (curr - 1) \/ 2);\n        break;\n      }\n      cnt -= currNum;\n      if (curr & 1) \/\/\u5947\u6570\n      {\n        long long x = curr \/ 2;\n        m[x] += currNum * 2;\n        m[curr] = 0;\n        if (!b[x]) {\n          b[x] = true;\n          q.push(x);\n        }\n      } else {\n        long long x = curr \/ 2, y = curr \/ 2 - 1;\n        m[x] += currNum;\n        m[y] += currNum;\n        m[curr] = 0;\n        if (!b[x]) {\n          b[x] = true;\n          q.push(x);\n        }\n        if (!b[y]) {\n          b[y] = true;\n          q.push(y);\n        }\n      }\n    }\n    cout << \"Case #\" << I << \": \" << ans.first << \" \" << ans.second << endl;\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <iostream>\n#include <stdio.h>\n#include <string>\n\/\/#include<bits\/stdc++.h>\nusing namespace std;\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"Qualification.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) \/\/ 100\n  {\n    int ans = 0, k;\n    string pancake;\n    cin >> pancake >> k;\n    int length = pancake.length();\n\n    for (int j = 0; j <= length - k; j++) \/\/ 1000\n      if (pancake[j] == '-') {\n        ans++;\n        for (int ii = 0; ii < k; ii++) \/\/ 1000\n          pancake[j + ii] = 88 - pancake[j + ii];\n      }\n\n    for (int j = length - k + 1; j < length; j++)\n      if (pancake[j] == '-')\n        ans = -1;\n    cout << \"Case #\" << i + 1 << \": \";\n    if (ans == -1)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\n\nusing namespace std;\nint n, p;\nint need[55];\nint qua[55][55];\n\nbool dfs(int deep, int l, int r) {\n  if (l > r)\n    return false;\n  if (deep == n)\n    return true;\n  int i;\n  for (i = 1; i <= p; i++)\n    if (qua[deep + 1][i] != -1) {\n      int beishu1 =\n          1.0 * qua[deep + 1][i] \/ (need[deep + 1] * 1.1) + 1 - (1e-6); \/\/\u5c0f\n      int beishu2 =\n          1.0 * qua[deep + 1][i] \/ (need[deep + 1] * 0.9) + (1e-6); \/\/\u5927\n      \/\/\t\tif(max(beishu1,l) > min(beishu2,r))\n      \/\/\t\t\tbreak;\n      if (dfs(deep + 1, max(beishu1, l), min(beishu2, r))) {\n        qua[deep + 1][i] = -1;\n        return true;\n      }\n    }\n  \/\/ qua[deep+1][0]=i;\n  return false;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  int t;\n  cin >> t;\n  for (int I = 1; I <= t; I++) {\n    memset(need, 0, sizeof(need));\n    memset(qua, 0, sizeof(qua));\n    int ans = 0;\n    cin >> n >> p;\n    for (int i = 1; i <= n; i++)\n      cin >> need[i];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= p; j++)\n        cin >> qua[i][j];\n    for (int i = 1; i <= n; i++)\n      qua[i][0] = 1;\n    for (int i = 1; i <= n; i++)\n      sort(&qua[i][1], &qua[i][p] + 1);\n\n    for (int i = 1; i <= p; i++) {\n      int beishu1 = 1.0 * qua[1][i] \/ (need[1] * 1.1) + 1 - (1e-6);\n      int beishu2 = 1.0 * qua[1][i] \/ (need[1] * 0.9) + (1e-6);\n      \/\/ cout<<\"beishu: \"<<beishu1<<\" \"<<beishu2<<endl;\n      if (dfs(1, beishu1, beishu2))\n        ans++;\n    }\n    cout << \"Case #\" << I << \": \" << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <algorithm>\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <string>\n#include <vector>\nusing namespace std;\nint n, m;\nchar cake[30][30];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  int t;\n  scanf(\"%d\", &t);\n  for (int I = 1; I <= t; I++) {\n    memset(cake, 0, sizeof(cake));\n    scanf(\"%d%d\", &n, &m);\n\n    for (int i = 0; i < n; i++)\n      scanf(\"%s\", cake[i]);\n    vector<int> v;\n    for (int i = 0; i < m; i++)\n      for (int j = 0; j < n; j++)\n        if (cake[j][i] != '?') {\n          v.push_back(i);\n          break;\n        }\n    \/\/\t\tcout<<\"size=\"<<v.size()<<endl;\n    \/\/\t\tfor(int i=0;i<v.size();i++)\n    \/\/\t\t\tcout<<v[i]<<\" \";\n    \/\/\t\tcout<<endl;\n    int sz = v.size();\n    v.push_back(m);\n    for (int i = 0; i < sz; i++) {\n      int ii, jj;\n      for (ii = 0; ii < n; ii++)\n        if (cake[ii][v[i]] != '?')\n          break;\n      for (jj = ii - 1; jj >= 0; jj--)\n        cake[jj][v[i]] = cake[jj + 1][v[i]];\n      for (ii = 0; ii < n; ii++)\n        if (cake[ii][v[i]] == '?')\n          cake[ii][v[i]] = cake[ii - 1][v[i]];\n      for (int j = v[i] + 1; j < v[i + 1]; j++)\n        for (int ii = 0; ii < n; ii++)\n          cake[ii][j] = cake[ii][j - 1];\n    }\n    for (int i = v[0] - 1; i >= 0; i--)\n      for (int j = 0; j < n; j++)\n        cake[j][i] = cake[j][i + 1];\n\n    printf(\"Case #%d:\\n\", I);\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++)\n        printf(\"%c\", cake[i][j]);\n      printf(\"\\n\");\n    }\n    \/\/ printf(\"%s\\n\",cake[i]);\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A-small-attempt0.out\", \"w\", stdout);\n  cin >> t;\n  for (int I = 1; I <= t; I++) {\n    int d, n, k, s;\n    printf(\"Case #%d: \", I);\n    cin >> d >> n;\n    double time = -1;\n    for (int i = 1; i <= n; i++) {\n      cin >> k >> s;\n      time = max(time, 1.0 * (d - k) \/ s);\n    }\n    printf(\"%.6lf\\n\", d \/ time);\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <bits\/stdc++.h>\nusing namespace std;\nint n, r, o, y, g, b, v;\nstruct Node {\n  char c;\n  Node *next;\n};\nvoid solve1() {\n  \/\/ r,y,b\n  int m[3];\n  char mc[3];\n  if (r >= y && y >= b) {\n    m[0] = r;\n    m[1] = y;\n    m[2] = b;\n    mc[0] = 'R';\n    mc[1] = 'Y';\n    mc[2] = 'B';\n  } else if (r >= b && b >= y) {\n    m[0] = r;\n    m[1] = b;\n    m[2] = y;\n    mc[0] = 'R';\n    mc[1] = 'B';\n    mc[2] = 'Y';\n  } else if (y >= r && r >= b) {\n    m[0] = y;\n    m[1] = r;\n    m[2] = b;\n    mc[0] = 'Y';\n    mc[1] = 'R';\n    mc[2] = 'B';\n  } else if (y >= b && b >= r) {\n    m[0] = y;\n    m[1] = b;\n    m[2] = r;\n    mc[0] = 'Y';\n    mc[1] = 'B';\n    mc[2] = 'R';\n  } else if (b >= y && y >= r) {\n    m[0] = b;\n    m[1] = y;\n    m[2] = r;\n    mc[0] = 'B';\n    mc[1] = 'Y';\n    mc[2] = 'R';\n  } else if (b >= r && r >= y) {\n    m[0] = b;\n    m[1] = r;\n    m[2] = y;\n    mc[0] = 'B';\n    mc[1] = 'R';\n    mc[2] = 'Y';\n  }\n  if (m[0] > m[1] + m[2])\n    cout << \"IMPOSSIBLE\" << endl;\n  else {\n    Node *last = NULL, *head;\n    for (int i = 1; i <= m[0]; i++) {\n      head = new Node();\n      head->c = mc[0];\n      head->next = last;\n      last = head;\n    }\n    Node *temp = head;\n    while (temp->next != NULL)\n      temp = temp->next;\n    temp->next = head;\n    temp = head;\n    for (int i = 1; i <= m[1]; i++) {\n      Node *nod = new Node();\n      nod->c = mc[1];\n      nod->next = temp->next;\n      temp->next = nod;\n      temp = temp->next->next;\n    }\n    for (int i = 1; i <= m[2]; i++) {\n      Node *nod = new Node();\n      nod->c = mc[2];\n      nod->next = temp->next;\n      temp->next = nod;\n      temp = temp->next->next;\n    }\n    temp = head;\n    while (temp->next != head) {\n      cout << temp->c;\n      temp = temp->next;\n    }\n    cout << temp->c << endl;\n  }\n}\nint main() {\n  int t;\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B-small-attempt0.out\", \"w\", stdout);\n  cin >> t;\n  for (int I = 1; I <= t; I++) {\n    printf(\"Case #%d: \", I);\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    solve1();\n  }\n  return 0;\n}\n"}
{"target":"wmpeng","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\nint n, q;\nint u, v;\nlong long dis[1005][1005];\nstruct Horse {\n  int maxDis, speed;\n} horse[1005];\n\nvoid init() {\n  memset(dis, 0, sizeof(dis));\n  memset(horse, 0, sizeof(horse));\n}\ndouble dp[1005][1005]; \/\/ dp[i][j]\u8868\u793a\u7528\u7b2cj\u5339\u9a6c\u5230\u8fbe\u7b2ci\u4e2a\u70b9\uff0c\u6700\u5c0f\u7684\u65f6\u95f4\n\nint main() {\n  int t;\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C-small-attempt0.out\", \"w\", stdout);\n  cin >> t;\n  for (int I = 1; I <= t; I++) {\n    printf(\"Case #%d: \", I);\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++)\n      cin >> horse[i].maxDis >> horse[i].speed;\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        cin >> dis[i][j];\n    long long dis2[1005] = {0};\n    for (int i = 1; i < n; i++)\n      dis2[i] = dis[i][i + 1];\n    cin >> u >> v;\n    memset(dp, 127, sizeof(dp));\n    dp[0][1] = dp[1][1] = 0;\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= i; j++) {\n        long long Dis = 0;\n        for (int k = j; k < i; k++)\n          Dis += dis2[k];\n        if (Dis > horse[j].maxDis) {\n          dp[i][j] = 10000000000000ll;\n          continue;\n        }\n        if (i != j)\n          dp[i][j] = dp[i - 1][j] + 1.0 * dis2[i - 1] \/ horse[j].speed;\n        else\n          for (int k = 1; k < i; k++)\n            dp[i][j] = min(dp[i][j], dp[i][k]);\n      }\n    \/\/ cout<<dp[n][n]<<endl;\n    printf(\"%.6lf\\n\", dp[n][n]);\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nvoid funcA(int t, mint n) {\n  stringstream ss;\n  ss << n;\n  string d = ss.str();\n  string allN = \"\";\n  if (d.size() > 1) {\n    vector<char> fallback(d.size() - 1, '9');\n    allN = string(fallback.begin(), fallback.end());\n  }\n  string ans = \"\";\n  char prev = '0';\n  int i;\n  for (i = 0; i < d.size(); i++) {\n    if (d[i] < prev) {\n      break;\n    }\n    prev = d[i];\n  }\n  if (i == d.size()) {\n    cout << \"Case #\" << t << \": \" << n << endl;\n    return;\n  }\n  i--;\n  char repl = d[i];\n  char mnChar = d[i] - 1;\n  if (mnChar == '0') {\n    cout << \"Case #\" << t << \": \" << allN << endl;\n    return;\n  }\n  while (i >= 0 && d[i] == repl) {\n    i--;\n  }\n  d[i + 1] = mnChar;\n  int pos = i + 2;\n  while (pos < d.size()) {\n    d[pos++] = '9';\n  }\n  cout << \"Case #\" << t << \": \" << d << endl;\n}\nvoid funcB(int t, mint n) {\n  for (int j = n; j > 0; j--) {\n    stringstream ss;\n    ss << j;\n    string d = ss.str();\n    char prev = '0';\n    int i;\n    for (i = 0; i < d.size(); i++) {\n      if (d[i] < prev) {\n        break;\n      }\n      prev = d[i];\n    }\n    if (i == d.size()) {\n      cout << \"Case #\" << t << \": \" << d << endl;\n      break;\n    }\n  }\n}\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"Bout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  mint n;\n  for (int t = 1; t <= T; t++) {\n    \/\/ stringstream ss1,ss2;\n    \/\/ cout.rdbuf(ss1.rdbuf() );\n    cin >> n;\n    funcA(t, n);\n    \/\/ cout.rdbuf(ss2.rdbuf() );\n    \/\/ funcB(t, n);\n    \/\/ assert(ss1.str() == ss2.str());\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\n\nstruct seg {\n  mint len;\n  mint lft;\n  seg(mint lenn, mint lftt) : len(lenn), lft(lftt) {}\n  bool operator<(const seg &a) const {\n    return (len == a.len) ? (lft < a.lft) : (len < a.len);\n  }\n};\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"cout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    mint n, k;\n    cin >> n >> k;\n    priority_queue<seg> pq;\n    pq.push(seg(n, 0));\n    mint mxl = numeric_limits<mint>::min(), mnl = numeric_limits<mint>::max();\n    while (k--) {\n      seg top = pq.top();\n      pq.pop();\n      mint lft = top.lft;\n      mint len = top.len;\n      mint mid = lft + (len - 1) \/ 2;\n      mint lfl = mid - lft;\n      mint rgl = lft + len - 1 - mid;\n      if (lfl) {\n        pq.push(seg(lfl, lft));\n      }\n      if (rgl) {\n        pq.push(seg(rgl, mid + 1));\n      }\n      mxl = rgl;\n      mnl = lfl;\n    }\n    cout << \"Case #\" << t << \": \" << mxl << \" \" << mnl << endl;\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"Aout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  char s[1005];\n  for (int t = 1; t <= T; t++) {\n    cin >> s;\n    int k;\n    int len = strlen(s);\n    vector<int> flips(len, 0);\n    cin >> k;\n    int flipss = 0;\n    int tflips = 0;\n    for (int i = 0; i < (len - k + 1); i++) {\n      if (i >= k) {\n        tflips -= flips[i - k];\n      }\n      int fp = (tflips & 1);\n      int fpped = (s[i] != '+');\n      if (fp ^ fpped) {\n        flips[i] = 1;\n        flipss++;\n        tflips++;\n      }\n    }\n    \/\/ cout << flipss << endl;\n    printf(\"Case #%d: \", t);\n    int i;\n    for (i = len - k + 1; i < len; i++) {\n      if (i >= k) {\n        tflips -= flips[i - k];\n      }\n      int fp = (tflips & 1);\n      int fpped = (s[i] != '+');\n      if (fp ^ fpped) {\n        cout << \"IMPOSSIBLE\" << endl;\n        break;\n      }\n    }\n    if (i == len) {\n      cout << flipss << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\npair<int, int> q[1005][1005];\nvector<int> v[1005];\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"Bout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int r[1005];\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < (n); i++) {\n      cin >> r[i];\n    }\n\n    int val;\n    for (int i = 0; i < (n); i++) {\n      v[i].resize(p);\n      for (int j = 0; j < (p); j++) {\n        cin >> v[i][j];\n      }\n      sort(v[i].begin(), v[i].end());\n    }\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (p); j++) {\n        q[i][j].first = (v[i][j] * 10 + 11 * r[i] - 1) \/ (11 * r[i]);\n        q[i][j].second = (v[i][j] * 10) \/ (9 * r[i]);\n      }\n    }\n    int mnp[1005] = {0}, cnt = 0;\n    for (int i = 0; i < (p); i++) {\n      int mn = q[0][i].first, mx = q[0][i].second;\n      \/\/ cout << mn <<\" \"<<mx<<endl;\n      bool ok = true;\n      if (mn > mx) {\n        ok = false;\n      }\n      for (int j = 1; j < n && ok; j++) {\n        int pos = mnp[j];\n        while (pos < p && q[j][pos].second < mn) {\n          pos++;\n        }\n        mnp[j] = pos;\n        mx = min(mx, q[j][pos].second);\n        mn = max(mn, q[j][pos].first);\n        if (pos == p || mn > mx) {\n          ok = false;\n          break;\n        }\n        \/\/ cout << mn <<\" \"<<mx<<endl;\n      }\n      if (ok) {\n        cnt++;\n        for (int j = 1; j < n; j++) {\n          mnp[j]++;\n        }\n      }\n    }\n    printf(\"Case #%d: %d\\n\", t, cnt);\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nchar s[30][30];\nstring tmp[30];\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"Aout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int r, c;\n    cin >> r >> c;\n    for (int i = 0; i < (r); i++) {\n      cin >> s[i];\n      tmp[i] = string(s[i]);\n    }\n    for (int i = 0; i < (r); i++) {\n      int prevSt = 0;\n      int cur = 0;\n      char last = '?';\n      while (cur < c) {\n        if (s[i][cur] != '?') {\n          for (int j = prevSt; j < cur; j++) {\n            s[i][j] = s[i][cur];\n          }\n          prevSt = cur + 1;\n          last = s[i][cur];\n        }\n        cur++;\n      }\n      if (last != '?') {\n        while (prevSt < c) {\n          s[i][prevSt++] = last;\n        }\n      }\n    }\n    char lastC[30];\n    for (int i = 0; i < (c); i++) {\n      lastC[i] = '?';\n    }\n    for (int i = 0; i < (r); i++) {\n      for (int j = 0; j < (c); j++) {\n        if (s[i][j] != '?') {\n          lastC[j] = s[i][j];\n          continue;\n        }\n        s[i][j] = lastC[j];\n        for (int k = i + 1; k < r; k++) {\n          if (s[k][j] != '?') {\n            s[i][j] = s[k][j];\n            lastC[j] = s[k][j];\n            break;\n          }\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n    for (int i = 0; i < (r); i++) {\n      cout << s[i] << endl;\n    }\n    \/*int sm = 0;\n    bool done[30]= {0};\n    Rep(i,r)\n    {\n        Rep(j,c)\n        {\n            if(tmp[i][j] != '?')\n            {\n                assert(tmp[i][j] == s[i][j]);\n            }\n            if(!done[s[i][j]-'A'])\n                {\n                    done[s[i][j]-'A'] = true;\n                    int dx = 0, dy = 0;\n                    for(int k = i; k < r && s[k][j] == s[i][j]; k++)\n                    {\n                        dx++;\n                    }\n                    for(int k = j; k < c && s[i][k] == s[i][j]; k++)\n                    {\n                        cout << s[i][k] <<\" \" <<j<<\" \"<< i << endl;\n                        dy++;\n                    }\n                    sm += dx*dy;\n                    cout << dx <<\" \"<<dy << \" \"<<s[i][j] << endl;\n                }\n        }\n    }\n    assert(sm == r*c);*\/\n  }\n\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nbool willCatch(int sp, int pos, double s, int d) {\n  if (sp >= s) {\n    return false;\n  }\n  if (pos * s >= d * (s - sp)) {\n    return false;\n  }\n  return true;\n}\nint main() {\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"Aout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int d, n;\n    cin >> d >> n;\n    \/\/ cout << d <<\" \"<<n << endl;\n    vector<int> sp(n), pos(n);\n    for (int i = 0; i < (n); i++) {\n      cin >> pos[i] >> sp[i];\n      \/\/ cout << pos[i] <<\" \"<<sp[i] <<endl;\n    }\n    double lo = 0.0, hi = 10000.0 * 10000000000.0;\n    \/\/ cout << std::setprecision(10) << std::fixed;\n    while ((((hi - lo) < 0) ? (-(hi - lo)) : (hi - lo)) > 1e-10) {\n      double mid = (lo + hi) \/ 2;\n      \/\/ cout <<fixed <<lo <<\" \"<<hi << \" \" << mid <<endl;\n      if (mid == lo || mid == hi) {\n        break;\n      }\n      bool ok = true;\n      for (int i = 0; i < (n); i++) {\n        if (willCatch(sp[i], pos[i], mid, d)) {\n          ok = false;\n          break;\n        }\n      }\n      \/\/ cout << ok << endl;\n      if (ok) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    printf(\"Case #%d: %.9f\\n\", t, lo);\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"Bout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    printf(\"Case #%d: \", t);\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    vector<pair<int, char>> vv(3);\n    vv[0] = make_pair(r, 'R');\n    vv[1] = make_pair(y, 'Y');\n    vv[2] = make_pair(b, 'B');\n    sort(vv.begin(), vv.end(), greater<pair<int, char>>());\n    if (vv[0].first > vv[1].first + vv[2].first) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      list<char> l;\n      int ext = vv[0].first - vv[2].first - (vv[1].first - vv[2].first);\n      while (vv[2].first) {\n        l.push_back(vv[0].second);\n        l.push_back(vv[1].second);\n        if (ext) {\n          l.push_back(vv[0].second);\n          ext--;\n        }\n        l.push_back(vv[2].second);\n        vv[0].first--;\n        vv[1].first--;\n        vv[2].first--;\n      }\n      while (vv[1].first) {\n        l.push_back(vv[0].second);\n        l.push_back(vv[1].second);\n        vv[0].first--;\n        vv[1].first--;\n      }\n      for (auto it = l.begin(); it != l.end(); it++) {\n        printf(\"%c\", *it);\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"woodpecker112358","func":"#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\ntypedef long long mint;\ntypedef unsigned long long umint;\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"Cout.txt\", \"w\", stdout);\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, q;\n    cin >> n >> q;\n    vector<int> E(n), S(n);\n    for (int i = 0; i < (n); i++) {\n      cin >> E[i] >> S[i];\n    }\n    vector<vector<mint>> v(n, vector<mint>(n));\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++) {\n        scanf(\"%lld\", &v[i][j]);\n      }\n      v[i][i] = 0;\n    }\n\n    for (int k = 0; k < (n); k++) {\n      for (int i = 0; i < (n); i++) {\n        for (int j = 0; j < (n); j++) {\n          if (v[i][k] != -1 && v[k][j] != -1) {\n            if (v[i][j] == -1 || v[i][j] > v[i][k] + v[k][j]) {\n              v[i][j] = v[i][k] + v[k][j];\n            }\n          }\n        }\n      }\n    }\n    \/*Rep(i,n)\n    {\n        Rep(j,n)\n        {\n            cout << v[i][j] << \" \";\n        }\n        cout << endl;\n    }*\/\n    vector<vector<double>> d(n, vector<double>(n, 0.0));\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++) {\n        if (E[i] >= v[i][j] && v[i][j] != -1) {\n          d[i][j] = v[i][j] \/ (S[i] * 1.0);\n        } else {\n          d[i][j] = -1.0;\n        }\n      }\n    }\n    for (int k = 0; k < (n); k++) {\n      for (int i = 0; i < (n); i++) {\n        for (int j = 0; j < (n); j++) {\n          if (d[i][k] >= -.5 && d[k][j] >= -.5) {\n            if (d[i][j] < -.5 || d[i][j] > d[i][k] + d[k][j]) {\n              d[i][j] = d[i][k] + d[k][j];\n            }\n          }\n        }\n      }\n    }\n    \/*cout << endl;\n    Rep(i,n)\n    {\n        Rep(j,n)\n        {\n            cout << d[i][j] << \" \";\n        }\n        cout << endl;\n    }*\/\n    printf(\"Case #%d: \", t);\n    int uu, vv;\n    for (int i = 0; i < (q); i++) {\n      cin >> uu >> vv;\n      printf(\" %.9f\", d[uu - 1][vv - 1]);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int B = 18;\n\nll pw10[B + 1];\n\nvoid init() {\n  pw10[0] = 1;\n  for (int i = 1; i <= B; i++)\n    pw10[i] = pw10[i - 1] * 10;\n}\n\nbool check(ll N) {\n  int last = 0;\n  for (int i = B; i >= 0; i--) {\n    int c = N \/ pw10[i] % 10;\n    if (c < last)\n      return false;\n    last = c;\n  }\n  return true;\n}\n\nint main() {\n  init();\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    ll N;\n    scanf(\"%lld\", &N);\n    N++;\n    ll ans = 0;\n    for (int i = 0; i <= B; i++) {\n      for (int c = N \/ pw10[i] % 10 - 1; c >= 0; c--) {\n        ll tmp = (N \/ pw10[i + 1] * 10 + c + 1) * pw10[i] - 1;\n        if (check(tmp)) {\n          ans = tmp;\n          goto out;\n        }\n      }\n    }\n  out:\n    printf(\"Case #%d: %lld\\n\", Case, ans);\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"C.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    ll N, K;\n    scanf(\"%lld%lld\", &N, &K);\n    map<ll, ll> s;\n    s[N]++;\n    ll ansy = 0, ansz = 0;\n    for (map<ll, ll>::reverse_iterator cur = s.rbegin(); cur != s.rend();\n         cur++) {\n      ll z = (cur->first - 1) \/ 2, y = (cur->first - 1) - z;\n      if (K <= cur->second) {\n        ansz = z;\n        ansy = y;\n        break;\n      } else {\n        K -= cur->second;\n        s[z] += cur->second;\n        s[y] += cur->second;\n      }\n    }\n    printf(\"Case #%d: %lld %lld\\n\", Case, ansy, ansz);\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nint k;\nchar s[1005];\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%s%d\", s, &k);\n    int ans = 0;\n    bool ok = true;\n    for (int i = 0;; i++) {\n      if (s[i + k - 1] == '\\0') {\n        for (; s[i]; i++)\n          if (s[i] == '-') {\n            ok = false;\n            break;\n          }\n        break;\n      } else {\n        if (s[i] == '-') {\n          ans++;\n          for (int j = 0; j < k; j++)\n            if (s[i + j] == '+')\n              s[i + j] = '-';\n            else if (s[i + j] == '-')\n              s[i + j] = '+';\n        }\n      }\n    }\n    printf(\"Case #%d: \", Case);\n    if (ok)\n      printf(\"%d\\n\", ans);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int N = 55, P = 55;\n\nint n, p;\nint r[N], q[N][P];\npii t[N][P];\nint pt[N];\n\nbool cmp(const pii &a, const pii &b) {\n  if (a.second != b.second)\n    return a.second < b.second;\n  return a.first < b.first;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%d%d\", &n, &p);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &r[i]);\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= p; j++) {\n        scanf(\"%d\", &q[i][j]);\n        int l, r;\n        l = 0;\n        r = int(1e6) + 5;\n        while (r - l > 1) {\n          int mid = (l + r) \/ 2;\n          if (10LL * q[i][j] >=\n              9LL * mid * ::r[i]) \/\/ q[i][j] \/ (mid * r[i]) >= 9 \/ 10\n            l = mid;\n          else\n            r = mid;\n        }\n        t[i][j].second = l;\n        l = 0;\n        r = int(1e6) + 5;\n        while (r - l > 1) {\n          int mid = (l + r) \/ 2;\n          if (10LL * q[i][j] <=\n              11LL * mid * ::r[i]) \/\/ q[i][j] \/ (mid * r[i]) <= 11 \/ 10\n            r = mid;\n          else\n            l = mid;\n        }\n        t[i][j].first = r;\n        \/\/\tprintf(\"(%d, %d)\\n\", t[i][j].first, t[i][j].second);\n      }\n      sort(t[i] + 1, t[i] + p + 1, cmp);\n    }\n    for (int i = 1; i <= n; i++)\n      pt[i] = 1;\n    bool ok = true;\n    int ans = 0;\n    for (int o = 1; o <= int(1e6) + 5; o++) {\n      bool flag = true;\n      while (true) {\n        for (int i = 1; i <= n; i++) {\n          for (; pt[i] <= p && t[i][pt[i]].second < o; pt[i]++)\n            ;\n          if (pt[i] > p) {\n            ok = false;\n            break;\n          }\n          if (t[i][pt[i]].first > o)\n            flag = false;\n        }\n        if (!ok)\n          break;\n        if (!flag)\n          break;\n        ans++;\n        for (int i = 1; i <= n; i++)\n          pt[i]++;\n      }\n      if (!ok)\n        break;\n    }\n    printf(\"Case #%d: %d\\n\", Case, ans);\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int N = 30;\n\nint n, m;\nchar s[N][N];\n\nbool check(int y, int l, int r) {\n  for (int i = l; i <= r; i++)\n    if (s[i][y] != '?')\n      return false;\n  return true;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%s\", s[i] + 1);\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++)\n        if (s[i][j] != '?') {\n          int t = i - 1;\n          while (t >= 1 && s[t][j] == '?')\n            t--;\n          t++;\n          int l = j - 1;\n          while (l >= 1 && check(l, t, i))\n            l--;\n          l++;\n          int r = j + 1;\n          while (r <= m && check(r, t, i))\n            r++;\n          r--;\n          for (int x = t; x <= i; x++)\n            for (int y = l; y <= r; y++)\n              s[x][y] = s[i][j];\n        }\n    }\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= m; j++)\n        if (s[i][j] == '?')\n          s[i][j] = s[i - 1][j];\n    printf(\"Case #%d:\\n\", Case);\n    for (int i = 1; i <= n; i++)\n      puts(s[i] + 1);\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int N = 1005;\n\ndb d;\nint n;\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"A.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%lf%d\", &d, &n);\n    db t = 0;\n    for (int i = 1; i <= n; i++) {\n      db k, s;\n      scanf(\"%lf%lf\", &k, &s);\n      t = max(t, (d - k) \/ s);\n    }\n    printf(\"Case #%d: %.12lf\\n\", Case, d \/ t);\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int N = 1005;\n\nint n, R, O, Y, G, B, V;\n\nint len;\nchar ans[1005];\n\nvoid insert(int loc, char C) {\n  for (int i = len; i > loc; i--)\n    ans[i] = ans[i - 1];\n  ans[loc] = C;\n  len++;\n}\n\nbool add(int y, char C) {\n  for (int i = 0; i < y; i++) {\n    bool found = false;\n    for (int j = 0; j < len; j++)\n      if (ans[j] == ans[(j - 1 + len) % len]) {\n        found = true;\n        insert(j, C);\n        break;\n      }\n    if (!found) {\n      for (int j = 0; j < len; j++)\n        if (ans[j] != C && ans[(j - 1 + len) % len] != C) {\n          found = true;\n          insert(j, C);\n          break;\n        }\n      if (!found)\n        return false;\n    }\n  }\n  return true;\n}\n\nvoid replace(int cnt, char C, char C2) {\n  for (int i = 0; i < len; i++)\n    if (ans[i] == C) {\n      while (cnt--) {\n        insert(i, C2);\n        insert(i, C);\n      }\n      return;\n    }\n}\n\nbool check() {\n  for (int i = 0; i < len; i++)\n    if (ans[i] == ans[(i - 1 + len) % len])\n      return false;\n  return true;\n}\n\nbool Main() {\n  scanf(\"%d%d%d%d%d%d%d\", &n, &R, &O, &Y, &G, &B, &V);\n  len = 0;\n  int r = R - G;\n  if (r < 0)\n    return false;\n  if (r == 0) {\n    if (R == 0)\n      ;\n    else if (R + G < n)\n      return false;\n    else {\n      for (int i = 0; i < R; i++) {\n        ans[len++] = 'R';\n        ans[len++] = 'G';\n      }\n      return true;\n    }\n  }\n  int y = Y - V;\n  if (y < 0)\n    return false;\n  if (y == 0) {\n    if (Y == 0)\n      ;\n    else if (Y + V < n)\n      return false;\n    else {\n      for (int i = 0; i < Y; i++) {\n        ans[len++] = 'Y';\n        ans[len++] = 'V';\n      }\n      return true;\n    }\n  }\n  int b = B - O;\n  if (b < 0)\n    return false;\n  if (b == 0) {\n    if (B == 0)\n      ;\n    else if (B + O < n)\n      return false;\n    else {\n      for (int i = 0; i < B; i++) {\n        ans[len++] = 'B';\n        ans[len++] = 'O';\n      }\n      return true;\n    }\n  }\n  if (r >= y && r >= b) {\n    len = 0;\n    for (int i = 0; i < r; i++)\n      ans[len++] = 'R';\n    if (!add(y, 'Y'))\n      return false;\n    if (!add(b, 'B'))\n      return false;\n  } else if (y >= r && y >= b) {\n    len = 0;\n    for (int i = 0; i < y; i++)\n      ans[len++] = 'Y';\n    if (!add(r, 'R'))\n      return false;\n    if (!add(b, 'B'))\n      return false;\n  } else if (b >= r && b >= y) {\n    len = 0;\n    for (int i = 0; i < b; i++)\n      ans[len++] = 'B';\n    if (!add(r, 'R'))\n      return false;\n    if (!add(y, 'Y'))\n      return false;\n  } else\n    assert(false);\n  if (!check())\n    return false;\n  replace(G, 'R', 'G');\n  replace(V, 'Y', 'V');\n  replace(O, 'B', 'O');\n  ans[len] = 0;\n  return true;\n}\n\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"B.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    bool res = Main();\n    ans[len] = 0;\n    printf(\"Case #%d: %s\\n\", Case, res ? ans : \"IMPOSSIBLE\");\n  }\n}\n"}
{"target":"wwt15","func":"#include <bits\/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\n\nconst int N = 105;\nconst int inf = int(1e9) + 7;\nconst db oo = 1. \/ 0;\n\nint n, q;\nint E[N], S[N];\nint d[N][N];\ndb dist[N][N];\n\nint main() {\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"C.out\", \"w\", stdout);\n  int T;\n  scanf(\"%d\", &T);\n  for (int Case = 1; Case <= T; Case++) {\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d%d\", &E[i], &S[i]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        scanf(\"%d\", &d[i][j]);\n        if (d[i][j] == -1)\n          d[i][j] = inf;\n        if (i == j)\n          d[i][j] = 0;\n      }\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        dist[i][j] = E[i] >= d[i][j] ? (db)d[i][j] \/ S[i] : oo;\n    for (int k = 1; k <= n; k++)\n      for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n          dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);\n    printf(\"Case #%d:\", Case);\n    while (q--) {\n      int u, v;\n      scanf(\"%d%d\", &u, &v);\n      printf(\" %.10lf\", dist[u][v]);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"target":"xyiyy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int t;\n  int cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    ll n;\n    cin >> n;\n    ll tmp = n;\n    string str = \"\";\n    while (tmp) {\n      str = str + char((tmp % 10) + '0');\n      tmp = tmp \/ 10;\n    }\n    reverse(str.begin(), str.end());\n    int last = '0' - 1;\n    int p = 0;\n    for (int i = 0; i < str.length(); i++) {\n      if (str[i] >= last) {\n        last = str[i];\n      } else {\n        p = i;\n        break;\n      }\n    }\n    \/\/ cout << endl << str <<endl;\n    \/\/ cout << p << \" && \";\n    for (int i = p - 1; i >= 0; i--) {\n      if (i == 0 || str[i - 1] != last) {\n        p = i + 1;\n        str[i]--;\n        break;\n      }\n    }\n    if (p) {\n      for (int i = p; i < str.length(); i++) {\n        str[i] = '9';\n      }\n    }\n    ll ans = 0;\n    for (int i = 0; i < str.length(); i++) {\n      ans = ans * 10 + str[i] - '0';\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int t;\n  int cas = 1;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    ll n, k;\n    cin >> n >> k;\n    priority_queue<ll> q;\n    q.push(n);\n    map<ll, int> ms;\n    ms[n] = 1;\n    while (k > 0) {\n      ll p = q.top();\n      ll len = p - 1;\n      ll m = ms[p];\n      q.pop();\n      ll z = len \/ 2;\n      ll y = len - z;\n      if (m >= k) {\n        cout << y << \" \" << z << endl;\n        break;\n      } else {\n        k -= m;\n        if (!ms.count(y)) {\n          q.push(y);\n        }\n        ms[y] += m;\n        if (!ms.count(z)) {\n          q.push(z);\n        }\n        ms[z] += m;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\n\nint run(string str, int k) {\n  int n = (int)str.length() - k;\n  int ret = 0;\n  for (int i = 0; i <= n; i++) {\n    if (str[i] == '-') {\n      ret++;\n      for (int j = 0; j < k; j++) {\n        int p = i + j;\n        str[p] = (str[p] == '-' ? '+' : '-');\n      }\n    }\n  }\n  for (int i = n + 1; i < str.length(); i++) {\n    if (str[i] == '-') {\n      ret = 5000;\n    }\n  }\n  return ret;\n}\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int t;\n  int cas = 1;\n  cin >> t;\n  while (t--) {\n    string str;\n    int k;\n    cin >> str >> k;\n    \/\/ cout << str << endl;\n    \/\/ cout << k << endl;\n    int ans = run(str, k);\n    reverse(str.begin(), str.end());\n    ans = min(run(str, k), ans);\n    cout << \"Case #\" << cas++ << \": \";\n    if (ans == 5000) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else\n      cout << ans << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\nint r[110];\nint q[110][110];\nint qL[110][110];\nint qR[110][110];\nint num[110][110];\nint dp[110];\npriority_queue<PII, vector<PII>, greater<PII>> pq[110];\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int cas = 1;\n  int t;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    int n, p;\n    cin >> n >> p;\n    for (int i = 0; i < n; i++) {\n      cin >> r[i];\n    }\n    \/\/ cout << endl << \"############\" << endl;\n    for (int i = 0; i < 110; i++) {\n      while (!pq[i].empty()) {\n        pq[i].pop();\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++) {\n        cin >> q[i][j];\n        int L = 0, R = 1000010;\n        qL[i][j] = R, qR[i][j] = 0;\n        while (L <= R) {\n          int mid = (L + R) \/ 2;\n          ll tot = 1LL * mid * r[i];\n          if (tot * 0.9 - 1e-5 < q[i][j]) {\n            qR[i][j] = max(qR[i][j], mid);\n            L = mid + 1;\n          } else {\n            R = mid - 1;\n          }\n        }\n        L = 0, R = 1000010;\n        while (L <= R) {\n          int mid = (L + R) \/ 2;\n          ll tot = 1LL * mid * r[i];\n          if (tot * 1.1 + 1e-5 > q[i][j]) {\n            qL[i][j] = min(qL[i][j], mid);\n            R = mid - 1;\n          } else {\n            L = mid + 1;\n          }\n        }\n        \/\/ cout << \"(\" << qL[i][j]<< \"  \" << qR[i][j] << \")\";\n        if (qR[i][j] < qL[i][j]) {\n          qR[i][j] = qL[i][j] = 0;\n        } else {\n          pq[i].push(make_pair(qL[i][j], qR[i][j]));\n        }\n      }\n      \/\/ cout << endl;\n    }\n    \/\/ cout << \"#########\" << endl;\n    int ans = 0;\n    PII tmp[51];\n    bool can = 1;\n    while (can) {\n      int minr = 1000010, maxl = -1;\n      for (int i = 0; i < n; i++) {\n        if (pq[i].empty()) {\n          can = 0;\n        } else {\n          tmp[i] = pq[i].top();\n          minr = min(minr, tmp[i].second);\n          maxl = max(maxl, tmp[i].first);\n        }\n      }\n      if (!can)\n        break;\n      \/\/ cout << maxl << \" \" << minr << endl;\n      if (maxl <= minr) {\n        ans++;\n        for (int i = 0; i < n; i++) {\n          pq[i].pop();\n        }\n      } else {\n        for (int i = 0; i < n; i++) {\n          if (tmp[i].second == minr)\n            pq[i].pop();\n        }\n      }\n    }\n    \/*if(n == 1){\n      for(int i = 0 ; i < p ; i ++){\n        ans += qR[0][i];\n      }\n    }else if(n == 2 && p <= 8){\n      int a[8] = {0,1,2,3,4,5,6,7};\n      do{\n        int cur = 0;\n        for(int i  = 0; i < p;  i++){\n          if(qR[0][i] < qL[1][a[i]] || qL[0][i] > qR[1][a[i]])continue;\n          cur ++;\n        }\n        ans = max(cur,ans);\n      }while(next_permutation(a,a+8));\n    }*\/\n    \/*for(int j = 0; j < p ; j ++){\n      int cur = num[0][j];\n      bool can = true;\n      for(int i = 0 ; i < n ; i++){\n        bool ok = false;\n        for(int k = 0 ; k < p ; k ++){\n          if(cur == num[i][k]){\n            dp[i] = k;\n            ok = true;\n          }\n        }\n        if(!ok){\n          can = false;\n        }\n      }\n      if(can){\n        ans += cur;\n        for(int i = 0 ; i < n ; i++){\n          num[i][dp[i]] = -1;\n        }\n      }\n    }*\/\n    cout << ans << endl;\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\nstring str[110];\nbool used[110];\nint minr[110], maxr[110], minc[110], maxc[110];\nvoid updaterc(int p, int x, int y) {\n  minr[p] = min(minr[p], x);\n  minc[p] = min(minc[p], y);\n  maxr[p] = max(maxr[p], x);\n  maxc[p] = max(maxc[p], y);\n}\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  int cas = 1;\n  int t;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \":\" << endl;\n    int r, c;\n    cin >> r >> c;\n    for (int i = 0; i < r; i++) {\n      cin >> str[i];\n    }\n    for (int i = 0; i < 110; i++) {\n      used[i] = 0;\n      minr[i] = minc[i] = 10101;\n      maxr[i] = maxc[i] = -10010;\n    }\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        int p = str[i][j] - 'A';\n        if (p >= 0 && p < 26) {\n          used[p] = 1;\n          updaterc(p, i, j);\n        }\n      }\n    }\n    int p;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) {\n        if (str[i][j] == '?') {\n          \/\/ cout << i << \"  \"<< j << \"   \" << str[i][j] << endl;\n          for (int k = 0; k < 30; k++) {\n            if (used[k]) {\n              int curminr = min(minr[k], i);\n              int curminc = min(minc[k], j);\n              int curmaxr = max(maxr[k], i);\n              int curmaxc = max(maxc[k], j);\n              bool ok = true;\n              p = 'A' + k;\n              for (int ii = curminr; ii <= curmaxr; ii++) {\n                for (int jj = curminc; jj <= curmaxc; jj++) {\n                  if (str[ii][jj] != '?' && str[ii][jj] != p) {\n                    ok = false;\n                  }\n                }\n              }\n              \/\/ cout << p << \"  \" << ok << endl;\n              if (ok) {\n                updaterc(k, i, j);\n                for (int ii = curminr; ii <= curmaxr; ii++) {\n                  for (int jj = curminc; jj <= curmaxc; jj++) {\n                    str[ii][jj] = p;\n                  }\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 0; i < r; i++) {\n      cout << str[i] << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\n\nlong double k[1010], s[1010];\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"1.in\", \"r\", stdin);\n  \/\/ freopen(\"1.out\",\"w\",stdout);\n  int cas = 1;\n  int t;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    long double d;\n    int n;\n    cin >> d >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> k[i] >> s[i];\n    }\n    long double L = 0, R = 1e14;\n    for (int i = 0; i < 10010; i++) {\n      long double mid = (L + R) \/ 2.0;\n      bool ok = true;\n      for (int j = 0; j < n; j++) {\n        if (mid <= s[j])\n          continue;\n        long double cost = k[j] \/ (mid - s[j]) * mid;\n        if (cost - d < -1e-7)\n          ok = false;\n      }\n      if (ok)\n        L = mid;\n      else\n        R = mid;\n    }\n    cout << fixed << setprecision(6) << L << endl;\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\n\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"2.in\", \"r\", stdin);\n  freopen(\"2.out\", \"w\", stdout);\n  int cas = 1;\n  int t;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \": \";\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    vector<pair<int, char>> vec;\n    vec.push_back(make_pair(r, 'R'));\n    vec.push_back(make_pair(y, 'Y'));\n    vec.push_back(make_pair(b, 'B'));\n    sort(vec.begin(), vec.end());\n    bool ok = true;\n    if (vec[2].first > vec[0].first + vec[1].first)\n      ok = false;\n    if (!ok) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      string str = \"\";\n      char last = 0;\n      while (vec[2].first) {\n        int idx = 2;\n        if (vec[idx].second == last)\n          idx--;\n        if (vec[idx].first == 0) {\n          break;\n        }\n        last = vec[idx].second;\n        vec[idx].first--;\n        str = str + vec[idx].second;\n        while (idx && vec[idx].first < vec[idx - 1].first) {\n          swap(vec[idx], vec[idx - 1]);\n          idx--;\n        }\n      }\n      int sum = vec[2].first;\n      \/\/ cout << sum <<endl;\n      int len = str.length();\n      if (str[0] == str[len - 1]) {\n        sum++;\n        len--;\n      }\n      char p = vec[2].second;\n      string ans = \"\";\n      for (int i = 0; i < len; i++) {\n        ans += str[i];\n        if (i < len - 1 && p != str[i] && p != str[i + 1] && sum) {\n          ans += p;\n          sum--;\n        }\n      }\n      if (sum) {\n        cout << \"IMPOSSIBLE\" << endl;\n      } else {\n        cout << ans << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"target":"xyiyy","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\n\nint e[110], s[110];\nint D[110][110];\nvector<PII> G[110];\nbool vis[110];\nlong double dp[110][110];\nint main() {\n  ios::sync_with_stdio(0);\n  freopen(\"3.in\", \"r\", stdin);\n  freopen(\"3.out\", \"w\", stdout);\n  int cas = 1;\n  int t;\n  cin >> t;\n  while (t--) {\n    cout << \"Case #\" << cas++ << \":\";\n    int n, q;\n    cin >> n >> q;\n    for (int i = 0; i < n; i++) {\n      cin >> e[i] >> s[i];\n      G[i].clear();\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        cin >> D[i][j];\n        if (D[i][j] != -1) {\n          G[i].push_back(make_pair(j, D[i][j]));\n        }\n        dp[i][j] = 1e14;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      queue<PII> q;\n      for (int j = 0; j < n; j++) {\n        vis[j] = 0;\n      }\n      vis[i] = 1;\n      q.push(make_pair(e[i], i));\n      dp[i][i] = 0;\n      long double pv = s[i];\n      while (!q.empty()) {\n        PII p = q.front();\n        int last = p.first;\n        int u = p.second;\n        q.pop();\n        for (int j = 0; j < G[u].size(); j++) {\n          int v = G[u][j].first;\n          if (vis[v])\n            continue;\n          int dis = G[u][j].second;\n          if (dis > last)\n            continue;\n          q.push(make_pair(last - dis, v));\n          vis[v] = 1;\n          dp[i][v] = min(dp[u][v], dp[i][u] + (long double)(dis) \/ pv);\n        }\n      }\n      \/\/ cout <<endl;\n      \/\/ for(int j = 0 ; j < n; j ++){\n      \/\/    cout << dp[i][j] << \" \";\n      \/\/}\n    }\n    \/\/ cout <<endl;\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          dp[i][j] = min(dp[i][k] + dp[k][j], dp[i][j]);\n        }\n      }\n    }\n    int u, v;\n    for (int i = 0; i < q; i++) {\n      cin >> u >> v;\n      u--;\n      v--;\n      cout << fixed << setprecision(10) << \" \" << dp[u][v];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst long long TEN_TO_18 = 1000000000000000000;\n\nvoid print(int testNo, long long ans) {\n  cout << \"Case #\" << testNo << \": \" << ans << endl;\n}\n\nlong long getLastTidy(long long n) {\n  for (long long i = 10; i <= TEN_TO_18; i *= 10) {\n    long long l = n \/ i;\n    if (l == 0L)\n      break;\n\n    l %= 10;\n    long long r = (n \/ (i \/ 10)) % 10;\n\n    if (l > r) {\n      n \/= i;\n      n *= i;\n      --n;\n    }\n  }\n\n  return n;\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    long long n;\n    cin >> n;\n    long long tidy = getLastTidy(n);\n    print(testNo, tidy);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <cassert>\n#include <iostream>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nconst long long TEN_TO_18 = 1000000000000000000;\n\nusing lPair = pair<long long, long long>;\n\nvoid print(int testNo, lPair ans) {\n  cout << \"Case #\" << testNo << \": \" << ans.first << ' ' << ans.second << endl;\n}\n\nlPair getLast(long long n, long long k) {\n  \/\/ cout << n << ' ' << k << endl;\n  if (k > n)\n    assert(false);\n  if (n == 0)\n    assert(false);\n\n  if (k == n)\n    return make_pair(0L, 0L);\n\n  if (k == 1) {\n    long long mi = (n - 1) \/ 2;\n    long long ma = mi;\n    if (n % 2 == 0)\n      ++ma;\n    return make_pair(ma, mi);\n  }\n\n  if (n % 2 == 1)\n    return getLast((n - 1) \/ 2, k \/ 2);\n  else if (k % 2 == 1)\n    return getLast(n \/ 2 - 1, k \/ 2);\n  else\n    return getLast(n \/ 2, k \/ 2);\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    long long n, k;\n    cin >> n >> k;\n    auto ans = getLast(n, k);\n    print(testNo, ans);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid print(int testNo, int ans) {\n  if (ans < 0)\n    cout << \"Case #\" << testNo << \": IMPOSSIBLE\" << endl;\n  else\n    cout << \"Case #\" << testNo << \": \" << ans << endl;\n}\n\nvoid flip(string &str, int s, int k) {\n  for (int i = s; i < s + k; ++i) {\n    if (str[i] == '-')\n      str[i] = '+';\n    else\n      str[i] = '-';\n  }\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    string pan;\n    int k;\n    cin >> pan >> k;\n\n    int cnt = 0;\n    for (int i = 0; i < pan.size() - k + 1; ++i) {\n      if (pan[i] == '-') {\n        ++cnt;\n        flip(pan, i, k);\n      }\n    }\n    bool imp = false;\n    for (int i = pan.size() - k + 1; i < pan.size(); ++i)\n      if (pan[i] == '-')\n        imp = true;\n\n    if (imp)\n      print(testNo, -1);\n    else\n      print(testNo, cnt);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid print(int testNo, int maxNum) {\n  cout << \"Case #\" << testNo << \": \" << maxNum << endl;\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    int N, P;\n    cin >> N >> P;\n    vector<int> R(N);\n    vector<vector<int>> Q(N, vector<int>(P));\n\n    for (int i = 0; i < N; ++i)\n      cin >> R[i];\n\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j)\n        cin >> Q[i][j];\n      sort(Q[i].begin(), Q[i].end());\n    }\n\n    vector<int> lastSelected(N);\n    int ans = 0;\n\n    for (int i = 0; i < P; ++i) {\n      int minKit = ceil(static_cast<double>(Q[0][i]) \/ (1.1 * R[0]));\n      int maxKit = floor(static_cast<double>(Q[0][i]) \/ (0.9 * R[0]));\n      \/\/ cout << Q[0][i] << ' ' << minKit <<  ' ' << maxKit << endl;\n\n      vector<int> cur(N);\n      cur[0] = i;\n      for (int j = minKit; j <= maxKit; ++j) {\n\n        int k;\n        for (k = 1; k < N; ++k) {\n          int minIng = ceil(static_cast<double>(R[k]) * j * 0.9);\n          int maxIng = floor(static_cast<double>(R[k]) * j * 1.1);\n          if (minIng > maxIng)\n            break;\n\n          auto it =\n              lower_bound(Q[k].begin() + lastSelected[k], Q[k].end(), minIng);\n          if (it == Q[k].end())\n            break;\n          if (*it > maxIng)\n            break;\n\n          lastSelected[k] = it - Q[k].begin();\n        }\n        if (k == N) {\n          lastSelected = cur;\n          ++ans;\n          break;\n        }\n      }\n    }\n    print(testNo, ans);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid print(int testNo, const vector<vector<char>> &ans) {\n  cout << \"Case #\" << testNo << \":\" << endl;\n  for (const auto &r : ans) {\n    for (char c : r)\n      cout << c;\n    cout << endl;\n  }\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    int r, c;\n    cin >> r >> c;\n    vector<vector<char>> board(r, vector<char>(c));\n    char t;\n    for (int i = 0; i < r; ++i)\n      for (int j = 0; j < c; ++j) {\n        cin >> t;\n        board[i][j] = t;\n      }\n\n    for (int i = 0; i < r; ++i) {\n      for (int j = 0; j < c; ++j) {\n        if (board[i][j] != '?') {\n          for (int k = j - 1; k >= 0; --k) {\n            if (board[i][k] == '?')\n              board[i][k] = board[i][j];\n            else\n              break;\n          }\n          for (int k = j + 1; k < c; ++k) {\n            if (board[i][k] == '?')\n              board[i][k] = board[i][j];\n            else\n              break;\n          }\n        }\n      }\n    }\n\n    for (int i = 0; i < r; ++i) {\n      if (board[i][0] == '?') {\n        vector<char> copyRow;\n        if (i > 0)\n          copyRow = board[i - 1];\n        else\n          for (int j = i + 1; j < r; ++j)\n            if (board[j][0] != '?') {\n              copyRow = board[j];\n              break;\n            }\n\n        for (int j = 0; j < c; ++j)\n          board[i][j] = copyRow[j];\n      }\n    }\n\n    print(testNo, board);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvoid print(int testNo, double ans) {\n  cout << \"Case #\" << testNo << \": \" << ans << endl;\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n\n  cout << fixed;\n  cout.precision(6);\n\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    int D, N;\n    cin >> D >> N;\n    vector<int> K(N);\n    vector<int> S(N);\n\n    int k, s;\n    for (int i = 0; i < N; ++i) {\n      cin >> k >> s;\n      K[i] = k;\n      S[i] = s;\n    }\n\n    double ans = numeric_limits<double>::max();\n\n    for (int i = 0; i < N; ++i) {\n      double x = static_cast<double>(D) * S[i] \/ (D - K[i]);\n      ans = min(ans, x);\n    }\n\n    print(testNo, ans);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nconst string IMP = \"IMPOSSIBLE\";\n\nvoid print(int testNo, string ans) {\n  cout << \"Case #\" << testNo << \": \" << ans << endl;\n}\n\nstring replace(string s, char p, const string &n) {\n  int pos = s.find(p);\n  string ret = s.substr(0, pos);\n  ret += n;\n  ret += s.substr(pos + 1);\n  return ret;\n}\n\nstring getNew(char A, char B, int rep) {\n  string ret = \"\";\n  ret += A;\n  for (int i = 0; i < rep; ++i) {\n    ret += B;\n    ret += A;\n  }\n  \/\/ cout << ret << endl;\n  return ret;\n}\n\nstring getShort(int R, int Y, int B) {\n  string ret;\n  \/\/ cout << R << Y << B << endl;\n  while (R > 0 || Y > 0 || B > 0) {\n    if (ret.size() == 0) {\n      int maxCnt = max({R, Y, B});\n      if (R == maxCnt) {\n        ret += 'R';\n        --R;\n      } else if (Y == maxCnt) {\n        ret += 'Y';\n        --Y;\n      } else {\n        ret += 'B';\n        --B;\n      }\n    } else {\n      if (ret[ret.size() - 1] == 'R') {\n        if (Y > B) {\n          ret += 'Y', --Y;\n        } else if (Y < B) {\n          ret += 'B', --B;\n        } else if (Y == 0) {\n          return IMP;\n        } else if (ret.size() == 1) {\n          ret += 'Y', --Y;\n        } else if (ret[0] == 'Y') {\n          ret += 'Y', --Y;\n        } else {\n          ret += 'B', --B;\n        }\n      } else if (ret[ret.size() - 1] == 'Y') {\n        if (B > R) {\n          ret += 'B', --B;\n        } else if (B < R) {\n          ret += 'R', --R;\n        } else if (B == 0) {\n          return IMP;\n        } else if (ret.size() == 1) {\n          ret += 'B', --B;\n        } else if (ret[0] == 'B') {\n          ret += 'B', --B;\n        } else {\n          ret += 'R', --R;\n        }\n      } else {\n        if (R > Y) {\n          ret += 'R', --R;\n        } else if (R < Y) {\n          ret += 'Y', --Y;\n        } else if (R == 0) {\n          return IMP;\n        } else if (ret.size() == 1) {\n          ret += 'R', --R;\n        } else if (ret[0] == 'R') {\n          ret += 'R', --R;\n        } else {\n          ret += 'Y', --Y;\n        }\n      }\n    }\n    \/\/ cout << ret << endl;\n  }\n  if (ret.size() > 1 && ret[0] == ret[ret.size() - 1])\n    return IMP;\n  return ret;\n}\n\nstring getLong(int R, int O, int Y, int G, int B, int V) {\n  int nR = R - G;\n  int nY = Y - V;\n  int nB = B - O;\n\n  if (R == G && O == 0 && Y == 0 && B == 0 && V == 0)\n    return getNew('R', 'G', G - 1) + 'G';\n  if (Y == V && O == 0 && R == 0 && B == 0 && G == 0)\n    return getNew('Y', 'V', V - 1) + 'V';\n  if (B == O && R == 0 && Y == 0 && B == 0 && V == 0)\n    return getNew('B', 'O', O - 1) + 'O';\n\n  if (G > 0 && R < G + 1)\n    return IMP;\n  if (V > 0 && Y < V + 1)\n    return IMP;\n  if (O > 0 && B < O + 1)\n    return IMP;\n\n  string s = getShort(nR, nY, nB);\n  if (s == IMP)\n    return IMP;\n\n  if (G > 0)\n    s = replace(s, 'R', getNew('R', 'G', G));\n  if (V > 0)\n    s = replace(s, 'Y', getNew('Y', 'V', V));\n  if (O > 0)\n    s = replace(s, 'B', getNew('B', 'O', O));\n\n  return s;\n}\n\nint main() {\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    int N, R, O, Y, G, B, V;\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    string ans = getLong(R, O, Y, G, B, V);\n    print(testNo, ans);\n  }\n}\n"}
{"target":"yeongjinc","func":"#include <algorithm>\n#include <climits>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nvoid print(int testNo, vector<long double> anss) {\n  cout << \"Case #\" << testNo << \":\";\n  for (long double ans : anss)\n    cout << \" \" << ans;\n  cout << endl;\n}\n\nstatic long double INF = 100000000000000.0L;\n\nvector<vector<long double>> preprocess(const vector<pair<int, int>> &ESs,\n                                       const vector<vector<int>> &dis) {\n  int N = ESs.size();\n  vector<vector<long double>> adj(N, vector<long double>(N, INF));\n\n  for (int i = 0; i < N; ++i) {\n    \/\/ adj[i][x]\n\n    adj[i][i] = 0.0;\n\n    priority_queue<pair<long double, int>, vector<pair<long double, int>>,\n                   greater<pair<long double, int>>>\n        pq;\n    pq.push(make_pair(0.0, i));\n    while (!pq.empty()) {\n      auto cur = pq.top();\n      pq.pop();\n      if (adj[i][cur.second] < cur.first)\n        continue;\n\n      for (int j = 0; j < N; ++j) {\n        if (cur.second == j)\n          continue;\n        if (dis[cur.second][j] == -1)\n          continue;\n\n        int nextNo = j;\n        long double nextCost =\n            cur.first +\n            (static_cast<long double>(dis[cur.second][j]) \/ ESs[i].second);\n        if (nextCost * ESs[i].second <=\n            static_cast<long double>(ESs[i].first)) {\n          if (nextCost < adj[i][j]) {\n            adj[i][j] = nextCost;\n            \/\/ cout << i << ' ' << j << ' ' << adj[i][j] << endl;\n            pq.push(make_pair(nextCost, j));\n          }\n        }\n      }\n    }\n  }\n  return adj;\n}\n\nvoid floyd(vector<vector<long double>> &adj) {\n  int N = adj.size();\n  for (int i = 0; i < N; ++i)\n    for (int j = 0; j < N; ++j)\n      if (adj[i][j] == 0.0L && i != j)\n        adj[i][j] = INF;\n\n  for (int k = 0; k < N; ++k)\n    for (int i = 0; i < N; ++i)\n      for (int j = 0; j < N; ++j)\n        if (adj[i][j] > adj[i][k] + adj[k][j])\n          adj[i][j] = adj[i][k] + adj[k][j];\n}\n\nint main() {\n  cout << fixed;\n  cout.precision(10);\n  int totalTestNo;\n  cin >> totalTestNo;\n  for (int testNo = 1; testNo <= totalTestNo; ++testNo) {\n    int N, Q;\n    cin >> N >> Q;\n    vector<pair<int, int>> ESs(N);\n    for (int i = 0; i < N; ++i) {\n      int E, S;\n      cin >> E >> S;\n      ESs[i] = make_pair(E, S);\n    }\n    vector<vector<int>> dis(N, vector<int>(N));\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        int D;\n        cin >> D;\n        dis[i][j] = D;\n      }\n    }\n\n    vector<pair<int, int>> UVs(Q);\n    for (int i = 0; i < Q; ++i) {\n      int U, V;\n      cin >> U >> V;\n      --U, --V;\n      UVs[i] = make_pair(U, V);\n    }\n\n    vector<vector<long double>> adj = preprocess(ESs, dis);\n    floyd(adj);\n    vector<long double> anss(Q);\n    for (int i = 0; i < Q; ++i) {\n      long double ans = adj[UVs[i].first][UVs[i].second];\n      anss[i] = ans;\n    }\n\n    print(testNo, anss);\n  }\n}\n"}
{"target":"YJWD","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\n\nint main() {\n  std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0;\n  int n, t, kase = 0;\n  char str[30];\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s\", str);\n    n = strlen(str);\n    for (i = 1; i < n; i++) {\n      if (str[i] >= str[i - 1]) {\n        continue;\n      } else\n        break;\n    }\n    if (i == n) {\n      printf(\"Case #%d: %s\\n\", ++kase, str);\n    } else {\n      while (i >= 1 && str[i - 1] > str[i]) {\n        i--;\n        str[i]--;\n      }\n      for (i++; i < n; i++) {\n        str[i] = '9';\n      }\n      char ans[30];\n      for (i = 0; i < n; i++) {\n        if (str[i] != '0')\n          break;\n      }\n      for (j = 0; i < n; j++, i++) {\n        ans[j] = str[i];\n      }\n      ans[j] = '\\0';\n      printf(\"Case #%d: %s\\n\", ++kase, ans);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"YJWD","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef unsigned long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\nconst int maxn = 64;\n\nLL pow2_arr[maxn];\nint main() {\n  std::ios::sync_with_stdio(false);\n  streambuf *backup;\n  ifstream fin;\n  fin.open(\"C-small-1-attempt0.in\");\n  backup = cin.rdbuf(); \/\/ back up cin's streambuf\n  cin.rdbuf(fin.rdbuf());\n  ofstream out(\"out.txt\");\n  int i = 0, j = 0, kase = 0;\n  pow2_arr[0] = 1;\n  for (i = 1; i < maxn; i++) {\n    pow2_arr[i] = pow2_arr[i - 1] * 2;\n  }\n  \/\/ Debug(pow2_arr[maxn-1]);\n  int t;\n  LL n, k;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    int lv = 0;\n    for (lv = 0; lv < maxn - 1; lv++) {\n      if (pow2_arr[lv] <= k && pow2_arr[lv + 1] > k) {\n        break;\n      }\n    }\n    LL suml = pow2_arr[lv] - 1;\n    LL lev_sum = min(pow2_arr[lv], n - suml);\n    if ((n - suml) % lev_sum == 0) {\n      LL len = (n - suml) \/ lev_sum;\n      if (len % 2LL == 0)\n        out << \"Case #\" << ++kase << \": \" << len \/ 2 << \" \" << len \/ 2 - 1\n            << endl;\n      else\n        out << \"Case #\" << ++kase << \": \" << len \/ 2 << \" \" << len \/ 2 << endl;\n    } else {\n      LL sml_num = (n - suml) \/ lev_sum, big_num = (n - suml) \/ lev_sum + 1;\n      LL big_sum = n - suml - sml_num * lev_sum;\n      \/\/ Debug(big_sum);\n      if (k - suml <= big_sum) {\n        if (big_num % 2 == 0)\n          out << \"Case #\" << ++kase << \": \" << big_num \/ 2 << \" \"\n              << big_num \/ 2 - 1 << endl;\n        else\n          out << \"Case #\" << ++kase << \": \" << big_num \/ 2 << \" \" << big_num \/ 2\n              << endl;\n      } else {\n        if (sml_num % 2 == 0)\n          out << \"Case #\" << ++kase << \": \" << sml_num \/ 2 << \" \"\n              << sml_num \/ 2 - 1 << endl;\n        else\n          out << \"Case #\" << ++kase << \": \" << sml_num \/ 2 << \" \" << sml_num \/ 2\n              << endl;\n      }\n    }\n  }\n\n  return 0;\n}\n\/*\n3\n20 4\n20 5\n33 9\n2 2\n2 1\n2 1\n*\/\n"}
{"target":"YJWD","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\nconst int maxn = 1010;\n\nint main() {\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int n, t;\n  char str[maxn];\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%s%d\", str, &k);\n    int len = strlen(str), ans = 0;\n    for (i = 0; i <= len - k; i++) {\n      if (str[i] == '+')\n        continue;\n      ans++;\n      for (j = i; j < i + k; j++) {\n        if (str[j] == '-')\n          str[j] = '+';\n        else\n          str[j] = '-';\n      }\n    }\n    bool flag = false;\n    for (j = i; j < len; j++) {\n      if (str[j] == '-') {\n        flag = true;\n        break;\n      }\n    }\n    if (flag) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ++kase);\n    } else {\n      printf(\"Case #%d: %d\\n\", ++kase, ans);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"YJWD","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\nconst double eps = 1e-8;\n\nvector<double> mat[55];\ndouble tar[55];\nint get_min(double v, double tar);\nint get_max(double v, double tar);\nint main() {\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int n, t, p, ans;\n  double q;\n  \/*\n  fop(i, 1, 30)\n  {\n      cout<<i << \" \" << i*0.9 << \" \" << i*1.1 << endl;\n  }\n  *\/\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    ans = 0;\n    scanf(\"%d%d\", &n, &p);\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lf\", &tar[i]);\n    }\n    for (i = 1; i <= n; i++) {\n      mat[i].clear();\n      for (j = 0; j < p; j++) {\n        scanf(\"%lf\", &q);\n        mat[i].push_back(q);\n      }\n    }\n    if (n == 1) {\n      int minv, maxv;\n      for (j = 0; j < p; j++) {\n        minv = get_min(mat[1][j], tar[1]); \/\/(mat[1][j]\/tar[1])\/1.1;\n        \/\/ minv++;\n        maxv = get_max(mat[1][j], tar[1]); \/\/(mat[1][j]\/tar[1])\/0.9;\n        \/\/ cout << minv << \" \" << maxv << endl;\n        if (minv <= maxv) {\n          ans++;\n        }\n      }\n    } else {\n      int minv1, maxv1, minv2, maxv2;\n      sort(mat[2].begin(), mat[2].end());\n      int tans = 0;\n      do {\n        tans = 0;\n        \/*\n        fop(i, 0, p)\n        {\n            cout << mat[2][i] << \" \";\n        }\n        cout << endl;\n        *\/\n        for (i = 0; i < p; i++) {\n          double v1 = mat[1][i], v2 = mat[2][i];\n          minv1 = get_min(v1, tar[1]);\n          maxv1 = get_max(v1, tar[1]);\n          minv2 = get_min(v2, tar[2]);\n          maxv2 = get_max(v2, tar[2]);\n          \/\/ cout << minv1 << \" \" << maxv1 << \" \" << minv2 << \" \" << maxv2 <<\n          \/\/ endl;\n          if (minv1 <= maxv1 && minv2 <= maxv2) {\n            if (minv2 <= maxv1 && maxv2 >= maxv1) {\n              tans++;\n            } else if (minv1 <= maxv2 && maxv1 >= maxv2) {\n              tans++;\n            }\n          }\n        }\n        ans = max(ans, tans);\n        \/\/ cout << endl;\n      } while (next_permutation(mat[2].begin(), mat[2].end()));\n    }\n\n    printf(\"Case #%d: %d\\n\", ++kase, ans);\n  }\n\n  return 0;\n}\nint get_min(double v, double tar) {\n  int base = v \/ tar \/ 1.1;\n  base -= 2;\n  for (base = max(base, 0);; base++) {\n    if (tar * base * 1.1 >= v)\n      break;\n  }\n  return base;\n}\nint get_max(double v, double tar) {\n  int base = v \/ tar \/ 0.9;\n  base -= 2;\n  for (base = max(base, 0);; base++) {\n    if (tar * base * 0.9 - eps > v)\n      break;\n  }\n  return base - 1;\n}\n"}
{"target":"YJWD","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\nconst int maxn = 1010;\n\nint main() {\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int n, t;\n  char str[maxn];\n  freopen(\"A-small-attempt1.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    int r, c;\n    char cake[30][30];\n    scanf(\"%d%d\", &r, &c);\n    getchar();\n    for (i = 0; i < r; i++) {\n      for (j = 0; j < c; j++) {\n        scanf(\"%c\", &cake[i][j]);\n      }\n      getchar();\n    }\n    int zero_flag = -1;\n    bool meet_flag = false;\n    for (i = 0; i < r; i++) {\n      int cpos = -1;\n      for (j = 0; j < c; j++) {\n        if (cake[i][j] != '?') {\n          cpos = j;\n          break;\n        }\n      }\n      if (cpos == -1) {\n        if (!meet_flag) {\n          zero_flag++;\n          continue;\n        }\n        for (j = 0; j < c; j++) {\n          cake[i][j] = cake[i - 1][j];\n        }\n      } else {\n        meet_flag = true;\n        for (j = 0; j < cpos; j++) {\n          cake[i][j] = cake[i][cpos];\n        }\n        for (j = cpos + 1; j < c; j++) {\n          if (cake[i][j] == '?')\n            cake[i][j] = cake[i][j - 1];\n        }\n      }\n    }\n    if (zero_flag >= 0) {\n      for (i = zero_flag; i >= 0; i--) {\n        for (j = 0; j < c; j++) {\n          cake[i][j] = cake[i + 1][j];\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", ++kase);\n    for (i = 0; i < r; i++) {\n      for (j = 0; j < c; j++) {\n        printf(\"%c\", cake[i][j]);\n      }\n      printf(\"\\n\");\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"YJWD","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\n\nconst int maxn = 1010;\n\n\/\/ double t[maxn]\nint main() {\n\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int t, n;\n  double len;\n  freopen(\"A-small-attempt0.in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%lf%d\", &len, &n);\n    double tm, max_tm = 0.0;\n    double ki, si;\n    for (i = 0; i < n; i++) {\n      scanf(\"%lf%lf\", &ki, &si);\n      tm = (len - ki) \/ si;\n      max_tm = max(max_tm, tm);\n    }\n    double ans = len \/ max_tm;\n    printf(\"Case #%d: %.8lf\\n\", ++kase, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"YJWD","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\n\nstruct stu {\n  int num;\n  char ch;\n  bool operator<(const stu &b) const { return num > b.num; }\n};\n\nvector<stu> vec;\nint main() {\n\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int t, n;\n  int r, y, b, o, g, v;\n  freopen(\"B-small-attempt1.in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d%d%d%d%d%d\", &n, &r, &o, &y, &g, &b, &v);\n    vec.clear();\n    stu tmp;\n    tmp.num = r;\n    tmp.ch = 'R';\n    vec.push_back(tmp);\n    tmp.num = y;\n    tmp.ch = 'Y';\n    vec.push_back(tmp);\n    tmp.num = b;\n    tmp.ch = 'B';\n    vec.push_back(tmp);\n    sort(vec.begin(), vec.end());\n    int cha_num = 0;\n    cha_num = vec[2].num - (vec[0].num - vec[1].num);\n    if (cha_num < 0) {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", ++kase);\n      continue;\n    }\n    printf(\"Case #%d: \", ++kase);\n    for (i = 0; i < cha_num; i++) {\n      printf(\"%c%c%c\", vec[2].ch, vec[1].ch, vec[0].ch);\n    }\n    for (i = 0; i < vec[1].num - cha_num; i++) {\n      printf(\"%c%c\", vec[1].ch, vec[0].ch);\n    }\n    for (i = 0; i < vec[0].num - vec[1].num; i++) {\n      printf(\"%c%c\", vec[2].ch, vec[0].ch);\n    }\n    puts(\"\");\n  }\n\n  return 0;\n}\n"}
{"target":"YJWD","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int, int> P;\nconst LL inf = 1LL << 61;\nconst LL mod = 1000000007;\n\nconst int maxn = 110;\n\nint n;\ndouble mat[maxn][maxn];\ndouble dp[maxn];\ndouble left_dis[maxn];\ndouble e_arr[maxn], s_arr[maxn];\nint arriv_idx[maxn];\nvoid dfs(int m, double tpdp, double leftd, int idx);\nint main() {\n\n  \/\/ std::ios::sync_with_stdio(false);\n  int i = 0, j = 0, k = 0, kase = 0;\n  int t, q;\n  double len;\n  freopen(\"C-small-attempt1.in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d\", &n, &q);\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lf%lf\", &e_arr[i], &s_arr[i]);\n      \/\/ Debug(e_arr[i]);\n    }\n    for (i = 1; i <= n; i++) {\n      for (j = 1; j <= n; j++) {\n        scanf(\"%lf\", &mat[i][j]);\n      }\n    }\n    int u, v;\n    for (i = 1; i <= q; i++) {\n      scanf(\"%d%d\", &u, &v);\n    }\n    for (i = 1; i <= n; i++) {\n      dp[i] = 1e12;\n    }\n    \/\/ arriv_idx[1] = 1;\n    \/\/ left_dis[1] = e_arr[1];\n    dp[1] = 0;\n    dfs(1, 0.0, e_arr[1], 1);\n    printf(\"Case #%d: %.8lf\\n\", ++kase, dp[n]);\n  }\n\n  return 0;\n}\nvoid dfs(int m, double tpdp, double leftd,\n         int idx) { \/\/ cout << m << \" \" << leftd << endl;\n  int i;\n  for (i = 1; i <= n; i++) {\n    if (i == m)\n      continue;\n    if (mat[m][i] < 0)\n      continue;\n    if (leftd < mat[m][i])\n      continue;\n    double tp = tpdp + mat[m][i] \/ s_arr[idx];\n    if (tp < dp[i]) {\n      dp[i] = tp;\n      dfs(i, dp[i], leftd - mat[m][i], idx);\n      dfs(i, dp[i], e_arr[i], i);\n    } else {\n      dfs(i, tp, leftd - mat[m][i], idx);\n    }\n  }\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nint T, L;\nchar str[20];\n\nint main() {\n  scanf(\"%d\", &T);\n\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%s\", str);\n    L = strlen(str);\n\n    for (int i = 1; i < L; i++) {\n      if (str[i] < str[i - 1]) {\n        for (int j = i; j < L; j++) {\n          str[j] = '9';\n        }\n        str[i - 1]--;\n\n        i--;\n        while (i > 0 && str[i] < str[i - 1]) {\n          str[i] = '9';\n          str[i - 1]--;\n          i--;\n        }\n        break;\n      }\n    }\n\n    long long ans = 0;\n    for (int i = 0; i < L; i++) {\n      ans = ans * 10 + str[i] - '0';\n    }\n\n    printf(\"Case #%d: %lld\\n\", t, ans);\n  }\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n#include <queue>\nusing namespace std;\n\nint T, N, K;\n\nint main() {\n  scanf(\"%d\", &T);\n\n  int x, y;\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d\", &N, &K);\n    priority_queue<int> que;\n\n    que.push(N);\n    while (--K) {\n      x = que.top(), que.pop();\n      que.push(x \/ 2);\n      que.push((x - 1) \/ 2);\n    }\n    x = que.top(), que.pop();\n\n    printf(\"Case #%d: %d %d\\n\", t, x \/ 2, (x - 1) \/ 2);\n  }\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nint T, S, K;\nchar str[1005];\nint state[1005];\n\nint main() {\n  scanf(\"%d\", &T);\n\n  for (int t = 1; t <= T; t++) {\n\n    scanf(\"%s %d\", str, &K);\n    S = strlen(str);\n    for (int s = 0; s < S; s++) {\n      state[s] = str[s] == '-' ? 0 : 1;\n    }\n\n    int ans = 0;\n    for (int s = 0; s <= S - K; s++) {\n      if (state[s] == 0) {\n        for (int i = s; i < s + K; i++) {\n          state[i] ^= 1;\n        }\n        ans++;\n      }\n    }\n\n    for (int s = S - K + 1; s < S; s++) {\n      if (state[s] != 1) {\n        ans = -1;\n        break;\n      }\n    }\n    if (ans != -1) {\n      printf(\"Case #%d: %d\\n\", t, ans);\n    } else {\n      printf(\"Case #%d: IMPOSSIBLE\\n\", t);\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nint T, N, P;\nint need[10];\nint serve[10][10][2];\nint ans, used[10], put[10];\n\nvoid dfs(int layer) {\n  if (layer == P) {\n    int cnt = 0;\n    for (int i = 0; i < P; i++) {\n      \/\/ printf(\"(%d - %d)\", i, put[i]);\n      int p = put[i];\n      if (serve[0][i][0] == -1)\n        continue;\n      if (serve[1][p][0] == -1)\n        continue;\n      if (serve[0][i][0] > serve[1][p][1] || serve[1][p][0] > serve[0][i][1])\n        continue;\n      cnt++;\n    }\n    if (cnt > ans) {\n      ans = cnt;\n    }\n    return;\n  }\n\n  for (int i = 0; i < P; i++) {\n    if (used[i])\n      continue;\n    used[i] = 1;\n    put[layer] = i;\n    dfs(layer + 1);\n    used[i] = 0;\n  }\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &P);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d\", &need[i]);\n    }\n\n    int have;\n    for (int i = 0; i < N; i++) {\n      int n = need[i];\n      for (int j = 0; j < P; j++) {\n        scanf(\"%d\", &have);\n        int maxX = floor(have \/ (0.9 * n));\n        int minX = ceil(have \/ (1.1 * n));\n\n        serve[i][j][0] = serve[i][j][1] = -1;\n        for (int x = minX; x <= maxX; x++) {\n          double per = ((double)have) \/ (x * n);\n          fprintf(stderr, \"per = %lf\\n\", per);\n          if (per >= 0.9 && per <= 1.1) {\n            if (serve[i][j][0] == -1) {\n              serve[i][j][0] = x;\n            }\n            serve[i][j][1] = x;\n          }\n        }\n      }\n    }\n\n    \/*for(int i = 0; i < N; i++){\n        for(int j = 0; j < P; j++){\n            printf(\"%d %d\\n\", serve[i][j][0], serve[i][j][1]);\n        }\n    }*\/\n\n    ans = 0;\n    if (N == 1) {\n      for (int i = 0; i < N; i++) {\n        for (int j = 0; j < P; j++) {\n          if (serve[i][j][0] != -1) {\n            ans++;\n          }\n        }\n      }\n    } else if (N == 2) {\n      memset(used, 0, sizeof(used));\n      dfs(0);\n    }\n    printf(\"Case #%d: %d\\n\", t, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n\nint T, R, C;\nchar grid[30][30];\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d%d\", &R, &C);\n    for (int r = 0; r < R; r++) {\n      scanf(\"%s\", grid[r]);\n    }\n\n    for (int r = 0; r < R; r++) {\n      for (int c = 0; c < C; c++) {\n        \/\/ fill row\n        if (grid[r][c] != '?') {\n          int cc = c - 1;\n          while (cc >= 0 && grid[r][cc] == '?') {\n            grid[r][cc] = grid[r][c];\n            cc--;\n          }\n          cc = c + 1;\n          while (cc < C && grid[r][cc] == '?') {\n            grid[r][cc] = grid[r][c];\n            cc++;\n          }\n        }\n      }\n    }\n\n    \/\/ for each empty row\n    for (int r = 0; r < R; r++) {\n      if (grid[r][0] != '?') {\n        int rr = r - 1;\n        while (rr >= 0 && grid[rr][0] == '?') {\n          for (int c = 0; c < C; c++) {\n            grid[rr][c] = grid[r][c];\n          }\n          rr--;\n        }\n\n        rr = r + 1;\n        while (rr < R && grid[rr][0] == '?') {\n          for (int c = 0; c < C; c++) {\n            grid[rr][c] = grid[r][c];\n          }\n          rr++;\n        }\n      }\n    }\n    printf(\"Case #%d:\\n\", t);\n    for (int r = 0; r < R; r++) {\n      printf(\"%s\\n\", grid[r]);\n    }\n  }\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n\nint T, D, N;\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &D, &N);\n    double slowest = 0;\n    for (int i = 0; i < N; i++) {\n      int k, s;\n      scanf(\"%d %d\", &k, &s);\n      slowest = max(slowest, (D - k) \/ (double)s);\n    }\n    printf(\"Case #%d: %lf\\n\", t, D \/ slowest);\n  }\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n\nint T, N;\nint num[6];\nint ans[1005];\nint haveAns;\nint valid[6][6] = {0};\nchar m[] = {'R', 'O', 'Y', 'G', 'B', 'V'};\n\nint possible(int n) {\n  int bound = n == N ? n \/ 2 : (n + 1) \/ 2;\n  \/\/ red\n  if (num[0] + num[1] + num[5] > bound) {\n    return 0;\n  }\n  \/\/ yellow\n  if (num[1] + num[2] + num[3] > bound) {\n    return 0;\n  }\n  \/\/ blue\n  if (num[3] + num[4] + num[5] > bound) {\n    return 0;\n  }\n  return 1;\n}\n\nvoid dfs(int layer) {\n  if (!possible(N - layer)) {\n    return;\n  }\n\n  if (layer == N) {\n    if (valid[ans[0]][ans[N - 1]]) {\n      haveAns = 1;\n      return;\n    }\n  }\n  for (int i = 0; i < 6; i++) {\n    if ((layer == 0 || valid[ans[layer - 1]][i]) && num[i] > 0) {\n      ans[layer] = i;\n      num[i]--;\n      dfs(layer + 1);\n      num[i]++;\n      if (haveAns) {\n        return;\n      }\n    }\n  }\n}\n\nint main() {\n\n  valid[0][2] = valid[0][3] = valid[0][4] = 1;\n  valid[2][0] = valid[2][4] = valid[2][5] = 1;\n  valid[4][0] = valid[4][1] = valid[4][2] = 1;\n  valid[3][0] = valid[1][4] = valid[5][2] = 1;\n\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d\", &N);\n    for (int i = 0; i < 6; i++) {\n      scanf(\"%d\", &num[i]);\n    }\n    haveAns = 0;\n    dfs(0);\n    printf(\"Case #%d: \", t);\n    if (haveAns) {\n      for (int i = 0; i < N; i++) {\n        printf(\"%c\", m[ans[i]]);\n      }\n      printf(\"\\n\");\n    } else {\n      printf(\"IMPOSSIBLE\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"ylc1218","func":"#include <cstdio>\n#include <cstdlib>\n\nint T, N, Q;\nlong long e[105], s[105], d[105][105];\ndouble hourse[105][105];\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &Q);\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%d %d\", &e[i], &s[i]);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        scanf(\"%d\", &d[i][j]);\n      }\n      d[i][i] = 0;\n    }\n\n    for (int k = 1; k <= N; k++) {\n      for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= N; j++) {\n          if (d[i][k] != -1 && d[k][j] != -1) {\n            if (d[i][j] == -1 || d[i][k] + d[k][j] < d[i][j]) {\n              d[i][j] = d[i][k] + d[k][j];\n            }\n          }\n        }\n      }\n    }\n\n    \/*printf(\"---\\n\");\n    for(int i = 1; i <= N; i++){\n        for(int j = 1; j <= N; j++){\n            printf(\"%d \", d[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"---\\n\");*\/\n\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        if (i == j) {\n          hourse[i][j] = 0;\n          continue;\n        }\n        if (d[i][j] != -1 && d[i][j] <= e[i]) {\n          hourse[i][j] = d[i][j] \/ (double)s[i];\n        } else {\n          hourse[i][j] = -1;\n        }\n      }\n    }\n\n    \/*printf(\"-hourse--\\n\");\n    for(int i = 1; i <= N; i++){\n        for(int j = 1; j <= N; j++){\n            printf(\"%lf \", hourse[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"---\\n\");*\/\n\n    for (int k = 1; k <= N; k++) {\n      for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= N; j++) {\n          if (hourse[i][k] != -1 && hourse[k][j] != -1) {\n            if (hourse[i][j] == -1 ||\n                hourse[i][k] + hourse[k][j] < hourse[i][j]) {\n              hourse[i][j] = hourse[i][k] + hourse[k][j];\n            }\n          }\n        }\n      }\n    }\n\n    printf(\"Case #%d:\", t);\n    while (Q--) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      printf(\" %lf\", hourse[x][y]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint t;\n\nstring ss;\n\nint s[123], l;\nvoid work(int ca) {\n  cin >> ss;\n  printf(\"Case #%d: \", ca);\n  if (ss.length() == 1) {\n    cout << ss << endl;\n    return;\n  }\n  l = ss.length();\n  for (int i = 0; i < l; i++)\n    s[i + 1] = ss[i] - '0';\n  int p;\n  for (p = 1; p < l; p++) {\n    if (s[p] > s[p + 1])\n      break;\n  }\n  if (p == l && s[p - 1] <= s[p]) {\n    cout << ss << endl;\n    return;\n  }\n  s[0] = -1;\n  while (s[p] - 1 < s[p - 1])\n    p--;\n  for (int i = 1; i < p; i++)\n    cout << s[i];\n  if (s[p] - 1 > 0)\n    cout << s[p] - 1;\n  for (int i = p + 1; i <= l; i++)\n    cout << 9;\n  cout << endl;\n}\n\nint main() {\n  cin >> t;\n  for (int cas = 1; cas <= t; cas++)\n    work(cas);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\npriority_queue<int> q;\n\nlong long n, k;\nint t;\nvoid work(int ca) {\n  while (!q.empty())\n    q.pop();\n  cin >> n >> k;\n  q.push(n);\n  long long now, l, r;\n  while (k--) {\n    now = q.top();\n    q.pop();\n    if (now & 1) {\n      l = now \/ 2;\n      r = now \/ 2;\n      q.push(l);\n      q.push(r);\n    } else {\n      l = now \/ 2;\n      r = now \/ 2 - 1;\n      q.push(l);\n      q.push(r);\n    }\n  }\n  cout << \"Case #\" << ca << \": \" << l << ' ' << r << endl;\n}\nint main() {\n  cin >> t;\n  for (int i = 1; i <= t; i++)\n    work(i);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint t, k;\nchar s[1234];\nint c[1234], n;\n\ninline int lowbit(int x) { return x & (-x); }\n\ninline void updata(int x, int y) {\n  for (int i = x; i > 0; i -= lowbit(i))\n    c[i] += y;\n}\n\ninline int query(int x) {\n  int r = 0;\n  for (int k = x; k <= n; k += lowbit(k)) {\n    r += c[k];\n  }\n  return r;\n}\n\nvoid work(int ca) {\n  int ans = 0;\n  scanf(\"%s %d\", s, &k);\n  memset(c, 0, sizeof(c));\n  n = strlen(s);\n  for (int i = 0; i < n - k + 1; i++) {\n    if (s[i] == '+') {\n      if (query(i + 1) % 2 == 1) {\n        ans += 1;\n        updata(i + k, 1);\n        updata(i, -1);\n      }\n    } else {\n      if (query(i + 1) % 2 == 0) {\n        ans += 1;\n        updata(i + k, 1);\n        updata(i, -1);\n      }\n    }\n  }\n  bool ok = 1;\n  for (int i = n - k + 1; i < n; i++) {\n    if ((s[i] == '+') && (query(i + 1) % 2 == 1)) {\n      ok = 0;\n      break;\n    }\n    if ((s[i] == '-') && (query(i + 1) % 2 == 0)) {\n      ok = 0;\n      break;\n    }\n  }\n  printf(\"Case #%d: \", ca);\n  if (ok)\n    printf(\"%d\\n\", ans);\n  else\n    printf(\"IMPOSSIBLE\\n\");\n}\n\nint main() {\n  scanf(\"%d\", &t);\n  for (int cas = 1; cas <= t; cas++)\n    work(cas);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nint r[1234], q[1234][1234], n, p, ans;\nvector<int> v;\n\nvoid work(int ca) {\n  scanf(\"%d %d\", &n, &p);\n  ans = 0;\n  v.clear();\n  for (int i = 1; i <= p; i++)\n    v.push_back(i);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%d\", &r[i]);\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= p; j++)\n      scanf(\"%d\", &q[i][j]);\n  }\n  int c, _1, _2;\n  \/\/ for (int rr = 1;rr;rr = next_permutation(v.begin(),v.end())) {\n  do {\n    c = 0;\n    for (int i = 0; i < v.size(); i++) {\n      int xx = q[1][v[i]], yy = q[2][i + 1];\n      _1 = xx * 10 \/ r[1] \/ 9;\n      _2 = ceil(xx * 10 \/ r[1] \/ 11);\n      bool ok = 0;\n      for (int _ = _2; _ <= _1 && !ok; _++) {\n        if (9 * _ * r[1] <= 10 * xx && 10 * xx <= 11 * _ * r[1])\n          if (n == 1 || 9 * _ * r[2] <= 10 * yy && 10 * yy <= 11 * _ * r[2])\n            ok = 1;\n      }\n      if (ok)\n        c++;\n    }\n    ans = max(ans, c);\n  } while (next_permutation(v.begin(), v.end()));\n  printf(\"Case #%d: %d\\n\", ca, ans);\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int __ = 1; __ <= tt; __++)\n    work(__);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\n\nusing namespace std;\n\nchar mp[28][28];\nint r, c;\nbool vis[128];\nvoid work(int ca) {\n  scanf(\"%d %d\", &r, &c);\n  for (int i = 1; i <= r; i++)\n    for (int j = 1; j <= c; j++)\n      scanf(\" %c\", &mp[i][j]);\n  printf(\"Case #%d:\\n\", ca);\n  int dl, dr;\n  memset(vis, 0, sizeof(vis));\n  for (int j = 1; j <= c; j++)\n    for (int i = 1; i <= r; i++)\n      if (mp[i][j] != '?' && !vis[mp[i][j]]) {\n        vis[mp[i][j]] = 1;\n        dl = dr = j;\n        for (int jj = j - 1; jj > 0; jj--)\n          if (mp[i][jj] == mp[i][j])\n            dl--;\n          else\n            break;\n        for (int jj = j + 1; jj <= c; jj++)\n          if (mp[i][jj] == mp[i][j])\n            dr++;\n          else\n            break;\n        bool ok, ok1;\n        int li1, li2;\n        li1 = li2 = i;\n        for (int ii = i - 1; ii > 0; ii--) {\n          ok = 0;\n          if (mp[ii][j] == mp[i][j] || mp[ii][j] == '?') {\n            ok1 = 1;\n            for (int jj = dl; jj <= dr; jj++)\n              if (mp[ii][jj] != mp[i][j] && mp[ii][jj] != '?') {\n                ok1 = 0;\n                break;\n              }\n            if (ok1) {\n              ok = 1;\n              li1 = ii;\n              for (int jj = dl; jj <= dr; jj++)\n                mp[ii][jj] = mp[i][j];\n            }\n          }\n          if (!ok)\n            break;\n        }\n        for (int ii = i + 1; ii <= r; ii++) {\n          ok = 0;\n          if (mp[ii][j] == mp[i][j] || mp[ii][j] == '?') {\n            ok1 = 1;\n            for (int jj = dl; jj <= dr; jj++)\n              if (mp[ii][jj] != mp[i][j] && mp[ii][jj] != '?') {\n                ok1 = 0;\n                break;\n              }\n            if (ok1) {\n              ok = 1;\n              li2 = ii;\n              for (int jj = dl; jj <= dr; jj++)\n                mp[ii][jj] = mp[i][j];\n            }\n          }\n          if (!ok)\n            break;\n        }\n        while (dl > 0) {\n          ok = 1;\n          for (int ii = li1; ii <= li2; ii++)\n            if (mp[ii][dl - 1] != mp[i][j] && mp[ii][dl - 1] != '?') {\n              ok = 0;\n              break;\n            }\n          if (!ok)\n            break;\n          dl--;\n        }\n        while (dr <= c) {\n          ok = 1;\n          for (int ii = li1; ii <= li2; ii++)\n            if (mp[ii][dr + 1] != mp[i][j] && mp[ii][dr + 1] != '?') {\n              ok = 0;\n              break;\n            }\n          if (!ok)\n            break;\n          dr++;\n        }\n        for (int ii = li1; ii <= li2; ii++)\n          for (int jj = dl; jj <= dr; jj++)\n            mp[ii][jj] = mp[i][j];\n      }\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++)\n      printf(\"%c\", mp[i][j]);\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  for (int _ = 1; _ <= tt; _++)\n    work(_);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint t;\nint k[1234], s[1234], n, d;\n\nvoid work(int cas) {\n  scanf(\"%d %d\", &d, &n);\n  double t = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d %d\", &k[i], &s[i]);\n    t = max(t, (double(d) - k[i]) \/ s[i]);\n  }\n  printf(\"Case #%d: %.7lf\\n\", cas, double(d) \/ t);\n}\n\nint main() {\n  cin >> t;\n  for (int _ = 1; _ <= t; _++)\n    work(_);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nint t, n;\n\nint c[6];\nint g[3];\nint ans[1234];\nvoid work(int ca) {\n  cin >> n;\n  for (int i = 0; i < 6; i++)\n    scanf(\"%d\", &c[i]);\n  g[0] = c[0];\n  g[1] = c[2];\n  g[2] = c[4];\n  ans[0] = -1;\n  \/\/ cout << g[0] << g[1] <<g[2]<<endl;\n  printf(\"Case #%d: \", ca);\n  for (int i = 1; i <= n; i++) {\n    int mt = -1, mv;\n    bool ok = 0;\n    for (int j = 0; j < 3; j++)\n      if (ans[i - 1] != j && mt <= g[j] && g[j] > 0) {\n        ok = 1;\n        if (mt == g[j] && j == ans[1]) {\n          mv = j;\n        }\n        if (mt < g[j]) {\n          mt = g[j];\n          mv = j;\n        }\n      }\n    if (!ok) {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    }\n    ans[i] = mv;\n    g[mv]--;\n  }\n  if (ans[1] == ans[n]) {\n    printf(\"IMPOSSIBLE\\n\");\n    return;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (ans[i] == 0)\n      printf(\"R\");\n    if (ans[i] == 1)\n      printf(\"Y\");\n    if (ans[i] == 2)\n      printf(\"B\");\n  }\n  printf(\"\\n\");\n}\nint main() {\n  cin >> t;\n  for (int _ = 1; _ <= t; _++)\n    work(_);\n  return 0;\n}\n"}
{"target":"Yoshine","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nlong long s[123];\nint d[123];\n\nint t, n, qq, u, k;\nint e[123], v[123];\n\nvector<pair<int, long double>> g[123];\nqueue<int> q;\nlong double f[123];\nbool vis[123];\n\nvoid work(int ca) {\n  scanf(\"%d %d\", &n, &qq);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%d %d\", &e[i], &v[i]);\n  int r;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) {\n      scanf(\"%d\", &r);\n      if (i + 1 == j)\n        d[j] = r;\n    }\n  scanf(\"%d %d\", &u, &k);\n  s[0] = 0;\n  d[0] = 0;\n  d[1] = 0;\n  for (int i = 1; i <= n; i++)\n    s[i] = s[i - 1] + d[i];\n  for (int i = 1; i < n; i++) {\n    for (int j = i + 1; j <= n; j++)\n      if (s[j] - s[i] <= e[i]) {\n        g[i].push_back(\n            make_pair(j, (long double)(s[j] - s[i]) \/ (long double)v[i]));\n      }\n  }\n  while (!q.empty())\n    q.pop();\n  for (int i = 1; i <= n; i++)\n    f[i] = 1e13;\n  q.push(1);\n  vis[1] = 1;\n  f[1] = 0;\n  while (!q.empty()) {\n    int u = q.front();\n    q.pop();\n    vis[u] = 0;\n    for (int k = 0; k < g[u].size(); k++) {\n      int v = g[u][k].first;\n      double w = g[u][k].second;\n      \/\/ cout << u << ' ' << v <<' ' <<w <<endl;\n      if (f[v] > f[u] + w) {\n        f[v] = f[u] + w;\n        \/\/ cout << u << ' ' << v << ' ' << f[v] << endl;\n        if (!vis[v]) {\n          q.push(v);\n          vis[v] = 1;\n        }\n      }\n    }\n  }\n  printf(\"Case #%d: %.7lf\\n\", ca, (double)f[n]);\n  for (int i = 1; i <= n; i++)\n    g[i].clear();\n}\n\nint main() {\n  cin >> t;\n  for (int _ = 1; _ <= t; _++)\n    work(_);\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nvoid solve(void) {\n  string s;\n  cin >> s;\n  for (int i = 0; i + 1 < s.size(); i++) {\n    if (s[i] > s[i + 1]) {\n      int offs = i;\n      for (; offs > 0; offs--) {\n        if (s[offs - 1] < s[offs])\n          break;\n      }\n      s[offs]--;\n      for (int j = offs + 1; j < s.size(); j++) {\n        s[j] = '9';\n      }\n      if (s[0] == '0')\n        cout << s.substr(1);\n      else\n        cout << s;\n      return;\n    }\n  }\n  cout << s;\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nvoid solve(void) {\n  long long n, k;\n  cin >> n >> k;\n  long long cnt = 0;\n  long long m = n;\n  long long a[2] = {1, 0}, b[2];\n  while (1) {\n    long long newm = (m - 1) \/ 2;\n    b[0] = b[1] = 0;\n    if (m == 0) {\n      cout << 0 << \" \" << 0;\n      return;\n    } else if (m == 1) {\n      \/\/ m+1\n      b[0] += a[1];\n      b[1] += a[1];\n      cnt += a[1];\n      if (k <= cnt) {\n        cout << newm + 1 << \" \" << newm;\n        return;\n      }\n      cout << 0 << \" \" << 0;\n      return;\n    } else if (m % 2) {\n      \/\/ m+1\n      b[0] += a[1];\n      b[1] += a[1];\n      cnt += a[1];\n      if (k <= cnt) {\n        cout << newm + 1 << \" \" << newm;\n        return;\n      }\n      \/\/ m\n      b[0] += a[0] * 2;\n      cnt += a[0];\n      if (k <= cnt) {\n        cout << newm << \" \" << newm;\n        return;\n      }\n    } else {\n      \/\/ m+1\n      b[1] += a[1] * 2;\n      cnt += a[1];\n      if (k <= cnt) {\n        cout << newm + 1 << \" \" << newm + 1;\n        return;\n      }\n      \/\/ m\n      b[0] += a[0];\n      b[1] += a[0];\n      cnt += a[0];\n      if (k <= cnt) {\n        cout << newm + 1 << \" \" << newm;\n        return;\n      }\n    }\n    a[0] = b[0];\n    a[1] = b[1];\n    m = newm;\n  }\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nvoid solve(void) {\n  string s;\n  int k;\n  cin >> s >> k;\n  int cnt = 0;\n  for (int i = 0; i + k <= s.size(); i++) {\n    if (s[i] == '-') {\n      for (int j = i; j < i + k; j++) {\n        s[j] = ((s[j] == '-') ? '+' : '-');\n      }\n      cnt++;\n    }\n  }\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '-') {\n      cout << \"IMPOSSIBLE\";\n      return;\n    }\n  }\n  cout << cnt;\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef pair<long long, long long> pll;\nconst long long MODP = 1000000007;\n\nlong long n, p;\nlong long r[50];\nlong long q[50][50];\nlong long mini[50][50], maxi[50][50];\n\nbool ok(pll x, pll y) {\n  return (max(x.first, y.first) < min(x.second, y.second));\n}\n\nvoid solve(void) {\n  cin >> n >> p;\n  for (int i = 0; i < n; i++)\n    cin >> r[i];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < p; j++)\n      cin >> q[i][j];\n  for (int i = 0; i < n; i++)\n    sort(&q[i][0], &q[i][p]);\n\n  vector<vector<pll>> range(n);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      mini[i][j] = (q[i][j] * 10 + r[i] * 11 - 1) \/ (r[i] * 11);\n      maxi[i][j] = (q[i][j] * 10) \/ (r[i] * 9);\n      if (mini[i][j] >= 1 && mini[i][j] <= maxi[i][j]) {\n        range[i].push_back(make_pair(mini[i][j], maxi[i][j] + 1));\n        \/\/ cout << mini[i][j] << \"-\" << maxi[i][j] << \"\\t\";\n      } \/\/ else cout << \"x-x\" << \"\\t\";\n    }\n    \/\/ cout << endl;\n  }\n  long long ans = 0;\n  if (n == 1) {\n    ans = range[0].size();\n  } else if (n == 2) {\n    \/\/ greedy\n    long long offs = 0;\n    for (int i = 0; i < range[0].size(); i++) {\n      for (int j = offs; j < range[1].size(); j++) {\n        if (ok(range[0][i], range[1][j])) {\n          ans++;\n          offs = j + 1;\n          break;\n        }\n      }\n    }\n  }\n  cout << ans << endl;\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nint r, c;\nvector<string> f(25);\nint minr[26], maxr[26], minc[26], maxc[26];\n\nvoid fill(char c, int r1, int r2, int c1, int c2) {\n  for (int i = r1; i < r2; i++)\n    for (int j = c1; j < c2; j++)\n      f[i][j] = c;\n  return;\n}\n\npair<int, char> count(int r1, int r2, int c1, int c2) {\n  int cnt = 0;\n  char c = '*';\n  for (int i = 0; i < 26; i++) {\n    if (minr[i] < maxr[i]) {\n      if (r1 <= minr[i] && maxr[i] <= r2 && c1 <= minc[i] && maxc[i] <= c2) {\n        cnt++;\n        c = 'A' + i;\n      }\n    }\n  }\n  return make_pair(cnt, c);\n}\nvoid solve2(int r1, int r2, int c1, int c2) {\n  pair<int, char> cnt = count(r1, r2, c1, c2);\n  if (cnt.first == 1) {\n    fill(cnt.second, r1, r2, c1, c2);\n    return;\n  }\n\n  for (int i = r1 + 1; i < r2; i++) {\n    bool ok = true;\n    for (int j = c1; j < c2; j++) {\n      if (f[i - 1][j] == f[i][j] && f[i][j] != '?') {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      if (count(r1, i, c1, c2).first == 0)\n        continue;\n      if (count(i, r2, c1, c2).first == 0)\n        continue;\n      solve2(r1, i, c1, c2);\n      solve2(i, r2, c1, c2);\n      return;\n    }\n  }\n  for (int j = c1 + 1; j < c2; j++) {\n    bool ok = true;\n    for (int i = r1; i < r2; i++) {\n      if (f[i][j - 1] == f[i][j] && f[i][j] != '?') {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      if (count(r1, r2, c1, j).first == 0)\n        continue;\n      if (count(r1, r2, j, c2).first == 0)\n        continue;\n      solve2(r1, r2, c1, j);\n      solve2(r1, r2, j, c2);\n      return;\n    }\n  }\n  cout << r1 << \" \" << r2 << \" \" << c1 << \" \" << c2 << \" failed.\" << endl;\n  return;\n}\n\nvoid show(void) {\n  cout << endl;\n  for (int i = 0; i < r; i++)\n    cout << f[i] << endl;\n}\n\nvoid solve(void) {\n  cin >> r >> c;\n  for (int i = 0; i < r; i++)\n    cin >> f[i];\n  for (int i = 0; i < 26; i++) {\n    minr[i] = INT_MAX;\n    minc[i] = INT_MAX;\n    maxr[i] = 0;\n    maxc[i] = 0;\n  }\n  for (int i = 0; i < r; i++)\n    for (int j = 0; j < c; j++) {\n      if (f[i][j] != '?') {\n        int tmp = f[i][j] - 'A';\n        minr[tmp] = min(minr[tmp], i);\n        minc[tmp] = min(minc[tmp], j);\n        maxr[tmp] = max(maxr[tmp], i + 1);\n        maxc[tmp] = max(maxc[tmp], j + 1);\n      }\n    }\n  for (int i = 0; i < 26; i++)\n    fill('A' + i, minr[i], maxr[i], minc[i], maxc[i]);\n  solve2(0, r, 0, c);\n\n  show();\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nlong long k[1024], s[1024];\nvoid solve(void) {\n  long long d, n;\n  cin >> d >> n;\n  double maxtime = 0.0;\n  for (int i = 0; i < n; i++) {\n    cin >> k[i] >> s[i];\n    maxtime = max(maxtime, (d - k[i] + 0.0) \/ s[i]);\n  }\n  printf(\"%.8f\\n\", d \/ maxtime);\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nlong long n, r, o, y, g, b, v;\nvoid solve(void) {\n  cin >> n >> r >> o >> y >> g >> b >> v;\n  if (g == 0 && v == 0 && o == 0) {\n    vector<pair<int, char>> p;\n    p.push_back(make_pair(r, 'R'));\n    p.push_back(make_pair(b, 'B'));\n    p.push_back(make_pair(y, 'Y'));\n    sort(p.begin(), p.end());\n    if (p[0].first + p[1].first < p[2].first) {\n      cout << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n    string ret = \"\";\n    int m1 = p[1].first;\n    char c1 = p[1].second;\n    int m0 = p[0].first;\n    char c0 = p[0].second;\n    for (int i = 0; i < p[2].first; i++) {\n      ret += p[2].second;\n      if (i + 1 == p[2].first) {\n        if (m0 < m1) {\n          for (int j = 0; j < m0; j++) {\n            ret += c1;\n            ret += c0;\n          }\n          ret += c1;\n        } else if (m0 > m1) {\n          for (int j = 0; j < m1; j++) {\n            ret += c0;\n            ret += c1;\n          }\n          ret += c0;\n        } else {\n          for (int j = 0; j < m1; j++) {\n            ret += c0;\n            ret += c1;\n          }\n        }\n      } else {\n        if (m0 < m1) {\n          ret += c1;\n          m1--;\n        } else {\n          ret += c0;\n          m0--;\n        }\n      }\n    }\n    cout << ret << endl;\n  }\n\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"yosss","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\nconst long long MODP = 1000000007;\n\nlong long n, q;\nlong long e[128], s[128], d[128][128];\nlong long u[128], v[128];\nvoid solve(void) {\n  cin >> n >> q;\n  for (int i = 0; i < n; i++)\n    cin >> e[i] >> s[i];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < n; j++)\n      cin >> d[i][j];\n  for (int i = 0; i < q; i++)\n    cin >> u[i] >> v[i];\n\n  long long sd[n];\n  sd[0] = 0;\n  for (int i = 1; i < n; i++)\n    sd[i] = sd[i - 1] + d[i - 1][i];\n  double dp[n];\n  for (int i = 0; i < n; i++)\n    dp[i] = DBL_MAX;\n  dp[0] = 0.0;\n  for (int i = 1; i < n; i++) {\n    for (int j = 0; j < i; j++) {\n      if (sd[i] - sd[j] > e[j])\n        continue;\n      dp[i] = min(dp[i], dp[j] + (sd[i] - sd[j] + 0.0) \/ s[j]);\n    }\n  }\n  printf(\"%.8f\\n\", dp[n - 1]);\n  return;\n}\n\nint main(void) {\n  int T;\n  cin >> T;\n  for (int tcnt = 1; tcnt <= T; tcnt++) {\n    cout << \"Case #\" << tcnt << \": \";\n    solve();\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint a[1010];\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, k, cas = 1;\n  LL n, m;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    printf(\"Case #%d: \", cas++);\n    m = n;\n    int cnt = 0;\n    while (n) {\n      a[cnt++] = n % 10;\n      n \/= 10;\n    }\n    int f = 1;\n    for (int i = 1; i < cnt && f; i++) {\n      if (a[i] > a[i - 1])\n        f = 0;\n    }\n    if (f) {\n      cout << m << endl;\n      continue;\n    }\n    int j = cnt - 1;\n    for (int i = cnt - 1; i > 0; i--) {\n      if (a[i] < a[i - 1])\n        j = i - 1;\n      if (a[i] > a[i - 1])\n        break;\n    }\n    a[j]--;\n    if (j == cnt - 1 && a[j] == 0) {\n      for (int i = 1; i < cnt; i++)\n        cout << \"9\";\n      puts(\"\");\n      continue;\n    }\n    for (int i = cnt - 1; i >= j; i--)\n      cout << a[i];\n    for (int i = j - 1; i >= 0; i--)\n      cout << \"9\";\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint a[1010];\npriority_queue<int> q;\nint main() {\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, k, cas = 1;\n  int n, m;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    printf(\"Case #%d: \", cas++);\n    while (!q.empty())\n      q.pop();\n    q.push(n);\n    int l, r;\n    while (k--) {\n      int m = q.top();\n      q.pop();\n      if (m & 1)\n        l = r = m >> 1;\n      else\n        r = m >> 1, l = (m >> 1) - 1;\n      q.push(l);\n      q.push(r);\n    }\n    cout << r << \" \" << l << endl;\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint a[1010];\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, k, cas = 1;\n  string s;\n  cin >> t;\n  while (t--) {\n    cin >> s >> k;\n    int n = ((int)(s).size());\n    for (int i = 0; i < n; i++)\n      a[i] = (s[i] == '+');\n    int f = 1, ans = 0;\n    for (int i = 0; i < n && f; i++) {\n      if (i + k <= n) {\n        if (!a[i]) {\n          ans++;\n          for (int j = i; j < i + k; j++)\n            a[j] ^= 1;\n        }\n      } else if (!a[i])\n        f = 0;\n    }\n    printf(\"Case #%d: \", cas++);\n    if (f)\n      cout << ans << endl;\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<double, int> PDI;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint a[55], q[55][55], v[55], vis[55][55], ans, n, p;\nvoid solve() {\n  memset(vis, 0, sizeof vis);\n  int g = 1, f = 1;\n  while (f) {\n    int cnt = 0;\n    memset(v, 0, sizeof v);\n    for (int i = 0; i < n; i++) {\n      double l = a[i] * g * 0.9, r = a[i] * g * 1.1;\n      for (int j = 0; j < p; j++) {\n        if (vis[i][j])\n          continue;\n        if (q[i][j] >= l && q[i][j] <= r) {\n          cnt++;\n          v[i] = j;\n          break;\n        }\n      }\n      if (q[i][p - 1] < l)\n        f = 0;\n    }\n    if (cnt == n) {\n      ans++;\n      for (int i = 0; i < n; i++)\n        vis[i][v[i]] = 1;\n    } else\n      g++;\n  }\n}\nint main() {\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n >> p;\n    for (int i = 0; i < n; i++)\n      cin >> a[i];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < p; j++)\n        cin >> q[i][j];\n      sort(q[i], q[i] + p);\n    }\n    ans = 0;\n    solve();\n\n    printf(\"Case #%d: %d\\n\", cas++, ans);\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<double, int> PDI;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nchar g[30][30];\nint v[30], n, m;\nvoid solve() {\n  memset(v, 0, sizeof(v));\n  for (int i = 0; i < n; i++) {\n    cin >> g[i];\n    int j = 0;\n    while (j < m && g[i][j] == '?')\n      j++;\n    if (j < m) {\n      for (int k = 0; k < j; k++)\n        g[i][k] = g[i][j];\n      for (int k = j + 1; k < m; k++) {\n        if (g[i][k] == '?')\n          g[i][k] = g[i][k - 1];\n      }\n    } else\n      v[i] = 1;\n  }\n  int j = 0;\n  while (v[j])\n    j++;\n  for (int i = 0; i < j; i++)\n    strcpy(g[i], g[j]);\n  for (int i = j + 1; i < n; i++) {\n    if (v[i])\n      strcpy(g[i], g[i - 1]);\n  }\n}\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, cas = 1;\n  cin >> t;\n  while (t--) {\n    cin >> n >> m;\n    solve();\n    printf(\"Case #%d: \\n\", cas++);\n    for (int i = 0; i < n; i++)\n      cout << g[i] << endl;\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<double, int> PDI;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\n\nint main() {\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, cas = 1, d, n, k, s;\n  cin >> t;\n  while (t--) {\n    cin >> d >> n;\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> k >> s;\n      ans = max(ans, (d - k) * 1.0 \/ s);\n    }\n    printf(\"Case #%d: %.6f\\n\", cas++, d \/ ans);\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<double, int> PDI;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\npriority_queue<PII> q;\nint ans[1010];\nstring s = \"RYB\";\nint main() {\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, cas = 1, n, r, o, y, g, b, v;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    \/\/        printf(\"%d %d %d %d %d %d %d\\n\",n,r,o,y,g,b,v);\n    printf(\"Case #%d: \", cas++);\n    while (!q.empty())\n      q.pop();\n    if (r)\n      q.push({r, 1});\n    if (y)\n      q.push({y, 2});\n    if (b)\n      q.push({b, 3});\n    int f = 1, cnt = 1;\n    while (!q.empty() && f) {\n      PII a = q.top(), c;\n      q.pop();\n      a.first--;\n      if (a.second == ans[cnt - 1])\n        f = 0;\n      ans[cnt++] = a.second;\n      if (!q.empty()) {\n        c = q.top();\n        q.pop();\n        c.first--;\n        ans[cnt++] = c.second;\n      }\n      if (a.first)\n        q.push(a);\n      if (c.first)\n        q.push(c);\n    }\n    if (f && ans[1] == ans[n]) {\n      swap(ans[n - 1], ans[n]);\n      if (ans[n - 2] == ans[n - 1] || ans[1] == ans[n])\n        f = 0;\n    }\n    if (f)\n      for (int i = 1; i <= n; i++)\n        cout << s[ans[i] - 1];\n    else\n      printf(\"IMPOSSIBLE\");\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"yunmagz","func":"#include <bits\/stdc++.h>\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<double, int> PDI;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int INF = 2e9 + 7;\nconst int mod = 1e9 + 7;\nLL powmod(LL a, LL b) {\n  LL res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1)\n      res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint e[110], s[110], ans[110];\ndouble d[110][110], dp[110][110];\nint main() {\n  freopen(\"C-small-attempt0 (1).in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  int t, cas = 1, n, q;\n  cin >> t;\n  while (t--) {\n    cin >> n >> q;\n    for (int i = 1; i <= n; i++)\n      cin >> e[i] >> s[i];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        cin >> d[i][j];\n        if (d[i][j] == -1)\n          d[i][j] = 1e18;\n      }\n    for (int k = 1; k <= n; ++k)\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n          if (d[i][k] + d[k][j] < d[i][j])\n            d[i][j] = d[i][k] + d[k][j];\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        if (d[i][j] <= e[i])\n          dp[i][j] = 1.0 * d[i][j] \/ s[i];\n        else\n          dp[i][j] = 1e18;\n    for (int k = 1; k <= n; ++k)\n      for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n          if (dp[i][k] + dp[k][j] < dp[i][j])\n            dp[i][j] = dp[i][k] + dp[k][j];\n    printf(\"Case #%d:\", cas++);\n    while (q--) {\n      int l, r;\n      cin >> l >> r;\n      printf(\" %.6f\", dp[l][r]);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef map<int, int> mii;\ntypedef unordered_map<int, int> umii;\n\nint T, first[20];\nstring s;\nbool b;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n\n  cin >> T;\n  for (int r = 1; r <= T; r++) {\n    cin >> s;\n    for (int i = 0; i < s.length(); i++) {\n      first[i] = s[i] - '0';\n    }\n\n    do {\n      b = 0;\n      for (int i = 0; i < s.length() - 1; i++) {\n        if (first[i] > first[i + 1]) {\n          first[i]--;\n          for (i++; i < s.length(); i++) {\n            first[i] = 9;\n          }\n          b = 1;\n        }\n      }\n    } while (b);\n\n    cout << \"Case #\" << r << \": \";\n    for (int i = 0; i < s.length(); i++) {\n      if (first[i] != 0) {\n        cout << first[i];\n      }\n    }\n    cout << endl;\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef map<int, int> mii;\ntypedef unordered_map<int, int> umii;\n\nint T, N, K, first[1005], c, f, ii, l, r, second[1005];\n\nint left(int i) {\n  while (first[i] == 0) {\n    i--;\n  }\n  return i;\n}\n\nint right(int i) {\n  while (first[i] == 0) {\n    i++;\n  }\n  return i;\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int rr = 1; rr <= T; rr++) {\n\n    scanf(\"%d %d\", &N, &K);\n    memset(first, 0, sizeof first);\n    first[0] = first[N + 1] = -1;\n\n    for (int i = 1; i <= K; i++) {\n      c = -1;\n      f = -1;\n      ii = -1;\n\n      for (int j = 1; j <= N; j++) {\n        if (first[j]) {\n          continue;\n        }\n        l = j - left(j - 1) - 1;\n        r = right(j + 1) - j - 1;\n        if (c < min(l, r) || (c == min(l, r) && f < max(l, r))) {\n          c = min(l, r);\n          f = max(l, r);\n          ii = j;\n        }\n      }\n\n      first[ii] = i;\n      second[i] = ii;\n    }\n\n    cout << \"Case #\" << rr << \": \" << f << \" \" << c << endl;\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef map<int, int> mii;\ntypedef unordered_map<int, int> umii;\n\nint T, w, m;\nstring s;\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n\n  cin >> T;\n  for (int r = 1; r <= T; r++) {\n    cin >> s >> w;\n    m = 0;\n\n    for (int i = 0; i < s.length() - w + 1; i++) {\n      if (s[i] == '-') {\n        for (int j = 0; j < w; j++) {\n          s[i + j] = s[i + j] == '+' ? '-' : '+';\n        }\n        m++;\n      }\n    }\n\n    for (int i = 0; i < s.length(); i++) {\n      if (s[i] == '-') {\n        m = -1;\n      }\n    }\n\n    cout << \"Case #\" << r << \": \";\n    if (m == -1) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << m << endl;\n    }\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef map<int, int> mii;\ntypedef unordered_map<int, int> umii;\n\nint T, N, P, r[55], tot, p[55][55], a[55];\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &P);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d\", &r[i]);\n      a[i] = 0;\n    }\n\n    \/\/ ith ingredient, jth package\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < P; j++) {\n        scanf(\"%d\", &p[i][j]);\n      }\n      sort(p[i], p[i] + P);\n    }\n\n    tot = 0;\n\n    for (int i = 1; i <= 1e6; i++) {\n      \/\/ Increase pointers if < 90% of required\n      for (int j = 0; j < N; j++) {\n        while (a[j] < P && p[j][a[j]] < r[j] * i * 0.9) {\n          a[j]++;\n        }\n      }\n\n      bool make = 1;\n\n      while (make) {\n        \/\/ Check if a package can be made\n        for (int j = 0; j < N; j++) {\n          if (a[j] >= P || p[j][a[j]] > r[j] * i * 1.1) {\n            make = 0;\n          }\n        }\n\n        if (make) {\n          for (int j = 0; j < N; j++) {\n            a[j]++;\n          }\n          tot++;\n        }\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", t, tot);\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef map<int, int> mii;\ntypedef unordered_map<int, int> umii;\n\nint T, R, C;\nstring grid[30], cgrid[30];\nbool flip;\n\nchar color(int i, int j, int di, int dj) {\n  if (R <= i || i < 0 || C <= j || j < 0) {\n    return '?';\n  }\n  if (grid[i][j] != '?') {\n    return grid[i][j];\n  }\n  return grid[i][j] = color(i + di, j + dj, di, dj);\n}\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    cin >> R >> C;\n    flip = 0;\n    for (int i = 0; i < R; i++) {\n      cin >> grid[i];\n      \/\/ cgrid[i] = grid[i];\n    }\n    for (int i = 0; i < R; i++) {\n      for (int j = 0; j < C; j++) {\n        if (grid[i][j] == '?') {\n          color(i, j, -1, 0);\n          if (grid[i][j] == '?') {\n            color(i, j, 1, 0);\n          }\n        }\n      }\n    }\n\n    for (int j = 0; j < C; j++) {\n      for (int i = 0; i < R; i++) {\n        if (grid[i][j] == '?') {\n          color(i, j, 0, -1);\n          if (grid[i][j] == '?') {\n            color(i, j, 0, 1);\n          }\n        }\n      }\n    }\n\n    cout << \"Case #\" << t << \":\" << endl;\n    for (int i = 0; i < R; i++) {\n      cout << grid[i] << endl;\n    }\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef unordered_map<int, int> umii;\n\nint T, D, N;\npii horse[1005];\ndouble t0, t1;\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &D, &N);\n    for (int i = 0; i < N; i++) {\n      scanf(\"%d %d\", &horse[i].first, &horse[i].second);\n    }\n    sort(horse, horse + N);\n\n    t0 = 0;\n    for (int i = N - 1; i >= 0; i--) {\n      t1 = (D - horse[i].first) * 1.0 \/ horse[i].second;\n      t0 = max(t0, t1);\n    }\n\n    printf(\"Case #%d: %.7lf\\n\", t, D \/ t0);\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef unordered_map<int, int> umii;\n\nint T, N, R, O, Y, G, B, V;\nstring ans;\n\nbool best(char c) {\n  bool ret = 0;\n\n  if (R > 0 && c == 'R' && ans.back() != 'R') {\n    ret |= R >= Y && R >= B;\n    ret |= R >= Y && ans.back() == 'B';\n    ret |= R >= B && ans.back() == 'Y';\n  }\n\n  if (B > 0 && c == 'B' && ans.back() != 'B') {\n    ret |= B >= R && B >= Y;\n    ret |= B >= R && ans.back() == 'Y';\n    ret |= B >= Y && ans.back() == 'R';\n  }\n\n  if (Y > 0 && c == 'Y' && ans.back() != 'Y') {\n    ret |= Y >= R && Y >= B;\n    ret |= Y >= R && ans.back() == 'B';\n    ret |= Y >= B && ans.back() == 'R';\n  }\n\n  return ret;\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d %d %d %d %d %d\", &N, &R, &O, &Y, &G, &B, &V);\n\n    ans = \"$\";\n\n    while (R != 0 || B != 0 || Y != 0) {\n      if (best('R')) {\n        ans += 'R';\n        R--;\n      } else if (best('B')) {\n        ans += 'B';\n        B--;\n      } else if (best('Y')) {\n        ans += 'Y';\n        Y--;\n      } else {\n        ans = \"$IMPOSSIBLE\";\n        break;\n      }\n    }\n\n    if (ans[1] == ans.back()) {\n      ans = \"$IMPOSSIBLE\";\n    }\n\n    printf(\"Case #%d: %s\\n\", t, ans.substr(1).c_str());\n  }\n}\n"}
{"target":"ZanderShah","func":"#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nchar _;\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\ntypedef pair<float, float> pff;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef unordered_map<int, int> umii;\n\nint T, N, Q, u, v, g[105][105];\nll dist[105];\npii horse[105];\n\n\/\/ City, Horse\ndouble dp[105][105];\n\ndouble go(int c, int r, int h) {\n  if (N <= c) {\n    return 0;\n  }\n\n  double ret = 1L << 60;\n\n  \/\/ Go to next town if possible\n  if (g[c][c + 1] <= r) {\n    ret = min(ret, go(c + 1, r - g[c][c + 1], h) +\n                       g[c][c + 1] * 1.0 \/ horse[h].second);\n  }\n  \/\/ Take this horse\n  if (g[c][c + 1] <= horse[c].first) {\n    ret = min(ret, go(c + 1, horse[c].first - g[c][c + 1], c) +\n                       g[c][c + 1] * 1.0 \/ horse[c].second);\n  }\n\n  return ret;\n}\n\nint main() {\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; t++) {\n    scanf(\"%d %d\", &N, &Q);\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%d %d\", &horse[i].first, &horse[i].second);\n    }\n    for (int i = 1; i <= N; i++) {\n      for (int j = 1; j <= N; j++) {\n        scanf(\"%d\", &g[i][j]);\n      }\n    }\n\n    for (int i = 1; i <= Q; i++) {\n      scanf(\"%d %d\", &u, &v);\n      printf(\"Case #%d: %lf\\n\", t, go(u, horse[1].first, 1));\n    }\n  }\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\n\nusing namespace std;\n\nbool isgood(string s) {\n  for (int i = 0; i < s.size() - 1; i++) {\n    if (s[i] > s[i + 1])\n      return 0;\n  }\n  return 1;\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    string s;\n    cin >> s;\n    string ans;\n\n    string t = s;\n    t.back() = '9';\n    for (int i = s.size() - 2; i >= 0; i--) {\n      if (s[i] == s[i + 1])\n        t[i] = t[i + 1];\n      else\n        t[i] = s[i + 1];\n    }\n\n    bool small = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (small)\n        ans.push_back('9');\n      else {\n        if (s[i] > t[i]) {\n          small = true;\n          ans.push_back(max(char(s[i] - 1), '0'));\n        } else\n          ans.push_back(s[i]);\n      }\n    }\n\n    printf(\"Case #%d: \", cs);\n    cout << stoll(ans) << endl;\n  }\n\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\n\nusing namespace std;\n\npair<ll, ll> solve_small(ll n, ll k) {\n  priority_queue<ll> Q;\n  Q.push(n);\n  for (ll i = 0; i < k - 1; i++) {\n    ll x = Q.top();\n    Q.pop();\n    Q.push((x - 1) \/ 2);\n    Q.push(x \/ 2);\n  }\n  ll x = Q.top();\n  return make_pair(x \/ 2, (x - 1) \/ 2);\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    ll n, k;\n    cin >> n >> k;\n    auto ans = solve_small(n, k);\n    printf(\"Case #%d: %lld %lld\\n\", cs, ans.first, ans.second);\n  }\n\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\n\nusing namespace std;\n\nvoid flip(string &s, int i, int k) {\n  for (int j = 0; j < k; j++) {\n    if (s[i + j] == '+')\n      s[i + j] = '-';\n    else\n      s[i + j] = '+';\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int ans = 0;\n    for (int i = 0; i + k - 1 < s.size(); i++) {\n      if (s[i] == '-') {\n        ans++;\n        flip(s, i, k);\n      }\n    }\n    bool ok = 1;\n    for (char c : s)\n      ok &= (c == '+');\n    printf(\"Case #%d: \", cs);\n    if (ok)\n      printf(\"%d\\n\", ans);\n    else\n      puts(\"IMPOSSIBLE\");\n  }\n\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random> \/\/ std::default_random_engine\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    int n, p;\n    cin >> n >> p;\n    vector<int> r(n);\n    for (int i = 0; i < n; i++)\n      cin >> r[i];\n    vector<deque<double>> Q(n);\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < p; j++) {\n        int q;\n        cin >> q;\n        double k = double(q) \/ r[i];\n        Q[i].push_back(k);\n      }\n    for (int i = 0; i < n; i++)\n      sort(Q[i].begin(), Q[i].end());\n    int ans = 0;\n\n    bool hasempty = 0;\n    while (!hasempty) {\n      double minf = 9E9, maxf = 0;\n      int minid = 0;\n      for (int i = 0; i < n; i++) {\n        if (Q[i].front() < minf) {\n          minf = Q[i].front();\n          minid = i;\n        }\n        maxf = max(maxf, Q[i].front());\n      }\n      bool good = 0;\n      int midf = int((minf + maxf) \/ 2);\n      for (int k = max(midf - 3, 1); k <= midf + 3; k++) {\n        if (minf \/ k >= 0.9 - 1E-8 && minf \/ k <= 1.1 + 1E-8 &&\n            maxf \/ k >= 0.9 - 1E-8 && maxf \/ k <= 1.1 + 1E-8) {\n          good = 1;\n          cerr << k << endl;\n          break;\n        }\n      }\n      if (good) {\n        ans++;\n        for (int i = 0; i < n; i++) {\n          Q[i].pop_front();\n          hasempty |= Q[i].empty();\n        }\n      } else {\n        Q[minid].pop_front();\n        hasempty |= Q[minid].empty();\n      }\n    }\n\n    printf(\"Case #%d: %d\\n\", cs, ans);\n  }\n\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\n\nusing namespace std;\n\nchar G[26][26];\nint r, c;\n\nmap<char, vector<int>> box;\n\nvoid add(vector<int> &B, int i, int j) {\n  B[0] = min(B[0], i);\n  B[1] = min(B[1], j);\n  B[2] = max(B[2], i);\n  B[3] = max(B[3], j);\n}\n\nvoid expand(char ch) {\n  while (1) {\n    bool stuck = 1;\n\n    \/\/ expand up\n    if (box[ch][0] > 0) {\n      bool fail = 0;\n      for (int i = box[ch][0] - 1; i <= box[ch][0] - 1; i++)\n        for (int j = box[ch][1]; j <= box[ch][3]; j++) {\n          if (G[i][j] != '?')\n            fail = 1;\n        }\n      if (!fail) {\n        stuck = 0;\n        for (int i = box[ch][0] - 1; i <= box[ch][0] - 1; i++)\n          for (int j = box[ch][1]; j <= box[ch][3]; j++) {\n            G[i][j] = ch;\n          }\n        box[ch][0]--;\n      }\n    }\n\n    \/\/ expand left\n    if (box[ch][1] > 0) {\n      bool fail = 0;\n      for (int i = box[ch][1] - 1; i <= box[ch][1] - 1; i++)\n        for (int j = box[ch][0]; j <= box[ch][2]; j++) {\n          if (G[j][i] != '?')\n            fail = 1;\n        }\n      if (!fail) {\n        stuck = 0;\n        for (int i = box[ch][1] - 1; i <= box[ch][1] - 1; i++)\n          for (int j = box[ch][0]; j <= box[ch][2]; j++) {\n            G[j][i] = ch;\n          }\n        box[ch][1]--;\n      }\n    }\n\n    \/\/ expand down\n    if (box[ch][2] < r - 1) {\n      bool fail = 0;\n      for (int i = box[ch][2] + 1; i <= box[ch][2] + 1; i++)\n        for (int j = box[ch][1]; j <= box[ch][3]; j++) {\n          if (G[i][j] != '?')\n            fail = 1;\n        }\n      if (!fail) {\n        stuck = 0;\n        for (int i = box[ch][2] + 1; i <= box[ch][2] + 1; i++)\n          for (int j = box[ch][1]; j <= box[ch][3]; j++) {\n            G[i][j] = ch;\n          }\n        box[ch][2]++;\n      }\n    }\n\n    \/\/ expand right\n    if (box[ch][3] < c - 1) {\n      bool fail = 0;\n      for (int i = box[ch][3] + 1; i <= box[ch][3] + 1; i++)\n        for (int j = box[ch][0]; j <= box[ch][2]; j++) {\n          if (G[j][i] != '?')\n            fail = 1;\n        }\n      if (!fail) {\n        stuck = 0;\n        for (int i = box[ch][3] + 1; i <= box[ch][3] + 1; i++)\n          for (int j = box[ch][0]; j <= box[ch][2]; j++) {\n            G[j][i] = ch;\n          }\n        box[ch][3]++;\n      }\n    }\n    if (stuck)\n      break;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    box.clear();\n    cin >> r >> c;\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < c; j++) {\n        cin >> G[i][j];\n      }\n\n    for (int i = 0; i < r; i++)\n      for (int j = 0; j < c; j++) {\n        int ch = G[i][j];\n        if (ch == '?')\n          continue;\n        if (box.count(ch)) {\n          add(box[ch], i, j);\n        } else\n          box[ch] = vector<int>({i, j, i, j});\n      }\n\n    for (auto pr : box) {\n      for (int i = pr.second[0]; i <= pr.second[2]; i++)\n        for (int j = pr.second[1]; j <= pr.second[3]; j++)\n          G[i][j] = pr.first;\n      expand(pr.first);\n    }\n\n    printf(\"Case #%d:\\n\", cs);\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++)\n        cout << G[i][j];\n      cout << endl;\n    }\n  }\n\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef double ll;\n\nusing namespace std;\n\ndouble arrive[1005];\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    int D, N;\n    cin >> D >> N;\n\n    vector<pair<ll, ll>> h;\n    for (int i = 0; i < N; i++) {\n      ll k, s;\n      cin >> k >> s;\n      h.push_back(make_pair(k, s));\n    }\n\n    sort(h.begin(), h.end());\n    int i = N - 1;\n    double last = 0;\n    for (i = N - 1; i >= 0; i--) {\n      arrive[i] = double(D - h[i].first) \/ h[i].second;\n      last = max(last, arrive[i]);\n    }\n    printf(\"Case #%d: %.6lf\\n\", cs, D \/ last);\n  }\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef double ll;\n\nusing namespace std;\n\ndouble arrive[1005];\n\nmap<char, int> cnt;\n\nbool comp(char c1, char c2) { return cnt[c1] > cnt[c2]; }\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    int n, r, o, y, g, b, v;\n    cin >> n >> r >> o >> y >> g >> b >> v;\n    cnt.clear();\n    cnt['R'] = r;\n    cnt['O'] = o;\n    cnt['Y'] = y;\n    cnt['G'] = g;\n    cnt['B'] = b;\n    cnt['V'] = v;\n\n    printf(\"Case #%d: \", cs);\n\n    vector<char> ch({'R', 'Y', 'B'});\n    sort(ch.begin(), ch.end(), comp);\n\n    if (cnt[ch[0]] > cnt[ch[1]] + cnt[ch[2]]) {\n      puts(\"IMPOSSIBLE\");\n    } else {\n      list<char> ans;\n      for (int i = 0; i < cnt[ch[0]]; i++)\n        ans.push_back(ch[0]);\n\n      auto it = ans.begin();\n      for (int i = 0; i < cnt[ch[1]]; i++) {\n        while (*it == ch[1]) {\n          it++;\n        }\n        it++;\n        ans.insert(it, ch[1]);\n      }\n\n      it = ans.end();\n      for (int i = 0; i < cnt[ch[2]]; i++) {\n        while (it != ans.end() && *it == ch[2]) {\n          it--;\n        }\n        ans.insert(it, ch[2]);\n        it--;\n      }\n\n      for (char ca : ans)\n        printf(\"%c\", ca);\n      puts(\"\");\n    }\n  }\n  return 0;\n}\n"}
{"target":"zapray","func":"\n#include <algorithm>\n#include <bitset>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\ntypedef double ll;\n\nusing namespace std;\n\nvector<vector<int>> edge;\n\nstruct horse {\n  int e, s;\n  horse(int ee, int ss) : e(ee), s(ss) {}\n};\n\nvector<horse> horses;\n\n\/\/\nvector<pair<double, int>> D; \/\/ time, energe left on that horse\n\nint N, Q;\n\nvoid dijkstra(int s) {\n  D.clear();\n  D = vector<pair<double, int>>(N * N, pair<double, int>(9E99, 0));\n\n  set<pair<pair<double, int>, int>> pq; \/\/  ((time, eng), x)\n\n  int x = s * N + s;\n  D[x] = make_pair(0, horses[s].e);\n\n  pq.insert(make_pair(D[x], x));\n\n  while (!pq.empty()) {\n    x = pq.begin()->second;\n    pq.erase(pq.begin());\n\n    int energyleft = D[x].second;\n    int xcity = x \/ N;\n    int curh = x % N;\n\n    int y;\n    for (int ycity = 0; ycity < N; ycity++) {\n      if (edge[xcity][ycity] == -1)\n        continue;\n\n      \/\/ dont change horse\n      y = ycity * N + curh;\n      if (energyleft >= edge[xcity][ycity]) {\n        pair<double, int> newD(D[x].first +\n                                   double(edge[xcity][ycity]) \/ horses[curh].s,\n                               energyleft - edge[xcity][ycity]);\n        if (newD < D[y]) {\n          pq.erase(make_pair(D[y], y));\n          D[y] = newD;\n          pq.insert(make_pair(D[y], y));\n        }\n      }\n\n      \/\/ use horse x\n      curh = xcity;\n      y = ycity * N + curh;\n      energyleft = horses[curh].e;\n      if (energyleft >= edge[xcity][ycity]) {\n        pair<double, int> newD(D[x].first +\n                                   double(edge[xcity][ycity]) \/ horses[curh].s,\n                               energyleft - edge[xcity][ycity]);\n        if (newD < D[y]) {\n          pq.erase(make_pair(D[y], y));\n          D[y] = newD;\n          pq.insert(make_pair(D[y], y));\n        }\n      }\n\n    } \/\/ ycity\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    printf(\"Case #%d: \", cs);\n\n    cin >> N >> Q;\n    horses.clear();\n    for (int i = 0; i < N; i++) {\n      int e, s;\n      cin >> e >> s;\n      horses.emplace_back(e, s);\n    }\n\n    \/\/\n    horses.emplace_back(0, 0); \/\/ last fake horse\n\n    edge.clear();\n    edge.resize(N);\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++) {\n        int d;\n        cin >> d;\n        edge[i].push_back(d);\n      }\n\n    for (int i = 0; i < Q; i++) {\n      int u, v;\n      cin >> u >> v;\n      u--;\n      v--;\n      dijkstra(u);\n      pair<double, int> best(9E99, 0);\n      for (int h = 0; h < N; h++) {\n        best = min(best, D[v * N + h]);\n      }\n      printf(\"%.6lf \", best.first);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <iostream>\n\nusing namespace std;\n\nbool legal(string s, int k) {\n  if (k == s.size() - 1) {\n    return true;\n  }\n  for (int i = k; i < s.size(); ++i) {\n    if (s[i] > s[k]) {\n      return true;\n    }\n    if (s[i] < s[k]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nbool judge(int k) {\n  if (k == 1000) {\n    return false;\n  }\n  int a = k \/ 100;\n  int b = k \/ 10 % 10;\n  int c = k % 10;\n  if (a <= b && b <= c) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    cout << \"Case #\" << c << \": \";\n    \/*\n    int N;\n    cin >> N;\n    for (int j = N; j >= 1; --j) {\n            if (judge(j)) {\n                    cout << j << endl;\n                    break;\n            }\n    }*\/\n    string s;\n    cin >> s;\n    for (int i = 0; i < s.size(); ++i) {\n      if (!legal(s, i)) {\n        --s[i];\n        if (i != 0 || s[i] != '0') {\n          cout << s[i];\n        }\n        for (int j = i + 1; j < s.size(); ++j) {\n          cout << '9';\n        }\n        break;\n      } else {\n        cout << s[i];\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <cstring>\n#include <iostream>\nusing namespace std;\n\nlong long space[4], sum[4];\n\nvoid print(long long k) {\n  --k;\n  if (k % 2 == 0) {\n    cout << k \/ 2 << ' ' << k \/ 2;\n  } else {\n    cout << k \/ 2 + 1 << ' ' << k \/ 2;\n  }\n}\n\nvoid update() {\n  long long tmpA[4], tmpB[4];\n  for (int i = 0; i < 4; ++i) {\n    tmpA[i] = space[i];\n    tmpB[i] = sum[i];\n  }\n  for (int j = 0; j < 3; ++j) {\n    int maxs = -10, maxi = 0;\n    for (int i = 1; i < 4; ++i) {\n      if (tmpA[i] > maxs) {\n        maxs = space[i];\n        maxi = i;\n      }\n    }\n    space[j] = tmpA[maxi];\n    sum[j] = tmpB[maxi];\n    tmpA[maxi] = -100;\n  }\n  space[3] = -1;\n  sum[3] = 0;\n}\n\nvoid split() {\n  int k = space[0] - 1;\n  if (k % 2 == 0) {\n    for (int i = 1; i < 4; ++i) {\n      if (space[i] == k \/ 2 || space[i] == -1) {\n        space[i] = k \/ 2;\n        sum[i] += sum[0] * 2;\n        break;\n      }\n    }\n  } else {\n    for (int i = 1; i < 4; ++i) {\n      if (space[i] == k \/ 2 + 1 || space[i] == -1) {\n        space[i] = k \/ 2 + 1;\n        sum[i] += sum[0];\n        break;\n      }\n    }\n    for (int i = 1; i < 4; ++i) {\n      if (space[i] == k \/ 2 || space[i] == -1) {\n        space[i] = k \/ 2;\n        sum[i] += sum[0];\n        break;\n      }\n    }\n    \/\/ cout << space[1] << ' ' << space[2] << endl;\n  }\n  update();\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    long long N, K;\n    cout << \"Case #\" << c << \": \";\n    cin >> N >> K;\n    space[0] = space[1] = space[2] = space[3] = -1;\n    sum[0] = sum[1] = sum[2] = sum[3] = 0;\n    space[0] = N;\n    sum[0] = 1;\n    while (K > 0) {\n      if (K <= sum[0]) {\n        print(space[0]);\n        break;\n      }\n      K -= sum[0];\n      split();\n      \/*\n                              for (int i = 0; i < 4; ++i) {\n                                      cout << space[i] << '|' << sum[i] << endl;\n                              }*\/\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  int T;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    string s;\n    int k, result = 0;\n    ;\n    cin >> s >> k;\n    for (int i = 0; i < s.size(); ++i) {\n      if (s[i] == '-') {\n        ++result;\n        if (i + k > s.size()) {\n          result = -1;\n          break;\n        }\n        for (int j = i; j < i + k; ++j) {\n          if (s[j] == '-') {\n            s[j] = '+';\n          } else {\n            s[j] = '-';\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << c << \": \";\n    if (result == -1) {\n      cout << \"IMPOSSIBLE\" << endl;\n    } else {\n      cout << result << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <cstring>\n#include <iostream>\nusing namespace std;\n\nint R[50];\nint Q[50][50];\n\nint n;\nint d[201][201];\nint match[201];\nbool visited[201];\n\nbool matching(int k) {\n  for (int i = 0; i < n; ++i) {\n    if (d[k][i] && !visited[i]) {\n      visited[i] = true;\n      if (match[i] == -1 || matching(match[i])) {\n        match[i] = k;\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nvoid findInterval(int i, int j, int &a, int &b) {\n  int need = R[i];\n  int ingre = Q[i][j];\n  a = int(ingre \/ (need * 1.1));\n  while (a * need * 1.1 < ingre) {\n    ++a;\n  }\n  b = int(ingre \/ (need * 0.9));\n  while (b * need * 0.9 > ingre) {\n    --b;\n  }\n  \/\/ cout << need << ' ' << ingre << ' ' << a << ' ' << b << endl;\n}\n\nbool judge(int A, int B) {\n  int a0, b0, a1, b1;\n  findInterval(0, A, a0, b0);\n  findInterval(1, B, a1, b1);\n  if (a0 > b0 || a1 > b1) {\n    return false;\n  }\n  if (a0 > a1 && a0 > b1) {\n    return false;\n  }\n  if (a1 > a0 && a1 > b0) {\n    return false;\n  }\n  return true;\n}\n\nint main() {\n  int T;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    memset(d, 0, sizeof(d));\n    memset(match, -1, sizeof(match));\n    int N, P;\n    cin >> N >> P;\n    for (int i = 0; i < N; ++i) {\n      cin >> R[i];\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < P; ++j) {\n        cin >> Q[i][j];\n      }\n    }\n    if (N == 1) {\n      int result = 0;\n      for (int i = 0; i < P; ++i) {\n        int a, b;\n        findInterval(0, i, a, b);\n        if (a <= b) {\n          ++result;\n        }\n      }\n      cout << \"Case #\" << c << \": \" << result << endl;\n      continue;\n    }\n    for (int i = 0; i < P; ++i) {\n      for (int j = 0; j < P; ++j) {\n        if (judge(i, j)) {\n          d[i][j] = 1;\n        }\n      }\n    } \/*\n     for (int i = 0; i < P; ++i) {\n             for (int j = 0; j < P; ++j) {\n                     cout << d[i][j];\n             }\n             cout << endl;\n     }*\/\n    int result = 0;\n    n = N;\n    for (int i = 0; i < N; ++i) {\n      memset(visited, false, sizeof(visited));\n      if (matching(i)) {\n        ++result;\n      }\n    }\n    cout << \"Case #\" << c << \": \" << result << endl;\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <cstring>\n#include <iostream>\nusing namespace std;\n\nchar cake[25][25];\n\nint main() {\n  int T;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    int R, C;\n    cin >> R >> C;\n    for (int i = 0; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        cin >> cake[i][j];\n      }\n    }\n    for (int i = 0; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        if (cake[i][j] != '?') {\n          for (int k = j - 1; k >= 0 && cake[i][k] == '?'; --k) {\n            cake[i][k] = cake[i][j];\n          }\n          for (int k = j + 1; k < C && cake[i][k] == '?'; ++k) {\n            cake[i][k] = cake[i][j];\n          }\n        }\n      }\n    }\n    for (int i = 0; i < R; ++i) {\n      if (cake[i][0] != '?') {\n        for (int j = i - 1; j >= 0 && cake[j][0] == '?'; --j) {\n          for (int k = 0; k < C; ++k) {\n            cake[j][k] = cake[i][k];\n          }\n        }\n        for (int j = i + 1; j < R && cake[j][0] == '?'; ++j) {\n          for (int k = 0; k < C; ++k) {\n            cake[j][k] = cake[i][k];\n          }\n        }\n      }\n    }\n    cout << \"Case #\" << c << \":\" << endl;\n    for (int i = 0; i < R; ++i) {\n      for (int j = 0; j < C; ++j) {\n        cout << cake[i][j];\n      }\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct Horse {\n  int K, S;\n} horse[1000];\n\nint cmp(const void *a, const void *b) {\n  return (*(Horse *)b).K - (*(Horse *)a).K;\n}\n\nint main() {\n  cout.precision(6);\n  cout.flags(ios::fixed);\n  int T, D, N;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    cin >> D >> N;\n    double reach = 0;\n    for (int i = 0; i < N; ++i) {\n      cin >> horse[i].K >> horse[i].S;\n      if ((D - horse[i].K) * 1.0 \/ horse[i].S > reach) {\n        reach = (D - horse[i].K) * 1.0 \/ horse[i].S;\n      }\n    }\n    \/\/ qsort(horse, N, sizeof(horse[0]), cmp);\n    cout << \"Case #\" << c << \": \" << D \/ reach << endl;\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <iostream>\nusing namespace std;\n\nstruct Horse {\n  int K, S;\n} horse[1000];\n\nint main() {\n  int T, N;\n  double R, O, Y, G, B, V;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    cin >> N >> R >> O >> Y >> G >> B >> V;\n    string result = \"\";\n    if (R > N \/ 2 || Y > N \/ 2 || B > N \/ 2) {\n      result = \"IMPOSSIBLE\";\n    } else {\n      if (R >= Y && R >= B) {\n        result += 'R';\n        R -= 0.5;\n      } else if (Y >= R && Y >= B) {\n        result += 'Y';\n        Y -= 0.5;\n      } else if (B >= Y && B >= R) {\n        result += 'B';\n        B -= 0.5;\n      }\n      for (int i = 1; i < N; ++i) {\n        if (result[i - 1] == 'R') {\n          if (Y >= B) {\n            result += 'Y';\n            --Y;\n          } else {\n            result += 'B';\n            --B;\n          }\n        }\n        if (result[i - 1] == 'Y') {\n          if (R > B) {\n            result += 'R';\n            --R;\n          } else {\n            result += 'B';\n            --B;\n          }\n        }\n        if (result[i - 1] == 'B') {\n          if (R > Y) {\n            result += 'R';\n            --R;\n          } else {\n            result += 'Y';\n            --Y;\n          }\n        }\n      }\n    }\n\n    \/\/ qsort(horse, N, sizeof(horse[0]), cmp);\n    cout << \"Case #\" << c << \": \" << result << endl;\n  }\n  return 0;\n}\n"}
{"target":"zhiheng3","func":"#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct Horse {\n  int E, S;\n} horse[100];\nint N;\n\nint d[100][100];\n\ndouble f[100][100];\n\ndouble calc(int U, int V) {\n  for (int i = 0; i < N; ++i) {\n    for (int j = 0; j < N; ++j) {\n      f[i][j] = -1;\n    }\n  }\n  long long s[100];\n  s[0] = 0;\n  for (int i = 1; i < N; ++i) {\n    s[i] = s[i - 1] + d[i - 1][i];\n  }\n  f[0][0] = 0;\n  for (int i = 1; i < N; ++i) {\n    for (int j = 0; j < i; ++j) {\n      if (horse[j].E < s[i] - s[j]) {\n        f[i][j] = -1;\n      } else {\n        f[i][j] = (s[i] - s[j]) * 1.0 \/ horse[j].S;\n        if (j > 0) {\n          double minn = f[j][j - 1];\n          for (int k = 0; k < j - 1; ++k) {\n            if (f[j][k] > 0 && f[j][k] < minn) {\n              minn = f[j][k];\n            }\n          }\n          f[i][j] += minn;\n        }\n      }\n    }\n  }\n\n  double result = f[N - 1][N - 2];\n  for (int i = 0; i < N - 2; ++i) {\n    if (f[N - 1][i] > 0 && f[N - 1][i] < result) {\n      result = f[N - 1][i];\n    }\n  }\n  return result;\n}\n\nint main() {\n  cout.precision(8);\n  cout.flags(ios::fixed);\n  int T, Q;\n  cin >> T;\n  for (int c = 1; c <= T; ++c) {\n    cin >> N >> Q;\n    for (int i = 0; i < N; ++i) {\n      cin >> horse[i].E >> horse[i].S;\n    }\n    for (int i = 0; i < N; ++i) {\n      for (int j = 0; j < N; ++j) {\n        cin >> d[i][j];\n      }\n    }\n    cout << \"Case #\" << c << \":\";\n    for (int i = 0; i < Q; ++i) {\n      int U, V;\n      cin >> U >> V;\n      cout << ' ' << calc(U, V);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nconst int N = 1000010;\n\nbool tidy(const string &s) {\n  if (s.size() > 1 && s[0] == '0')\n    return false;\n  for (int i = 1; i < s.size(); i++) {\n    if (s[i - 1] > s[i])\n      return false;\n  }\n  return true;\n}\n\nvoid solve(int ncase) {\n  ll n;\n  cin >> n;\n  ostringstream oss;\n  oss << n;\n  string s = oss.str();\n  if (tidy(s)) {\n    cout << \"Case #\" << ncase << \": \" << s << endl;\n    return;\n  }\n  for (int i = s.size() - 1; i >= 0; i--) {\n    if (s[i] == '0')\n      continue;\n    string tmp;\n    tmp += s.substr(0, i);\n    if (s[i] > '1' || tmp.size())\n      tmp.push_back(s[i] - 1);\n    tmp += string(s.size() - i - 1, '9');\n    if (tidy(tmp)) {\n      cout << \"Case #\" << ncase << \": \" << tmp << endl;\n      return;\n    }\n  }\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  \/\/ cout << setprecision(16) << endl;\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  \/\/ precalc();\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nconst int N = 1000010;\n\nvoid add_pll(vector<PLL> &v, const PLL p) {\n  if (p.first == 0)\n    return;\n  \/\/ cout << \"add_pll \" << p.first << \" \" << p.second << endl;\n  for (int i = 0; i < v.size(); i++) {\n    if (v[i].first == p.first) {\n      v[i].second += p.second;\n      return;\n    }\n  }\n  v.push_back(p);\n}\nvoid solve(int ncase) {\n  ll n, k;\n  cin >> n >> k;\n  vector<PLL> v(1, PLL(n, 1));\n  for (;;) {\n    vector<PLL> nextv;\n    for (int i = 0; i < v.size(); i++) {\n      ll a = (v[i].first - 1) \/ 2;\n      ll b = v[i].first - 1 - a;\n      \/\/ cout << k << \" \" << v[i].first << \" \" << v[i].second << endl;\n      if (k <= v[i].second) {\n        cout << \"Case #\" << ncase << \": \" << max(a, b) << \" \" << min(a, b)\n             << endl;\n        return;\n      }\n      add_pll(nextv, PLL(a, v[i].second));\n      add_pll(nextv, PLL(b, v[i].second));\n      k -= v[i].second;\n    }\n    v = nextv;\n    sort(v.begin(), v.end(), greater<PLL>());\n  }\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  \/\/ cout << setprecision(16) << endl;\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  \/\/ precalc();\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nconst int N = 1000010;\n\nvoid solve(int ncase) {\n  string s;\n  int k;\n  cin >> s >> k;\n  int flip = 0;\n  int sum = 0;\n  int mark[1024] = {0};\n  for (int i = 0; i <= s.size() - k; i++) {\n    sum += mark[i];\n    if ((sum + (s[i] == '-')) % 2) {\n      mark[k + i]++;\n      flip++;\n      sum++;\n    }\n  }\n  for (int i = s.size() - k + 1; i < s.size(); i++) {\n    sum += mark[i];\n    if ((sum + (s[i] == '-')) % 2) {\n      cout << \"Case #\" << ncase << \": \"\n           << \"IMPOSSIBLE\" << endl;\n      return;\n    }\n  }\n  cout << \"Case #\" << ncase << \": \" << flip << endl;\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  \/\/ cout << setprecision(16) << endl;\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  \/\/ precalc();\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nbool can_server(vector<vector<int>> &g, int x, vector<int> &idx,\n                vector<int> &r) {\n  if (x == 0)\n    return false;\n  for (int i = 1; i < g.size(); i++) {\n    while (idx[i] < g[0].size() && g[i][idx[i]] < 0.9 * r[i] * x)\n      idx[i]++;\n    if (idx[i] < g[0].size() && 0.9 * r[i] * x <= g[i][idx[i]] &&\n        g[i][idx[i]] <= 1.1 * r[i] * x)\n      continue;\n    return false;\n  }\n  return true;\n}\n\nvoid solve(int ncase) {\n  cout << \"Case #\" << ncase << \": \";\n  int n, p;\n  cin >> n >> p;\n  vector<int> r(n);\n  for (int i = 0; i < n; i++)\n    cin >> r[i];\n  vector<vector<int>> g(n, vector<int>(p));\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      cin >> g[i][j];\n    }\n    sort(g[i].begin(), g[i].end());\n  }\n  vector<int> idx(n);\n  int ret = 0;\n  for (int i = 0; i < p; i++) {\n    int ix = g[0][i] \/ 1.1 \/ r[0];\n    int inx = g[0][i] \/ 0.9 \/ r[0] + 1;\n    while (0.9 * r[0] * ix <= g[0][i] && g[0][i] <= ix * r[0] * 1.1)\n      ix--;\n    while (0.9 * r[0] * inx <= g[0][i] && g[0][i] <= inx * r[0] * 1.1)\n      inx++;\n    if (i + 1 < p) {\n      int nix = g[0][i + 1] \/ 1.1 \/ r[0];\n      inx = min(inx, nix);\n    }\n    \/\/ cout << ix << ' ' << inx << endl;\n    for (int a = ix; a <= inx; a++) {\n      vector<int> nidx = idx;\n      if (!(0.9 * r[0] * a <= g[0][i] && g[0][i] <= a * r[0] * 1.1))\n        continue;\n      if (can_server(g, a, nidx, r)) {\n        ret++;\n        idx = nidx;\n        break;\n      }\n    }\n  }\n  cout << ret << endl;\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  \/\/ cout << setprecision(16) << endl;\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  \/\/ precalc();\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nvoid solve(int ncase) {\n  cout << \"Case #\" << ncase << \":\" << endl;\n\n  int r, c;\n  cin >> r >> c;\n  vector<string> cake(r);\n  vector<PII> letter;\n  for (int i = 0; i < r; i++) {\n    cin >> cake[i];\n    for (int j = 0; j < c; j++) {\n      if (cake[i][j] != '?') {\n        letter.push_back(PII(i, j));\n      }\n    }\n  }\n  vector<string> ret = cake;\n  for (auto p : letter) {\n    int x1 = p.first - 1, x2 = p.first + 1;\n    int y1 = p.second - 1, y2 = p.second + 1;\n    while (x1 >= 0) {\n      bool flag = false;\n      for (int i = 0; i < c; i++)\n        if (cake[x1][i] != '?')\n          flag = true;\n      if (flag == true)\n        break;\n      x1--;\n    }\n    while (x2 < r) {\n      bool flag = false;\n      for (int i = 0; i < c; i++)\n        if (cake[x2][i] != '?')\n          flag = true;\n      if (flag == true)\n        break;\n      x2++;\n    }\n    while (y1 >= 0 && cake[p.first][y1] == '?')\n      y1--;\n    while (y2 < c && cake[p.first][y2] == '?')\n      y2++;\n    for (int i = x1 + 1; i < x2; i++) {\n      for (int j = y1 + 1; j < y2; j++) {\n        ret[i][j] = cake[p.first][p.second];\n      }\n    }\n  }\n  for (int i = 0; i < r; i++) {\n    cout << ret[i] << endl;\n  }\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  \/\/ cout << setprecision(16) << endl;\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  \/\/ precalc();\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\n\/\/#include \"utils\/haha.h\"\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nvoid solve(int ncase) {\n  cout << \"Case #\" << ncase << \": \";\n  ll d;\n  int n;\n  cin >> d >> n;\n  vector<int> start(n);\n  vector<int> speed(n);\n  double t = -1;\n  for (int i = 0; i < n; i++) {\n    cin >> start[i] >> speed[i];\n    double tmpt = (d - start[i]) * 1.0 \/ speed[i];\n    if (tmpt > t)\n      t = tmpt;\n  }\n  cout << d \/ t << endl;\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  cout << setprecision(16);\n\n  \/\/ precalc();\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\n\/\/#include \"utils\/haha.h\"\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nconst string noway = \"IMPOSSIBLE\";\n\nint n, r, o, y, g, b, v;\n\nint memo[3][1024][1024][1024];\n\nvoid precalc() { (memset((memo), (-1), sizeof((memo)))); }\n\nbool dfs(int pre, int nr, int ny, int nb, int idx, vector<int> &s) {\n  if (nr < 0 || ny < 0 || nb < 0)\n    return false;\n  \/\/ fprintf(stderr, \"pre %d, nr %d, ny %d, nb %d, idx %d\\n\", pre, nr, ny, nb,\n  \/\/ idx);\n  int &tmp = memo[pre][nr][ny][nb];\n  if (memo[pre][nr][ny][nb] == -2)\n    return false;\n  if (tmp != -1) {\n    int p = tmp;\n    for (; idx < n; idx++) {\n      s[idx] = p;\n      if (0 == p)\n        nr--;\n      if (1 == p)\n        ny--;\n      if (2 == p)\n        nb--;\n      p = memo[p][nr][ny][nb];\n    }\n    \/\/ dfs(tmp, nr, ny, nb, idx + 1, s);\n\n    return true;\n  }\n  if (nr + ny + nb == 0) {\n    if (pre == 0)\n      tmp = -2;\n    else\n      tmp = pre;\n    return tmp >= 0;\n  }\n  for (int p = 0; p < 3; p++) {\n    if (p != pre) {\n      int zr = nr;\n      int zy = ny;\n      int zb = nb;\n      if (p == 0)\n        zr--;\n      if (p == 1)\n        zy--;\n      if (p == 2)\n        zb--;\n      if (dfs(p, zr, zy, zb, idx + 1, s)) {\n        tmp = p;\n        s[idx] = tmp;\n        return true;\n      }\n    }\n  }\n  tmp = -2;\n  return false;\n}\nvoid solve_ryb() {\n  string cc = \"RYB\";\n  vector<int> s(n, -1);\n  vector<PII> color = {PII(r, 0), PII(y, 1), PII(b, 2)};\n  sort(color.begin(), color.end());\n  if (color[0].first == 0) {\n    if (color[1].first != color[2].first) {\n      cout << noway << endl;\n      return;\n    }\n    for (int i = 0; i < n; i += 2)\n      s[i] = color[1].second;\n    for (int i = 1; i < n; i += 2)\n      s[i] = color[2].second;\n    for (auto c : s)\n      cout << cc[c];\n    cout << endl;\n    return;\n  }\n  s[0] = 0;\n  if (dfs(0, r - 1, y, b, 1, s)) {\n    for (auto c : s)\n      cout << cc[c];\n    cout << endl;\n  } else {\n    cout << noway << endl;\n  }\n}\n\nvoid solve(int ncase) {\n  cout << \"Case #\" << ncase << \": \";\n  cin >> n;\n  cin >> r >> o >> y >> g >> b >> v;\n  solve_ryb();\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  cout << setprecision(16);\n\n  precalc();\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zizhong","func":"#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <set>\n#include <string>\n#include <vector>\n\n#include <cmath>\n#include <ctime>\n#include <iomanip>\n#include <queue>\n#include <sstream>\n#include <stack>\n\/\/#include \"utils\/haha.h\"\nusing namespace std;\ntypedef pair<int, int> PII;\ntypedef pair<string, string> PSS;\ntypedef pair<int, PII> PIP;\ntypedef long long ll;\ntypedef pair<ll, ll> PLL;\n\nint n, q;\nint dis[128][128];\nvoid solve(int ncase) {\n  cout << \"Case #\" << ncase << \": \";\n  cin >> n >> q;\n  vector<int> total(n);\n  vector<int> speed(n);\n  for (int i = 0; i < n; i++) {\n    cin >> total[i] >> speed[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      cin >> dis[i][j];\n    }\n  }\n  int h1, h2;\n  cin >> h1 >> h2;\n  vector<double> dp(n, -1);\n  dp[0] = 0;\n  for (int i = 0; i < n; i++) {\n    \/\/ i horse\n    ll sum = 0;\n    for (int j = i + 1; j < n; j++) {\n      sum += dis[j - 1][j];\n      if (sum > total[i])\n        break;\n      double tmp = dp[i] + (sum * 1.0 \/ speed[i]);\n      if (dp[j] < 0 || dp[j] > tmp)\n        dp[j] = tmp;\n    }\n  }\n  cout << dp[n - 1] << endl;\n}\n\nint main() {\n  \/\/ ios::sync_with_stdio(false);\n  cout << std::fixed;\n  cout << setprecision(16);\n\n  int T = 1;\n  scanf(\"%d\", &T);\n  \/\/ cin >> T;\n  int ncase = 0;\n  while (T--) {\n    solve(++ncase);\n  }\n}\n"}
{"target":"zjyhala","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nchar s[300];\nint ca;\nvoid init() {\n  scanf(\"%s\", s);\n  int len = strlen(s);\n  int st = 0;\n  for (int i = 1; i < len; i++) {\n    if (s[i] < s[i - 1]) {\n      s[st] -= 1;\n      for (int j = st + 1; j < len; j++)\n        s[j] = '9';\n      break;\n    }\n    if (s[i] != s[i - 1])\n      st = i;\n  }\n  int flag = 0;\n  printf(\"Case #%d: \", ca);\n  for (int i = 0; i < len; i++) {\n    if (flag == 0 && s[i] == '0')\n      continue;\n    else if (s[i] != '0')\n      flag = 1;\n    printf(\"%c\", s[i]);\n  }\n  printf(\"\\n\");\n}\n\nint main() {\n  int T;\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (ca = 1; ca <= T; ca++) {\n    init();\n  }\n}\n"}
{"target":"zjyhala","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nlong long n, k, sm, la, nusm, nula, t[5], tsm, tla, ans;\nint ca;\nvoid init() {\n  cin >> n >> k;\n  sm = n, la = n + 1;\n  nusm = 1;\n  nula = 0;\n}\nlong long maxll(long long a, long long b) { return a > b ? a : b; }\n\nlong long minll(long long a, long long b) { return a < b ? a : b; }\nvoid getnum(long long a, long long &t1, long long &t2) {\n  if (a % 2 == 1)\n    t1 = t2 = a \/ 2;\n  else\n    t1 = maxll(0, a \/ 2 - 1), t2 = a \/ 2;\n}\n\nvoid sov() {\n  printf(\"Case #%d: \", ca);\n\n  while (1) {\n    if (k <= nula) {\n      ans = la;\n      break;\n    }\n    if (k <= nusm + nula) {\n      ans = sm;\n      break;\n    }\n    k -= (nula + nusm);\n    getnum(sm, t[1], t[2]);\n    getnum(la, t[3], t[4]);\n    \/\/        for(int i =1; i <= 4; i++)\n    \/\/            cout <<\"t[\"<<i<<\"] =  \"<<t[i]<<endl;\n    sm = minll(minll(t[1], t[2]), minll(t[3], t[4]));\n    la = maxll(maxll(t[1], t[2]), maxll(t[3], t[4]));\n    tsm = tla = 0;\n    for (int i = 1; i <= 4; i++) {\n      if (t[i] == sm && i < 3)\n        tsm += nusm;\n      if (t[i] == sm && i >= 3)\n        tsm += nula;\n      if (t[i] == la && i >= 3)\n        tla += nula;\n      if (t[i] == la && i < 3)\n        tla += nusm;\n    }\n    swap(nula, tla);\n    swap(nusm, tsm);\n    \/\/ cout << \"sm = \"<<nusm <<\"  la = \"<<nula<<endl;\n  }\n  getnum(ans, t[1], t[2]);\n  if (t[1] < t[2])\n    swap(t[1], t[2]);\n  cout << t[1] << \" \" << t[2] << endl;\n}\n\nint main() {\n  int T;\n  freopen(\"inn.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (ca = 1; ca <= T; ca++) {\n    init();\n    sov();\n  }\n}\n"}
{"target":"zjyhala","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint ca, k;\nconst int maxn = 1010;\nchar s[maxn];\nvoid init() {\n  scanf(\"%s\", s);\n  scanf(\"%d\", &k);\n  int len = strlen(s);\n  int ans = 0;\n  for (int i = 0; i <= len - k; i++) {\n    if (s[i] == '-') {\n      ans++;\n      for (int j = i; j < i + k; j++)\n        s[j] = (s[j] == '+' ? '-' : '+');\n    }\n  }\n  printf(\"Case #%d: \", ca);\n  for (int i = 0; i < len; i++) {\n    if (s[i] == '-') {\n      printf(\"IMPOSSIBLE\\n\");\n      return;\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  int T;\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (ca = 1; ca <= T; ca++) {\n    init();\n  }\n}\n"}
{"target":"zjyhala","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint ca;\nint n, p;\ndouble c[60], tmp[60];\nconst double eps = 1e-8;\ntypedef pair<int, int> pii;\nint cl[60];\npii r[60][60];\nvoid init() {\n  scanf(\"%d%d\", &n, &p);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%lf\", &c[i]);\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= p; j++) {\n      scanf(\"%lf\", &tmp[j]);\n    }\n    sort(tmp + 1, tmp + p + 1);\n    for (int j = 1; j <= p; j++) {\n      r[i][j].first = (int)((tmp[j] * 10 \/ 11) \/ c[i] - eps + 1);\n      r[i][j].second = (int)((tmp[j] * 10 \/ 9) \/ c[i] + eps);\n      \/\/ cerr << \"rr = \"<<r[i][j].first <<\"  \"<<r[i][j].second<<endl;\n    }\n  }\n}\nint cnt = 0;\nvoid sov() {\n  cnt = 0;\n  for (int i = 1; i <= n; i++)\n    cl[i] = 1;\n  while (1) {\n    int l = -1, rr = (1 << 30);\n    int fl = 1, minpos = 1;\n    for (int ro = 1; ro <= n; ro++) {\n      while (r[ro][cl[ro]].first > r[ro][cl[ro]].second) {\n        cl[ro]++;\n        if (cl[ro] > p)\n          return;\n      }\n      if (r[ro][cl[ro]].first > l) {\n        l = r[ro][cl[ro]].first;\n      } else\n        minpos = ro;\n      if (r[ro][cl[ro]].second < rr)\n        rr = r[ro][cl[ro]].second;\n      if (l > rr) {\n        fl = 0;\n        break;\n      }\n    }\n    \/\/ cerr<<\"l  =  \"<<l <<\"   rr = \"<<rr <<endl;\n    if (fl == 0) {\n      cl[minpos]++;\n      if (cl[minpos] > p)\n        return;\n    } else {\n      cnt++;\n      for (int i = 1; i <= n; i++) {\n        cl[i]++;\n        if (cl[i] > p)\n          return;\n      }\n    }\n  }\n}\n\nint main() {\n  int T;\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (ca = 1; ca <= T; ca++) {\n    init();\n    sov();\n    printf(\"Case #%d: %d\\n\", ca, cnt);\n  }\n}\n"}
{"target":"zjyhala","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nchar s[30][30];\nint r, c, ca;\n\nvoid init() {\n  scanf(\"%d%d\", &r, &c);\n  for (int i = 0; i < r; i++)\n    scanf(\"%s\", s[i]);\n  for (int i = 0; i < r; i++) {\n    int f = 0, pos = 0;\n    char now, fi;\n    for (int j = 0; j < c; j++) {\n      if (s[i][j] != '?' && f == 0) {\n        f = 1;\n        pos = j;\n        now = s[i][j];\n        fi = now;\n      } else if (s[i][j] == '?' && f == 1) {\n        s[i][j] = now;\n      } else if (s[i][j] != '?' && f == 1) {\n        now = s[i][j];\n      }\n    }\n    for (int j = 0; j < pos; j++)\n      s[i][j] = fi;\n  }\n  char now;\n  int f = 0, pos = 0;\n  for (int i = 0; i < r; i++) {\n    if (s[i][0] == '?' && f == 0) {\n      continue;\n    } else if (s[i][0] == '?' && f == 1) {\n      for (int j = 0; j < c; j++)\n        s[i][j] = s[i - 1][j];\n    } else if (s[i][0] != '?' && f == 0) {\n      f = 1;\n      pos = i;\n    }\n  }\n  for (int i = 0; i < r; i++) {\n    if (s[i][0] != '?')\n      break;\n    else {\n      for (int j = 0; j < c; j++) {\n        s[i][j] = s[pos][j];\n      }\n    }\n  }\n  printf(\"Case #%d:\\n\", ca);\n  for (int i = 0; i < r; i++) {\n    printf(\"%s\\n\", s[i]);\n  }\n}\n\nint main() {\n  int T;\n  freopen(\"in.txt\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n  scanf(\"%d\", &T);\n  for (ca = 1; ca <= T; ca++) {\n    init();\n  }\n}\n"}
{"target":"zjyhala","func":"#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 1009;\n\nint d, n;\npair<int, int> st[MAXN];\n\nvoid Init() {\n  cin >> d >> n;\n  for (int i = 1; i <= n; i++)\n    cin >> st[i].first >> st[i].second;\n  sort(st + 1, st + n + 1);\n}\n\nvoid Solve() {\n  double ret = 0;\n  for (int i = 1; i <= n; i++)\n    ret = fmax(ret, (double)(d - st[i].first) \/ (double)st[i].second);\n  cout << fixed << (double)d \/ ret << \"\\n\";\n}\n\nint main() {\n  cout.precision(12);\n  int Test;\n  cin >> Test;\n  for (int i = 1; i <= Test; i++) {\n    Init();\n    cout << \"Case #\" << i << \": \";\n    Solve();\n  }\n}\n"}
{"target":"zjyhala","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\nusing namespace std;\n\nint N, A, B, C, AB, BC, AC, _A, _B, _C, _AB, _BC, _AC;\nstring ans[1009];\nmap<string, string> Col;\n\nvoid Output(string s1, string s2, int t) {\n  for (int i = 1; i <= t; i++)\n    cout << Col[s1] << Col[s2];\n  cout << \"\\n\";\n}\n\nbool Solve() {\n  _A = A;\n  _B = B;\n  _C = C;\n  _AB = AB;\n  _BC = BC;\n  _AC = AC;\n  if (AB < C)\n    C -= AB;\n  else if (AB > C)\n    return false;\n  else if (AB == C) {\n    if (AB == 0)\n      ;\n    else if (AB + C == N) {\n      Output(\"AB\", \"C\", N \/ 2);\n      return true;\n    } else\n      return false;\n  }\n\n  if (BC < A)\n    A -= BC;\n  else if (BC > A)\n    return false;\n  else if (BC == A) {\n    if (BC == 0)\n      ;\n    else if (BC + A == N) {\n      Output(\"BC\", \"A\", N \/ 2);\n      return true;\n    } else\n      return false;\n  }\n\n  if (AC < B)\n    B -= AC;\n  else if (AC > B)\n    return false;\n  else if (AC == B) {\n    if (AC == 0)\n      ;\n    else if (AC + B == N) {\n      Output(\"AC\", \"B\", N \/ 2);\n      return true;\n    } else\n      return false;\n  }\n\n  if (A > B + C || B > A + C || C > A + B)\n    return false;\n  \/\/ cerr<<A<<\" \"<<B<<\" \"<<C<<\"\\n\";\n  if (A + B + C == 1) {\n    if (A == 1)\n      ans[0] = \"A\";\n    if (B == 1)\n      ans[0] = \"B\";\n    if (C == 1)\n      ans[0] = \"C\";\n  } else {\n    int L = min(A, min(B, C));\n    A -= L;\n    B -= L;\n    C -= L;\n    N = 3 * L;\n    for (int i = 0; i < L; i++) {\n      ans[i * 3] = \"A\";\n      ans[i * 3 + 1] = \"B\";\n      ans[i * 3 + 2] = \"C\";\n    }\n    if (N == 0) {\n      int R;\n      if (A == 0) {\n        R = min(B, C);\n        B -= R;\n        C -= R;\n        N = 2 * R;\n        for (int i = 0; i < R; i++) {\n          ans[i * 2] = \"B\";\n          ans[i * 2 + 1] = \"C\";\n        }\n      } else if (B == 0) {\n        R = min(A, C);\n        A -= R;\n        C -= R;\n        N = 2 * R;\n        for (int i = 0; i < R; i++) {\n          ans[i * 2] = \"A\";\n          ans[i * 2 + 1] = \"C\";\n        }\n      } else if (C == 0) {\n        R = min(A, B);\n        A -= R;\n        B -= R;\n        N = 2 * R;\n        for (int i = 0; i < R; i++) {\n          ans[i * 2] = \"A\";\n          ans[i * 2 + 1] = \"B\";\n        }\n      }\n    }\n    for (; A > 0 || B > 0 || C > 0;) {\n      \/\/ cerr<<A<<\" \"<<B<<\" \"<<C<<\"   \"<<\"N=\"<<N<<\"\\n\";\n      \/\/ for(int i=0;i<N;i++) cerr<<ans[i];cerr<<\"\\n\";\n      bool ck;\n\n      if (A > 0) {\n        ck = false;\n        for (int i = 0; i < N; i++)\n          if (ans[i] != \"A\" && ans[(i + 1) % N] != \"A\") {\n            for (int j = N; j >= i + 2; j--)\n              ans[j] = ans[j - 1];\n            ans[i + 1] = \"A\";\n            N++;\n            A--;\n            ck = true;\n            break;\n          }\n        if (ck)\n          continue;\n      }\n      if (B > 0) {\n        ck = false;\n        for (int i = 0; i < N; i++)\n          if (ans[i] != \"B\" && ans[(i + 1) % N] != \"B\") {\n            for (int j = N; j >= i + 2; j--)\n              ans[j] = ans[j - 1];\n            ans[i + 1] = \"B\";\n            N++;\n            B--;\n            ck = true;\n            break;\n          }\n        if (ck)\n          continue;\n      }\n      if (C > 0) {\n        ck = false;\n        for (int i = 0; i < N; i++)\n          if (ans[i] != \"C\" && ans[(i + 1) % N] != \"C\") {\n            for (int j = N; j >= i + 2; j--)\n              ans[j] = ans[j - 1];\n            ans[i + 1] = \"C\";\n            N++;\n            C--;\n            ck = true;\n            break;\n          }\n        if (ck)\n          continue;\n      }\n    }\n    \/\/ for(int i=0;i<N;i++) cerr<<ans[i];cerr<<\"\\n\";\n  }\n  bool cA = 0, cB = 0, cC = 0;\n  for (int i = 0; i < N; i++) {\n    cout << Col[ans[i]];\n    if (cA == 0 && ans[i] == \"A\") {\n      for (int j = 0; j < _BC; j++)\n        cout << Col[\"BC\"] << Col[\"A\"];\n      cA = 1;\n    }\n    if (cB == 0 && ans[i] == \"B\") {\n      for (int j = 0; j < _AC; j++)\n        cout << Col[\"AC\"] << Col[\"B\"];\n      cB = 1;\n    }\n    if (cC == 0 && ans[i] == \"C\") {\n      for (int j = 0; j < _AB; j++)\n        cout << Col[\"AB\"] << Col[\"C\"];\n      cC = 1;\n    }\n  }\n  cout << \"\\n\";\n  return true;\n}\n\nint main() {\n  Col.clear();\n  Col[\"A\"] = \"R\";\n  Col[\"B\"] = \"Y\";\n  Col[\"C\"] = \"B\";\n  Col[\"AB\"] = \"O\";\n  Col[\"BC\"] = \"G\";\n  Col[\"AC\"] = \"V\";\n  int Test;\n  cin >> Test;\n  for (int i = 1; i <= Test; i++) {\n    cin >> N >> A >> AB >> B >> BC >> C >> AC;\n    cout << \"Case #\" << i << \": \";\n    bool tmp = Solve();\n    if (!tmp)\n      cout << \"IMPOSSIBLE\\n\";\n  }\n}\n"}
{"target":"zjyhala","func":"#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nconst int MAXN = 109;\nconst long long INF = 10000LL * 10000LL * 10000LL * 10000LL;\n\nint N, Q;\nlong long E[MAXN], S[MAXN], D[MAXN][MAXN];\ndouble ans[MAXN][MAXN];\n\nlong long minLL(long long _x, long long _y) { return _x < _y ? _x : _y; }\n\nvoid Init() {\n  cin >> N >> Q;\n  for (int i = 1; i <= N; i++)\n    cin >> E[i] >> S[i];\n  for (int i = 1; i <= N; i++)\n    for (int j = 1; j <= N; j++) {\n      cin >> D[i][j];\n      if (D[i][j] == -1)\n        D[i][j] = INF;\n    }\n  for (int k = 1; k <= N; k++)\n    for (int i = 1; i <= N; i++)\n      for (int j = 1; j <= N; j++)\n        D[i][j] = minLL(D[i][j], D[i][k] + D[k][j]);\n}\n\nvoid Solve() {\n  for (int i = 1; i <= N; i++)\n    for (int j = 1; j <= N; j++)\n      if (i != j)\n        ans[i][j] = (double)INF;\n      else\n        ans[i][j] = 0.0;\n  for (int k = 1; k <= N; k++)\n    for (int l = 1; l <= N; l++) {\n      if (D[k][l] > E[k])\n        continue;\n      double tmp1 = (double)D[k][l] \/ (double)S[k];\n      for (int i = 1; i <= N; i++)\n        for (int j = 1; j <= N; j++) {\n          double tmp2 = ans[i][k] + ans[l][j] + tmp1;\n          if (tmp2 < ans[i][j])\n            ans[i][j] = tmp2;\n        }\n    }\n  \/\/ for(int i=1;i<=N;i++){\n  \/\/\tfor(int j=1;j<=N;j++)\n  \/\/\t\tcerr<<fixed<<ans[i][j]<<\" \";\n  \/\/\tcerr<<\"\\n\";\n  \/\/}\n}\n\nvoid Output() {\n  for (int i = 1; i <= Q; i++) {\n    int u, v;\n    cin >> u >> v;\n    cout << fixed << \" \" << ans[u][v];\n  }\n  cout << \"\\n\";\n}\n\nint main() {\n  cout.precision(12);\n  int Test;\n  cin >> Test;\n  for (int i = 1; i <= Test; i++) {\n    Init();\n    Solve();\n    cout << \"Case #\" << i << \":\";\n    Output();\n  }\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nbool check(string &s) {\n  int n = s.size();\n  int pos = -1;\n  for (int i = 0; i < n - 1; i++) {\n    if (s[i] > s[i + 1]) {\n      pos = i;\n      break;\n    }\n  }\n\n  if (pos == -1)\n    return true;\n\n  s[pos]--;\n  for (int i = pos + 1; i < n; i++)\n    s[i] = '9';\n\n  int p = s.find_first_not_of(\"0\");\n  if (p != string::npos)\n    s = s.substr(p);\n  return false;\n}\n\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int q = 0; q < t; q++) {\n    string s;\n    cin >> s;\n    while (!check(s)) {\n    }\n    cout << \"Case #\" << q + 1 << \": \" << s << endl;\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"B-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nvector<LL> mas(1);\n\nint getLevel(LL k) {\n  return lower_bound((mas).begin(), (mas).end(), k) - mas.begin();\n}\n\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int q = 0; q < t; q++) {\n    LL n, k;\n    cin >> n >> k;\n\n    int lvl = getLevel(k);\n    LL ost = k - mas[lvl - 1];\n    LL countInLvl = (1LL << (lvl - 1));\n    LL ostFromN = n - mas[lvl - 1];\n\n    LL value = ostFromN \/ countInLvl;\n    LL incV = ostFromN % countInLvl;\n\n    cout << \"Case #\" << q + 1 << \": \";\n    if (ost <= incV)\n      value++;\n\n    cout << (value) \/ 2 << \" \" << (value - 1) \/ 2 << endl;\n  }\n}\n\nint main() {\n  mas[0] = 0;\n  for (int i = 1; i < 63; i++)\n    mas.push_back(mas[i - 1] + (1LL << (i - 1)));\n\n  ios_base::sync_with_stdio(false);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"C-small-1-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int q = 0; q < t; q++) {\n    string s;\n    int k;\n    cin >> s >> k;\n    int n = s.size();\n    vector<int> add(n);\n\n    int ans = 0;\n    int sum = 0;\n    for (int i = 0; i < n - k + 1; i++) {\n      int val = s[i] == '-' ? 0 : 1;\n      sum += add[i];\n      val += sum;\n\n      if (val % 2 == 0) {\n        ans++;\n        add[i] += 1;\n        sum += 1;\n        if (i + k < n)\n          add[i + k] += 1;\n      }\n    }\n\n    bool fl = 1;\n    for (int i = n - k + 1; i < n; i++) {\n      int val = s[i] == '-' ? 0 : 1;\n      sum += add[i];\n      val += sum;\n\n      if (val % 2 == 0)\n        fl = 0;\n    }\n\n    cout << \"Case #\" << q + 1 << \": \";\n    if (fl == 0)\n      cout << \"IMPOSSIBLE\" << endl;\n    else\n      cout << ans << endl;\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"A-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nvector<int> need;\nint n, p;\n\nbool checkProportion(LL f, LL d) {\n  return (9 * d <= 10 * f && 10 * f <= 11 * d);\n}\n\nbool check(int v1, int v2) {\n  int cnt = (10 * v1) \/ (11 * need[0]);\n  \/\/ cnt = v1 \/ need[0];\n  for (int i = max(1, (10 * v1) \/ (11 * need[0]) - 15);\n       i <= (10 * v1) \/ (9 * need[0]) + 15; i++) {\n\n    LL f = v1;\n    LL d = LL(i) * need[0];\n    if (checkProportion(f, d)) {\n      LL f2 = v2;\n      LL d2 = need[1] * i;\n      if (checkProportion(f2, d2))\n        return true;\n    }\n  }\n  return false;\n}\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int w = 0; w < t; w++) {\n    int n, p;\n    cerr << w << endl;\n    cin >> n >> p;\n    need.assign(n, 0);\n    for (int i = 0; i < n; i++)\n      cin >> need[i];\n\n    vector<vector<int>> a(n, vector<int>(p));\n    vector<int> perm(p);\n\n    for (int i = 0; i < n; i++) {\n      for (int k = 0; k < p; k++) {\n        cin >> a[i][k];\n        perm[k] = k;\n      }\n    }\n    if (n == 1) {\n      need.push_back(0);\n      a.push_back(vector<int>(p, 0));\n      n++;\n    }\n    int ans = 0;\n    do {\n      int cur = 0;\n      for (int i = 0; i < p; i++) {\n        cur += check(a[0][perm[i]], a[1][i]);\n      }\n      ans = max(cur, ans);\n    } while (next_permutation((perm).begin(), (perm).end()));\n\n    cout << \"Case #\" << w + 1 << \": \" << ans << endl;\n  }\n}\n\nint main() {\n\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nmap<char, int> sp;\nvector<string> s;\n\nstruct rect {\n  pii a, b;\n  rect() {}\n  rect(pii a, pii b) : a(a), b(b) {}\n};\nqueue<rect> q;\nvoid split(const rect &r) {\n  map<char, int> sp2;\n  set<char> d, d2;\n  for (int i = r.a.first; i <= r.b.first; i++) {\n    for (int j = r.a.second; j <= r.b.second; j++) {\n      if (s[i][j] != '?')\n        d.insert(s[i][j]);\n    }\n  }\n  if (d.size() == 1) {\n    char res = *d.begin();\n    for (int i = r.a.first; i <= r.b.first; i++) {\n      for (int j = r.a.second; j <= r.b.second; j++) {\n        s[i][j] = res;\n      }\n    }\n    return;\n  }\n  d2 = d;\n\n  for (int i = r.a.first; i <= r.b.first; i++) {\n    for (int j = r.a.second; j <= r.b.second; j++) {\n      if (s[i][j] != '?')\n        sp2[s[i][j]]++;\n    }\n    set<char> dif;\n    for (auto v : sp2)\n      dif.insert(v.first);\n\n    if (dif.size() == 0)\n      continue;\n\n    for (auto v : dif) {\n      if (sp2[v] == sp[v]) {\n        sp2.erase(v);\n        d.erase(v);\n      }\n    }\n\n    if (sp2.empty() && !d.empty()) {\n      q.push(rect(r.a, make_pair(i, r.b.second)));\n      q.push(rect(make_pair(i + 1, r.a.second), r.b));\n      return;\n    }\n  }\n  sp2.clear();\n  d = d2;\n  for (int j = r.a.second; j <= r.b.second; j++) {\n    for (int i = r.a.first; i <= r.b.first; i++) {\n      if (s[i][j] != '?')\n        sp2[s[i][j]]++;\n    }\n    set<char> dif;\n    for (auto v : sp2)\n      dif.insert(v.first);\n\n    if (dif.size() == 0)\n      continue;\n\n    for (auto v : dif) {\n      if (sp2[v] == sp[v]) {\n        sp2.erase(v);\n        d.erase(v);\n      }\n    }\n    if (sp2.empty() && !d.empty()) {\n      q.push(rect(r.a, make_pair(r.b.first, j)));\n      q.push(rect(make_pair(r.a.first, j + 1), r.b));\n      return;\n    }\n  }\n}\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int w = 0; w < t; w++) {\n    int n, m;\n    cin >> n >> m;\n    s.clear();\n    s.resize(n);\n    sp.clear();\n    for (int i = 0; i < n; i++)\n      cin >> s[i];\n\n    for (int i = 0; i < n; i++)\n      for (int k = 0; k < m; k++)\n        if (s[i][k] != '?')\n          sp[s[i][k]]++;\n\n    q = queue<rect>();\n    q.push(rect(make_pair(0, 0), make_pair(n - 1, m - 1)));\n\n    while (!q.empty()) {\n      auto v = q.front();\n      q.pop();\n      split(v);\n    }\n    cout << \"Case #\" << w + 1 << \":\" << endl;\n    for (int i = 0; i < n; i++)\n      cout << s[i] << endl;\n  }\n}\n\nint main() {\n\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"A-small-attempt0 (1).in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nvoid solve() {\n  int t;\n  cin >> t;\n  for (int q = 0; q < t; q++) {\n    int d, n;\n    cin >> d >> n;\n    LD time = 0;\n    for (int i = 0; i < n; i++) {\n      int k, s;\n      cin >> k >> s;\n      LD dist = d - k;\n      time = max(time, dist \/ s);\n    }\n\n    cout << \"Case #\" << q + 1 << \": \" << LD(d) \/ time << endl;\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"A-small-attempt0 (1).in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\nstring str = \"ROYGBV\";\nvector<int> a(6);\n\nmap<char, set<char>> block;\n\nbool check(const string &s) {\n  int n = s.size();\n  for (int i = 0; i < n; i++) {\n    if (block[s[i]].count(s[(i + 1) % n]))\n      return false;\n  }\n  return true;\n}\n\nstring getAns(vector<pair<int, char>> mas) {\n  string res;\n  for (int i = 0; i < mas[0].first; i++) {\n    if (mas[1].first > 0) {\n      res += string(1, mas[1].second);\n      mas[1].first--;\n    }\n    res += string(1, mas[0].second);\n  }\n  reverse((res).begin(), (res).end());\n\n  string res2;\n  int j = 0;\n  for (int i = 0; i < mas[2].first; i++, j++)\n    res2 += res[i] + string(1, mas[2].second);\n\n  res2 += res.substr(j);\n\n  if (check(res2))\n    return res2;\n  else\n    return \"IMPOSSIBLE\";\n}\n\nvoid solve() {\n  block['R'].insert('R');\n  block['R'].insert('O');\n  block['R'].insert('V');\n  block['Y'].insert('Y');\n  block['Y'].insert('O');\n  block['Y'].insert('G');\n  block['B'].insert('B');\n  block['B'].insert('G');\n  block['B'].insert('V');\n\n  block['O'].insert('O');\n  block['O'].insert('R');\n  block['O'].insert('Y');\n  block['O'].insert('G');\n  block['O'].insert('V');\n\n  block['G'].insert('G');\n  block['G'].insert('Y');\n  block['G'].insert('B');\n  block['G'].insert('O');\n  block['G'].insert('V');\n\n  block['V'].insert('V');\n  block['V'].insert('B');\n  block['V'].insert('R');\n  block['V'].insert('O');\n  block['V'].insert('G');\n\n  int t;\n  cin >> t;\n  for (int q = 0; q < t; q++) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < 6; i++)\n      cin >> a[i];\n\n    vector<pair<int, char>> mas;\n    mas.push_back(make_pair(a[0], 'R'));\n    mas.push_back(make_pair(a[2], 'Y'));\n    mas.push_back(make_pair(a[4], 'B'));\n    sort(mas.rbegin(), mas.rend());\n\n    cout << \"Case #\" << q + 1 << \": \" << getAns(mas) << endl;\n  }\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"B-small-attempt1.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
{"target":"ZooL","func":"\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\nconst LL inf64 = inf * inf;\n\/\/ extended template\n#pragma comment(linker, \"\/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\ntemplate <typename T> istream &operator>>(istream &, vector<T> &);\ntemplate <typename T> ostream &operator<<(ostream &, const vector<T> &);\n\n\/*\nstring str = \"ROYGBV\";\nvector<int> a(6);\n\nmap<char, set<char> > block;\n\nbool check(const string &s)\n{\n    int n = s.size();\n    for (int i = 0; i < n; i++)\n    {\n        if (block[s[i]].count(s[(i + 1) % n]))\n            return false;\n    }\n    return true;\n}\n\nstring getAns(vector<pair<int, char> > mas)\n{\n    string res;\n    for (int i = 0; i < mas[0].X; i++)\n    {\n        if (mas[1].X > 0) {\n            res += string(1, mas[1].Y);\n            mas[1].X--;\n        }\n        res += string(1, mas[0].Y);\n    }\n    reverse(all(res));\n\n    string res2;\n    int j = 0;\n    for (int i = 0; i < mas[2].X; i++, j++)\n        res2 += res[i] + string(1, mas[2].Y);\n\n    res2 += res.substr(j);\n\n    if (check(res2))\n        return res2;\n    else\n        return \"IMPOSSIBLE\";\n}\n\nvoid solve()\n{\n    block['R'].insert('R');\n    block['R'].insert('O');\n    block['R'].insert('V');\n    block['Y'].insert('Y');\n    block['Y'].insert('O');\n    block['Y'].insert('G');\n    block['B'].insert('B');\n    block['B'].insert('G');\n    block['B'].insert('V');\n\n    block['O'].insert('O');\n    block['O'].insert('R');\n    block['O'].insert('Y');\n    block['O'].insert('G');\n    block['O'].insert('V');\n\n    block['G'].insert('G');\n    block['G'].insert('Y');\n    block['G'].insert('B');\n    block['G'].insert('O');\n    block['G'].insert('V');\n\n    block['V'].insert('V');\n    block['V'].insert('B');\n    block['V'].insert('R');\n    block['V'].insert('O');\n    block['V'].insert('G');\n\n    int t;\n    cin >> t;\n    for (int q = 0; q < t; q++)\n    {\n        int n;\n        cin >> n;\n        for (int i = 0; i < 6; i++)\n            cin >> a[i];\n\n        vector<pair<int, char> > mas;\n        mas.pb(mp(a[0], 'R'));\n        mas.pb(mp(a[2], 'Y'));\n        mas.pb(mp(a[4], 'B'));\n        sort(mas.rbegin(), mas.rend());\n\n        cout << \"Case #\" << q + 1 << \": \" << getAns(mas) << endl;\n    }\n}*\/\n\nvoid floyd(vector<vector<LL>> &d) {\n  int n = d.size();\n  for (int k = 0; k < n; k++)\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < n; j++)\n        if (d[i][k] != inf64 && d[k][j] != inf64)\n          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n}\n\nLD getAns(const vector<int> &E, const vector<int> &S,\n          const vector<vector<LL>> &d, int u, int v) {\n  int n = E.size();\n\n  vector<LD> res(n, inf64);\n  vector<int> used(n);\n  res[u] = 0;\n  used[u] = 0;\n\n  while (1) {\n    int cur = -1;\n    for (int i = 0; i < n; i++)\n      if (!used[i] && (cur == -1 || res[cur] > res[i]))\n        cur = i;\n\n    if (cur == -1)\n      break;\n\n    used[cur] = 1;\n\n    for (int to = 0; to < n; to++) {\n      if (to != cur && d[cur][to] != inf64) {\n        LD dist = d[cur][to];\n        LD time = dist \/ S[cur];\n        if (dist <= E[cur] && res[to] > res[cur] + time)\n          res[to] = res[cur] + time;\n      }\n    }\n  }\n  return res[v];\n}\n\nvoid solve() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int q = 0; q < t; q++) {\n    int N, Q;\n    scanf(\"%d %d\", &N, &Q);\n    vector<int> E(N), S(N);\n    for (int i = 0; i < N; i++)\n      scanf(\"%d %d\", &E[i], &S[i]);\n\n    vector<vector<LL>> d(N, vector<LL>(N));\n    for (int i = 0; i < N; i++) {\n      for (int k = 0; k < N; k++) {\n        int x;\n        scanf(\"%d\", &x);\n        if (x == -1)\n          d[i][k] = inf64;\n        else\n          d[i][k] = x;\n      }\n      d[i][i] = 0;\n    }\n\n    floyd(d);\n\n    vector<LD> ans(Q);\n    for (int i = 0; i < Q; i++) {\n      int u, v;\n      scanf(\"%d %d\", &u, &v);\n      u--;\n      v--;\n\n      ans[i] = getAns(E, S, d, u, v);\n    }\n\n    cout << \"Case #\" << q + 1 << \": \";\n    for (int i = 0; i < ans.size(); i++) {\n      cout << ans[i];\n      if (i != int(ans.size()) - 1)\n        cout << \" \";\n    }\n    cout << endl;\n  }\n}\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  \/\/ START\n  \/\/ freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n  freopen(\"C-small-attempt0.in\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n  solve();\n\n  \/\/ END\n  return 0;\n}\n\/*******************************************\n*******************************************\/\n\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    is >> v[i];\n  return is;\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  for (int i = 0; i < v.size(); ++i)\n    os << v[i] << \" \";\n  return os;\n}\n"}
